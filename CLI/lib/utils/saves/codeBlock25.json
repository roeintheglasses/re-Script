"function () {\n    if (this.tasks) {\n      window.URL.revokeObjectURL(this.tasks);\n    }\n    for (var generatorWrapper = getIterator(this.setTimeoutWrapper), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value.value.markAsCompleted();\n    }\n    removeTimeUpdateListener(this);\n    this.entryIdCounter.removeEventListener(\"sourceopen\", this.onFulfilled);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  RegExp.prototype.hasOwnProperty(\"sticky\");\n  var uuidCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n  var generateUUID = function () {\n    for (var generatorWrapper = Array(36), value = 0, CustomMap, findEntry = 0; findEntry < 36; findEntry++) {\n      if (findEntry == 8 || findEntry == 13 || findEntry == 18 || findEntry == 23) {\n        generatorWrapper[findEntry] = \"-\";\n      } else if (findEntry == 14) {\n        generatorWrapper[findEntry] = \"4\";\n      } else {\n        if (value <= 2) {\n          value = 33554432 + 16777216 * Math.random() | 0;\n        }\n        CustomMap = value & 15;\n        value >>= 4;\n        generatorWrapper[findEntry] = uuidCharacters[findEntry == 19 ? CustomMap & 3 | 8 : CustomMap];\n      }\n    }\n    return generatorWrapper.join(\"\");\n  };\n  var CustomUri = function (generatorWrapper) {\n    table.call(this, generatorWrapper);\n    this.onFulfilled = new Map();\n    generatorWrapper = this.setTimeoutWrapper;\n    var value = generatorWrapper.indexOf(\";\");\n    var CustomMap = null;\n    if (value >= 0) {\n      this.setTimeoutWrapper = generatorWrapper.substring(0, value);\n      CustomMap = generatorWrapper.substring(value + 1);\n    } else {\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n    parseUriParameters(this, CustomMap);\n  };\n  inheritPrototype(CustomUri, table);\n  CustomUri.prototype.toString = function () {\n    return buildUriString(this, table.prototype.toString.call(this));\n  };\n  CustomUri.prototype.dispatchUnhandledRejection = function () {\n    return \"\";\n  };\n  var parseUriParameters = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(value))) {\n      value.split(\";\").forEach(function (CustomMap) {\n        var findEntry = CustomMap.indexOf(\"=\");\n        if (!(findEntry <= 0)) {\n          var iterateEntries = decodeUriComponentWithSpace(CustomMap.substring(0, findEntry));\n          CustomMap = decodeUriComponentWithSpace(CustomMap.substring(findEntry + 1));\n          findEntry = generatorWrapper.onFulfilled.get(iterateEntries);\n          if (findEntry != null) {\n            if (!findEntry.includes(CustomMap)) {\n              findEntry.push(CustomMap);\n            }\n          } else {\n            findEntry = [stringifyNullable(CustomMap)];\n          }\n          generatorWrapper.onFulfilled.set(iterateEntries, findEntry);\n        }\n      }, generatorWrapper);\n    }\n  };\n  var getOrdParameter = function (generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.onFulfilled.get(\"ord\");\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var setOrdParameter = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      value = value.map(stringifyNullable);\n      generatorWrapper.onFulfilled.set(\"ord\", value);\n    }\n  };\n  var buildUriString = function (generatorWrapper, value) {\n    value = [stringifyNullable(value)];\n    value.push.apply(value, toArray(getUriParameters(generatorWrapper)));\n    return value.join(\";\");\n  };\n  var getUriParameters = function (generatorWrapper) {\n    var value = getOrdParameter(generatorWrapper);\n    if (value == null) {\n      value = [stringifyNullable(Date.now())];\n    } else if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      generatorWrapper.onFulfilled.delete(\"ord\");\n    }\n    var CustomMap = [];\n    generatorWrapper.onFulfilled.forEach(function (findEntry, iterateEntries) {\n      findEntry.forEach(function (createCircularNode) {\n        CustomMap.push(iterateEntries + \"=\" + createCircularNode);\n      });\n    });\n    CustomMap.push(\"ord=\" + value[0]);\n    setOrdParameter(generatorWrapper, value);\n    return CustomMap;\n  };\n  CustomUri.prototype.handleThenable = function () {\n    return new CustomUri(this.toString());\n  };\n  function isDoubleClickAd(generatorWrapper) {\n    var value = new CustomUri(generatorWrapper);\n    generatorWrapper = value.tasks;\n    value = buildUriString(value, value.setTimeoutWrapper);\n    return !endsWith(generatorWrapper, \".g.doubleclick.net\") && (endsWith(generatorWrapper, \"doubleclick.net\") || endsWith(generatorWrapper, \"pagead2.googlesyndication.com\")) && matchesRegex(\"/(ad|pfad)[x|i|j]?/\", value);\n  }\n  function isBidRequest(generatorWrapper) {\n    return new table(generatorWrapper).tasks == \"bid.g.doubleclick.net\";\n  }\n  function isGoogleAdsRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"googleads.g.doubleclick.net\") && matchesRegex(\"/pagead/(live/)?ads\", value);\n  }\n  function isGampadRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"doubleclick.net\") && matchesRegex(\"/gampad/(live/)?ads\", value);\n  }\n  function isAdvRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return generatorWrapper.tasks === \"ad.doubleclick.net\" && matchesRegex(\"/dv3/adv\", value);\n  }\n  var updateMaxSize = {\n    DEPRECATED_ERROR_CODE: -1,\n    VAST_MALFORMED_RESPONSE: 100,\n    VAST_SCHEMA_VALIDATION_ERROR: 101,\n    VAST_UNSUPPORTED_VERSION: 102,\n    VAST_TRAFFICKING_ERROR: 200,\n    VAST_UNEXPECTED_LINEARITY: 201,\n    VAST_UNEXPECTED_DURATION_ERROR: 202,\n    VAST_WRAPPER_ERROR: 300,\n    VAST_LOAD_TIMEOUT: 301,\n    VAST_TOO_MANY_REDIRECTS: 302,\n    VAST_NO_ADS_AFTER_WRAPPER: 303,\n    VIDEO_PLAY_ERROR: 400,\n    VAST_MEDIA_LOAD_TIMEOUT: 402,\n    VAST_LINEAR_ASSET_MISMATCH: 403,\n    VAST_PROBLEM_DISPLAYING_MEDIA_FILE: 405,\n    OVERLAY_AD_PLAYING_FAILED: 500,\n    NONLINEAR_DIMENSIONS_ERROR: 501,\n    OVERLAY_AD_LOADING_FAILED: 502,\n    VAST_NONLINEAR_ASSET_MISMATCH: 503,\n    COMPANION_REQUIRED_ERROR: 602,\n    COMPANION_AD_LOADING_FAILED: 603,\n    UNKNOWN_ERROR: 900,\n    VPAID_ERROR: 901,\n    FAILED_TO_REQUEST_ADS: 1005,\n    VAST_ASSET_NOT_FOUND: 1007,\n    VAST_EMPTY_RESPONSE: 1009,\n    UNKNOWN_AD_RESPONSE: 1010,\n    UNSUPPORTED_LOCALE: 1011,\n    ADS_REQUEST_NETWORK_ERROR: 1012,\n    INVALID_AD_TAG: 1013,\n    PROTECTED_AUDIENCE_API_ERROR: 1014,\n    STREAM_INITIALIZATION_FAILED: 1020,\n    ASSET_FALLBACK_FAILED: 1021,\n    INVALID_ARGUMENTS: 1101,\n    NATIVE_MESSAGE_ERROR: 1204,\n    AUTOPLAY_DISALLOWED: 1205,\n    CONSENT_MANAGEMENT_PROVIDER_NOT_READY: 1300,\n    isSecureContext: 2002\n  };\n  updateMaxSize[-1] = \"DEPRECATED_ERROR_CODE\";\n  updateMaxSize[100] = \"VAST_MALFORMED_RESPONSE\";\n  updateMaxSize[101] = \"VAST_SCHEMA_VALIDATION_ERROR\";\n  updateMaxSize[102] = \"VAST_UNSUPPORTED_VERSION\";\n  updateMaxSize[200] = \"VAST_TRAFFICKING_ERROR\";\n  updateMaxSize[201] = \"VAST_UNEXPECTED_LINEARITY\";\n  updateMaxSize[202] = \"VAST_UNEXPECTED_DURATION_ERROR\";\n  updateMaxSize[300] = \"VAST_WRAPPER_ERROR\";\n  updateMaxSize[301] = \"VAST_LOAD_TIMEOUT\";\n  updateMaxSize[302] = \"VAST_TOO_MANY_REDIRECTS\";\n  updateMaxSize[303] = \"VAST_NO_ADS_AFTER_WRAPPER\";\n  updateMaxSize[400] = \"VIDEO_PLAY_ERROR\";\n  updateMaxSize[402] = \"VAST_MEDIA_LOAD_TIMEOUT\";\n  updateMaxSize[403] = \"VAST_LINEAR_ASSET_MISMATCH\";\n  updateMaxSize[405] = \"VAST_PROBLEM_DISPLAYING_MEDIA_FILE\";\n  updateMaxSize[500] = \"OVERLAY_AD_PLAYING_FAILED\";\n  updateMaxSize[501] = \"NONLINEAR_DIMENSIONS_ERROR\";\n  updateMaxSize[502] = \"OVERLAY_AD_LOADING_FAILED\";\n  updateMaxSize[503] = \"VAST_NONLINEAR_ASSET_MISMATCH\";\n  updateMaxSize[602] = \"COMPANION_REQUIRED_ERROR\";\n  updateMaxSize[603] = \"COMPANION_AD_LOADING_FAILED\";\n  updateMaxSize[900] = \"UNKNOWN_ERROR\";\n  updateMaxSize[901] = \"VPAID_ERROR\";\n  updateMaxSize[1005] = \"FAILED_TO_REQUEST_ADS\";\n  updateMaxSize[1007] = \"VAST_ASSET_NOT_FOUND\";\n  updateMaxSize[1009] = \"VAST_EMPTY_RESPONSE\";\n  updateMaxSize[1010] = \"UNKNOWN_AD_RESPONSE\";\n  updateMaxSize[1011] = \"UNSUPPORTED_LOCALE\";\n  updateMaxSize[1012] = \"ADS_REQUEST_NETWORK_ERROR\";\n  updateMaxSize[1013] = \"INVALID_AD_TAG\";\n  updateMaxSize[1014] = \"PROTECTED_AUDIENCE_API_ERROR\";\n  updateMaxSize[1020] = \"STREAM_INITIALIZATION_FAILED\";\n  updateMaxSize[1021] = \"ASSET_FALLBACK_FAILED\";\n  updateMaxSize[1101] = \"INVALID_ARGUMENTS\";\n  updateMaxSize[1204] = \"NATIVE_MESSAGE_ERROR\";\n  updateMaxSize[1205] = \"AUTOPLAY_DISALLOWED\";\n  updateMaxSize[1300] = \"CONSENT_MANAGEMENT_PROVIDER_NOT_READY\";\n  updateMaxSize[2002] = \"SUPPORTED_ADS_NOT_FOUND\";\n  var AdError = function (generatorWrapper, value, CustomMap) {\n    var findEntry = Error.call(this);\n    this.message = findEntry.message;\n    if (\"stack\" in findEntry) {\n      this.stack = findEntry.stack;\n    }\n    this.type = generatorWrapper;\n    this.errorMessage = value;\n    this.errorCode = CustomMap;\n    this.createUnsigned64 = this.entryIdCounter = null;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  setTimeoutWrapper.getInnerError = function () {\n    return this.entryIdCounter;\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    if (this.errorCode < 1000) {\n      return this.errorCode;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  var carJsUrl = identityFunction([\"https://imasdk.googleapis.com/js/sdkloader/car.js\"]);\n  createSafeHtmlFromTemplate(carJsUrl);\n  function identifyAdServer(generatorWrapper) {\n    if (generatorWrapper) {\n      if (isGoogleAdsRequest(generatorWrapper)) {\n        return \"adsense\";\n      } else {\n        if (isBidRequest(generatorWrapper)) {\n          return \"dbm\";\n        } else {\n          if (isDoubleClickAd(generatorWrapper)) {\n            return \"dcm\";\n          } else {\n            if (isAdvRequest(generatorWrapper)) {\n              return \"dv3\";\n            } else {\n              if (isGampadRequest(generatorWrapper)) {\n                return \"xfp\";\n              } else {\n                return \"thirdparty\";\n              }\n            }\n          }\n        }\n      }\n    } else {\n      return \"\";\n    }\n  }\n  function extractPublisherId(generatorWrapper) {\n    if (generatorWrapper === \"\") {\n      return null;\n    }\n    generatorWrapper = new table(generatorWrapper);\n    var value;\n    if (value = generatorWrapper.entryIdCounter.get(\"slotname\") || generatorWrapper.entryIdCounter.get(\"iu\")) {\n      if ((value = /\\/(\\d+)(?:,\\d+){0,2}\\//.exec(value)) && value.length === 2) {\n        value = value[1];\n      } else {\n        value = null;\n      }\n    } else {\n      value = null;\n    }\n    if (!value) {\n      var CustomMap;\n      if (generatorWrapper = (CustomMap = generatorWrapper.entryIdCounter.get(\"client\")) != null ? CustomMap : \"\") {\n        value = generatorWrapper;\n      } else {\n        value = null;\n      }\n    }\n    return value;\n  }\n  function extractSlotNameOrIdFromUrl(generatorWrapper, value) {\n    try {\n      var CustomMap = new URL(generatorWrapper);\n      return CustomMap.searchParams.get(\"slotname\") || CustomMap.searchParams.get(\"iu\") || \"\";\n    } catch (findEntry) {\n      if (!(value == null)) {\n        value(findEntry);\n      }\n    }\n    return \"\";\n  }\n  var PrivacySettings = function (generatorWrapper) {\n    var value = {};\n    value = (value.IABUSPrivacy_String = \"uspString\", value.IABTCF_gdprApplies = \"gdprApplies\", value.IABTCF_TCString = \"tcString\", value.IABTCF_AddtlConsent = \"addtlConsent\", value.IABGPP_HDR_GppString = \"gppString\", value.IABGPP_GppSID = \"gppSid\", value);\n    for (var CustomMap in value) if (generatorWrapper[CustomMap] != null) {\n      generatorWrapper[value[CustomMap]] = generatorWrapper[CustomMap];\n      delete generatorWrapper[CustomMap];\n    }\n    CustomMap = generatorWrapper.uspString;\n    if (typeof CustomMap === \"string\") {\n      this.uspString = CustomMap;\n    } else {\n      this.uspString = \"\";\n    }\n    CustomMap = generatorWrapper.gdprApplies;\n    if (typeof CustomMap === \"boolean\") {\n      if (CustomMap) {\n        this.tasks = \"1\";\n      } else {\n        this.tasks = \"0\";\n      }\n    } else if (typeof CustomMap !== \"number\" || CustomMap !== 1 && CustomMap !== 0) {\n      if (typeof CustomMap !== \"string\" || CustomMap !== \"1\" && CustomMap !== \"0\") {\n        this.tasks = \"\";\n      } else if (CustomMap === \"1\") {\n        this.tasks = \"1\";\n      } else {\n        this.tasks = \"0\";\n      }\n    } else if (CustomMap === 1) {\n      this.tasks = \"1\";\n    } else {\n      this.tasks = \"0\";\n    }\n    CustomMap = generatorWrapper.tcString;\n    if (typeof CustomMap === \"string\") {\n      this.entryIdCounter = CustomMap;\n    } else {\n      this.entryIdCounter = \"\";\n    }\n    if (!/^[\\.\\w_-]*$/.test(this.entryIdCounter)) {\n      this.entryIdCounter = encodeURIComponent(this.entryIdCounter);\n    }\n    generatorWrapper = generatorWrapper.gppString;\n    if (typeof generatorWrapper === \"string\") {\n      this.gppString = generatorWrapper;\n    } else {\n      this.gppString = \"\";\n    }\n  };\n  var ConfigSettings = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  var isBooleanConfigEnabled = function (generatorWrapper, value) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, value) && (generatorWrapper = generatorWrapper.entryIdCounter[value], typeof generatorWrapper === \"boolean\")) {\n      return generatorWrapper;\n    } else {\n      return false;\n    }\n  };\n  var getVideoElementFakeDuration = function (generatorWrapper) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, \"videoElementFakeDuration\") && (generatorWrapper = generatorWrapper.entryIdCounter.videoElementFakeDuration, typeof generatorWrapper === \"number\")) {\n      return generatorWrapper;\n    } else {\n      return NaN;\n    }\n  };\n  var getForcedExperimentIds = function (generatorWrapper) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, \"forceExperimentIds\")) {\n      generatorWrapper = generatorWrapper.entryIdCounter.forceExperimentIds;\n      var value = [];\n      var CustomMap = 0;\n      if (Array.isArray(generatorWrapper)) {\n        generatorWrapper.forEach(function (findEntry) {\n          if (typeof findEntry === \"number\") {\n            value[CustomMap++] = findEntry;\n          }\n        });\n      }\n      return value;\n    }\n    return null;\n  };\n  var adType = function () {\n    this.handleThenable = \"always\";\n    this.updateMaxSize = 4;\n    this.executeCallbacks = null;\n    this.handleAsync = 1;\n    this.entryIdCounter = 0;\n    this.createDeferred = true;\n    this.locale = \"en\";\n    this.setTimeoutWrapper = null;\n    this.tasks = false;\n    this.createIterator = this.year = \"\";\n    this.onFulfilled = null;\n    this.definePropertyPolyfill = this.totalAdBufferingTime = -1;\n    this.isDone = \"\";\n    this.handleThenable = false;\n    this.logError = true;\n    this.dispatchUnhandledRejection = generateUUID();\n    this.tryCall = {};\n    this.settlePromise = \"\";\n    this.resolvePromise = 0;\n    try {\n      this.firstQuartileTime = getAdFrames()[0];\n    } catch (generatorWrapper) {}\n  };\n  var sanitizePlayerTypeOrVersion = function (generatorWrapper) {\n    generatorWrapper = stringifyNullable(generatorWrapper);\n    if (!isEmptyOrWhitespace(generatorWrapper)) {\n      generatorWrapper = generatorWrapper.substring(0, 20);\n    }\n    return generatorWrapper;\n  };\n  setTimeoutWrapper = adType.prototype;\n  setTimeoutWrapper.setCompanionBackfill = function (generatorWrapper) {\n    this.handleThenable = generatorWrapper;\n  };\n  setTimeoutWrapper.getCompanionBackfill = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.setNumRedirects = function (generatorWrapper) {\n    this.updateMaxSize = generatorWrapper;\n  };\n  setTimeoutWrapper.getNumRedirects = function () {\n    return this.updateMaxSize;\n  };\n  setTimeoutWrapper.setPpid = function (generatorWrapper) {\n    this.executeCallbacks = generatorWrapper;\n  };\n  setTimeoutWrapper.getPpid = function () {\n    return this.executeCallbacks;\n  };\n  setTimeoutWrapper.setVpaidAllowed = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"boolean\") {\n      if (generatorWrapper) {\n        this.handleAsync = 1;\n      } else {\n        this.handleAsync = 0;\n      }\n    }\n  };\n  setTimeoutWrapper.setVpaidMode = function (generatorWrapper) {\n    this.handleAsync = generatorWrapper;\n  };\n  setTimeoutWrapper.getTransformationGroup = function () {\n    return this.handleAsync;\n  };\n  setTimeoutWrapper.setAutoPlayAdBreaks = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.float32Transformation = function () {\n    return this.createDeferred;\n  };\n  setTimeoutWrapper.removeEventListenerWithNormalization = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.transformationsSymbol = function () {\n    return this.tasks;\n  };\n  setTimeoutWrapper.setLocale = function (generatorWrapper) {\n    if (generatorWrapper = normalizeLanguageCode(generatorWrapper)) {\n      this.locale = generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.getLocale = function () {\n    return this.locale;\n  };\n  setTimeoutWrapper.setPlayerType = function (generatorWrapper) {\n    this.year = sanitizePlayerTypeOrVersion(generatorWrapper);\n  };\n  setTimeoutWrapper.getPlayerType = function () {\n    return this.year;\n  };\n  setTimeoutWrapper.setPlayerVersion = function (generatorWrapper) {\n    this.createIterator = sanitizePlayerTypeOrVersion(generatorWrapper);\n  };\n  setTimeoutWrapper.getPlayerVersion = function () {\n    return this.createIterator;\n  };\n  var getConfigSettingsInstance = function (generatorWrapper) {\n    if (generatorWrapper.onFulfilled == null) {\n      var value = {};\n      var CustomMap = new table(getWindowForDocument().location.href).entryIdCounter;\n      if (Cy(CustomMap, \"tcnfp\")) {\n        try {\n          value = JSON.parse(CustomMap.get(\"tcnfp\"));\n        } catch (findEntry) {}\n      }\n      generatorWrapper.onFulfilled = new ConfigSettings(value);\n    }\n    return generatorWrapper.onFulfilled;\n  };\n  setTimeoutWrapper = adType.prototype;\n  setTimeoutWrapper.forEachInObject = function (generatorWrapper) {\n    this.totalAdBufferingTime = generatorWrapper;\n  };\n  setTimeoutWrapper.filterObject = function (generatorWrapper) {\n    this.definePropertyPolyfill = generatorWrapper;\n  };\n  setTimeoutWrapper.setDisableCustomPlaybackForIOS10Plus = function (generatorWrapper) {\n    this.handleThenable = generatorWrapper;\n  };\n  setTimeoutWrapper.getDisableCustomPlaybackForIOS10Plus = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.isCookiesEnabled = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.setCookiesEnabled = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      this.logError = generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.setSessionId = function (generatorWrapper) {\n    this.dispatchUnhandledRejection = generatorWrapper;\n  };\n  setTimeoutWrapper.addEventListenerWithNormalization = function () {};\n  setTimeoutWrapper.applyTransformations = function () {\n    return true;\n  };\n  setTimeoutWrapper.setFeatureFlags = function (generatorWrapper) {\n    this.tryCall = generatorWrapper;\n  };\n  setTimeoutWrapper.getFeatureFlags = function () {\n    return this.tryCall;\n  };\n  var generateAdDisplayRequestConfig = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    var CustomMap = {};\n    if (value != null) {\n      CustomMap.activeViewPushUpdates = value;\n    }\n    CustomMap.activityMonitorMode = generatorWrapper.entryIdCounter;\n    CustomMap.adsToken = generatorWrapper.isDone;\n    CustomMap.autoPlayAdBreaks = generatorWrapper.createDeferred;\n    CustomMap.companionBackfill = generatorWrapper.getCompanionBackfill();\n    CustomMap.cookiesEnabled = generatorWrapper.isCookiesEnabled();\n    CustomMap.disableCustomPlaybackForIOS10Plus = generatorWrapper.getDisableCustomPlaybackForIOS10Plus();\n    CustomMap.engagementDetection = true;\n    CustomMap.isFunctionalTest = false;\n    CustomMap.isVpaidAdapter = generatorWrapper.tasks;\n    CustomMap[\"1pJar\"] = \"\";\n    CustomMap.numRedirects = generatorWrapper.getNumRedirects();\n    CustomMap.pageCorrelator = generatorWrapper.totalAdBufferingTime;\n    CustomMap.persistentStateCorrelator = getMasterOrGlobalCorrelator();\n    CustomMap.playerType = generatorWrapper.getPlayerType();\n    CustomMap.playerVersion = generatorWrapper.getPlayerVersion();\n    CustomMap.ppid = generatorWrapper.getPpid();\n    CustomMap.privacyControls = \"\";\n    CustomMap.reportMediaRequests = false;\n    CustomMap.sessionId = generatorWrapper.dispatchUnhandledRejection;\n    CustomMap.streamCorrelator = generatorWrapper.definePropertyPolyfill;\n    CustomMap.testingConfig = getConfigSettingsInstance(generatorWrapper).entryIdCounter;\n    CustomMap.urlSignals = generatorWrapper.firstQuartileTime;\n    CustomMap.vpaidMode = generatorWrapper.handleAsync;\n    CustomMap.featureFlags = generatorWrapper.getFeatureFlags();\n    CustomMap.cookieDeprecationLabel = generatorWrapper.settlePromise;\n    CustomMap.cookieDeprecationLabelStatus = generatorWrapper.resolvePromise;\n    return CustomMap;\n  };\n  adType.prototype.getFeatureFlags = adType.prototype.getFeatureFlags;\n  adType.prototype.setFeatureFlags = adType.prototype.setFeatureFlags;\n  adType.prototype.getDisableFlashAds = adType.prototype.applyTransformations;\n  adType.prototype.setDisableFlashAds = adType.prototype.addEventListenerWithNormalization;\n  adType.prototype.setSessionId = adType.prototype.setSessionId;\n  adType.prototype.setCookiesEnabled = adType.prototype.setCookiesEnabled;\n  adType.prototype.isCookiesEnabled = adType.prototype.isCookiesEnabled;\n  adType.prototype.getDisableCustomPlaybackForIOS10Plus = adType.prototype.getDisableCustomPlaybackForIOS10Plus;\n  adType.prototype.setDisableCustomPlaybackForIOS10Plus = adType.prototype.setDisableCustomPlaybackForIOS10Plus;\n  adType.prototype.setStreamCorrelator = adType.prototype.filterObject;\n  adType.prototype.setPageCorrelator = adType.prototype.forEachInObject;\n  adType.prototype.getPlayerVersion = adType.prototype.getPlayerVersion;\n  adType.prototype.setPlayerVersion = adType.prototype.setPlayerVersion;\n  adType.prototype.getPlayerType = adType.prototype.getPlayerType;\n  adType.prototype.setPlayerType = adType.prototype.setPlayerType;\n  adType.prototype.getLocale = adType.prototype.getLocale;\n  adType.prototype.setLocale = adType.prototype.setLocale;\n  adType.prototype.getIsVpaidAdapter = adType.prototype.transformationsSymbol;\n  adType.prototype.setIsVpaidAdapter = adType.prototype.removeEventListenerWithNormalization;\n  adType.prototype.isAutoPlayAdBreaks = adType.prototype.float32Transformation;\n  adType.prototype.setAutoPlayAdBreaks = adType.prototype.setAutoPlayAdBreaks;\n  adType.prototype.getVpaidMode = adType.prototype.getTransformationGroup;\n  adType.prototype.setVpaidMode = adType.prototype.setVpaidMode;\n  adType.prototype.setVpaidAllowed = adType.prototype.setVpaidAllowed;\n  adType.prototype.getPpid = adType.prototype.getPpid;\n  adType.prototype.setPpid = adType.prototype.setPpid;\n  adType.prototype.getNumRedirects = adType.prototype.getNumRedirects;\n  adType.prototype.setNumRedirects = adType.prototype.setNumRedirects;\n  adType.prototype.getCompanionBackfill = adType.prototype.getCompanionBackfill;\n  adType.prototype.setCompanionBackfill = adType.prototype.setCompanionBackfill;\n  var imaSdkInstanceSingleton = new adType();\n  var AdRequestBuilder = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequestBuilder, AdElement);\n  AdRequestBuilder.findGlobalObject = [10];\n  function parseUrlParameters(generatorWrapper) {\n    var value = {};\n    new table(generatorWrapper).entryIdCounter.forEach(function (CustomMap, findEntry) {\n      value[findEntry] = CustomMap;\n    });\n    return value;\n  }\n  var AdRequest = function (generatorWrapper, value) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = {};\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    var CustomMap = {};\n    generatorWrapper = getIterator(Object.entries(generatorWrapper));\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      var iterateEntries = getIterator(findEntry.value);\n      findEntry = iterateEntries.next().value;\n      iterateEntries = iterateEntries.next().value;\n      if (iterateEntries != null) {\n        CustomMap[findEntry] = String(iterateEntries);\n      }\n    }\n    this.entryIdCounter = CustomMap;\n    this.tasks = new PrivacySettings(value);\n  };\n  var generateAdRequest = function (generatorWrapper, value) {\n    if (!(isGoogleAdsRequest(generatorWrapper) || isDoubleClickAd(generatorWrapper) || isGampadRequest(generatorWrapper) || isBidRequest(generatorWrapper) || isAdvRequest(generatorWrapper))) {\n      var CustomMap = new table(generatorWrapper);\n      var findEntry = CustomMap.setTimeoutWrapper;\n      if (CustomMap.tasks === \"pubads.g.doubleclick.net\") {\n        if (!matchesRegex(\"/ssai/\", findEntry)) {\n          matchesRegex(\"/ondemand/\", findEntry);\n        }\n      }\n    }\n    return new AdRequest(parseUrlParameters(generatorWrapper), value);\n  };\n  var processGdprConsent = function (generatorWrapper) {\n    var value = generatorWrapper.tasks.entryIdCounter;\n    var CustomMap = getPropertyValue(generatorWrapper, \"gdpr_consent\");\n    if (value && value !== \"tcunavailable\") {\n      value = value;\n    } else if (value === \"tcunavailable\") {\n      value = CustomMap || value;\n    } else {\n      value = CustomMap || \"\";\n    }\n    if (value === \"tcunavailable\") {\n      return null;\n    }\n    var findEntry;\n    generatorWrapper = isGdprApplicable(generatorWrapper);\n    if ((CustomMap = decodeAdResponse(value)) && value) {\n      var iterateEntries = fetchData(CustomMap, AdManifestVersion, 1);\n      CustomMap = fetchData(CustomMap, AdExtensionParameters, 2) || new AdExtensionParameters();\n      var createCircularNode = getNumericAdProperty(iterateEntries, 9);\n      var entryIdCounter = getNumericAdProperty(iterateEntries, 4);\n      var key = getNumericAdProperty(iterateEntries, 5);\n      var value = getBooleanAdProperty(iterateEntries, 10);\n      var entry = getBooleanAdProperty(iterateEntries, 11);\n      var currentEntry = dispatchUnhandledRejection(iterateEntries, 16);\n      var foundEntry = getBooleanAdProperty(iterateEntries, 15);\n      var resolveFunction = {\n        consents: generateAdResponseMap(transformArrayElements(iterateEntries, 13, parseNullableInt), vendorIds),\n        legitimateInterests: generateAdResponseMap(transformArrayElements(iterateEntries, 14, parseNullableInt), vendorIds)\n      };\n      var rejectFunction = {\n        consents: generateAdResponseMap(transformArrayElements(iterateEntries, 17, parseNullableInt32)),\n        legitimateInterests: generateAdResponseMap(transformArrayElements(iterateEntries, 18, parseNullableInt32))\n      };\n      var user = generateAdResponseMap(transformArrayElements(iterateEntries, 12, parseNullableInt), purposeIds);\n      var profileData = parseData(iterateEntries, AdExtension, 19);\n      iterateEntries = {};\n      profileData = getIterator(profileData);\n      for (var isDone = profileData.next(); !isDone.done; isDone = profileData.next()) {\n        isDone = isDone.value;\n        var stream = getAdPropertyNumeric(isDone, 1);\n        iterateEntries[stream] = iterateEntries[stream] || {};\n        var keyArray = transformArrayElements(isDone, 3, parseNullableInt32);\n        keyArray = getIterator(keyArray);\n        for (var getAdManager = keyArray.next(); !getAdManager.done; getAdManager = keyArray.next()) {\n          iterateEntries[stream][getAdManager.value] = getAdPropertyNumeric(isDone, 2);\n        }\n      }\n      value = {\n        tcString: value,\n        tcfPolicyVersion: createCircularNode,\n        gdprApplies: generatorWrapper,\n        cmpId: entryIdCounter,\n        cmpVersion: key,\n        isServiceSpecific: value,\n        useNonStandardStacks: entry,\n        publisherCC: currentEntry,\n        purposeOneTreatment: foundEntry,\n        purpose: resolveFunction,\n        vendor: rejectFunction,\n        specialFeatureOptins: user,\n        publisher: {\n          restrictions: iterateEntries,\n          consents: generateAdResponseMap(transformArrayElements(CustomMap, 1, parseNullableInt), vendorIds),\n          legitimateInterests: generateAdResponseMap(transformArrayElements(CustomMap, 2, parseNullableInt), vendorIds),\n          customPurposes: {\n            consents: generateAdResponseMap(transformArrayElements(CustomMap, 3, parseNullableInt32)),\n            legitimateInterests: generateAdResponseMap(transformArrayElements(CustomMap, 4, parseNullableInt32))\n          }\n        }\n      };\n    } else {\n      value = null;\n    }\n    if ((findEntry = value) != null) {\n      return findEntry;\n    } else {\n      return null;\n    }\n  };\n  var getPropertyValue = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter.hasOwnProperty(value)) {\n      return generatorWrapper.entryIdCounter[value];\n    }\n  };\n  var isLimitedAdsMode = function (generatorWrapper) {\n    var value;\n    if (!(value = isLimitedAdsModeEnabled(generatorWrapper))) {\n      if (isGdprApplicable(generatorWrapper)) {\n        generatorWrapper = processGdprConsent(generatorWrapper);\n        if (value = !!generatorWrapper) {\n          var CustomMap = undefined === CustomMap ? {} : CustomMap;\n          if (isGdprConsentGiven(generatorWrapper)) {\n            if (generatorWrapper.gdprApplies === false) {\n              value = true;\n            } else if (generatorWrapper.tcString === \"tcunavailable\") {\n              value = !CustomMap.EnhancedMap;\n            } else if ((CustomMap.EnhancedMap || undefined !== generatorWrapper.gdprApplies || CustomMap.createKeyValuePair) && (CustomMap.EnhancedMap || typeof generatorWrapper.tcString === \"string\" && generatorWrapper.tcString.length)) {\n              value = checkPublisherRestrictions(generatorWrapper, \"1\", 0);\n            } else {\n              value = true;\n            }\n          } else {\n            value = false;\n          }\n        }\n        CustomMap = value;\n      } else {\n        CustomMap = true;\n      }\n      value = !CustomMap;\n    }\n    return value;\n  };\n  var isLimitedAdsModeEnabled = function (generatorWrapper) {\n    generatorWrapper = getPropertyValue(generatorWrapper, \"ltd\");\n    return generatorWrapper === \"1\" || generatorWrapper === \"true\";\n  };\n  var isGdprApplicable = function (generatorWrapper) {\n    var value = getPropertyValue(generatorWrapper, \"gdpr\");\n    generatorWrapper = generatorWrapper.tasks.tasks;\n    value = (generatorWrapper === \"1\" || generatorWrapper === \"0\" ? generatorWrapper : undefined !== value ? value : \"\").toLowerCase();\n    return value === \"true\" || value === \"1\";\n  };\n  var buildAdRequest = function (generatorWrapper) {\n    var value = new AdRequestBuilder();\n    var CustomMap = !isLimitedAdsMode(generatorWrapper);\n    CustomMap = setAdProperty(value, 5, CustomMap);\n    if (isGdprApplicable(generatorWrapper)) {\n      generatorWrapper = processGdprConsent(generatorWrapper);\n      generatorWrapper = !!generatorWrapper && !checkSpecialFeatureConsents(generatorWrapper);\n    } else {\n      generatorWrapper = false;\n    }\n    setAdProperty(CustomMap, 8, generatorWrapper);\n    return value;\n  };\n  var UserAgentData = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(UserAgentData, AdElement);\n  UserAgentData.prototype.getAdManifestVersion = function () {\n    return dispatchUnhandledRejection(this, 2);\n  };\n  var HighEntropyValues = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(HighEntropyValues, AdElement);\n  var setArchitecture = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 2, value);\n  };\n  var setBitness = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 3, value);\n  };\n  var setIsMobile = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 4, value);\n  };\n  var setModel = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 5, value);\n  };\n  var setPlatform = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 9, value);\n  };\n  var setPlatformVersion = function (generatorWrapper, value) {\n    return Cf(generatorWrapper, 10, value);\n  };\n  var setUaFullVersion = function (generatorWrapper, value) {\n    return setAdProperty(generatorWrapper, 11, value);\n  };\n  var setFullVersionList = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 1, value);\n  };\n  var setWow64 = function (generatorWrapper, value) {\n    return setAdProperty(generatorWrapper, 7, value);\n  };\n  HighEntropyValues.findGlobalObject = [10, 6];\n  var highEntropyKeys = \"platform platformVersion architecture model uaFullVersion bitness fullVersionList wow64\".split(\" \");\n  function getGoogleTagData(generatorWrapper) {\n    var value;\n    if ((value = generatorWrapper.google_tag_data) != null) {\n      return value;\n    } else {\n      return generatorWrapper.google_tag_data = {};\n    }\n  }\n  function supportsUserAgentData(generatorWrapper) {\n    var value, CustomMap;\n    return typeof ((value = generatorWrapper.navigator) == null ? undefined : (CustomMap = value.userAgentData) == null ? undefined : CustomMap.getHighEntropyValues) === \"function\";\n  }\n  function getHighEntropyValues() {\n    var generatorWrapper = window;\n    if (!supportsUserAgentData(generatorWrapper)) {\n      return null;\n    }\n    var value = getGoogleTagData(generatorWrapper);\n    if (value.uach_promise) {\n      return value.uach_promise;\n    }\n    generatorWrapper = generatorWrapper.navigator.userAgentData.getHighEntropyValues(highEntropyKeys).then(function (CustomMap) {\n      if (!(value.uach != null)) {\n        value.uach = CustomMap;\n      }\n      return CustomMap;\n    });\n    return value.uach_promise = generatorWrapper;\n  }\n  function buildUserAgentData(generatorWrapper) {\n    var value;\n    return setUaFullVersion(setPlatformVersion(setModel(setArchitecture(setFullVersionList(setIsMobile(setWow64(setPlatform(setBitness(new HighEntropyValues(), generatorWrapper.architecture || \"\"), generatorWrapper.bitness || \"\"), generatorWrapper.mobile || false), generatorWrapper.model || \"\"), generatorWrapper.platform || \"\"), generatorWrapper.platformVersion || \"\"), generatorWrapper.uaFullVersion || \"\"), ((value = generatorWrapper.fullVersionList) == null ? undefined : value.map(function (CustomMap) {\n      var findEntry = new UserAgentData();\n      findEntry = setAdPropertyFromObject(findEntry, 1, CustomMap.brand);\n      return setAdPropertyFromObject(findEntry, 2, CustomMap.version);\n    })) || []), generatorWrapper.wow64 || false);\n  }\n  function fetchAndProcessUACH() {\n    var generatorWrapper, value;\n    if ((value = (generatorWrapper = getHighEntropyValues()) == null ? undefined : generatorWrapper.then(function (CustomMap) {\n      return buildUserAgentData(CustomMap);\n    })) != null) {\n      return value;\n    } else {\n      return null;\n    }\n  }\n  var AppSignals = function () {\n    this.appName = null;\n    new AdRequest();\n    this.secureSignals = null;\n    generateUUID();\n    this.deviceId = \"\";\n    this.entryIdCounter = this.referrer = this.integerTransformation = null;\n    new QueryData();\n    fetchProcessedUACH(this);\n  };\n  var getSDKVersion = function () {\n    AppSignals.getAdInstance();\n    var generatorWrapper = \"h.3.641.0\";\n    if (imaSdkInstanceSingleton.tasks) {\n      generatorWrapper += \"/vpaid_adapter\";\n    }\n    return generatorWrapper;\n  };\n  var fetchProcessedUACH = function (generatorWrapper) {\n    var value = fetchAndProcessUACH();\n    if (value) {\n      value.then(function (CustomMap) {\n        if (CustomMap == null) {\n          CustomMap = null;\n        } else {\n          CustomMap = serializeData(CustomMap);\n          for (var findEntry = [], iterateEntries = 0, createCircularNode = 0; createCircularNode < CustomMap.length; createCircularNode++) {\n            var entryIdCounter = CustomMap.charCodeAt(createCircularNode);\n            if (entryIdCounter > 255) {\n              findEntry[iterateEntries++] = entryIdCounter & 255;\n              entryIdCounter >>= 8;\n            }\n            findEntry[iterateEntries++] = entryIdCounter;\n          }\n          CustomMap = base64Encode(findEntry, 3);\n        }\n        generatorWrapper.entryIdCounter = CustomMap;\n      });\n    }\n  };\n  AppSignals.getAdInstance = function () {\n    return getSingletonInstance(AppSignals);\n  };\n  var shouldUseCustomPlayback = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = false;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    var value = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (value && isBooleanConfigEnabled(value, \"forceCustomPlayback\") || imaSdkInstanceSingleton.tasks) {\n      return true;\n    }\n    if (isTouchEnabledDevice() && generatorWrapper) {\n      return false;\n    }\n    generatorWrapper = generatorWrapper && (isTouchEnabledDevice() || isIOSVersionAtLeast(10)) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus();\n    if ((isIphone || isIpod) && !generatorWrapper || isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var isCustomPlaybackAllowed = function (generatorWrapper) {\n    if (generatorWrapper === null) {\n      return false;\n    } else {\n      if (imaSdkInstanceSingleton.tasks) {\n        return true;\n      } else {\n        if (isIphoneIpadIpod || isTouchEnabledDevice()) {\n          if (hasPlaysInlineAttribute(generatorWrapper)) {\n            if (isTouchEnabledDevice() || isIOSVersionAtLeast(10) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus()) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        } else {\n          if (isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    }\n  };\n  var isOnScreenDetectionEnabled = function () {\n    var generatorWrapper = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (generatorWrapper && isBooleanConfigEnabled(generatorWrapper, \"disableOnScreenDetection\")) {\n      return false;\n    } else {\n      return !isAppleTV();\n    }\n  };\n  var isTVOSOrAndroidTV = function () {\n    return getDeviceType() === 1 || getDeviceType() === 2;\n  };\n  var getDeviceType = function () {\n    AppSignals.getAdInstance();\n    switch (0) {\n      case 1:\n        return 3;\n      case 2:\n        return 1;\n    }\n    AppSignals.getAdInstance();\n    AppSignals.getAdInstance();\n    if ((AppSignals.getAdInstance(), null) === \"tvos\") {\n      return 1;\n    } else {\n      if (isTVDevice()) {\n        return 2;\n      } else {\n        return 0;\n      }\n    }\n  };\n  var stripUrlPrefix = function (generatorWrapper, value) {\n    if (generatorWrapper.indexOf(value) == 0) {\n      return generatorWrapper.substr(value.length);\n    } else {\n      return null;\n    }\n  };\n  function getEffectiveUrl() {\n    if (isAppleTV()) {\n      return window.location.href;\n    }\n    var generatorWrapper = computeReferrerUrl();\n    var value = generatorWrapper.tasks;\n    var CustomMap = generatorWrapper.entryIdCounter;\n    generatorWrapper = generatorWrapper.setTimeoutWrapper;\n    var findEntry = null;\n    if (generatorWrapper) {\n      try {\n        var iterateEntries = createOrProcessURL(generatorWrapper.url);\n        var createCircularNode = iterateEntries.setTimeoutWrapper;\n        var entryIdCounter = stripUrlPrefix(createCircularNode, \"/v/\");\n        if (!entryIdCounter) {\n          entryIdCounter = stripUrlPrefix(createCircularNode, \"/a/\");\n        }\n        if (!entryIdCounter) {\n          throw Error(\"Can not extract standalone amp url.\");\n        }\n        var key = stripUrlPrefix(\"/\" + entryIdCounter, \"/s/\");\n        var value = my(iterateEntries.entryIdCounter);\n        value.removeElement(\"amp_js_v\");\n        value.removeElement(\"amp_lite\");\n        var entry = key ? createOrProcessURL(\"https://\" + key) : createOrProcessURL(\"http://\" + entryIdCounter);\n        setQueryParameters(entry, value);\n        findEntry = entry.toString();\n      } catch (currentEntry) {\n        findEntry = null;\n      }\n    }\n    if (findEntry) {\n      return findEntry;\n    } else {\n      if (value && value.url) {\n        return value.url;\n      } else {\n        if (CustomMap && CustomMap.url) {\n          return CustomMap.url;\n        } else {\n          return \"\";\n        }\n      }\n    }\n  }\n  function isAmpPage() {\n    var generatorWrapper = collectAncestorOrigins();\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value = value.value;\n      if (value.url && value.url.includes(\"amp=1\")) {\n        return true;\n      }\n    }\n    if (window.context != null) {\n      generatorWrapper = Number(window.context.ampcontextVersion);\n      if (isNaN(generatorWrapper)) {\n        return false;\n      } else {\n        return Math.floorRectangle(generatorWrapper) > 0;\n      }\n    } else {\n      return computeReferrerUrl().setTimeoutWrapper != null;\n    }\n  }\n  function getAncestorOrigins() {\n    var generatorWrapper = getWindowForDocument().location.ancestorOrigins;\n    if (generatorWrapper) {\n      if (generatorWrapper.length > 0) {\n        return [].concat(toArray(generatorWrapper)).join(\",\");\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n  function getParentPageUrl() {\n    var generatorWrapper = getWindowForDocument();\n    var value = document;\n    return new table(generatorWrapper.parent === generatorWrapper ? generatorWrapper.location.href : value.referrer);\n  }\n  function truncateUrl(generatorWrapper, value) {\n    setParameter(generatorWrapper, \"url\", \"\");\n    try {\n      var CustomMap = 2083 - generatorWrapper.toString().length - 1;\n      if (CustomMap <= 0) {\n        return generatorWrapper.toString();\n      }\n      for (var findEntry = value.slice(0, CustomMap), iterateEntries = encodeURIComponent(findEntry), createCircularNode = CustomMap; createCircularNode > 0 && iterateEntries.length > CustomMap;) {\n        findEntry = value.slice(0, createCircularNode--);\n        iterateEntries = encodeURIComponent(findEntry);\n      }\n      setParameter(generatorWrapper, \"url\", findEntry);\n    } catch (entryIdCounter) {}\n    return generatorWrapper.toString();\n  }\n  var totalAdBufferingTime = {};\n  var defineAdEventTypes = (totalAdBufferingTime.creativeView = \"creativeview\", totalAdBufferingTime.startTimer = \"start\", totalAdBufferingTime.midpoint = \"midpoint\", totalAdBufferingTime.firstQuartile = \"firstquartile\", totalAdBufferingTime.thirdQuartile = \"thirdquartile\", totalAdBufferingTime.complete = \"complete\", totalAdBufferingTime.mute = \"mute\", totalAdBufferingTime.unmute = \"unmute\", totalAdBufferingTime.pause = \"pause\", totalAdBufferingTime.rewind = \"rewind\", totalAdBufferingTime.resume = \"resume\", totalAdBufferingTime.fullscreen = \"fullscreen\", totalAdBufferingTime.exitFullscreen = \"exitfullscreen\", totalAdBufferingTime.expandRectangle = \"expand\", totalAdBufferingTime.collapse = \"collapse\", totalAdBufferingTime.closeCache = \"close\", totalAdBufferingTime.acceptInvitation = \"acceptinvitation\", totalAdBufferingTime.adCanPlay = \"adCanPlay\", totalAdBufferingTime.adStarted = \"adStarted\", totalAdBufferingTime.abandon = \"abandon\", totalAdBufferingTime.acceptInvitationLinear = \"acceptinvitationlinear\", totalAdBufferingTime.engagedView = \"engagedview\", totalAdBufferingTime.instreamAdComplete = \"instreamAdComplete\", totalAdBufferingTime.skipShown = \"skipshown\", totalAdBufferingTime.skippableStateChanged = \"skippableStateChanged\", totalAdBufferingTime.skip = \"skip\", totalAdBufferingTime.progress = \"progress\", totalAdBufferingTime.publisher_invoked_skip = \"PUBLISHER_INVOKED_SKIP\", totalAdBufferingTime.annotation_start = \"annotation_start\", totalAdBufferingTime.annotation_click = \"annotation_click\", totalAdBufferingTime.annotation_close = \"annotation_close\", totalAdBufferingTime.cta_annotation_shown = \"cta_annotation_shown\", totalAdBufferingTime.cta_annotation_clicked = \"cta_annotation_clicked\", totalAdBufferingTime.cta_annotation_closed = \"cta_annotation_closed\", totalAdBufferingTime.replay = \"replay\", totalAdBufferingTime.stopTimer = \"stop\", totalAdBufferingTime.autoplayDisallowed = \"autoplayDisallowed\", totalAdBufferingTime.hasError = \"error\", totalAdBufferingTime.mediaLoadTimeout = \"mediaLoadTimeout\", totalAdBufferingTime.linearChanged = \"linearChanged\", totalAdBufferingTime.click = \"click\", totalAdBufferingTime.contentPauseRequested = \"contentPauseRequested\", totalAdBufferingTime.contentResumeRequested = \"contentResumeRequested\", totalAdBufferingTime.discardAdBreak = \"discardAdBreak\", totalAdBufferingTime.updateAdsRenderingSettings = \"updateAdsRenderingSettings\", totalAdBufferingTime.durationChange = \"durationChange\", totalAdBufferingTime.expandedChanged = \"expandedChanged\", totalAdBufferingTime.autoClose = \"autoClose\", totalAdBufferingTime.userClose = "