".setTimeoutWrapper = generatorWrapper.entryIdCounter.play();\n      if (generatorWrapper.setTimeoutWrapper != null) {\n        generatorWrapper.handleThenable = null;\n        generatorWrapper.setTimeoutWrapper.then(function () {\n          generatorWrapper.setTimeoutWrapper = null;\n          generatorWrapper.cloneIfNotFrozen(generatorWrapper.handleThenable);\n          generatorWrapper.handleThenable = null;\n        }).catch(function (value) {\n          generatorWrapper.setTimeoutWrapper = null;\n          var CustomMap = \"\";\n          if (value != null && value.name != null) {\n            CustomMap = value.name;\n          }\n          if (CustomMap === \"AbortError\" || CustomMap === \"NotAllowedError\") {\n            generatorWrapper.dispatchEvent(\"autoplayDisallowed\");\n          } else {\n            generatorWrapper.year();\n          }\n        });\n      }\n    } else {\n      generatorWrapper.logError = true;\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.pause = function () {\n    if (this.setTimeoutWrapper == null) {\n      this.createIterator = true;\n      this.entryIdCounter.pause();\n    }\n  };\n  setTimeoutWrapper.getCurrentTime = function () {\n    return this.entryIdCounter.currentTime;\n  };\n  setTimeoutWrapper.getDuration = function () {\n    if (isNaN(this.entryIdCounter.duration)) {\n      return -1;\n    } else {\n      return this.entryIdCounter.duration;\n    }\n  };\n  setTimeoutWrapper.getRectangleSize = function () {\n    return new Size(this.entryIdCounter.offsetWidth, this.entryIdCounter.offsetHeight);\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    if (this.totalAdBufferingTime) {\n      disconnectResizeObservers(this.totalAdBufferingTime);\n    }\n    resetVideoTracking(this);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var resetVideoTracking = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync != null) {\n      resetEventController(generatorWrapper.handleAsync);\n      generatorWrapper.handleAsync = null;\n    }\n    if (generatorWrapper.handleThenable != null) {\n      generatorWrapper.handleThenable.markAsCompleted();\n    }\n    removeAllListeners(generatorWrapper.tasks);\n    resetPlaybackState(generatorWrapper);\n  };\n  var resetPlaybackState = function (generatorWrapper) {\n    generatorWrapper.loaded = false;\n    generatorWrapper.dispatchUnhandledRejection = false;\n    generatorWrapper.resolvePromise = false;\n    generatorWrapper.logError = false;\n    generatorWrapper.onFulfilled = 0;\n    generatorWrapper.setTimeoutWrapper = null;\n    generatorWrapper.handleThenable = null;\n    markAsCompletedWrapper(generatorWrapper.isDone);\n  };\n  VideoPlayer.prototype.isArrayLike = function (generatorWrapper) {\n    this.dispatchEvent(generatorWrapper.type);\n  };\n  var handleFullscreenStart = function (generatorWrapper) {\n    if (!generatorWrapper.dispatchUnhandledRejection) {\n      generatorWrapper.dispatchUnhandledRejection = true;\n      generatorWrapper.dispatchEvent(\"start\");\n      try {\n        if (handleThenable(limaFeatureFlag) && globalScope.customElements) {\n          var value = globalScope.customElements.get(\"lima-video\");\n          if (generatorWrapper.entryIdCounter instanceof value) {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"limastart\"\n            });\n          } else {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"videostart\"\n            });\n          }\n        }\n      } catch (CustomMap) {\n        markAsCompleted.getAdInstance().report(153, {\n          limvid: \"startfail\"\n        });\n      }\n      value = typeof generatorWrapper.entryIdCounter.getAttribute === \"function\" && generatorWrapper.entryIdCounter.getAttribute(\"playsinline\") != null;\n      if (undefined === value) {\n        value = false;\n      } else {\n        value = value;\n      }\n      if (!((!isTouchEnabledDevice() && !isIOSVersionAtLeast(10) || !value && (AppSignals.getAdInstance(), false) ? (AppSignals.getAdInstance(), includesIgnoreCase(getUserAgent(), \"Xbox\")) || (isIphone || isIpod ? 0 : (!isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 4)) && (isAppleTV() ? (AppSignals.getAdInstance(), false) : !isTVOSOrAndroidTV())) : 1) || !isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 3) || (isIphone || isIpod) && !isIOSVersionAtLeast(4))) {\n        AdErrorEvent(generatorWrapper);\n      }\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.parseAndValidateArray = function () {\n    this.updateMaxSize = true;\n    if (this.logError) {\n      handleAutoPlay(this);\n    }\n    this.logError = false;\n    reportVideoSize(this);\n  };\n  setTimeoutWrapper.serializeTransformations = function () {\n    if (!this.loaded) {\n      this.loaded = true;\n      this.dispatchEvent(\"loaded\");\n    }\n  };\n  setTimeoutWrapper.cloneIfNotFrozen = function (generatorWrapper) {\n    if (this.setTimeoutWrapper != null) {\n      this.handleThenable = generatorWrapper;\n    } else {\n      this.dispatchEvent(\"play\");\n      if (!(isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n        handleFullscreenStart(this);\n      }\n    }\n  };\n  setTimeoutWrapper.isValidError = function (generatorWrapper) {\n    if (!this.dispatchUnhandledRejection && (isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n      if (this.getCurrentTime() <= 0) {\n        return;\n      }\n      if (isAndroidNonChrome && this.entryIdCounter.ended && this.getDuration() === 1) {\n        this.year(generatorWrapper);\n        return;\n      }\n      handleFullscreenStart(this);\n    }\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      if (this.getCurrentTime() - this.onFulfilled > 1.5) {\n        this.resolvePromise = true;\n        this.entryIdCounter.currentTime = this.onFulfilled;\n        return;\n      }\n      this.resolvePromise = false;\n      if (this.getCurrentTime() > this.onFulfilled) {\n        this.onFulfilled = this.getCurrentTime();\n      }\n    }\n    this.dispatchEvent(\"timeUpdate\");\n  };\n  setTimeoutWrapper.once = function () {\n    this.dispatchEvent(\"volumeChange\");\n  };\n  setTimeoutWrapper.ErrorDetails = function () {\n    if (this.dispatchUnhandledRejection && isIphoneIpadIpod && !this.createIterator && (calculateBufferedAheadTime(this) < 2 || this.resolvePromise)) {\n      this.isDone = new Timer(250);\n      this.tasks.window(this.isDone, \"tick\", this.wrapGeneratorToPromise);\n      this.isDone.startTimer();\n      var generatorWrapper = true;\n    } else {\n      generatorWrapper = false;\n    }\n    if (!(generatorWrapper || this.setTimeoutWrapper)) {\n      this.dispatchEvent(\"pause\");\n    }\n  };\n  setTimeoutWrapper.arrayOfIntegersTransformationInstance = function () {\n    var generatorWrapper = true;\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      generatorWrapper = this.onFulfilled >= this.entryIdCounter.duration - 1.5;\n    }\n    if (!this.resolvePromise && generatorWrapper) {\n      this.dispatchEvent(\"end\");\n    }\n  };\n  var AdErrorEvent = function (generatorWrapper) {\n    generatorWrapper.dispatchEvent(\"beginFullscreen\");\n  };\n  VideoPlayer.prototype.toArray = function () {\n    this.dispatchEvent(\"endFullscreen\");\n  };\n  VideoPlayer.prototype.year = function () {\n    this.dispatchEvent(\"error\");\n  };\n  VideoPlayer.prototype.assignPolyfill = function () {\n    this.dispatchEvent(\"click\");\n  };\n  var reportVideoSize = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter instanceof HTMLElement) {\n      generatorWrapper.totalAdBufferingTime = waitForElementResize(generatorWrapper.entryIdCounter, defaultSize);\n      generatorWrapper.totalAdBufferingTime.then(function (value) {\n        if (!generatorWrapper.handleIteratorResult()) {\n          settlePromise(resolvePromise.getAdInstance(), \"ps\", value.width + \"x\" + value.height);\n        }\n      });\n    }\n  };\n  VideoPlayer.prototype.sliceArguments = function () {\n    var generatorWrapper = this.getRectangleSize();\n    var value = isFullscreen(this.entryIdCounter);\n    if (generatorWrapper.width !== this.size.width || generatorWrapper.height !== this.size.height) {\n      if (!this.fullscreen && value) {\n        AdErrorEvent(this);\n      } else if (this.fullscreen && !value) {\n        this.toArray();\n      }\n      this.size = generatorWrapper;\n      this.fullscreen = value;\n    }\n  };\n  VideoPlayer.prototype.wrapGeneratorToPromise = function () {\n    if (!this.entryIdCounter.ended && this.entryIdCounter.paused && (isIphoneIpadIpod || isIos ? this.entryIdCounter.currentTime < this.entryIdCounter.duration : 1)) {\n      var generatorWrapper = this.entryIdCounter.duration - this.entryIdCounter.currentTime;\n      var value = calculateBufferedAheadTime(this);\n      if (value > 0 && (value >= 2 || generatorWrapper < 2)) {\n        markAsCompletedWrapper(this.isDone);\n        handleAutoPlay(this);\n      }\n    } else {\n      markAsCompletedWrapper(this.isDone);\n    }\n  };\n  var calculateBufferedAheadTime = function (generatorWrapper) {\n    var value;\n    generatorWrapper: {\n      for (value = generatorWrapper.entryIdCounter.buffered.length - 1; value >= 0;) {\n        if (generatorWrapper.entryIdCounter.buffered.startTimer(value) <= generatorWrapper.entryIdCounter.currentTime) {\n          value = generatorWrapper.entryIdCounter.buffered.end(value);\n          break generatorWrapper;\n        }\n        value--;\n      }\n      value = 0;\n    }\n    return value - generatorWrapper.entryIdCounter.currentTime;\n  };\n  VideoPlayer.prototype.isObjectOrFunction = function () {\n    markAsCompleted.getAdInstance().report(139);\n    AdErrorEvent(this);\n  };\n  var convertToIterator = function (generatorWrapper) {\n    if (generatorWrapper instanceof IteratorWrapper || generatorWrapper instanceof IteratorResultWrapper || generatorWrapper instanceof IteratorResult) {\n      return generatorWrapper;\n    }\n    if (typeof generatorWrapper.next == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper;\n      });\n    }\n    if (typeof generatorWrapper[Symbol.iterator] == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper[Symbol.iterator]();\n      });\n    }\n    if (typeof generatorWrapper.getIterator == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper.getIterator();\n      });\n    }\n    throw Error(\"Not an iterator or iterable.\");\n  };\n  var IteratorWrapper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  IteratorWrapper.prototype.getIterator = function () {\n    return new IteratorResultWrapper(this.entryIdCounter());\n  };\n  IteratorWrapper.prototype[Symbol.iterator] = function () {\n    return new IteratorResult(this.entryIdCounter());\n  };\n  IteratorWrapper.prototype.tasks = function () {\n    return new IteratorResult(this.entryIdCounter());\n  };\n  var IteratorResultWrapper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(IteratorResultWrapper, IteratorPrototype);\n  IteratorResultWrapper.prototype.next = function () {\n    return this.entryIdCounter.next();\n  };\n  IteratorResultWrapper.prototype[Symbol.iterator] = function () {\n    return new IteratorResult(this.entryIdCounter);\n  };\n  IteratorResultWrapper.prototype.tasks = function () {\n    return new IteratorResult(this.entryIdCounter);\n  };\n  var IteratorResult = function (generatorWrapper) {\n    IteratorWrapper.call(this, function () {\n      return generatorWrapper;\n    });\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  inheritPrototype(IteratorResult, IteratorWrapper);\n  IteratorResult.prototype.next = function () {\n    return this.setTimeoutWrapper.next();\n  };\n  var CustomMap = function (generatorWrapper, value) {\n    this.tasks = {};\n    this.entryIdCounter = [];\n    this.setTimeoutWrapper = this.size = 0;\n    var CustomMap = arguments.length;\n    if (CustomMap > 1) {\n      if (CustomMap % 2) {\n        throw Error(\"Uneven number of arguments\");\n      }\n      for (var findEntry = 0; findEntry < CustomMap; findEntry += 2) {\n        this.set(arguments[findEntry], arguments[findEntry + 1]);\n      }\n    } else if (generatorWrapper) {\n      if (generatorWrapper instanceof CustomMap) {\n        CustomMap = generatorWrapper.base64AlphabetVariants();\n        for (findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n          this.set(CustomMap[findEntry], generatorWrapper.get(CustomMap[findEntry]));\n        }\n      } else {\n        for (findEntry in generatorWrapper) this.set(findEntry, generatorWrapper[findEntry]);\n      }\n    }\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.hasPlatform = function () {\n    syncInternalStateWithArray(this);\n    for (var generatorWrapper = [], value = 0; value < this.entryIdCounter.length; value++) {\n      generatorWrapper.push(this.tasks[this.entryIdCounter[value]]);\n    }\n    return generatorWrapper;\n  };\n  setTimeoutWrapper.base64AlphabetVariants = function () {\n    syncInternalStateWithArray(this);\n    return this.entryIdCounter.concat();\n  };\n  setTimeoutWrapper.has = function (generatorWrapper) {\n    return hasProperty(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.isEmpty = function () {\n    return this.size == 0;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.tasks = {};\n    this.setTimeoutWrapper = this.size = this.entryIdCounter.length = 0;\n  };\n  setTimeoutWrapper.removeElement = function (generatorWrapper) {\n    return this.delete(generatorWrapper);\n  };\n  setTimeoutWrapper.delete = function (generatorWrapper) {\n    if (hasProperty(this.tasks, generatorWrapper)) {\n      delete this.tasks[generatorWrapper];\n      --this.size;\n      this.setTimeoutWrapper++;\n      if (this.entryIdCounter.length > 2 * this.size) {\n        syncInternalStateWithArray(this);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var syncInternalStateWithArray = function (generatorWrapper) {\n    if (generatorWrapper.size != generatorWrapper.entryIdCounter.length) {\n      for (var value = 0, CustomMap = 0; value < generatorWrapper.entryIdCounter.length;) {\n        var findEntry = generatorWrapper.entryIdCounter[value];\n        if (hasProperty(generatorWrapper.tasks, findEntry)) {\n          generatorWrapper.entryIdCounter[CustomMap++] = findEntry;\n        }\n        value++;\n      }\n      generatorWrapper.entryIdCounter.length = CustomMap;\n    }\n    if (generatorWrapper.size != generatorWrapper.entryIdCounter.length) {\n      var iterateEntries = {};\n      for (CustomMap = value = 0; value < generatorWrapper.entryIdCounter.length;) {\n        findEntry = generatorWrapper.entryIdCounter[value];\n        if (!hasProperty(iterateEntries, findEntry)) {\n          generatorWrapper.entryIdCounter[CustomMap++] = findEntry;\n          iterateEntries[findEntry] = 1;\n        }\n        value++;\n      }\n      generatorWrapper.entryIdCounter.length = CustomMap;\n    }\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.get = function (generatorWrapper, value) {\n    if (hasProperty(this.tasks, generatorWrapper)) {\n      return this.tasks[generatorWrapper];\n    } else {\n      return value;\n    }\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    if (!hasProperty(this.tasks, generatorWrapper)) {\n      this.size += 1;\n      this.entryIdCounter.push(generatorWrapper);\n      this.setTimeoutWrapper++;\n    }\n    this.tasks[generatorWrapper] = value;\n  };\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    for (var CustomMap = this.base64AlphabetVariants(), findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n      var iterateEntries = CustomMap[findEntry];\n      var createCircularNode = this.get(iterateEntries);\n      generatorWrapper.call(value, createCircularNode, iterateEntries, this);\n    }\n  };\n  setTimeoutWrapper.keys = function () {\n    return convertToIterator(this.getIterator(true)).tasks();\n  };\n  setTimeoutWrapper.values = function () {\n    return convertToIterator(this.getIterator(false)).tasks();\n  };\n  setTimeoutWrapper.entries = function () {\n    var generatorWrapper = this;\n    return createTransformIterator(this.keys(), function (value) {\n      return [value, generatorWrapper.get(value)];\n    });\n  };\n  setTimeoutWrapper.getIterator = function (generatorWrapper) {\n    syncInternalStateWithArray(this);\n    var value = 0;\n    var CustomMap = this.setTimeoutWrapper;\n    var findEntry = this;\n    var iterateEntries = new IteratorPrototype();\n    iterateEntries.next = function () {\n      if (CustomMap != findEntry.setTimeoutWrapper) {\n        throw Error(\"The map has changed since the iterator was created\");\n      }\n      if (value >= findEntry.entryIdCounter.length) {\n        return iteratorDoneValue;\n      }\n      var createCircularNode = findEntry.entryIdCounter[value++];\n      return {\n        value: generatorWrapper ? createCircularNode : findEntry.tasks[createCircularNode],\n        done: false\n      };\n    };\n    return iterateEntries;\n  };\n  var hasProperty = function (generatorWrapper, value) {\n    return Object.prototype.hasOwnProperty.call(generatorWrapper, value);\n  };\n  var VideoPlayer = function () {\n    AdEnvironmentConfig.call(this);\n    this.currentTime = 0;\n    this.duration = NaN;\n    this.setTimeoutWrapper = true;\n    this.volume = 1;\n    this.muted = false;\n    this.onFulfilled = 1;\n    this.playbackRate = 0;\n    this.tasks = this.entryIdCounter = this.handleThenable = null;\n    this.buffered = new TimeRanges();\n    this.dispatchUnhandledRejection = new TimeRanges();\n    this.isDone = \"\";\n    this.tagName = \"VIDEO\";\n    this.height = this.width = 0;\n    this.canPlayType = function () {\n      return \"\";\n    };\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    var generatorWrapper = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (generatorWrapper) {\n      this.duration = getVideoElementFakeDuration(generatorWrapper);\n    }\n  };\n  inheritPrototype(VideoPlayer, AdEnvironmentConfig);\n  var createFakeVideoElement = function () {\n    var generatorWrapper = [\"video/mp4\"];\n    var value = [\"video/ogg\"];\n    var CustomMap = new VideoPlayer();\n    CustomMap.canPlayType = function (findEntry) {\n      if (generatorWrapper.includes(findEntry)) {\n        return \"probably\";\n      } else {\n        if (value.includes(findEntry)) {\n          return \"maybe\";\n        } else {\n          return \"\";\n        }\n      }\n    };\n    return CustomMap;\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.pause = function () {\n    if (!this.setTimeoutWrapper) {\n      var generatorWrapper;\n      if (!((generatorWrapper = this.handleThenable) == null)) {\n        generatorWrapper.stopTimer();\n      }\n      this.setTimeoutWrapper = true;\n      this.dispatchEvent(\"timeupdate\");\n      this.dispatchEvent(\"pause\");\n    }\n  };\n  setTimeoutWrapper.load = function () {\n    this.setTimeoutWrapper = true;\n    this.dispatchEvent(\"loadstart\");\n    var generatorWrapper;\n    if (isNaN(this.duration)) {\n      generatorWrapper = 10 + 20 * Math.random();\n    } else {\n      generatorWrapper = this.duration;\n    }\n    this.duration = Number(generatorWrapper);\n    this.dispatchEvent(\"durationchange\");\n    generatorWrapper = this.dispatchUnhandledRejection;\n    generatorWrapper.entryIdCounter.push(new TimeRange(this.duration));\n    generatorWrapper.length = generatorWrapper.entryIdCounter.length;\n    generatorWrapper = this.buffered;\n    generatorWrapper.entryIdCounter.push(new TimeRange(this.duration));\n    generatorWrapper.length = generatorWrapper.entryIdCounter.length;\n    this.dispatchEvent(\"loadedmetadata\");\n    if (this.currentTime > 0) {\n      this.dispatchEvent(\"timeupdate\");\n    }\n    this.dispatchEvent(\"loadeddata\");\n    this.dispatchEvent(\"canplay\");\n    this.dispatchEvent(\"canplaythrough\");\n    this.dispatchEvent(\"progress\");\n    this.playbackRate = this.onFulfilled;\n  };\n  setTimeoutWrapper.setVolume = function (generatorWrapper) {\n    this.volume = generatorWrapper;\n    this.dispatchEvent(\"volumechange\");\n  };\n  setTimeoutWrapper.setAttribute = function (generatorWrapper, value) {\n    if (generatorWrapper != null) {\n      globalAttributesMap.set(generatorWrapper, value);\n    }\n  };\n  setTimeoutWrapper.getAttribute = function (generatorWrapper) {\n    return globalAttributesMap.get(generatorWrapper);\n  };\n  setTimeoutWrapper.noopFunction = function (generatorWrapper) {\n    var value = null;\n    var CustomMap = null;\n    switch (generatorWrapper.type) {\n      case \"loadeddata\":\n        value = \"Loaded\";\n        break;\n      case \"playing\":\n        value = \"Playing\";\n        CustomMap = \"#00f\";\n        break;\n      case \"pause\":\n        value = \"Paused\";\n        break;\n      case \"ended\":\n        value = \"Ended\";\n        CustomMap = \"#000\";\n    }\n    if (value && this.tasks) {\n      this.tasks.innerText = value;\n    }\n    if (CustomMap && this.entryIdCounter) {\n      this.entryIdCounter.style.backgroundColor = CustomMap;\n    }\n  };\n  globalObject.Object.defineProperties(VideoPlayer.prototype, {\n    src: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.isDone;\n      },\n      set(generatorWrapper) {\n        this.isDone = generatorWrapper;\n      }\n    }\n  });\n  var globalAttributesMap = new CustomMap();\n  var TimeRange = function (generatorWrapper) {\n    this.startTime = 0;\n    this.endTime = generatorWrapper;\n  };\n  var TimeRanges = function () {\n    this.length = 0;\n    this.entryIdCounter = [];\n  };\n  TimeRanges.prototype.startTimer = function (generatorWrapper) {\n    return this.entryIdCounter[generatorWrapper].startTime;\n  };\n  TimeRanges.prototype.end = function (generatorWrapper) {\n    return this.entryIdCounter[generatorWrapper].endTime;\n  };\n  var VideoElementManager = function (generatorWrapper) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = this.entryIdCounter = null;\n    this.tasks = createVideoElementOrFake(this);\n    this.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"display:none;\"\n    });\n    this.createDeferred.appendChild(this.entryIdCounter);\n    this.entryIdCounter.appendChild(this.tasks);\n    this.setTimeoutWrapper = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"position:absolute;width:100%;height:100%;left:0px;top:0px\"\n    });\n    this.entryIdCounter.appendChild(this.setTimeoutWrapper);\n    handleHeavyAdIntervention(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"haob\", \"1\");\n    });\n  };\n  inheritPrototype(VideoElementManager, tryCall);\n  VideoElementManager.prototype.initializeMraid = function () {\n    if (this.tasks) {\n      this.tasks.load();\n    }\n  };\n  VideoElementManager.prototype.getAdEnvironment = function () {\n    removeElement(this.entryIdCounter);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var createVideoElementOrFake = function (generatorWrapper) {\n    var value = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (isBooleanConfigEnabled(value, \"useVideoElementFake\")) {\n      generatorWrapper = createFakeVideoElement();\n      value = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n        style: \"position:absolute;width:100%;height:100%;top:0px;left:0px;\"\n      });\n      Object.assign(value, generatorWrapper);\n      generatorWrapper.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n        style: \"position:absolute;width:100%;height:100%;top:0px;left:0px;background-color:#000\"\n      });\n      generatorWrapper.tasks = createElementWithOptionalClassesAndAttributes(\"P\", {\n        style: \"position:absolute;top:25%;margin-left:10px;font-size:24px;color:#fff;\"\n      });\n      generatorWrapper.entryIdCounter.appendChild(generatorWrapper.tasks);\n      value.appendChild(generatorWrapper.entryIdCounter);\n      generatorWrapper.handleAsync.window(generatorWrapper, [\"loadeddata\", \"playing\", \"pause\", \"ended\"], generatorWrapper.noopFunction);\n      generatorWrapper = value;\n    } else {\n      value = false;\n      try {\n        if (-1 !== window.location.search.indexOf(\"goog_limavideo=true\")) {\n          value = true;\n        }\n      } catch (CustomMap) {}\n      if (shouldUseLimaVideo(generatorWrapper, value)) {\n        if (value) {\n          console.log(\"force lima video in wrapper\");\n        }\n        generatorWrapper = null;\n        try {\n          generatorWrapper = new CustomVideoElement();\n        } catch (CustomMap) {\n          generatorWrapper = createElementWithOptionalClassesAndAttributes(\"lima-video\");\n          if (handleThenable(limaFeatureFlag)) {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"firefail\"\n            });\n          }\n        }\n        generatorWrapper.style.backgroundColor = \"#000\";\n        generatorWrapper.style.height = \"100%\";\n        generatorWrapper.style.width = \"100%\";\n        generatorWrapper.style.position = \"absolute\";\n        generatorWrapper.style.left = \"0\";\n        generatorWrapper.style.top = \"0\";\n      } else {\n        generatorWrapper = createElementWithOptionalClassesAndAttributes(\"VIDEO\", {\n          style: \"background-color:#000;position:absolute;width:100%;height:100%;left:0;top:0;\",\n          title: \"Advertisement\".toString()\n        });\n      }\n    }\n    generatorWrapper.setAttribute(\"webkit-playsinline\", \"true\");\n    generatorWrapper.setAttribute(\"playsinline\", \"true\");\n    return generatorWrapper;\n  };\n  var shouldUseLimaVideo = function (generatorWrapper, value) {\n    if (!globalScope.customElements) {\n      return false;\n    }\n    if (value) {\n      return true;\n    }\n    if (isFirefox() && getDocument(generatorWrapper.createDeferred) !== document) {\n      return false;\n    }\n    if (handleThenable(limaFeatureFlag)) {\n      markAsCompleted.getAdInstance().report(153, {\n        limvid: \"vw\"\n      });\n    }\n    if (handleThenable(vm) || handleThenable(limaFeatureFlag) || handleThenable(tm) || handleThenable(um)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  VideoElementManager.prototype.findLastElement = function () {\n    return this.setTimeoutWrapper;\n  };\n  VideoElementManager.prototype.endsWith = function () {\n    var generatorWrapper = this.entryIdCounter;\n    if (generatorWrapper != null) {\n      generatorWrapper.style.display = \"none\";\n    }\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper && generatorWrapper.getRootNode ? generatorWrapper.getRootNode({\n      composed: true\n    }) : generatorWrapper;\n    if (generatorWrapper == null || !containsElement(getDocument(findEntry), findEntry)) {\n      throw createAdPlayError(aF, null, \"containerElement\", \"element\");\n    }\n    this.tasks = value;\n    this.tryCall = isCustomPlaybackAllowed(this.tasks || null);\n    this.handleThenable = hasPlaysInlineAttribute(this.tasks || null);\n    this.logError = String(Math.floorRectangle(1000000000 * Math.random()));\n    this.dispatchUnhandledRejection = false;\n    this.Signed64 = generatorWrapper;\n    this.resolvePromise = value != null;\n    imaSdkInstanceSingleton.entryIdCounter = 2;\n    this.settlePromise = hasPlaysInlineAttribute(value ? value : null);\n    findEntry = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"position:absolute\"\n    });\n    generatorWrapper.insertBefore(findEntry, generatorWrapper.firstChild);\n    this.createDeferred = findEntry;\n    this.entryIdCounter = null;\n    if (isCustomElementSupported(this) && value) {\n      generatorWrapper = new VideoPlayer(value);\n    } else {\n      this.entryIdCounter = new VideoElementManager(this.createDeferred);\n      generatorWrapper = new VideoPlayer(this.entryIdCounter.tasks);\n    }\n    this.identityFunction = generatorWrapper;\n    this.getGeneratorException = this.setTimeoutWrapper = null;\n    if (generatorWrapper = this.entryIdCounter && imaSdkInstanceSingleton.createDeferred) {\n      generatorWrapper = !(isCustomElementSupported(this) || isIphone || isIpod || isTVDevice() || isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)));\n    }\n    if (generatorWrapper) {\n      this.setTimeoutWrapper = new VideoElementManager(this.createDeferred);\n      this.getGeneratorException = new VideoPlayer(this.setTimeoutWrapper.tasks);\n    }\n    this.handleAsync = CustomMap || null;\n    this.handleThenable = this.handleAsync != null;\n    if (isCustomElementSupported(this) && value) {\n      if (typeof value.getBoundingClientRect !== \"function\") {\n        CustomMap = this.createDeferred;\n        imaSdkInstanceSingleton.setTimeoutWrapper = CustomMap;\n      } else {\n        CustomMap = value;\n      }\n    } else {\n      CustomMap = this.createDeferred;\n    }\n    this.onFulfilled = CustomMap;\n    this.isDone = new AdLoader(this.createDeferred, this);\n    this.size = new Size(0, 0);\n    this.executeCallbacks = \"\";\n    if (value) {\n      value = createOrProcessURL(value.src || value.currentSrc);\n      if (value.toString().length < 200) {\n        this.executeCallbacks = value.toString();\n      } else if (value.tasks.length < 200) {\n        this.executeCallbacks = value.tasks;\n      }\n    }\n    this.convertStringToInt64 = new Map();\n    this.convertStringToInt64.set(\"videoDisplay1\", this.identityFunction);\n    if (this.getGeneratorException) {\n      this.convertStringToInt64.set(\"videoDisplay2\", this.getGeneratorException);\n    }\n    if (isMediaElementInvalid(this) && !imaSdkInstanceSingleton.tasks) {\n      console.warn(\"Custom media element must be a <video> or <audio> element. Viewability/audibility measurement will fail.\");\n    }\n  };\n  setTimeoutWrapper = AdManager.prototype;\n  setTimeoutWrapper.initializeMraid = function () {\n    this.dispatchUnhandledRejection = true;\n    if (this.entryIdCounter != null) {\n      this.entryIdCounter.initializeMraid();\n    }\n    if (this.setTimeoutWrapper != null) {\n      this.setTimeoutWrapper.initializeMraid();\n    }\n  };\n  setTimeoutWrapper.Generator = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.destroy = function () {\n    var generatorWrapper = this;\n    this.tasks = null;\n    markAsCompletedWrapper(this.entryIdCounter);\n    markAsCompletedWrapper(this.setTimeoutWrapper);\n    markAsCompletedWrapper(this.isDone);\n    this.identityFunction.isIphone(function () {\n      return markAsCompletedWrapper(generatorWrapper.identityFunction);\n    });\n    if (this.getGeneratorException != null) {\n      this.getGeneratorException.isIphone(function () {\n        return markAsCompletedWrapper(generatorWrapper.getGeneratorException);\n      });\n    }\n    removeElement(this.createDeferred);\n  };\n  setTimeoutWrapper.writeVarint = function () {\n    if (this.entryIdCounter != null) {\n      var generatorWrapper = this.entryIdCounter.entryIdCounter;\n      if (generatorWrapper != null) {\n        generatorWrapper.style.display = \"block\";\n      }\n    }\n  };\n  setTimeoutWrapper.isIpad = function (generatorWrapper) {\n    if (this.identityFunction !== generatorWrapper && this.entryIdCounter && this.setTimeoutWrapper && this.getGeneratorException) {\n      generatorWrapper.setVolume(this.identityFunction.getVolume());\n      generatorWrapper = this.identityFunction;\n      this.identityFunction = this.getGeneratorException;\n      this.getGeneratorException = generatorWrapper;\n      generatorWrapper = this.entryIdCounter;\n      this.entryIdCounter = this.setTimeoutWrapper;\n      this.setTimeoutWrapper = generatorWrapper;\n      this.setTimeoutWrapper.endsWith();\n      this.isDone.isIpad(this.identityFunction);\n    }\n  };\n  setTimeoutWrapper.endsWith = function () {\n    if (this.entryIdCounter != null) {\n      this.entryIdCounter.endsWith();\n    }\n  };\n  setTimeoutWrapper.findLastElement = function () {\n    if (this.handleThenable && this.handleAsync) {\n      return this.handleAsync;\n    } else {\n      if (this.entryIdCounter != null) {\n        return this.entryIdCounter.findLastElement();\n      } else {\n        return null;\n      }\n    }\n  };\n  var isCustomElementSupported = function (generatorWrapper) {\n    return shouldUseCustomPlayback(generatorWrapper.settlePromise) && generatorWrapper.resolvePromise;\n  };\n  var isMediaElementInvalid = function (generatorWrapper) {\n    var value = [\"VIDEO\", \"AUDIO\"],\n      CustomMap;\n    return isCustomElementSupported(generatorWrapper) && !!generatorWrapper.tasks && !value.includes((CustomMap = generatorWrapper.tasks.tagName) == null ? undefined : CustomMap.toUpperCase());\n  };\n  AdManager.prototype.getRectangleSize = function () {\n    return this.size;\n  };\n  var hasPlaysInlineAttribute = function (generatorWrapper) {\n    if (generatorWrapper != null && typeof generatorWrapper.getAttribute === \"function\" && generatorWrapper.getAttribute(\"playsinline\") != null) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  AdManager.prototype.throwIncidentError = function (generatorWrapper) {\n    this.identityFunction.throwIncidentError(generatorWrapper);\n  };\n  AdManager.prototype.createWarningError = function () {\n    this.identityFunction.createWarningError();\n  };\n  AdManager.prototype.destroy = AdManager.prototype.destroy;\n  AdManager.prototype.initializeMraid = AdManager.prototype.initializeMraid;\n  var AdErrorType = {\n    AD_LOAD: \"adLoadError\",\n    AD_PLAY: \"adPlayError\"\n  };\n  var AdError = function (generatorWrapper) {\n    var value = Error.call(this);\n    this.message = value.message;\n    if (\"stack\" in value) {\n      this.stack = value.stack;\n    }\n    this.data = generatorWrapper;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getInnerError = function () {\n    var generatorWrapper = this.data.innerError;\n    if (generatorWrapper instanceof Object) {\n      return new AdError(generatorWrapper);\n    } else {\n      if (generatorWrapper != null) {\n        return Error(generatorWrapper);\n      } else {\n        return null;\n      }\n    }\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.data.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.data.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    var generatorWrapper = this.getErrorCode();\n    if (generatorWrapper < 1000) {\n      return generatorWrapper;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.data.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  AdError.prototype.getType = AdError.prototype.getType;\n  AdError.prototype.getVastErrorCode = AdError.prototype.getVastErrorCode;\n  AdError.prototype.getErrorCode = AdError.prototype.getErrorCode;\n  AdError.prototype.getMessage = AdError.prototype.getMessage;\n  AdError.prototype.getInnerError = AdError.prototype.getInnerError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error.AdError.Type\", AdErrorType);\n  var AdErrorEventType = {\n    AD_ERROR: \"adError\"\n  };\n  var AdErrorEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adError\");\n    this.hasError = generatorWrapper;\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdErrorEvent, AdEvent);\n  AdErrorEvent.prototype.getAdErrorResponseError = function () {\n    return this.hasError;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = function () {\n    return this.entryIdCounter;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = AdErrorEvent.prototype.getUserRequestContext;\n  AdErrorEvent.prototype.getAdErrorResponseError = AdErrorEvent.prototype.getAdErrorResponseError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error_event.AdErrorEvent.Type\", AdErrorEventType);\n  var AdEventTypes = {\n    AD_CAN_PLAY: \"adCanPlay\",\n    URLSchemeValidator: \"adStarted\",\n    CONTENT_PAUSE_REQUESTED: \"contentPauseRequested\",\n    CONTENT_RESUME_REQUESTED: \"contentResumeRequested\",\n    CLICK: \"click\",\n    VIDEO_CLICKED: \"videoClicked\",\n    VIDEO_ICON_CLICKED: \"videoIconClicked\",\n    convertNumberToString: \"engagedView\",\n    EXPANDED_CHANGED: \"expandedChanged\",\n    STARTED: \"start\",\n    AD_PROGRESS: \"adProgress\",\n    AD_BUFFERING: \"adBuffering\",\n    IMPRESSION: \"impression\",\n    optionalString: \"measurable_impression\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    setElementSrcFromTrustedUrl: \"externalActivityEvent\",\n    PAUSED: \"pause\",\n    RESUMED: \"resume\",\n    FIRST_QUARTILE: \"firstQuartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdQuartile\",\n    COMPLETE: \"complete\",\n    DURATION_CHANGE: \"durationChange\",\n    USER_CLOSE: \"userClose\",\n    getTopAccessibleContext: \"userRecall\",\n    searchDelimiterRegex: \"prefetched\",\n    LOADED: \"loaded\",\n    ALL_ADS_COMPLETED: \"allAdsCompleted\",\n    SKIPPED: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    LINEAR_CHANGED: \"linearChanged\",\n    SKIPPABLE_STATE_CHANGED: \"skippableStateChanged\",\n    AD_METADATA: \"adMetadata\",\n    AD_BREAK_FETCH_ERROR: \"adBreakFetchError\",\n    AD_BREAK_READY: \"adBreakReady\",\n    LOG: \"log\",\n    VOLUME_CHANGED: \"volumeChange\",\n    VOLUME_MUTED: \"mute\",\n    INTERACTION: \"interaction\",\n    safeHTMLMarker: \"companionBackfill\",\n    generatePageViewId: \"trackingUrlPinged\",\n    ampProjectUrlRegex: \"video_card_endcap_collapse\",\n    collectAncestorOrigins: \"video_card_endcap_dismiss\",\n    UrlDepthInfo: \"video_card_endcap_impression\",\n    safeStyleMarker: \"companionInitialized\",\n    emptySafeHTML: \"companionImpression\",\n    SafeHTML: \"companionClick\",\n    getContentWindow: \"mediaUrlPinged\",\n    LOAD_START: \"loadStart\",\n    isTablet: \"navigationRequested\"\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (undefined === CustomMap) {\n      CustomMap = null;\n    } else {\n      CustomMap = CustomMap;\n    }\n    AdEvent.call(this, generatorWrapper);\n    this.createUnsigned64 = value;\n    this.setTimeoutWrapper = CustomMap;\n  };\n  inheritPrototype(AdEvent, AdEvent);\n  AdEvent.prototype.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  AdEvent.prototype.getAdData = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdEvent.prototype.getAdData = AdEvent.prototype.getAdData;\n  AdEvent.prototype.getAdInstance = AdEvent.prototype.getAdInstance;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_event.AdEvent.Type\", AdEventTypes);\n  var AdMetadataEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adMetadata\", generatorWrapper);\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdMetadataEvent, AdEvent);\n  AdMetadataEvent.prototype.getAdPropertyHandler = function () {\n    return this.entryIdCounter;\n  };\n  AdMetadataEvent.prototype.getAdCuePoints = AdMetadataEvent.prototype.getAdPropertyHandler;\n  var AdBreakData = function (generatorWrapper) {\n    this.adBreakDuration = generatorWrapper.adBreakDuration;\n    this.adPosition = generatorWrapper.adPosition;\n    this.currentTime = generatorWrapper.currentTime;\n    this.duration = generatorWrapper.duration;\n    this.totalAds = generatorWrapper.totalAds;\n  };\n  var ContentTimeUpdateTimer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = generatorWrapper;\n    this.isDone = value;\n    this.tasks = this.setTimeoutWrapper.currentTime;\n    this.entryIdCounter = new Timer(250);\n    registerDisposable(this, this.entryIdCounter);\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    addListener(this.handleAsync, this.entryIdCounter, \"tick\", this.onFulfilled, false, this);\n  };\n  inheritPrototype(ContentTimeUpdateTimer, AdEnvironmentConfig);\n  ContentTimeUpdateTimer.prototype.getUserAgent = function () {\n    return this.tasks;\n  };\n  ContentTimeUpdateTimer.prototype.startTimer = function () {\n    notifyContentTimeUpdate(this);\n    this.entryIdCounter.startTimer();\n  };\n  ContentTimeUpdateTimer.prototype.stopTimer = function () {\n    this.entryIdCounter.stopTimer();\n  };\n  ContentTimeUpdateTimer.prototype.onFulfilled = function () {\n    var generatorWrapper = this.setTimeoutWrapper.currentTime;\n    if (generatorWrapper !== this.getUserAgent()) {\n      this.tasks = generatorWrapper;\n      notifyContentTimeUpdate(this);\n    }\n  };\n  var notifyContentTimeUpdate = function (generatorWrapper) {\n    var value = {};\n    value.currentTime = generatorWrapper.getUserAgent();\n    enqueueMessage(generatorWrapper.isDone, \"contentTimeUpdate\", \"contentTimeUpdate\", value);\n  };\n  var supportsSrcdoc = isWebKit && \"srcdoc\" in createElement(document, \"IFRAME\");\n  var writeDocument = function (generatorWrapper, value) {\n    generatorWrapper.open(\"text/html\", \"replace\");\n    writeSafeHtmlToDocument(generatorWrapper, sanitizeInput(String(value)));\n    generatorWrapper.closeCache();\n  };\n  var allowedCssFunctions = {\n    rgb: true,\n    rgba: true,\n    alpha: true,\n    rect: true,\n    image: true,\n    \"linear-gradient\": true,\n    \"radial-gradient\": true,\n    \"repeating-linear-gradient\": true,\n    \"repeating-radial-gradient\": true,\n    \"cubic-bezier\": true,\n    matrix: true,\n    perspective: true,\n    rotate: true,\n    rotate3d: true,\n    rotatex: true,\n    rotatey: true,\n    steps: true,\n    rotatez: true,\n    scaleRectangle: true,\n    scale3d: true,\n    scalex: true,\n    scaley: true,\n    scalez: true,\n    skew: true,\n    skewx: true,\n    skewy: true,\n    translate: true,\n    translate3d: true,\n    translatex: true,\n    translatey: true,\n    translatez: true\n  };\n  var sanitizeCssValue = function (generatorWrapper) {\n    generatorWrapper = trimString(generatorWrapper);\n    if (generatorWrapper == \"\") {\n      return null;\n    }\n    var value = String(generatorWrapper.slice(0, 4)).toLowerCase();\n    if ((value > \"url(\" ? -1 : value == \"url(\" ? 0 : 1) == 0) {\n      return null;\n    }\n    if (generatorWrapper.indexOf(\"(\") > 0) {\n      if (/\"|'/.test(generatorWrapper)) {\n        return null;\n      }\n      value = /([\\-\\w]+)\\(/g;\n      for (var CustomMap; CustomMap = value.exec(generatorWrapper);) {\n        if (!(CustomMap[1].toLowerCase() in allowedCssFunctions)) {\n          return null;\n        }\n      }\n    }\n    return generatorWrapper;\n  };\n  function getPrototypeDescriptor(generatorWrapper, value) {\n    generatorWrapper = globalScope[generatorWrapper];\n    if (generatorWrapper && generatorWrapper.prototype) {\n      return (value = Object.getOwnPropertyDescriptor(generatorWrapper.prototype, value)) && value.get || null;\n    } else {\n      return null;\n    }\n  }\n  function getStyleDescriptor(generatorWrapper) {\n    var value = globalScope.CSSStyleDeclaration;\n    return value && value.prototype &&"