"Builder(), findEntry));\n      sendAdRequest(value);\n      generatorWrapper.isObjectOrFunction = true;\n    }\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.applyArrayOrObjectTransformation = function (generatorWrapper) {\n    var value = generatorWrapper.onFulfilled(generatorWrapper);\n    if (value) {\n      value = value.volume;\n      generatorWrapper.sliceArguments = isValidOpacity(value) && value > 0;\n    }\n    updateAdPlaybackData(generatorWrapper, 0);\n    return getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.filterElements = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return this.getFromGlobalScope(generatorWrapper, value, CustomMap);\n  };\n  setTimeoutWrapper.getFromGlobalScope = function (generatorWrapper, value, CustomMap) {\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.getTransformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"firstquartile\", 1);\n  };\n  setTimeoutWrapper.createTransformation = function (generatorWrapper) {\n    generatorWrapper.toArray = true;\n    return trackAdEventByType(generatorWrapper, \"midpoint\", 2);\n  };\n  setTimeoutWrapper.float64Transformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"thirdquartile\", 3);\n  };\n  setTimeoutWrapper.generateTransformationFunction = function (generatorWrapper) {\n    var value = trackAdEventByType(generatorWrapper, \"complete\", 4);\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationFallback = function (generatorWrapper) {\n    generatorWrapper.createObjectPolyfill = 3;\n    return getAdImpressionData(generatorWrapper, \"error\", isAdPlayingOrMuted());\n  };\n  var trackAdEventByType = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    updateAdPlaybackData(generatorWrapper, CustomMap);\n    if (CustomMap != 4) {\n      ensureArraySize(generatorWrapper.handleThenable, CustomMap, generatorWrapper.base64AlphabetIndex);\n    }\n    return getAdImpressionData(generatorWrapper, value, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.transformElement = function (generatorWrapper, value, CustomMap) {\n    value = isAdPlayingOrMuted();\n    if (!(generatorWrapper.createObjectPolyfill != 2 || value)) {\n      generatorWrapper.getAdManager().settlePromise = accumulatePosition();\n    }\n    processSamples(adRequestManager, [generatorWrapper], !value);\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      generatorWrapper.createObjectPolyfill = 1;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, value);\n  };\n  setTimeoutWrapper.applyBooleanTransformation = function (generatorWrapper, value) {\n    value = this.filterElements(generatorWrapper, value || {}, \"skip\");\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationInstance = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, true);\n    return this.filterElements(generatorWrapper, value || {}, \"fullscreen\");\n  };\n  setTimeoutWrapper.cleanupSymbol = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, false);\n    return this.filterElements(generatorWrapper, value || {}, \"exitfullscreen\");\n  };\n  setTimeoutWrapper.frozenArray = function (generatorWrapper, value, CustomMap) {\n    value = generatorWrapper.getAdManager();\n    value.totalAdBufferingTime = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill != 1);\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    if (generatorWrapper.createObjectPolyfill == 1) {\n      generatorWrapper.createObjectPolyfill = 2;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.applyStringOrNumberTransformation = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return generatorWrapper.tasks();\n  };\n  setTimeoutWrapper.setRawBitFlags = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    this.TransformArguments(generatorWrapper);\n    setAdProcessorState(generatorWrapper);\n    return generatorWrapper.tasks();\n  };\n  var initializeAdSdk = function (generatorWrapper) {\n    initializeErrorHandling(function () {\n      var value = getAdSdkInfo();\n      if (generatorWrapper.tasks != null) {\n        value.sdk = generatorWrapper.tasks;\n      }\n      var CustomMap = getSingletonInstance(AdInitializationState);\n      if (CustomMap.entryIdCounter != null) {\n        value.adVerificationMeasurementSystem = CustomMap.entryIdCounter.getAdName();\n      }\n      return value;\n    });\n  };\n  var createAdElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = findAdContainerByNb(globalAdContainersManager, CustomMap);\n    if (iterateEntries !== null && iterateEntries.constructReflect !== value) {\n      generatorWrapper.handleAsync(iterateEntries);\n      iterateEntries = null;\n    }\n    if (!iterateEntries) {\n      value = generatorWrapper.isDone(CustomMap, accumulatePosition(), false, value);\n      if (globalAdContainersManager.tasks.length == 0) {\n        getAdEnvironment().setTimeoutWrapper = 79463069;\n      }\n      addBatchAdContainers([value]);\n      iterateEntries = value;\n      iterateEntries.handleAsync = getAdReportingMode(generatorWrapper);\n      if (findEntry) {\n        iterateEntries.includesString = findEntry;\n      }\n    }\n    return iterateEntries;\n  };\n  AdEventReporter.prototype.logError = function () {};\n  var validateAdProperties = function (generatorWrapper, value) {\n    value.dispatchUnhandledRejection = 0;\n    for (var CustomMap in AdEventTypes) if (generatorWrapper[CustomMap] == null) {\n      value.dispatchUnhandledRejection |= AdEventTypes[CustomMap];\n    }\n    convertAdPropertiesToMillis(generatorWrapper, \"currentTime\");\n    convertAdPropertiesToMillis(generatorWrapper, \"duration\");\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.undefinedVariable2 = function () {};\n  setTimeoutWrapper.TransformArguments = function () {};\n  setTimeoutWrapper.normalizeNumber = function () {};\n  setTimeoutWrapper.parseNullableBoolean = function () {};\n  setTimeoutWrapper.customProperty1 = function () {};\n  setTimeoutWrapper.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      return new StrategyFactory(this.entryIdCounter);\n    }\n  };\n  setTimeoutWrapper.generateSymbol = function () {\n    return new AdDataParser();\n  };\n  var convertAdPropertiesToMillis = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper[value];\n    if (undefined !== CustomMap && CustomMap > 0) {\n      generatorWrapper[value] = Math.floorRectangle(1000 * CustomMap);\n    }\n  };\n  var getAdSdkInfo = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = {};\n    var CustomMap = {};\n    var findEntry = {};\n    return Object.assign({}, (value.sv = \"962\", value), sdkVersion !== null && (CustomMap.getIterator = sdkVersion, CustomMap), (findEntry[\"if\"] = generatorWrapper.setTimeoutWrapper ? \"1\" : \"0\", findEntry.nas = String(globalAdContainersManager.entryIdCounter.length), findEntry));\n  };\n  var AudioAudibleEvent = function (generatorWrapper) {\n    yearResetter.call(this, \"audio_audible\", generatorWrapper);\n  };\n  inheritPrototype(AudioAudibleEvent, yearResetter);\n  AudioAudibleEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.isIos() == 4;\n  };\n  var AudioMeasurableEvent = function (generatorWrapper) {\n    zoneResetter.call(this, \"audio_measurable\", generatorWrapper);\n  };\n  inheritPrototype(AudioMeasurableEvent, zoneResetter);\n  AudioMeasurableEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isIos();\n    return generatorWrapper == 3 || generatorWrapper == 4;\n  };\n  var AudioEventProcessor = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(AudioEventProcessor, MeasurementStrategy);\n  AudioEventProcessor.prototype.tasks = function () {\n    return new AudioMeasurableEvent(this.entryIdCounter);\n  };\n  AudioEventProcessor.prototype.setTimeoutWrapper = function () {\n    return [new AudioAudibleEvent(this.entryIdCounter)];\n  };\n  var AdEventValidator = function () {};\n  inheritPrototype(AdEventValidator, emptyFunction);\n  AdEventValidator.prototype.entryIdCounter = function (generatorWrapper) {\n    if (generatorWrapper && (generatorWrapper.iterateEntries === 28 && (generatorWrapper = Object.assign({}, generatorWrapper, {\n      adVerificationAdSystem: 3\n    })), generatorWrapper.filterAndLinkAdContainers === 4 || generatorWrapper.filterAndLinkAdContainers === 5)) {\n      generatorWrapper = Object.assign({}, generatorWrapper, {\n        filterAndLinkAdContainers: 3\n      });\n    }\n    var value = new nullResetter();\n    value.entryIdCounter = processResources(generatorWrapper, extendedAdDataMapping);\n    value.tasks = processResources(generatorWrapper, additionalDataMapping);\n    return value;\n  };\n  var AdEventReporter = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  AdEventReporter.prototype.report = function (generatorWrapper, value) {\n    var CustomMap = this.entryIdCounter(value);\n    if (typeof CustomMap === \"function\") {\n      var findEntry = {};\n      var iterateEntries = {};\n      findEntry = Object.assign({}, sdkVersion !== null && (findEntry.getIterator = sdkVersion, findEntry), (iterateEntries.sv = \"962\", iterateEntries.cb = sdkType, iterateEntries.iterateEntries = getAdEventTypeCode(generatorWrapper), iterateEntries));\n      iterateEntries = getAdImpressionData(value, generatorWrapper, isAdPlayingOrMuted());\n      extendObject(findEntry, iterateEntries);\n      value.updateFlags[generatorWrapper] = iterateEntries;\n      if (value.generatorYield() == 2) {\n        findEntry = buildAdRequestParams(findEntry).join(\"&\");\n      } else {\n        findEntry = value.emptyArray.entryIdCounter(findEntry).entryIdCounter;\n      }\n      try {\n        CustomMap(value.constructReflect, findEntry, generatorWrapper);\n        return 0;\n      } catch (createCircularNode) {\n        return 2;\n      }\n    } else {\n      return 1;\n    }\n  };\n  var getAdEventTypeCode = function (generatorWrapper) {\n    var value = isCustomMetricViewable(generatorWrapper) ? \"custom_metric_viewable\" : generatorWrapper;\n    generatorWrapper = findKeyInObject(function (CustomMap) {\n      return CustomMap == value;\n    });\n    return ip[generatorWrapper];\n  };\n  AdEventReporter.prototype.entryIdCounter = function () {\n    return getFromGlobalScope(this.tasks);\n  };\n  var ConditionalAdEventReporter = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n  };\n  inheritPrototype(ConditionalAdEventReporter, AdEventReporter);\n  ConditionalAdEventReporter.prototype.entryIdCounter = function (generatorWrapper) {\n    if (!generatorWrapper.includesString) {\n      return AdEventReporter.prototype.entryIdCounter.call(this, generatorWrapper);\n    }\n    if (this.setTimeoutWrapper[generatorWrapper.includesString]) {\n      return function () {};\n    }\n    logError(393, Error());\n    return null;\n  };\n  var AdManager = function () {\n    AdEventReporter.call(this);\n    this.dispatchUnhandledRejection = undefined;\n    this.handleThenable = null;\n    this.executeCallbacks = false;\n    this.createDeferred = {};\n    this.resolvePromise = 0;\n    this.onFulfilled = \"ACTIVE_VIEW_TRAFFIC_TYPE_UNSPECIFIED\";\n  };\n  inheritPrototype(AdManager, AdEventReporter);\n  AdManager.prototype.settlePromise = function (generatorWrapper, value) {\n    var CustomMap = this;\n    var findEntry = getSingletonInstance(AdInitializationState);\n    if (findEntry.entryIdCounter != null) {\n      switch (findEntry.entryIdCounter.getAdName()) {\n        case \"nis\":\n          var iterateEntries = createAdForNis(this, generatorWrapper, value);\n          break;\n        case \"gsv\":\n          iterateEntries = createAdForGsv(this, generatorWrapper, value);\n          break;\n        case \"exc\":\n          iterateEntries = createAdForExc(this, generatorWrapper);\n      }\n    }\n    if (!iterateEntries) {\n      if (value.opt_overlayAdElement) {\n        iterateEntries = undefined;\n      } else if (value.opt_adElement) {\n        iterateEntries = createAdElement(this, generatorWrapper, value.opt_adElement, value.opt_osdId);\n      }\n    }\n    if (iterateEntries && iterateEntries.generatorYield() == 1) {\n      if (iterateEntries.onFulfilled == noopFunction) {\n        iterateEntries.onFulfilled = function (createCircularNode) {\n          return CustomMap.normalizeNumber(createCircularNode);\n        };\n      }\n      configureTrackingEvents(this, iterateEntries, value);\n    }\n    return iterateEntries;\n  };\n  var configureTrackingEvents = function (generatorWrapper, value, CustomMap) {\n    CustomMap = CustomMap.opt_configurable_tracking_events;\n    if (generatorWrapper.entryIdCounter != null && Array.isArray(CustomMap)) {\n      processAdTrackingInfo(generatorWrapper, CustomMap, value);\n    }\n  };\n  AdManager.prototype.normalizeNumber = function (generatorWrapper) {\n    generatorWrapper.tasks = 0;\n    generatorWrapper.tryCall = 0;\n    if (generatorWrapper.handleAsync == \"h\" || generatorWrapper.handleAsync == \"n\") {\n      var value;\n      getAdEnvironment();\n      if (generatorWrapper.includesString && checkAdOverlay(this)) {\n        var CustomMap = this.createDeferred[generatorWrapper.includesString];\n        if (CustomMap) {\n          value = function (iterateEntries) {\n            return getOverlayAdMetadata(CustomMap, iterateEntries);\n          };\n        } else if (CustomMap !== null) {\n          logError(379, Error());\n        }\n      } else {\n        value = getFromGlobalScope(\"ima.common.getVideoMetadata\");\n      }\n      if (typeof value === \"function\") {\n        try {\n          var findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else if (generatorWrapper.handleAsync == \"b\") {\n      value = getFromGlobalScope(\"ytads.bulleit.getVideoMetadata\");\n      if (typeof value === \"function\") {\n        try {\n          findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else if (generatorWrapper.handleAsync == \"ml\") {\n      value = getFromGlobalScope(\"ima.common.getVideoMetadata\");\n      if (typeof value === \"function\") {\n        try {\n          findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else {\n      generatorWrapper.tasks |= 1;\n    }\n    if (!generatorWrapper.tasks) {\n      if (undefined === findEntry) {\n        generatorWrapper.tasks |= 8;\n      } else if (findEntry === null) {\n        generatorWrapper.tasks |= 16;\n      } else if (isEmptyObject(findEntry)) {\n        generatorWrapper.tasks |= 32;\n      } else if (findEntry.errorCode != null) {\n        generatorWrapper.tryCall = findEntry.errorCode;\n        generatorWrapper.tasks |= 64;\n      }\n    }\n    if (findEntry == null) {\n      findEntry = {};\n    }\n    validateAdProperties(findEntry, generatorWrapper);\n    if (isValidOpacity(findEntry.volume) && isValidOpacity(this.dispatchUnhandledRejection)) {\n      findEntry.volume *= this.dispatchUnhandledRejection;\n    }\n    return findEntry;\n  };\n  var createAdForGsv = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findAdContainerByNa(globalAdContainersManager, value);\n    if (!findEntry) {\n      findEntry = CustomMap.opt_nativeTime || -1;\n      findEntry = Et(generatorWrapper, value, getAdReportingMode(generatorWrapper), findEntry);\n      if (CustomMap.opt_osdId) {\n        findEntry.includesString = CustomMap.opt_osdId;\n      }\n    }\n    return findEntry;\n  };\n  var createAdForNis = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findAdContainerByNa(globalAdContainersManager, value);\n    if (!findEntry) {\n      findEntry = Et(generatorWrapper, value, \"n\", CustomMap.opt_nativeTime || -1);\n    }\n    return findEntry;\n  };\n  var createAdForExc = function (generatorWrapper, value) {\n    var CustomMap = findAdContainerByNa(globalAdContainersManager, value);\n    if (!CustomMap) {\n      CustomMap = Et(generatorWrapper, value, \"h\", -1);\n    }\n    return CustomMap;\n  };\n  AdManager.prototype.customProperty1 = function () {\n    if (checkAdOverlay(this)) {\n      return new ConditionalAdEventReporter(\"ima.common.triggerExternalActivityEvent\", this.createDeferred);\n    }\n    var generatorWrapper = getExternalActivityEventName(this);\n    if (generatorWrapper != null) {\n      return new AdEventReporter(generatorWrapper);\n    } else {\n      return null;\n    }\n  };\n  var getExternalActivityEventName = function (generatorWrapper) {\n    getAdEnvironment();\n    switch (getAdReportingMode(generatorWrapper)) {\n      case \"b\":\n        return \"ytads.bulleit.triggerExternalActivityEvent\";\n      case \"n\":\n        return \"ima.bridge.triggerExternalActivityEvent\";\n      case \"h\":\n      case \"m\":\n      case \"ml\":\n        return \"ima.common.triggerExternalActivityEvent\";\n    }\n    return null;\n  };\n  AdManager.prototype.undefinedVariable2 = function (generatorWrapper) {\n    if (!generatorWrapper.entryIdCounter && generatorWrapper.uniqueIdCounter && reportAdEvent(this, generatorWrapper, \"overlay_unmeasurable_impression\")) {\n      generatorWrapper.entryIdCounter = true;\n    }\n  };\n  AdManager.prototype.TransformArguments = function (generatorWrapper) {\n    if (generatorWrapper.cloneOrTransform) {\n      if (generatorWrapper.removeUniqueId()) {\n        reportAdEvent(this, generatorWrapper, \"overlay_viewable_end_of_session_impression\");\n      } else {\n        reportAdEvent(this, generatorWrapper, \"overlay_unviewable_impression\");\n      }\n      generatorWrapper.cloneOrTransform = false;\n    }\n  };\n  var processAdEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    var iterateEntries = {};\n    extendObject(iterateEntries, {\n      opt_adElement: undefined,\n      opt_fullscreen: undefined\n    }, CustomMap);\n    var createCircularNode = generatorWrapper.settlePromise(value, CustomMap);\n    if (createCircularNode) {\n      CustomMap = createCircularNode.emptyArray;\n    } else {\n      CustomMap = generatorWrapper.generateSymbol();\n    }\n    if (iterateEntries.opt_bounds) {\n      return CustomMap.entryIdCounter(generateErrorObject(\"ol\", findEntry));\n    }\n    if (undefined !== findEntry) {\n      if (undefined !== getMetricType(findEntry)) {\n        if (isBooleanFlag) {\n          generatorWrapper = generateErrorObject(\"ue\", findEntry);\n        } else {\n          initializeAdReporting(generatorWrapper);\n          if (emptyString == \"i\") {\n            generatorWrapper = generateErrorObject(\"i\", findEntry);\n            generatorWrapper[\"if\"] = 0;\n          } else if (value = generatorWrapper.settlePromise(value, iterateEntries)) {\n            value: {\n              if (emptyString == \"i\") {\n                value.uniqueIdCounter = true;\n                generatorWrapper.parseNullableBoolean(value);\n              }\n              createCircularNode = iterateEntries.opt_fullscreen;\n              if (undefined !== createCircularNode) {\n                updateVisibilityState(value, !!createCircularNode);\n              }\n              var entryIdCounter;\n              if (createCircularNode = !getAdEnvironmentInstance().tasks && !isTVDevice()) {\n                GetEnvironment();\n                createCircularNode = getVisibilityStateCode(document) === 0;\n              }\n              if (entryIdCounter = createCircularNode) {\n                switch (value.generatorYield()) {\n                  case 1:\n                    reportAdStart(value, \"pv\");\n                    break;\n                  case 2:\n                    generatorWrapper.undefinedVariable2(value);\n                }\n                finalizeAdReporting(\"pv\");\n              }\n              createCircularNode = findEntry.toLowerCase();\n              if (entryIdCounter = !entryIdCounter) {\n                CustomMap: {\n                  if (getAdState(getAdEnvironment().AdEnvironmentConfig, \"ssmol\") && (entryIdCounter = generatorWrapper.setTimeoutWrapper, createCircularNode === \"loaded\")) {\n                    break CustomMap;\n                  }\n                  entryIdCounter = containsElement(fp, createCircularNode);\n                }\n              }\n              if (entryIdCounter && value.createObjectPolyfill == 0) {\n                if (emptyString != \"i\") {\n                  adRequestManager.done = false;\n                }\n                if (undefined !== iterateEntries) {\n                  entryIdCounter = iterateEntries.opt_nativeTime;\n                } else {\n                  entryIdCounter = undefined;\n                }\n                adEventTimestamp = entryIdCounter = typeof entryIdCounter === \"number\" ? entryIdCounter : accumulatePosition();\n                value.findElementIndex = true;\n                var key = isAdPlayingOrMuted();\n                value.createObjectPolyfill = 1;\n                value.keyArray = {};\n                value.keyArray.startTimer = false;\n                value.keyArray.firstquartile = false;\n                value.keyArray.midpoint = false;\n                value.keyArray.thirdquartile = false;\n                value.keyArray.complete = false;\n                value.keyArray.resume = false;\n                value.keyArray.pause = false;\n                value.keyArray.skip = false;\n                value.keyArray.mute = false;\n                value.keyArray.unmute = false;\n                value.keyArray.viewable_impression = false;\n                value.keyArray.measurable_impression = false;\n                value.keyArray.fully_viewable_audible_half_duration_impression = false;\n                value.keyArray.fullscreen = false;\n                value.keyArray.exitfullscreen = false;\n                value.customProperty2 = 0;\n                if (!key) {\n                  value.getAdManager().settlePromise = entryIdCounter;\n                }\n                processSamples(adRequestManager, [value], !key);\n              }\n              if (entryIdCounter = value.isInternetExplorer[createCircularNode]) {\n                value.hasOwnPropertySafe.reportEvent(entryIdCounter);\n              }\n              if (!getAdState(getAdEnvironment().AdEnvironmentConfig, \"fmd\")) {\n                if (containsElement(gp, createCircularNode) && value.partialFunctionApplication) {\n                  value.partialFunctionApplication.tasks(value, null);\n                }\n              }\n              switch (value.generatorYield()) {\n                case 1:\n                  var value = isCustomMetricViewable(createCircularNode) ? generatorWrapper.handleThenable.custom_metric_viewable : generatorWrapper.handleThenable[createCircularNode];\n                  break;\n                case 2:\n                  value = generatorWrapper.updateMaxSize[createCircularNode];\n              }\n              if (value && (findEntry = value.call(generatorWrapper, value, iterateEntries, findEntry), getAdState(getAdEnvironment().AdEnvironmentConfig, \"fmd\") && containsElement(gp, createCircularNode) && value.partialFunctionApplication && value.partialFunctionApplication.tasks(value, null), undefined !== findEntry)) {\n                iterateEntries = generateErrorObject(undefined, createCircularNode);\n                extendObject(iterateEntries, findEntry);\n                findEntry = iterateEntries;\n                break value;\n              }\n              findEntry = undefined;\n            }\n            if (value.createObjectPolyfill == 3) {\n              generatorWrapper.handleAsync(value);\n            }\n            generatorWrapper = findEntry;\n          } else {\n            generatorWrapper = generateErrorObject(\"nf\", findEntry);\n          }\n        }\n      } else {\n        generatorWrapper = undefined;\n      }\n    } else if (isBooleanFlag) {\n      generatorWrapper = generateErrorObject(\"ue\");\n    } else if (createCircularNode) {\n      generatorWrapper = generateErrorObject();\n      extendObject(generatorWrapper, generateAdRequestData(createCircularNode, true, false, false));\n    } else {\n      generatorWrapper = generateErrorObject(\"nf\");\n    }\n    if (typeof generatorWrapper === \"string\") {\n      return CustomMap.entryIdCounter();\n    } else {\n      return CustomMap.entryIdCounter(generatorWrapper);\n    }\n  };\n  AdManager.prototype.logError = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && generatorWrapper.generatorYield() == 1) {\n      processAdEvent(this, generatorWrapper);\n    }\n  };\n  AdManager.prototype.parseNullableBoolean = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && generatorWrapper.generatorYield() == 1) {\n      processAdEvent(this, generatorWrapper);\n    }\n  };\n  var processAdEvent = function (generatorWrapper, value) {\n    var CustomMap;\n    if (value.includesString && checkAdOverlay(generatorWrapper)) {\n      var findEntry = generatorWrapper.createDeferred[value.includesString];\n      if (findEntry) {\n        CustomMap = function (createCircularNode, entryIdCounter) {\n          sendViewabilityMeasurement(findEntry, createCircularNode, entryIdCounter);\n        };\n      } else if (findEntry !== null) {\n        logError(379, Error());\n      }\n    } else {\n      CustomMap = getFromGlobalScope(\"ima.common.triggerViewabilityMeasurementUpdate\");\n    }\n    if (typeof CustomMap === \"function\") {\n      var iterateEntries = generateAdPlaybackData(value);\n      iterateEntries.nativeVolume = generatorWrapper.dispatchUnhandledRejection;\n      CustomMap(value.constructReflect, iterateEntries);\n    }\n  };\n  var checkAdOverlay = function (generatorWrapper) {\n    getAdEnvironment();\n    if (getAdReportingMode(generatorWrapper) != \"h\" && getAdReportingMode(generatorWrapper) != \"m\") {\n      return false;\n    } else {\n      return generatorWrapper.resolvePromise != 0;\n    }\n  };\n  AdManager.prototype.isDone = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (GetFlags()) {\n      var iterateEntries = getAdState(getAdEnvironment().AdEnvironmentConfig, \"mm\");\n      var createCircularNode = {};\n      if ((iterateEntries = (createCircularNode[AdMediaTypes.transformAndAddElement] = \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\", createCircularNode[AdMediaTypes.VIDEO] = \"ACTIVE_VIEW_TRAFFIC_TYPE_VIDEO\", createCircularNode)[iterateEntries]) && iterateEntries) {\n        this.onFulfilled = iterateEntries;\n      }\n      if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_UNSPECIFIED\") {\n        logError(1044, Error());\n      }\n    }\n    generatorWrapper = AdEventReporter.prototype.isDone.call(this, generatorWrapper, value, CustomMap, findEntry);\n    if (this.executeCallbacks) {\n      value = this.handleThenable;\n      if (generatorWrapper.createDeferred == null) {\n        generatorWrapper.createDeferred = new PerformanceData();\n      }\n      value.entryIdCounter[generatorWrapper.constructReflect] = generatorWrapper.createDeferred;\n      generatorWrapper.createDeferred.handleAsync = currentDate;\n    }\n    return generatorWrapper;\n  };\n  AdManager.prototype.handleAsync = function (generatorWrapper) {\n    if (generatorWrapper && generatorWrapper.generatorYield() == 1 && this.executeCallbacks) {\n      delete this.handleThenable.entryIdCounter[generatorWrapper.constructReflect];\n    }\n    return AdEventReporter.prototype.handleAsync.call(this, generatorWrapper);\n  };\n  AdManager.prototype.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\") {\n        return new AudioEventProcessor(this.entryIdCounter);\n      } else {\n        return new StrategyFactory(this.entryIdCounter);\n      }\n    }\n  };\n  AdManager.prototype.generateSymbol = function () {\n    if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\") {\n      return new AdEventValidator();\n    } else {\n      return new AdDataParser();\n    }\n  };\n  var formatAdEventResult = function (generatorWrapper) {\n    var value = {};\n    value.viewability = generatorWrapper.entryIdCounter;\n    value.googleViewability = generatorWrapper.tasks;\n    return value;\n  };\n  var sendVastAdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    generatorWrapper = processAdEvent(getSingletonInstance(AdManager), value, CustomMap, generatorWrapper);\n    return formatAdEventResult(generatorWrapper);\n  };\n  var publicSendVastEvent = To(193, sendVastAdEvent, undefined, getAdSdkInfo);\n  defineNamespace(\"Goog_AdSense_Lidar_sendVastEvent\", publicSendVastEvent);\n  var getViewabilityAdEvent = To(194, function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    generatorWrapper = processAdEvent(getSingletonInstance(AdManager), generatorWrapper, value);\n    return formatAdEventResult(generatorWrapper);\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getViewability\", getViewabilityAdEvent);\n  var getUrlSignalsArray = To(195, function () {\n    return getSerializedAdFrames();\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getUrlSignalsArray\", getUrlSignalsArray);\n  var getUrlSignalsList = To(196, function () {\n    return JSON.stringify(getSerializedAdFrames());\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getUrlSignalsList\", getUrlSignalsList);\n  if (globalScope.console && typeof globalScope.console.log === \"function\") {\n    bindOrWrapFunction(globalScope.console.log, globalScope.console);\n  }\n  var getFrameElements = function (generatorWrapper) {\n    for (var value = [], CustomMap = generatorWrapper = getWindowForDocument(generatorWrapper.ownerDocument); CustomMap != generatorWrapper.top; CustomMap = CustomMap.parent) {\n      if (CustomMap.frameElement) {\n        value.push(CustomMap.frameElement);\n      } else {\n        break;\n      }\n    }\n    return value;\n  };\n  var AdEvent = function (generatorWrapper, value) {\n    this.type = generatorWrapper;\n    this.currentTarget = this.target = value;\n    this.defaultPrevented = this.tasks = false;\n  };\n  AdEvent.prototype.stopPropagation = function () {\n    this.tasks = true;\n  };\n  AdEvent.prototype.preventDefault = function () {\n    this.defaultPrevented = true;\n  };\n  var isPassiveEventSupported = function () {\n    if (!globalScope.addEventListener || !Object.defineProperty) {\n      return false;\n    }\n    var generatorWrapper = false;\n    var value = Object.defineProperty({}, \"passive\", {\n      get() {\n        generatorWrapper = true;\n      }\n    });\n    try {\n      var CustomMap = function () {};\n      globalScope.addEventListener(\"test\", CustomMap, value);\n      globalScope.removeEventListener(\"test\", CustomMap, value);\n    } catch (findEntry) {}\n    return generatorWrapper;\n  }();\n  var TouchEventProcessor = function (generatorWrapper, value) {\n    AdEvent.call(this, generatorWrapper ? generatorWrapper.type : \"\");\n    this.relatedTarget = this.currentTarget = this.target = null;\n    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\n    this.key = \"\";\n    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = false;\n    this.state = null;\n    this.pointerId = 0;\n    this.pointerType = \"\";\n    this.entryIdCounter = null;\n    if (generatorWrapper) {\n      this.initialize(generatorWrapper, value);\n    }\n  };\n  inheritPrototype(TouchEventProcessor, AdEvent);\n  var pointerTypeMap = {\n    2: \"touch\",\n    3: \"pen\",\n    4: \"mouse\"\n  };\n  TouchEventProcessor.prototype.initialize = function (generatorWrapper, value) {\n    var CustomMap = this.type = generatorWrapper.type;\n    var findEntry = generatorWrapper.changedTouches && generatorWrapper.changedTouches.length ? generatorWrapper.changedTouches[0] : null;\n    this.target = generatorWrapper.target || generatorWrapper.srcElement;\n    this.currentTarget = value;\n    if (value = generatorWrapper.relatedTarget) {\n      if (isGecko) {\n        if (!tryNoopFunction(value, \"nodeName\")) {\n          value = null;\n        }\n      }\n    } else if (CustomMap == \"mouseover\") {\n      value = generatorWrapper.fromElement;\n    } else if (CustomMap == \"mouseout\") {\n      value = generatorWrapper.toElement;\n    }\n    this.relatedTarget = value;\n    if (findEntry) {\n      if (undefined !== findEntry.clientX) {\n        this.clientX = findEntry.clientX;\n      } else {\n        this.clientX = findEntry.pageX;\n      }\n      if (undefined !== findEntry.clientY) {\n        this.clientY = findEntry.clientY;\n      } else {\n        this.clientY = findEntry.pageY;\n      }\n      this.screenX = findEntry.screenX || 0;\n      this.screenY = findEntry.screenY || 0;\n    } else {\n      if (undefined !== generatorWrapper.clientX) {\n        this.clientX = generatorWrapper.clientX;\n      } else {\n        this.clientX = generatorWrapper.pageX;\n      }\n      if (undefined !== generatorWrapper.clientY) {\n        this.clientY = generatorWrapper.clientY;\n      } else {\n        this.clientY = generatorWrapper.pageY;\n      }\n      this.screenX = generatorWrapper.screenX || 0;\n      this.screenY = generatorWrapper.screenY || 0;\n    }\n    this.button = generatorWrapper.button;\n    this.key = generatorWrapper.key || \"\";\n    this.ctrlKey = generatorWrapper.ctrlKey;\n    this.altKey = generatorWrapper.altKey;\n    this.shiftKey = generatorWrapper.shiftKey;\n    this.metaKey = generatorWrapper.metaKey;\n    this.pointerId = generatorWrapper.pointerId || 0;\n    if (typeof generatorWrapper.pointerType === \"string\") {\n      this.pointerType = generatorWrapper.pointerType;\n    } else {\n      this.pointerType = pointerTypeMap[generatorWrapper.pointerType] || \"\";\n    }\n    this.state = generatorWrapper.state;\n    this.entryIdCounter = generatorWrapper;\n    if (generatorWrapper.defaultPrevented) {\n      TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    }\n  };\n  TouchEventProcessor.prototype.stopPropagation = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.stopPropagation.call(this);\n    if (this.entryIdCounter.stopPropagation) {\n      this.entryIdCounter.stopPropagation();\n    } else {\n      this.entryIdCounter.cancelBubble = true;\n    }\n  };\n  TouchEventProcessor.prototype.preventDefault = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    var generatorWrapper = this.entryIdCounter;\n    if (generatorWrapper.preventDefault) {\n      generatorWrapper.preventDefault();\n    } else {\n      generatorWrapper.returnValue = false;\n    }\n  };\n  var isListenableKey = \"closure_listenable_\" + (1000000 * Math.random() | 0);\n  var isListenable = function (generatorWrapper) {\n    return !(!generatorWrapper || !generatorWrapper[isListenableKey]);\n  };\n  var listenerUniqueId = 0;\n  var Listener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    this.listener = generatorWrapper;\n    this.proxy = null;\n    this.src = value;\n    this.type = CustomMap;\n    this.capture = !!findEntry;\n    this.initializeBase64Encoding = iterateEntries;\n    this.key = ++listenerUniqueId;\n    this.tryNoopFunction = this.browserVersion = false;\n  };\n  var clearListener = function (generatorWrapper) {\n    generatorWrapper.tryNoopFunction = true;\n    generatorWrapper.listener = null;\n    generatorWrapper.proxy = null;\n    generatorWrapper.src = null;\n    generatorWrapper.initializeBase64Encoding = null;\n  };\n  var EventTarget = function (generatorWrapper) {\n    this.src = generatorWrapper;\n    this.entryIdCounter = {};\n    this.tasks = 0;\n  };\n  EventTarget.prototype.addParameter = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = generatorWrapper.toString();\n    generatorWrapper = this.entryIdCounter[createCircularNode];\n    if (!generatorWrapper) {\n      generatorWrapper = this.entryIdCounter[createCircularNode] = [];\n      this.tasks++;\n    }\n    var entryIdCounter = Bu(generatorWrapper, value, findEntry, iterateEntries);\n    if (-1 < entryIdCounter) {\n      value = generatorWrapper[entryIdCounter];\n      if (!CustomMap) {\n        value.browserVersion = false;\n      }\n    } else {\n      value = new Listener(value, this.src, createCircularNode, !!findEntry, iterateEntries);\n      value.browserVersion = CustomMap;\n      generatorWrapper.push(value);\n    }\n    return value;\n  };\n  EventTarget.prototype.removeElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.toString();\n    if (!(generatorWrapper in this.entryIdCounter)) {\n      return false;\n    }\n    var iterateEntries = this.entryIdCounter[generatorWrapper];\n    value = Bu(iterateEntries, value, CustomMap, findEntry);\n    if (-1 < value) {\n      clearListener(iterateEntries[value]);\n      removeElementAtIndex(iterateEntries, value);\n      if (iterateEntries.length == 0) {\n        delete this.entryIdCounter[generatorWrapper];\n        this.tasks--;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var Cu = function (generatorWrapper, value) {\n    var CustomMap = value.type;\n    if (CustomMap in generatorWrapper.entryIdCounter && removeElement(generatorWrapper.entryIdCounter[CustomMap], value)) {\n      clearListener(value);\n      if (generatorWrapper.entryIdCounter[CustomMap].length == 0) {\n        delete generatorWrapper.entryIdCounter[CustomMap];\n        generatorWrapper.tasks--;\n      }\n    }\n  };\n  EventTarget.prototype.findLastElementIndex = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = this.entryIdCounter[generatorWrapper.toString()];\n    var iterateEntries = -1;\n    if (generatorWrapper) {\n      iterateEntries = Bu(generatorWrapper, value, CustomMap, findEntry);\n    }\n    if (-1 < iterateEntries) {\n      return generatorWrapper[iterateEntries];\n    } else {\n      return null;\n    }\n  };\n  var Bu = function (generatorWrapper, value, CustomMap, findEntry) {\n    for (var iterateEntries = 0; iterateEntries < generatorWrapper.length; ++iterateEntries) {\n      var createCircularNode = generatorWrapper[iterateEntries];\n      if (!createCircularNode.tryNoopFunction && createCircularNode.listener == value && createCircularNode.capture == !!CustomMap && createCircularNode.initializeBase64Encoding == findEntry) {\n        return iterateEntries;\n      }\n    }\n    return -1;\n  };\n  var Du = \"closure_lm_\" + (1000000 * Math.random() | 0);\n  var Eu = {};\n  var Fu = 0;\n  var addPageHideListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (findEntry && findEntry.once) {\n      return Gu(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    }\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        addPageHideListener(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.window(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, false, findEntry, iterateEntries);\n    }\n  };\n  var Ju = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!value) {\n      throw Error(\"Invalid event type\");\n    }\n    var entryIdCounter = isObjectOrFunction(iterateEntries) ? !!iterateEntries.capture : !!iterateEntries;\n    var key = Ku(generatorWrapper);\n    if (!key) {\n      generatorWrapper[Du] = key = new EventTarget(generatorWrapper);\n    }\n    CustomMap = key.addParameter(value, CustomMap, findEntry, entryIdCounter, createCircularNode);\n    if (CustomMap.proxy) {\n      return CustomMap;\n    }\n    findEntry = Lu();\n    CustomMap.proxy = findEntry;\n    findEntry.src = generatorWrapper;\n    findEntry.listener = CustomMap;\n    if (generatorWrapper.addEventListener) {\n      if (!isPassiveEventSupported) {\n        iterateEntries = entryIdCounter;\n      }\n      if (undefined === iterateEntries) {\n        iterateEntries = false;\n      }\n      generatorWrapper.addEventListener(value.toString(), findEntry, iterateEntries);\n    } else if (generatorWrapper.attachEvent) {\n      generatorWrapper.attachEvent(Mu(value.toString()), findEntry);\n    } else if (generatorWrapper.addListener && generatorWrapper.removeListener) {\n      generatorWrapper.addListener(findEntry);\n    } else {\n      throw Error(\"addEventListener and attachEvent are unavailable.\");\n    }\n    Fu++;\n    return CustomMap;\n  };\n  var Lu = function () {\n    var generatorWrapper = Nu;\n    var value = function (CustomMap) {\n      return generatorWrapper.call(value.src, value.listener, CustomMap);\n    };\n    return value;\n  };\n  var Gu = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Gu(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.sortArray(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, true, findEntry, iterateEntries);\n    }\n  };\n  var Ou = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Ou(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n "