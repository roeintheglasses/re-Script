"ototype.prototype.getIterator = function () {\n    return this;\n  };\n  var PerformanceData = function () {\n    this.createDeferred = this.entryIdCounter = this.setTimeoutWrapper = this.tasks = this.handleAsync = 0;\n  };\n  var getPerformanceData = function (generatorWrapper) {\n    var value = {};\n    value = (value.ptlt = Date.now() - generatorWrapper.handleAsync, value);\n    var CustomMap = generatorWrapper.tasks;\n    if (CustomMap) {\n      value.pnk = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.setTimeoutWrapper) {\n      value.pnc = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.createDeferred) {\n      value.pnmm = CustomMap;\n    }\n    if (generatorWrapper = generatorWrapper.entryIdCounter) {\n      value.pns = generatorWrapper;\n    }\n    return value;\n  };\n  var AdPlaybackData = function () {\n    AdVisibilityTracker.call(this);\n    this.fullscreen = false;\n    this.volume = undefined;\n    this.setTimeoutWrapper = false;\n    this.mediaTime = -1;\n  };\n  inheritPrototype(AdPlaybackData, AdVisibilityTracker);\n  var isVolumeNonZero = function (generatorWrapper) {\n    return isValidOpacity(generatorWrapper.volume) && generatorWrapper.volume > 0;\n  };\n  var filterAndTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = function () {\n        return true;\n      };\n    } else {\n      findEntry = findEntry;\n    }\n    return function (iterateEntries) {\n      var createCircularNode = iterateEntries[generatorWrapper];\n      if (Array.isArray(createCircularNode) && findEntry(iterateEntries)) {\n        return transformArray(createCircularNode, value, CustomMap);\n      }\n    };\n  };\n  var getPropertyIfCondition = function (generatorWrapper, value) {\n    return function (CustomMap) {\n      if (value(CustomMap)) {\n        return CustomMap[generatorWrapper];\n      } else {\n        return undefined;\n      }\n    };\n  };\n  var checkConditionInArray = function (generatorWrapper) {\n    return function (value) {\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        if (generatorWrapper[CustomMap] === value.iterateEntries || undefined === generatorWrapper[CustomMap] && !value.hasOwnProperty(\"e\")) {\n          return true;\n        }\n      }\n      return false;\n    };\n  };\n  var transformArray = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap || CustomMap) {\n      return filterElements(generatorWrapper, function (findEntry, iterateEntries) {\n        return containsElement(value, iterateEntries);\n      });\n    } else {\n      return mapElements(value, function (findEntry, iterateEntries, createCircularNode) {\n        return generatorWrapper.slice(iterateEntries > 0 ? createCircularNode[iterateEntries - 1] + 1 : 0, findEntry + 1).reduce(function (entryIdCounter, key) {\n          return entryIdCounter + key;\n        }, 0);\n      });\n    }\n  };\n  var defaultConditionChecker = checkConditionInArray([undefined, 1, 2, 3, 4, 8, 16]);\n  var specificConditionChecker = checkConditionInArray([undefined, 4, 8, 16]);\n  var adDataMapping = {\n    sv: \"sv\",\n    getIterator: \"v\",\n    cb: \"cb\",\n    iterateEntries: \"e\",\n    nas: \"nas\",\n    msg: \"msg\",\n    if: \"if\",\n    sdk: \"sdk\",\n    resolveFunction: \"p\",\n    position0: getPropertyIfCondition(\"p0\", specificConditionChecker),\n    p1: getPropertyIfCondition(\"p1\", specificConditionChecker),\n    p2: getPropertyIfCondition(\"p2\", specificConditionChecker),\n    p3: getPropertyIfCondition(\"p3\", specificConditionChecker),\n    AdEvent: \"cp\",\n    tos: \"tos\",\n    mtos: \"mtos\",\n    amtos: \"amtos\",\n    mediaTimeOffset1: filterAndTransform(\"mtos1\", [0, 2, 4], false, specificConditionChecker),\n    mtos2: filterAndTransform(\"mtos2\", [0, 2, 4], false, specificConditionChecker),\n    mtos3: filterAndTransform(\"mtos3\", [0, 2, 4], false, specificConditionChecker),\n    mcvt: \"mcvt\",\n    removeRelatedAdContainers: \"ps\",\n    screenSize: \"scs\",\n    browserSize: \"bs\",\n    vht: \"vht\",\n    mut: \"mut\",\n    generatorWrapper: \"a\",\n    attribute0: getPropertyIfCondition(\"a0\", specificConditionChecker),\n    a1: getPropertyIfCondition(\"a1\", specificConditionChecker),\n    a2: getPropertyIfCondition(\"a2\", specificConditionChecker),\n    a3: getPropertyIfCondition(\"a3\", specificConditionChecker),\n    CustomMetric: \"ft\",\n    deviceFullScreenTime: \"dft\",\n    metricNames: \"at\",\n    deviceAdTime: \"dat\",\n    assignSession: \"as\",\n    vpt: \"vpt\",\n    gmm: \"gmm\",\n    std: \"std\",\n    efpf: \"efpf\",\n    swf: \"swf\",\n    nio: \"nio\",\n    decodeVendor: \"px\",\n    nnutPlaceholder: \"nnut\",\n    videoMergeError: \"vmer\",\n    videoMergeMark: \"vmmk\",\n    videoMergeIEC: \"vmiec\",\n    networkMediaType: \"nmt\",\n    timeCodeMethod: \"tcm\",\n    metricValidators: \"bt\",\n    pixelAspectRatio: \"pst\",\n    isVpaid: \"vpaid\",\n    duration: \"dur\",\n    viewModeTime: \"vmtime\",\n    deviceTotalOffsetScale: \"dtos\",\n    deviceTotalOffsetScaleSum: \"dtoss\",\n    deviceViewportScale: \"dvs\",\n    deviceFullViewportScale: \"dfvs\",\n    deviceViewport: \"dvpt\",\n    fmf: \"fmf\",\n    videoDataStream: \"vds\",\n    screenDimensions: \"is\",\n    image0: \"i0\",\n    i1: \"i1\",\n    i2: \"i2\",\n    i3: \"i3\",\n    browserFeatures: \"ic\",\n    checksum: \"cs\",\n    CustomMap: \"c\",\n    coordinate0: getPropertyIfCondition(\"c0\", specificConditionChecker),\n    c1: getPropertyIfCondition(\"c1\", specificConditionChecker),\n    c2: getPropertyIfCondition(\"c2\", specificConditionChecker),\n    c3: getPropertyIfCondition(\"c3\", specificConditionChecker),\n    isEdge: \"mc\",\n    isGecko: \"nc\",\n    mediaVersion: \"mv\",\n    networkVersion: \"nv\",\n    qmt: getPropertyIfCondition(\"qmtos\", defaultConditionChecker),\n    qualityNetworkChecksum: getPropertyIfCondition(\"qnc\", defaultConditionChecker),\n    qualityMediaVersion: getPropertyIfCondition(\"qmv\", defaultConditionChecker),\n    qualityNetworkVersion: getPropertyIfCondition(\"qnv\", defaultConditionChecker),\n    raf: \"raf\",\n    rafc: \"rafc\",\n    latestTimeElapsed: \"lte\",\n    checksumEntities: \"ces\",\n    totalTimeHeld: \"tth\",\n    femt: \"femt\",\n    femvt: \"femvt\",\n    emc: \"emc\",\n    emuc: \"emuc\",\n    emb: \"emb\",\n    adVerificationMeasurementSystem: \"avms\",\n    nvat: \"nvat\",\n    getTopMostAccessibleWindow: \"qi\",\n    playerSizeMethod: \"psm\",\n    playerSizeValue: \"psv\",\n    playerSizeFullValue: \"psfv\",\n    playerSizeAttribute: \"psa\",\n    pnk: \"pnk\",\n    pnc: \"pnc\",\n    pnmm: \"pnmm\",\n    pns: \"pns\",\n    ptlt: \"ptlt\",\n    pngs: \"pings\",\n    videoElementId: \"veid\",\n    ssb: \"ssb\",\n    subSample0: getPropertyIfCondition(\"ss0\", specificConditionChecker),\n    ss1: getPropertyIfCondition(\"ss1\", specificConditionChecker),\n    ss2: getPropertyIfCondition(\"ss2\", specificConditionChecker),\n    ss3: getPropertyIfCondition(\"ss3\", specificConditionChecker),\n    dc_rfl: \"urlsigs\",\n    obd: \"obd\",\n    omidp: \"omidp\",\n    omidr: \"omidr\",\n    omidv: \"omidv\",\n    omida: \"omida\",\n    omids: \"omids\",\n    omidpv: \"omidpv\",\n    omidam: \"omidam\",\n    omidct: \"omidct\",\n    omidia: \"omidia\",\n    omiddc: \"omiddc\",\n    omidlat: \"omidlat\",\n    omiddit: \"omiddit\",\n    nopd: \"nopd\",\n    ensureQueryIdAdState: \"co\"\n  };\n  var extendedAdDataMapping = Object.assign({}, adDataMapping, {\n    avid: function (generatorWrapper) {\n      return function () {\n        return generatorWrapper;\n      };\n    }(\"audio\"),\n    adVerificationAdSystem: \"avas\",\n    filterAndLinkAdContainers: \"vs\"\n  });\n  var additionalDataMapping = {\n    audioToString: \"atos\",\n    audioValueTransform: filterAndTransform(\"atos\", [2]),\n    defaultAudioVideoSync: \"davs\",\n    defaultAudioFrequencyVideoSync: \"dafvs\",\n    defaultAudioVideo: \"dav\",\n    safeSelector: function (generatorWrapper, value) {\n      return function (CustomMap) {\n        if (undefined === CustomMap[generatorWrapper] && undefined !== value) {\n          return value;\n        } else {\n          return CustomMap[generatorWrapper];\n        }\n      };\n    }(\"ss\", 0),\n    rejectFunction: \"t\"\n  };\n  var nullResetter = function () {\n    this.tasks = this.entryIdCounter = \"\";\n  };\n  var emptyFunction = function () {};\n  var processResources = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined !== generatorWrapper) {\n      if (value != null) {\n        for (var findEntry in value) {\n          var iterateEntries = value[findEntry];\n          if (!(findEntry in Object.prototype)) {\n            if (iterateEntries != null) {\n              if (typeof iterateEntries === \"function\") {\n                CustomMap[findEntry] = iterateEntries(generatorWrapper);\n              } else {\n                CustomMap[findEntry] = generatorWrapper[iterateEntries];\n              }\n            }\n          }\n        }\n      } else {\n        extendObject(CustomMap, generatorWrapper);\n      }\n    }\n    return buildQueryString(addParametersFromObject(new QueryStringBuilder(), CustomMap));\n  };\n  var queryReporter = function () {\n    var generatorWrapper = {};\n    this.tasks = (generatorWrapper.filterAndLinkAdContainers = [1, 0], generatorWrapper.AdError = [0, 1], generatorWrapper.am = [2, 2], generatorWrapper.generatorWrapper = [4, 4], generatorWrapper.createCircularNode = [8, 8], generatorWrapper.bm = [16, 16], generatorWrapper.value = [32, 32], generatorWrapper.avw = [0, 64], generatorWrapper.avs = [64, 0], generatorWrapper.finalizePromise = [256, 256], generatorWrapper.gdr = [0, 512], generatorWrapper.resolveFunction = [0, 1024], generatorWrapper.foundEntry = [0, 2048], generatorWrapper.currentEntry = [0, 4096], generatorWrapper.um = [0, 8192], generatorWrapper.updateFlagsForFrozenObjects = [0, 16384], generatorWrapper.string = [0, 32768], generatorWrapper.pmx = [0, 16777216], generatorWrapper.mut = [33554432, 33554432], generatorWrapper.umutb = [67108864, 67108864], generatorWrapper.tvoff = [134217728, 134217728], generatorWrapper);\n    this.entryIdCounter = {};\n    for (var value in this.tasks) if (this.tasks[value][1] > 0) {\n      this.entryIdCounter[value] = 0;\n    }\n    this.setTimeoutWrapper = 0;\n  };\n  queryReporter.prototype.reportEvent = function (generatorWrapper) {\n    var value = this.tasks[generatorWrapper];\n    var CustomMap = value[1];\n    this.setTimeoutWrapper += value[0];\n    if (CustomMap > 0 && this.entryIdCounter[generatorWrapper] == 0) {\n      this.entryIdCounter[generatorWrapper] = 1;\n    }\n  };\n  var reportRetriever = function (generatorWrapper) {\n    var findEntry;\n    var value = keysOfObject(generatorWrapper.tasks);\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper.entryIdCounter) if (containsElement(value, findEntry) && generatorWrapper.entryIdCounter[findEntry] == 1) {\n      CustomMap += generatorWrapper.tasks[findEntry][1];\n      generatorWrapper.entryIdCounter[findEntry] = 2;\n    }\n    return CustomMap;\n  };\n  var statusRetriever = function (generatorWrapper) {\n    var value = 0,\n      CustomMap;\n    for (CustomMap in generatorWrapper.entryIdCounter) {\n      var findEntry = generatorWrapper.entryIdCounter[CustomMap];\n      if (findEntry == 1 || findEntry == 2) {\n        value += generatorWrapper.tasks[CustomMap][1];\n      }\n    }\n    return value;\n  };\n  var toggleRegister = function () {\n    this.entryIdCounter = this.tasks = 0;\n  };\n  toggleRegister.prototype.getAdStateValue = function () {\n    return this.tasks;\n  };\n  var updateRegister = function (generatorWrapper, value, CustomMap) {\n    if (!(value >= 32)) {\n      if (generatorWrapper.entryIdCounter & 1 << value && !CustomMap) {\n        generatorWrapper.tasks &= ~(1 << value);\n      } else if (!(generatorWrapper.entryIdCounter & 1 << value || !CustomMap)) {\n        generatorWrapper.tasks |= 1 << value;\n      }\n      generatorWrapper.entryIdCounter |= 1 << value;\n    }\n  };\n  var videoReporter = function () {\n    AdVisibilityTracker.call(this);\n    this.setTimeoutWrapper = new MetricsTracker();\n    this.totalAdBufferingTime = this.dispatchUnhandledRejection = this.handleThenable = 0;\n    this.settlePromise = -1;\n    this.assignPolyfill = new MetricsTracker();\n    this.handleAsync = new MetricsTracker();\n    this.entryIdCounter = new VisibilityMetricsCalculator();\n    this.isDone = this.createDeferred = -1;\n    this.handleThenable = new MetricsTracker();\n    this.firstQuartileTime = 2000;\n    this.updateMaxSize = new toggleRegister();\n    this.definePropertyPolyfill = new toggleRegister();\n    this.createIterator = new toggleRegister();\n  };\n  inheritPrototype(videoReporter, AdVisibilityTracker);\n  var widthRetriever = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.totalAdBufferingTime;\n    if (!($o || CustomMap || -1 == generatorWrapper.settlePromise)) {\n      findEntry += value - generatorWrapper.settlePromise;\n    }\n    return findEntry;\n  };\n  videoReporter.prototype.executeCallbacks = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!value.setTimeoutWrapper) {\n      AdVisibilityTracker.prototype.executeCallbacks.call(this, generatorWrapper, value, CustomMap, findEntry);\n      var iterateEntries = isVolumeNonZero(value) && isVolumeNonZero(CustomMap);\n      var createCircularNode = (findEntry ? Math.min(value.zone, CustomMap.zone) : CustomMap.zone) >= 0.5;\n      if (isValidOpacity(value.volume)) {\n        if (-1 != this.createDeferred) {\n          this.createDeferred = Math.min(this.createDeferred, value.volume);\n        } else {\n          this.createDeferred = value.volume;\n        }\n        this.isDone = Math.max(this.isDone, value.volume);\n      }\n      if (createCircularNode) {\n        this.handleThenable += generatorWrapper;\n        if (iterateEntries) {\n          this.dispatchUnhandledRejection += generatorWrapper;\n        } else {\n          this.dispatchUnhandledRejection += 0;\n        }\n      }\n      updateVisibilityMetrics(this.entryIdCounter, value.zone, CustomMap.zone, value.entryIdCounter, generatorWrapper, findEntry, iterateEntries);\n      updateMetrics(this.setTimeoutWrapper, true, generatorWrapper);\n      updateMetrics(this.handleAsync, iterateEntries, generatorWrapper);\n      updateMetrics(this.handleThenable, CustomMap.fullscreen, generatorWrapper);\n      updateMetrics(this.assignPolyfill, iterateEntries && !createCircularNode, generatorWrapper);\n      generatorWrapper = Math.floorRectangle(value.mediaTime / 1000);\n      updateRegister(this.updateMaxSize, generatorWrapper, value.isAdVisible());\n      updateRegister(this.definePropertyPolyfill, generatorWrapper, value.zone >= 1);\n      updateRegister(this.createIterator, generatorWrapper, isVolumeNonZero(value));\n    }\n  };\n  var executionResetter = function () {\n    this.setTimeoutWrapper = false;\n  };\n  executionResetter.prototype.tasks = function (generatorWrapper) {\n    if (!this.setTimeoutWrapper) {\n      if (this.entryIdCounter(generatorWrapper)) {\n        generatorWrapper = this.executeCallbacks.report(this.createDeferred, generatorWrapper);\n        this.handleAsync |= generatorWrapper;\n        generatorWrapper = generatorWrapper == 0;\n      } else {\n        generatorWrapper = false;\n      }\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n  };\n  var yearResetter = function (generatorWrapper, value) {\n    this.setTimeoutWrapper = false;\n    this.createDeferred = generatorWrapper;\n    this.executeCallbacks = value;\n    this.handleAsync = 0;\n  };\n  inheritPrototype(yearResetter, executionResetter);\n  yearResetter.prototype.entryIdCounter = function () {\n    return true;\n  };\n  yearResetter.prototype.isDone = function () {\n    return false;\n  };\n  yearResetter.prototype.getAdId = function () {\n    var generatorWrapper = this;\n    var value = findKeyInObject(function (CustomMap) {\n      return CustomMap == generatorWrapper.createDeferred;\n    });\n    return ip[value].toString();\n  };\n  yearResetter.prototype.toString = function () {\n    var generatorWrapper = \"\";\n    if (this.isDone()) {\n      generatorWrapper += \"c\";\n    }\n    if (this.setTimeoutWrapper) {\n      generatorWrapper += \"s\";\n    }\n    if (this.handleAsync > 0) {\n      generatorWrapper += \":\" + this.handleAsync;\n    }\n    return this.getAdId() + generatorWrapper;\n  };\n  var zoneResetter = function (generatorWrapper, value) {\n    yearResetter.call(this, generatorWrapper, value);\n    this.onFulfilled = [];\n  };\n  inheritPrototype(zoneResetter, yearResetter);\n  zoneResetter.prototype.tasks = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (value != null) {\n      this.onFulfilled.push(value);\n    }\n    yearResetter.prototype.tasks.call(this, generatorWrapper);\n  };\n  var abstractResponder = function () {};\n  var baseResponder = function () {};\n  inheritPrototype(baseResponder, abstractResponder);\n  baseResponder.prototype.tasks = function () {\n    return null;\n  };\n  baseResponder.prototype.setTimeoutWrapper = function () {\n    return [];\n  };\n  var coordinateResponder = function (generatorWrapper, value, CustomMap, findEntry) {\n    AdComponent.call(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  inheritPrototype(coordinateResponder, AdComponent);\n  setTimeoutWrapper = coordinateResponder.prototype;\n  setTimeoutWrapper.writeBytesField = function () {\n    if (this.setTimeoutWrapper) {\n      var generatorWrapper = this.setTimeoutWrapper;\n      var value = this.tasks.entryIdCounter.setTimeoutWrapper;\n      try {\n        try {\n          var CustomMap = convertRectToBox(generatorWrapper.getBoundingClientRect());\n        } catch (entry) {\n          CustomMap = new handleThenable(0, 0, 0, 0);\n        }\n        var findEntry = CustomMap.right - CustomMap.left;\n        var iterateEntries = CustomMap.bottom - CustomMap.top;\n        var createCircularNode = calculateFrameOffset(generatorWrapper, value);\n        var entryIdCounter = createCircularNode.inheritPrototype;\n        var key = createCircularNode.globalScope;\n        var value = new handleThenable(Math.roundRectangle(key), Math.roundRectangle(entryIdCounter + findEntry), Math.roundRectangle(key + iterateEntries), Math.roundRectangle(entryIdCounter));\n      } catch (entry) {\n        value = createRectangle(emptyRect);\n      }\n      this.entryIdCounter = value;\n    }\n  };\n  setTimeoutWrapper.getStringOrEmpty = function () {\n    this.handleAsync = this.tasks.createDeferred.entryIdCounter;\n  };\n  setTimeoutWrapper.EnsureMutable = function (generatorWrapper) {\n    var value = getAdState(this.AdEnvironmentConfig, \"od\") == 1;\n    return isElementInvisibleOrOutOfView(generatorWrapper, this.handleAsync, this.setTimeoutWrapper, value);\n  };\n  setTimeoutWrapper.temporaryData = function () {\n    this.timestamp = accumulatePosition();\n  };\n  setTimeoutWrapper.CustomError = function () {\n    this.temporaryData();\n    this.writeBytesField();\n    if (this.setTimeoutWrapper && typeof this.setTimeoutWrapper.videoWidth === \"number\" && typeof this.setTimeoutWrapper.videoHeight === \"number\") {\n      var generatorWrapper = this.setTimeoutWrapper;\n      var value = new Size(generatorWrapper.videoWidth, generatorWrapper.videoHeight);\n      generatorWrapper = this.entryIdCounter;\n      var CustomMap = generatorWrapper.getRectangleWidth();\n      var findEntry = generatorWrapper.getRectangleHeight();\n      var iterateEntries = value.width;\n      value = value.height;\n      if (!(iterateEntries <= 0 || value <= 0 || CustomMap <= 0 || findEntry <= 0)) {\n        iterateEntries /= value;\n        generatorWrapper = createRectangle(generatorWrapper);\n        if (iterateEntries > CustomMap / findEntry) {\n          CustomMap /= iterateEntries;\n          findEntry = (findEntry - CustomMap) / 2;\n          if (findEntry > 0) {\n            findEntry = generatorWrapper.top + findEntry;\n            generatorWrapper.top = Math.roundRectangle(findEntry);\n            generatorWrapper.bottom = Math.roundRectangle(findEntry + CustomMap);\n          }\n        } else {\n          findEntry *= iterateEntries;\n          CustomMap = Math.roundRectangle((CustomMap - findEntry) / 2);\n          if (CustomMap > 0) {\n            CustomMap = generatorWrapper.left + CustomMap;\n            generatorWrapper.left = Math.roundRectangle(CustomMap);\n            generatorWrapper.right = Math.roundRectangle(CustomMap + findEntry);\n          }\n        }\n      }\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.getStringOrEmpty();\n    generatorWrapper = this.entryIdCounter;\n    CustomMap = this.handleAsync;\n    if (generatorWrapper.left <= CustomMap.right && CustomMap.left <= generatorWrapper.right && generatorWrapper.top <= CustomMap.bottom && CustomMap.top <= generatorWrapper.bottom) {\n      generatorWrapper = new handleThenable(Math.max(generatorWrapper.top, CustomMap.top), Math.min(generatorWrapper.right, CustomMap.right), Math.min(generatorWrapper.bottom, CustomMap.bottom), Math.max(generatorWrapper.left, CustomMap.left));\n    } else {\n      generatorWrapper = new handleThenable(0, 0, 0, 0);\n    }\n    if (generatorWrapper.top >= generatorWrapper.bottom || generatorWrapper.left >= generatorWrapper.right) {\n      CustomMap = new handleThenable(0, 0, 0, 0);\n    } else {\n      CustomMap = generatorWrapper;\n    }\n    generatorWrapper = this.tasks.createDeferred;\n    value = iterateEntries = findEntry = 0;\n    if ((this.entryIdCounter.bottom - this.entryIdCounter.top) * (this.entryIdCounter.right - this.entryIdCounter.left) > 0) {\n      if (this.EnsureMutable(CustomMap)) {\n        CustomMap = new handleThenable(0, 0, 0, 0);\n      } else {\n        findEntry = getAdEnvironmentInstance().handleAsync;\n        value = new handleThenable(0, findEntry.height, findEntry.width, 0);\n        findEntry = calculateVisibilityRatio(CustomMap, this.entryIdCounter);\n        iterateEntries = calculateVisibilityRatio(CustomMap, getAdEnvironmentInstance().entryIdCounter);\n        value = calculateVisibilityRatio(CustomMap, value);\n      }\n    }\n    if (CustomMap.top >= CustomMap.bottom || CustomMap.left >= CustomMap.right) {\n      CustomMap = new handleThenable(0, 0, 0, 0);\n    } else {\n      CustomMap = translateRectangle(CustomMap, -this.entryIdCounter.left, -this.entryIdCounter.top);\n    }\n    if (!isAdPlayingOrMuted()) {\n      iterateEntries = findEntry = 0;\n    }\n    this.settlePromise = new AdTracker(generatorWrapper, this.entryIdCounter, CustomMap, findEntry, iterateEntries, this.timestamp, value);\n  };\n  setTimeoutWrapper.getAdName = function () {\n    return this.tasks.getAdName();\n  };\n  var defaultAdBounds = new handleThenable(0, 0, 0, 0);\n  var ExtendedAd = function (generatorWrapper, value, CustomMap) {\n    AdComponent.call(this, null, generatorWrapper, value, CustomMap);\n    this.onFulfilled = generatorWrapper.isActive();\n    this.isDone = 0;\n  };\n  inheritPrototype(ExtendedAd, coordinateResponder);\n  setTimeoutWrapper = ExtendedAd.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    this.createDeferred();\n    return true;\n  };\n  setTimeoutWrapper.deferError = function () {\n    coordinateResponder.prototype.CustomError.call(this);\n  };\n  setTimeoutWrapper.temporaryData = function () {};\n  setTimeoutWrapper.writeBytesField = function () {};\n  setTimeoutWrapper.CustomError = function () {\n    this.createDeferred();\n    coordinateResponder.prototype.CustomError.call(this);\n  };\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isActive();\n    if (generatorWrapper !== this.onFulfilled) {\n      if (generatorWrapper) {\n        this.createDeferred();\n      } else {\n        getAdEnvironmentInstance().entryIdCounter = new handleThenable(0, 0, 0, 0);\n        this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n        this.handleAsync = new handleThenable(0, 0, 0, 0);\n        this.timestamp = -1;\n      }\n    }\n    this.onFulfilled = generatorWrapper;\n  };\n  function getAdBoundsArray(generatorWrapper) {\n    return [generatorWrapper.top, generatorWrapper.left, generatorWrapper.bottom, generatorWrapper.right];\n  }\n  var adEventTypes = {};\n  var mappedAdEventTypes = (adEventTypes.firstquartile = 0, adEventTypes.midpoint = 1, adEventTypes.thirdquartile = 2, adEventTypes.complete = 3, adEventTypes);\n  var AdProcessor = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === createCircularNode) {\n      createCircularNode = new baseResponder();\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    AdContainer.call(this, value, CustomMap, findEntry);\n    this.emptyArray = iterateEntries;\n    this.customProperty2 = 0;\n    this.keyArray = {};\n    this.hasOwnPropertySafe = new queryReporter();\n    this.updateFlags = {};\n    this.constructReflect = \"\";\n    this.includesString = null;\n    this.isObjectOrFunction = false;\n    this.entryIdCounter = [];\n    this.partialFunctionApplication = createCircularNode.tasks();\n    this.isDone = createCircularNode.setTimeoutWrapper();\n    this.handleAsync = null;\n    this.setTimeoutWrapper = -1;\n    this.createIterator = this.handleThenable = undefined;\n    this.logError = this.resolvePromise = 0;\n    this.updateMaxSize = -1;\n    this.assignPolyfill = this.toArray = false;\n    this.tryCall = this.dispatchUnhandledRejection = this.tasks = this.Nb = this.isArrayLike = 0;\n    new VisibilityMetricsCalculator();\n    this.totalAdBufferingTime = this.definePropertyPolyfill = 0;\n    this.firstQuartileTime = -1;\n    this.createObjectPolyfill = 0;\n    this.onFulfilled = noopFunction;\n    this.handleThenable = [this.base64AlphabetIndex()];\n    this.isSafari = 2;\n    this.isInternetExplorer = {};\n    this.isInternetExplorer.pause = \"p\";\n    this.isInternetExplorer.resume = \"r\";\n    this.isInternetExplorer.skip = \"s\";\n    this.isInternetExplorer.mute = \"m\";\n    this.isInternetExplorer.unmute = \"um\";\n    this.isInternetExplorer.exitfullscreen = \"ef\";\n    this.createDeferred = null;\n    this.wrapGeneratorToPromise = this.sliceArguments = false;\n    this.isFirefox = Math.floorRectangle(Date.now() / 1000 - 1704067200);\n    this.year = 0;\n  };\n  inheritPrototype(AdProcessor, AdContainer);\n  AdProcessor.prototype.getClosureFlagValue = function () {\n    return true;\n  };\n  var setAdProcessorState = function (generatorWrapper) {\n    generatorWrapper.TransformValue = true;\n    if (generatorWrapper.createObjectPolyfill != 0) {\n      generatorWrapper.createObjectPolyfill = 3;\n    }\n  };\n  var normalizeAdDuration = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      if (Number(generatorWrapper)) {\n        return roundToPrecision(generatorWrapper, 3);\n      } else {\n        return 0;\n      }\n    }\n  };\n  setTimeoutWrapper = AdProcessor.prototype;\n  setTimeoutWrapper.CustomMap = function (generatorWrapper) {\n    return calculateTimeDifference(this, generatorWrapper, Math.max(10000, this.setTimeoutWrapper / 3));\n  };\n  setTimeoutWrapper.parseInt32 = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    var key = this;\n    var value = this.onFulfilled(this) || {};\n    extendObject(value, iterateEntries);\n    this.setTimeoutWrapper = value.duration || this.setTimeoutWrapper;\n    this.handleThenable = value.isVpaid || this.handleThenable;\n    this.createIterator = value.isYouTube || this.createIterator;\n    GetEnvironment();\n    this.wrapGeneratorToPromise = false;\n    iterateEntries = calculateAdPlaybackTime(this, value);\n    if (getAdPlaybackType(this) === 1) {\n      createCircularNode = iterateEntries;\n    }\n    AdContainer.prototype.parseInt32.call(this, generatorWrapper, value, CustomMap, findEntry, value, createCircularNode, entryIdCounter);\n    if (this.partialFunctionApplication && this.partialFunctionApplication.setTimeoutWrapper) {\n      forEachElement(this.isDone, function (entry) {\n        entry.tasks(key);\n      });\n    }\n  };\n  setTimeoutWrapper.parseNullableInt32 = function (generatorWrapper, value, CustomMap) {\n    AdContainer.prototype.parseNullableInt32.call(this, generatorWrapper, value, CustomMap);\n    getAdEventByIndex(this).executeCallbacks(generatorWrapper, value, this.adData, CustomMap);\n    this.assignPolyfill = isVolumeNonZero(this.adData) && isVolumeNonZero(value);\n    if (-1 == this.updateMaxSize && this.toArray) {\n      this.updateMaxSize = this.getAdManager().setTimeoutWrapper.entryIdCounter;\n    }\n    this.hasOwnPropertySafe.setTimeoutWrapper = 0;\n    generatorWrapper = this.removeUniqueId();\n    if (value.isAdVisible()) {\n      this.hasOwnPropertySafe.reportEvent(\"vs\");\n    }\n    if (generatorWrapper) {\n      this.hasOwnPropertySafe.reportEvent(\"vw\");\n    }\n    if (isValidOpacity(value.volume)) {\n      this.hasOwnPropertySafe.reportEvent(\"am\");\n    }\n    if (isVolumeNonZero(value)) {\n      this.hasOwnPropertySafe.reportEvent(\"a\");\n    } else {\n      this.hasOwnPropertySafe.reportEvent(\"mut\");\n    }\n    if (this.isIphone) {\n      this.hasOwnPropertySafe.reportEvent(\"f\");\n    }\n    if (-1 != value.tasks) {\n      this.hasOwnPropertySafe.reportEvent(\"bm\");\n      if (value.tasks == 1) {\n        this.hasOwnPropertySafe.reportEvent(\"b\");\n        if (isVolumeNonZero(value)) {\n          this.hasOwnPropertySafe.reportEvent(\"umutb\");\n        }\n      }\n    }\n    if (isVolumeNonZero(value) && value.isAdVisible()) {\n      this.hasOwnPropertySafe.reportEvent(\"avs\");\n    }\n    if (this.assignPolyfill && generatorWrapper) {\n      this.hasOwnPropertySafe.reportEvent(\"avw\");\n    }\n    if (value.zone > 0) {\n      this.hasOwnPropertySafe.reportEvent(\"pv\");\n    }\n    if (isAdTimeout(this, this.getAdManager().setTimeoutWrapper.entryIdCounter, true)) {\n      this.hasOwnPropertySafe.reportEvent(\"gdr\");\n    }\n    if (calculateMaxVisibilityAtThreshold(this.getAdManager().tasks, 1) >= 2000) {\n      this.hasOwnPropertySafe.reportEvent(\"pmx\");\n    }\n    if (this.wrapGeneratorToPromise) {\n      this.hasOwnPropertySafe.reportEvent(\"tvoff\");\n    }\n  };\n  setTimeoutWrapper.base64AlphabetIndex = function () {\n    return new videoReporter();\n  };\n  setTimeoutWrapper.getAdManager = function () {\n    return this.invertAndIncrement;\n  };\n  var getAdEventByIndex = function (generatorWrapper, value) {\n    return generatorWrapper.handleThenable[value != null && value < generatorWrapper.handleThenable.length ? value : generatorWrapper.handleThenable.length - 1];\n  };\n  AdProcessor.prototype.toggleBitFlag = function () {\n    return new AdPlaybackData();\n  };\n  AdProcessor.prototype.finalizeAndAppendBuffer = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = AdContainer.prototype.finalizeAndAppendBuffer.call(this, generatorWrapper, value, CustomMap, undefined === findEntry ? -1 : findEntry);\n    generatorWrapper.fullscreen = this.isIphone;\n    generatorWrapper.setTimeoutWrapper = this.createObjectPolyfill == 2;\n    generatorWrapper.volume = CustomMap.volume;\n    if (!isValidOpacity(generatorWrapper.volume)) {\n      this.isArrayLike++;\n      value = this.adData;\n      if (isValidOpacity(value.volume)) {\n        generatorWrapper.volume = value.volume;\n      }\n    }\n    CustomMap = CustomMap.currentTime;\n    if (undefined !== CustomMap && CustomMap >= 0) {\n      generatorWrapper.mediaTime = CustomMap;\n    } else {\n      generatorWrapper.mediaTime = -1;\n    }\n    return generatorWrapper;\n  };\n  var getAdPlaybackType = function (generatorWrapper) {\n    var value = !!getAdState(getAdEnvironment().AdEnvironmentConfig, \"umt\");\n    if (generatorWrapper.handleThenable || !value && !generatorWrapper.createIterator) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n  var calculateAdPlaybackTime = function (generatorWrapper, value) {\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      value = 0;\n    } else if (-1 == generatorWrapper.decodeBase64) {\n      value = 0;\n    } else {\n      value -= generatorWrapper.decodeBase64;\n      if (value > Math.max(10000, generatorWrapper.setTimeoutWrapper / 3)) {\n        value = 0;\n      } else {\n        value = value;\n      }\n    }\n    var CustomMap = generatorWrapper.onFulfilled(generatorWrapper) || {};\n    if (undefined !== CustomMap.currentTime) {\n      CustomMap = CustomMap.currentTime;\n    } else {\n      CustomMap = generatorWrapper.resolvePromise;\n    }\n    var findEntry = CustomMap - generatorWrapper.resolvePromise;\n    var iterateEntries = 0;\n    if (findEntry >= 0) {\n      generatorWrapper.logError += value;\n      generatorWrapper.totalAdBufferingTime += Math.max(value - findEntry, 0);\n      iterateEntries = Math.min(findEntry, generatorWrapper.logError);\n    } else {\n      generatorWrapper.definePropertyPolyfill += Math.abs(findEntry);\n    }\n    if (findEntry != 0) {\n      generatorWrapper.logError = 0;\n    }\n    if (-1 == generatorWrapper.firstQuartileTime && findEntry > 0) {\n      if (adEventTimestamp >= 0) {\n        generatorWrapper.firstQuartileTime = accumulatePosition() - adEventTimestamp;\n      } else {\n        generatorWrapper.firstQuartileTime = -1;\n      }\n    }\n    generatorWrapper.resolvePromise = CustomMap;\n    return iterateEntries;\n  };\n  AdProcessor.prototype.toArray = function (generatorWrapper) {\n    getAdEnvironmentInstance();\n    if (this.isIphone) {\n      return 1;\n    } else {\n      return AdContainer.prototype.toArray.call(this, generatorWrapper);\n    }\n  };\n  AdProcessor.prototype.generatorYield = function () {\n    return 1;\n  };\n  AdProcessor.prototype.getDuration = function () {\n    return this.setTimeoutWrapper;\n  };\n  var addToAdQueue = function (generatorWrapper, value) {\n    if (!someElement(generatorWrapper.isDone, function (CustomMap) {\n      return CustomMap.createDeferred == value.createDeferred;\n    })) {\n      generatorWrapper.isDone.push(value);\n    }\n  };\n  var checkAdQueueTimeout = function (generatorWrapper) {\n    var value = calculateVisibilityAtThreshold(generatorWrapper.getAdManager().entryIdCounter, 1);\n    return isAdTimeout(generatorWrapper, value);\n  };\n  var isAdTimeout = function (generatorWrapper, value, CustomMap) {\n    if (value >= 15000) {\n      return true;\n    } else {\n      if (generatorWrapper.toArray) {\n        if (undefined === CustomMap ? 0 : CustomMap) {\n          return true;\n        } else {\n          if (generatorWrapper.setTimeoutWrapper > 0) {\n            return value >= generatorWrapper.setTimeoutWrapper / 2;\n          } else {\n            if (generatorWrapper.updateMaxSize > 0) {\n              return value >= generatorWrapper.updateMaxSize;\n            } else {\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n  };\n  var generateAdPlaybackData = function (generatorWrapper) {\n    var value = {};\n    var CustomMap = getAdEnvironmentInstance();\n    value.insideIframe = CustomMap.setTimeoutWrapper;\n    value.unmeasurable = generatorWrapper.uniqueIdCounter;\n    value.position = generatorWrapper.getUserAgent();\n    value.exposure = generatorWrapper.adData.zone;\n    value.documentSize = CustomMap.createDeferred;\n    value.viewportSize = new Size(CustomMap.entryIdCounter.getRectangleWidth(), CustomMap.entryIdCounter.getRectangleHeight());\n    if (generatorWrapper.createDeferred != null) {\n      value.presenceData = generatorWrapper.createDeferred;\n    }\n    value.screenShare = generatorWrapper.adData.ta;\n    return value;\n  };\n  var generateDetailedAdPlaybackData = function (generatorWrapper) {\n    var value = roundToPrecision(generatorWrapper.adData.zone, 2);\n    var CustomMap = generatorWrapper.hasOwnPropertySafe.setTimeoutWrapper;\n    var findEntry = generatorWrapper.adData;\n    var iterateEntries = getAdEventByIndex(generatorWrapper);\n    var createCircularNode = normalizeAdDuration(iterateEntries.createDeferred);\n    var entryIdCounter = normalizeAdDuration(iterateEntries.isDone);\n    var key = normalizeAdDuration(findEntry.volume);\n    var value = roundToPrecision(iterateEntries.onFulfilled, 2);\n    var entry = roundToPrecision(iterateEntries.resolvePromise, 2);\n    var currentEntry = roundToPrecision(findEntry.zone, 2);\n    var foundEntry = roundToPrecision(iterateEntries.logError, 2);\n    var resolveFunction = roundToPrecision(iterateEntries.tryCall, 2);\n    findEntry = roundToPrecision(findEntry.ta, 2);\n    generatorWrapper = createRectangle(generatorWrapper.getUserAgent());\n    generatorWrapper.roundRectangle();\n    iterateEntries = getMaxVisibility(iterateEntries, false);\n    return {\n      createTrustedURL: value,\n      removeElementsByCondition: CustomMap,\n      formatLongNumber: createCircularNode,\n      highOrderInteger: entryIdCounter,\n      reduceElements: key,\n      padNumber: value,\n      unusedVar1: entry,\n      zone: currentEntry,\n      getFormattedNumber: foundEntry,\n      calculateIntegers: resolveFunction,\n      ta: findEntry,\n      position: generatorWrapper,\n      parseAndSetBigIntegers: iterateEntries\n    };\n  };\n  var updateAdPlaybackData = function (generatorWrapper, value) {\n    ensureArraySize(generatorWrapper.entryIdCounter, value, function () {\n      return {\n        createTrustedURL: 0,\n        removeElementsByCondition: undefined,\n        formatLongNumber: -1,\n        highOrderInteger: -1,\n        reduceElements: -1,\n        padNumber: -1,\n        unusedVar1: -1,\n        zone: -1,\n        getFormattedNumber: -1,\n        calculateIntegers: -1,\n        ta: -1,\n        position: undefined,\n        parseAndSetBigIntegers: []\n      };\n    });\n    generatorWrapper.entryIdCounter[value] = generateDetailedAdPlaybackData(generatorWrapper);\n  };\n  var ensureArraySize = function (generatorWrapper, value, CustomMap) {\n    for (var findEntry = generatorWrapper.length; findEntry < value + 1;) {\n      generatorWrapper.push(CustomMap());\n      findEntry++;\n    }\n  };\n  var getAdImpressionData = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.updateFlags[value];\n    if (findEntry != null) {\n      return findEntry;\n    }\n    findEntry = verifyRequest(generatorWrapper, value);\n    var iterateEntries = findKeyInObject(function (createCircularNode) {\n      return createCircularNode == value;\n    });\n    generatorWrapper = generateAdRequestData(generatorWrapper, findEntry, findEntry, CustomMap, mappedAdEventTypes[AdEventNames[iterateEntries]]);\n    if (value == \"fully_viewable_audible_half_duration_impression\") {\n      generatorWrapper.std = \"csm\";\n    }\n    return generatorWrapper;\n  };\n  var generateImpressionDataArray = function (generatorWrapper, value, CustomMap) {\n    var findEntry = [value];\n    if (generatorWrapper != value || CustomMap != value) {\n      findEntry.unshift(generatorWrapper);\n      findEntry.push(CustomMap);\n    }\n    return findEntry;\n  };\n  var generateAdRequestData = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper.uniqueIdCounter) {\n      return {\n        if: 0,\n        filterAndLinkAdContainers: 0\n      };\n    }\n    var createCircularNode = createRectangle(generatorWrapper.getUserAgent());\n    createCircularNode.roundRectangle();\n    var entryIdCounter = getAdEnvironmentInstance();\n    var key = getAdEnvironment();\n    var value = generatorWrapper.getAdManager();\n    var entry = generatorWrapper.globalObject ? generatorWrapper.globalObject.getAdName() : \"ns\";\n    var currentEntry = {};\n    if (entryIdCounter.setTimeoutWrapper) {\n      currentEntry[\"if\"] = 1;\n    } else {\n      currentEntry[\"if\"] = undefined;\n    }\n    if (generatorWrapper.handleAsync) {\n      currentEntry.sdk = generatorWrapper.handleAsync;\n    } else {\n      currentEntry.sdk = undefined;\n    }\n    currentEntry.rejectFunction = generatorWrapper.hasOwnPropertySafe;\n    currentEntry.resolveFunction = [createCircularNode.top, createCircularNode.left, createCircularNode.bottom, createCircularNode.right];\n    currentEntry.tos = calculateTotalVisibility(value.tasks, false);\n    currentEntry.mtos = getMaxVisibility(value);\n    currentEntry.mcvt = value.year.setTimeoutWrapper;\n    currentEntry.removeRelatedAdContainers = undefined;\n    currentEntry.vht = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill == 2);\n    currentEntry.mut = value.assignPolyfill.setTimeoutWrapper;\n    currentEntry.generatorWrapper = normalizeAdDuration(generatorWrapper.adData.volume);\n    currentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    if (generatorWrapper.isIphone) {\n      currentEntry.incrementPropertyGInBRepeated = 1;\n    } else {\n      currentEntry.incrementPropertyGInBRepeated = 0;\n    }\n    currentEntry.CustomMetric = value.handleThenable.entryIdCounter;\n    currentEntry.metricNames = value.handleAsync.entryIdCounter;\n    if (value.createDeferred > 0) {\n      currentEntry.assignSession = 1;\n    } else {\n      currentEntry.assignSession = 0;\n    }\n    currentEntry.audioToString = calculateTotalVisibility(value.entryIdCounter);\n    currentEntry.ssb = calculateTotalVisibility(value.toArray, false);\n    currentEntry.amtos = calculateMaxVisibility(value.entryIdCounter, false);\n    currentEntry.uac = generatorWrapper.isArrayLike;\n    currentEntry.vpt = value.setTimeoutWrapper.entryIdCounter;\n    if (entry == \"nio\") {\n      currentEntry.nio = 1;\n      currentEntry.adVerificationMeasurementSystem = \"nio\";\n    }\n    currentEntry.gmm = \"4\";\n    if (isAdTimeout(generatorWrapper, value.setTimeoutWrapper.entryIdCounter, true)) {\n      currentEntry.gdr = 1;\n    } else {\n      currentEntry.gdr = 0;\n    }\n    currentEntry.efpf = generatorWrapper.isSafari;\n    if (entry == \"gsv\" || entry == \"nis\") {\n      createCircularNode = generatorWrapper.globalObject;\n      if (createCircularNode.isDone > 0) {\n        currentEntry.nnutPlaceholder = createCircularNode.isDone;\n      }\n    }\n    currentEntry.timeCodeMethod = getAdPlaybackType(generatorWrapper);\n    currentEntry.networkMediaType = generatorWrapper.definePropertyPolyfill;\n    currentEntry.metricValidators = generatorWrapper.totalAdBufferingTime;\n    currentEntry.pixelAspectRatio = generatorWrapper.firstQuartileTime;\n    currentEntry.isVpaid = generatorWrapper.handleThenable;\n    currentEntry.duration = generatorWrapper.setTimeoutWrapper;\n    currentEntry.viewModeTime = generatorWrapper.resolvePromise;\n    currentEntry.screenDimensions = generatorWrapper.hasOwnPropertySafe.setTimeoutWrapper;\n    if (generatorWrapper.entryIdCounter.length >= 1) {\n      currentEntry.image0 = generatorWrapper.entryIdCounter[0].removeElementsByCondition;\n      currentEntry.attribute0 = [generatorWrapper.entryIdCounter[0].reduceElements];\n      currentEntry.coordinate0 = [generatorWrapper.entryIdCounter[0].zone];\n      currentEntry.subSample0 = [generatorWrapper.entryIdCounter[0].ta];\n      createCircularNode = generatorWrapper.entryIdCounter[0].position;\n      if (createCircularNode) {\n        currentEntry.position0 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.position0 = undefined;\n      }\n    }\n    if (generatorWrapper.entryIdCounter.length >= 2) {\n      currentEntry.i1 = generatorWrapper.entryIdCounter[1].removeElementsByCondition;\n      currentEntry.a1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].formatLongNumber, generatorWrapper.entryIdCounter[1].reduceElements, generatorWrapper.entryIdCounter[1].highOrderInteger);\n      currentEntry.c1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].padNumber, generatorWrapper.entryIdCounter[1].zone, generatorWrapper.entryIdCounter[1].unusedVar1);\n      currentEntry.ss1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].getFormattedNumber, generatorWrapper.entryIdCounter[1].ta, generatorWrapper.entryIdCounter[1].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[1].position;\n      if (createCircularNode) {\n        currentEntry.p1 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p1 = undefined;\n      }\n      currentEntry.mediaTimeOffset1 = generatorWrapper.entryIdCounter[1].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 3) {\n      currentEntry.i2 = generatorWrapper.entryIdCounter[2].removeElementsByCondition;\n      currentEntry.a2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].formatLongNumber, generatorWrapper.entryIdCounter[2].reduceElements, generatorWrapper.entryIdCounter[2].highOrderInteger);\n      currentEntry.c2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].padNumber, generatorWrapper.entryIdCounter[2].zone, generatorWrapper.entryIdCounter[2].unusedVar1);\n      currentEntry.ss2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].getFormattedNumber, generatorWrapper.entryIdCounter[2].ta, generatorWrapper.entryIdCounter[2].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[2].position;\n      if (createCircularNode) {\n        currentEntry.p2 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p2 = undefined;\n      }\n      currentEntry.mtos2 = generatorWrapper.entryIdCounter[2].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 4) {\n      currentEntry.i3 = generatorWrapper.entryIdCounter[3].removeElementsByCondition;\n      currentEntry.a3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].formatLongNumber, generatorWrapper.entryIdCounter[3].reduceElements, generatorWrapper.entryIdCounter[3].highOrderInteger);\n      currentEntry.c3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].padNumber, generatorWrapper.entryIdCounter[3].zone, generatorWrapper.entryIdCounter[3].unusedVar1);\n      currentEntry.ss3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].getFormattedNumber, generatorWrapper.entryIdCounter[3].ta, generatorWrapper.entryIdCounter[3].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[3].position;\n      if (createCircularNode) {\n        currentEntry.p3 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p3 = undefined;\n      }\n      currentEntry.mtos3 = generatorWrapper.entryIdCounter[3].parseAndSetBigIntegers;\n    }\n    currentEntry.checksum = statusRetriever(generatorWrapper.hasOwnPropertySafe);\n    if (value) {\n      currentEntry.browserFeatures = reportRetriever(generatorWrapper.hasOwnPropertySafe);\n      currentEntry.deviceViewport = value.setTimeoutWrapper.tasks;\n      currentEntry.deviceViewportScale = calculateAverageVisibility(value.tasks, 0.5);\n      currentEntry.deviceFullViewportScale = calculateAverageVisibility(value.tasks, 1);\n      currentEntry.defaultAudioVideoSync = calculateAverageVisibility(value.entryIdCounter, 0.5);\n      currentEntry.defaultAudioFrequencyVideoSync = calculateAverageVisibility(value.entryIdCounter, 1);\n      if (CustomMap) {\n        value.setTimeoutWrapper.tasks = 0;\n        resetVisibilityMetrics(value.tasks);\n        resetVisibilityMetrics(value.entryIdCounter);\n      }\n      if (generatorWrapper.removeUniqueId()) {\n        currentEntry.deviceTotalOffsetScale = value.handleThenable;\n        currentEntry.defaultAudioVideo = value.dispatchUnhandledRejection;\n        currentEntry.deviceTotalOffsetScaleSum = generatorWrapper.customProperty2 + 1;\n        if (CustomMap) {\n          value.handleThenable = 0;\n          value.dispatchUnhandledRejection = 0;\n          generatorWrapper.customProperty2++;\n        }\n      }\n      currentEntry.deviceAdTime = value.handleAsync.tasks;\n      currentEntry.deviceFullScreenTime = value.handleThenable.tasks;\n      if (CustomMap) {\n        value.handleAsync.tasks = 0;\n        value.handleThenable.tasks = 0;\n      }\n    }\n    currentEntry.removeRelatedAdContainers = [entryIdCounter.createDeferred.width, entryIdCounter.createDeferred.height];\n    currentEntry.browserSize = [entryIdCounter.entryIdCounter.getRectangleWidth(), entryIdCounter.entryIdCounter.getRectangleHeight()];\n    currentEntry.screenSize = [entryIdCounter.handleAsync.width, entryIdCounter.handleAsync.height];\n    currentEntry.domain = entryIdCounter.domain;\n    if (generatorWrapper.Nb) {\n      currentEntry.videoDataStream = generatorWrapper.Nb;\n    }\n    if (generatorWrapper.isDone.length > 0 || generatorWrapper.partialFunctionApplication) {\n      value = copyArray(generatorWrapper.isDone);\n      if (generatorWrapper.partialFunctionApplication) {\n        value.push(generatorWrapper.partialFunctionApplication);\n      }\n      currentEntry.pingsArray = mapElements(value, function (foundEntry) {\n        return foundEntry.toString();\n      });\n    }\n    value = mapElements(filterElements(generatorWrapper.isDone, function (foundEntry) {\n      return foundEntry.isDone();\n    }), function (foundEntry) {\n      return foundEntry.getAdId();\n    });\n    uniqueElements(value);\n    currentEntry.checksumEntities = value;\n    if (generatorWrapper.tasks) {\n      currentEntry.videoMergeError = generatorWrapper.tasks;\n    }\n    if (generatorWrapper.dispatchUnhandledRejection) {\n      currentEntry.videoMergeMark = generatorWrapper.dispatchUnhandledRejection;\n    }\n    if (generatorWrapper.tryCall) {\n      currentEntry.videoMergeIEC = generatorWrapper.tryCall;\n    }\n    if (generatorWrapper.globalObject) {\n      currentEntry.adVerificationMeasurementSystem = generatorWrapper.globalObject.getAdName();\n    } else {\n      currentEntry.adVerificationMeasurementSystem = \"ns\";\n    }\n    if (generatorWrapper.globalObject) {\n      extendObject(currentEntry, generatorWrapper.globalObject.encodeString());\n    }\n    if (findEntry) {\n      currentEntry.CustomMap = roundToPrecision(generatorWrapper.adData.zone, 2);\n      currentEntry.safeSelector = roundToPrecision(generatorWrapper.adData.ta, 2);\n    } else {\n      currentEntry.totalTimeHeld = accumulatePosition() - yearOffset;\n    }\n    currentEntry.isEdge = roundToPrecision(value.resolvePromise, 2);\n    currentEntry.isGecko = roundToPrecision(value.onFulfilled, 2);\n    currentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    currentEntry.networkVersion = normalizeAdDuration(value.createDeferred);\n    currentEntry.latestTimeElapsed = roundToPrecision(generatorWrapper.set34Clear14557Flag, 2);\n    findEntry = getAdEventByIndex(generatorWrapper, iterateEntries);\n    getMaxVisibility(value);\n    currentEntry.qualityMediaTotalOffsetScale = getMaxVisibility(findEntry);\n    currentEntry.qualityNetworkChecksum = roundToPrecis"