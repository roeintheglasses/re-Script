"} else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"umt\", AdOpacityState)).setTimeoutWrapper = AdEngagementState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phel\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phell\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"oseid\", FlagEnums));\n    var generatorWrapper = this.AdEnvironmentConfig;\n    if (!generatorWrapper.entryIdCounter.sloi) {\n      generatorWrapper.entryIdCounter.sloi = new StringAdStateTracker();\n    }\n    activateAdState(generatorWrapper.entryIdCounter.sloi);\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mm\", AdMediaTypes);\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ovms\", adWarningCodes));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"xdi\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"amp\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"prf\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gtx\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mvp_lv\", AdOpacityState));\n    if (undefined === AdInteractionState) {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = null;\n    } else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = AdInteractionState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"fmd\", AdOpacityState));\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gen204simple\", AdOpacityState);\n    this.entryIdCounter = new AdPerformanceMonitor(GetEnvironment(), this.AdEnvironmentConfig);\n    this.createDeferred = false;\n    this.flags = new FlagsContainer();\n  };\n  AdManager.prototype.throwIfFlag2 = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"string\" && generatorWrapper.length != 0) {\n      var value = this.AdEnvironmentConfig;\n      if (value.setTimeoutWrapper) {\n        generatorWrapper = generatorWrapper.split(\"&\");\n        for (var CustomMap = generatorWrapper.length - 1; CustomMap >= 0; CustomMap--) {\n          var findEntry = generatorWrapper[CustomMap].split(\"=\");\n          var iterateEntries = decodeURIComponent(findEntry[0]);\n          if (findEntry.length > 1) {\n            findEntry = decodeURIComponent(findEntry[1]);\n            if (/^[0-9]+$/g.exec(findEntry)) {\n              findEntry = parseInt(findEntry, 10);\n            } else {\n              findEntry = findEntry;\n            }\n          } else {\n            findEntry = 1;\n          }\n          if (iterateEntries = value.entryIdCounter[iterateEntries]) {\n            iterateEntries.tasks(findEntry);\n          }\n        }\n      }\n    }\n  };\n  var getAdEnvironment = function () {\n    return getSingletonInstance(AdManager);\n  };\n  var SendAdErrorReport = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if ((findEntry ? generatorWrapper.setTimeoutWrapper : Math.random()) < (iterateEntries || generatorWrapper.entryIdCounter)) {\n      try {\n        if (CustomMap instanceof UrlQueryBuilder) {\n          var createCircularNode = CustomMap;\n        } else {\n          createCircularNode = new UrlQueryBuilder();\n          forEachInObject(CustomMap, function (key, value) {\n            var entry = createCircularNode;\n            var currentEntry = entry.createDeferred++;\n            addParameter(entry, currentEntry, createKeyValuePair(value, key));\n          });\n        }\n        var entryIdCounter = buildAdUrl(createCircularNode, generatorWrapper.tasks, \"/pagead/gen_204?id=\" + value + \"&\");\n        if (entryIdCounter) {\n          GetEnvironment();\n          sendImageRequestWithRetry(window, entryIdCounter);\n        }\n      } catch (key) {}\n    }\n  };\n  var ErrorReporter = function () {\n    var generatorWrapper = Ko;\n    this.isDone = Lo;\n    this.handleAsync = \"jserror\";\n    this.setTimeoutWrapper = true;\n    this.tasks = null;\n    this.onFulfilled = this.boundFunctionCall;\n    if (undefined === generatorWrapper) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.createDeferred = false;\n  };\n  setTimeoutWrapper = ErrorReporter.prototype;\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.handleAsync = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    var findEntry = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      try {\n        if (findEntry.entryIdCounter && findEntry.entryIdCounter.setTimeoutWrapper) {\n          var iterateEntries = findEntry.entryIdCounter.startTimer(generatorWrapper.toString(), 3);\n          var createCircularNode = value();\n          findEntry.entryIdCounter.end(iterateEntries);\n        } else {\n          createCircularNode = value();\n        }\n      } catch (key) {\n        var entryIdCounter = findEntry.setTimeoutWrapper;\n        try {\n          clearPerformanceMarks(iterateEntries);\n          entryIdCounter = findEntry.onFulfilled(generatorWrapper, new CustomError(FormatErrorMessage(key)), undefined, CustomMap);\n        } catch (value) {\n          findEntry.boundFunctionCall(217, value);\n        }\n        if (!entryIdCounter) {\n          throw key;\n        }\n      }\n      return createCircularNode;\n    })();\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    });\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    iterateEntries = iterateEntries || this.handleAsync;\n    try {\n      var createCircularNode = new UrlQueryBuilder();\n      addKeyValuePair(createCircularNode, 1, \"context\", generatorWrapper);\n      if (!isValidError(value)) {\n        value = new CustomError(FormatErrorMessage(value));\n      }\n      if (value.msg) {\n        addKeyValuePair(createCircularNode, 2, \"msg\", value.msg.substring(0, 512));\n      }\n      var entryIdCounter = value.meta || {};\n      if (this.tasks) {\n        try {\n          this.tasks(entryIdCounter);\n        } catch (value) {}\n      }\n      if (findEntry) {\n        try {\n          findEntry(entryIdCounter);\n        } catch (value) {}\n      }\n      addParameter(createCircularNode, 3, [entryIdCounter]);\n      var key = computeReferrerUrl();\n      if (key.tasks) {\n        addKeyValuePair(createCircularNode, 4, \"top\", key.tasks.url || \"\");\n      }\n      addParameter(createCircularNode, 5, [{\n        url: key.entryIdCounter.url || \"\"\n      }, {\n        url: key.entryIdCounter.url ? extractBaseUrl(key.entryIdCounter.url) : \"\"\n      }]);\n      SendAdErrorReport(this.isDone, iterateEntries, createCircularNode, this.createDeferred, CustomMap);\n    } catch (value) {\n      try {\n        SendAdErrorReport(this.isDone, iterateEntries, {\n          context: \"ecmserr\",\n          rctx: generatorWrapper,\n          msg: FormatErrorMessage(value),\n          url: key && key.entryIdCounter.url\n        }, this.createDeferred, CustomMap);\n      } catch (entry) {}\n    }\n    return this.setTimeoutWrapper;\n  };\n  var FormatErrorMessage = function (generatorWrapper) {\n    var value = generatorWrapper.toString();\n    if (generatorWrapper.name && -1 == value.indexOf(generatorWrapper.name)) {\n      value += \": \" + generatorWrapper.name;\n    }\n    if (generatorWrapper.message && -1 == value.indexOf(generatorWrapper.message)) {\n      value += \": \" + generatorWrapper.message;\n    }\n    if (generatorWrapper.stack) {\n      generatorWrapper = generatorWrapper.stack;\n      var CustomMap = value;\n      try {\n        if (-1 == generatorWrapper.indexOf(CustomMap)) {\n          generatorWrapper = CustomMap + \"\\n\" + generatorWrapper;\n        }\n        for (var findEntry; generatorWrapper != findEntry;) {\n          findEntry = generatorWrapper;\n          generatorWrapper = generatorWrapper.replace(/((https?:\\/..*\\/)[^\\/:]*:\\d+(?:.|\\n)*)\\2/, \"$1\");\n        }\n        value = generatorWrapper.replace(/\\n */g, \"\\n\");\n      } catch (iterateEntries) {\n        value = CustomMap;\n      }\n    }\n    return value;\n  };\n  var CustomError = function (generatorWrapper) {\n    ErrorDetails.call(this, Error(generatorWrapper), {\n      message: generatorWrapper\n    });\n  };\n  inheritPrototype(CustomError, ErrorDetails);\n  var Lo, Po;\n  var Ko = new PerformanceMonitor(1, window);\n  var checkDocumentState = function () {\n    if (window && typeof window.google_measure_js_timing != \"undefined\") {\n      if (!window.google_measure_js_timing) {\n        Ko.isDone();\n      }\n    }\n  };\n  Lo = new function () {\n    var generatorWrapper = \"https:\";\n    if (window && window.location && window.location.protocol === \"http:\") {\n      generatorWrapper = \"http:\";\n    }\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = 0.01;\n    this.setTimeoutWrapper = Math.random();\n  }();\n  Po = new ErrorReporter();\n  if (window && window.document) {\n    if (window.document.readyState == \"complete\") {\n      checkDocumentState();\n    } else if (Ko.setTimeoutWrapper) {\n      addEventListenerWithNormalization(window, \"load\", function () {\n        checkDocumentState();\n      });\n    }\n  }\n  var Ro = function (generatorWrapper) {\n    Po.createSigned64(function (value) {\n      forEachElement(generatorWrapper, function (CustomMap) {\n        CustomMap(value);\n      });\n    });\n  };\n  var So = function (generatorWrapper, value) {\n    return Po.hasBrands(generatorWrapper, value);\n  };\n  var To = function (generatorWrapper, value, CustomMap, findEntry) {\n    return Po.IteratorWithTransform(generatorWrapper, value, CustomMap, findEntry);\n  };\n  var logError = function (generatorWrapper, value, CustomMap, findEntry) {\n    Po.boundFunctionCall(generatorWrapper, value, CustomMap, findEntry);\n  };\n  var yearOffset;\n  var Vo = Date.now();\n  var Wo = -1;\n  var Xo = -1;\n  var adEventTimestamp = -1;\n  var $o = false;\n  var accumulatePosition = function () {\n    return Date.now() - Vo;\n  };\n  var bp = function () {\n    var generatorWrapper = getAdEnvironment().setTimeoutWrapper;\n    var value = Xo >= 0 ? accumulatePosition() - Xo : -1;\n    var CustomMap = $o ? accumulatePosition() - Wo : -1;\n    var findEntry = adEventTimestamp >= 0 ? accumulatePosition() - adEventTimestamp : -1;\n    if (generatorWrapper == 947190542) {\n      return 100;\n    }\n    if (generatorWrapper == 79463069) {\n      return 200;\n    }\n    generatorWrapper = [2000, 4000];\n    var iterateEntries = [250, 500, 1000];\n    logError(637, Error(), 0.001);\n    var createCircularNode = value;\n    if (-1 != CustomMap && CustomMap < value) {\n      createCircularNode = CustomMap;\n    }\n    for (value = 0; value < generatorWrapper.length; ++value) {\n      if (createCircularNode < generatorWrapper[value]) {\n        var entryIdCounter = iterateEntries[value];\n        break;\n      }\n    }\n    if (undefined === entryIdCounter) {\n      entryIdCounter = iterateEntries[generatorWrapper.length];\n    }\n    if (-1 != findEntry && findEntry > 1500 && findEntry < 4000) {\n      return 500;\n    } else {\n      return entryIdCounter;\n    }\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    var findEntry = new handleThenable(0, 0, 0, 0);\n    this.time = generatorWrapper;\n    this.volume = null;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = findEntry;\n    this.tasks = CustomMap;\n  };\n  var AdTracker = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = value;\n    this.handleAsync = CustomMap;\n    this.entryIdCounter = findEntry;\n    this.createDeferred = iterateEntries;\n    this.onFulfilled = createCircularNode;\n    this.isDone = entryIdCounter;\n  };\n  AdTracker.prototype.getTimestamp = function () {\n    return this.onFulfilled;\n  };\n  var AdEventTypes = {\n    currentTime: 1,\n    duration: 2,\n    isVpaid: 4,\n    volume: 8,\n    isYouTube: 16,\n    isPlaying: 32\n  };\n  var AdEventNames = {\n    stringOrNull: \"start\",\n    FIRST_QUARTILE: \"firstquartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdquartile\",\n    COMPLETE: \"complete\",\n    ERROR: \"error\",\n    parseData: \"metric\",\n    PAUSE: \"pause\",\n    returnNonNull: \"resume\",\n    SKIPPED: \"skip\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    finalizeAdAttributes: \"mute\",\n    getAdPropertyFallbackNumeric: \"unmute\",\n    FULLSCREEN: \"fullscreen\",\n    vf: \"exitfullscreen\",\n    qf: \"bufferstart\",\n    replaceArrayIfNotArray: \"bufferfinish\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    optionalString: \"measurable_impression\",\n    finalizeFlagsUpdate: \"abandon\",\n    convertNumberToString: \"engagedview\",\n    IMPRESSION: \"impression\",\n    StorageField: \"creativeview\",\n    LOADED: \"loaded\",\n    PROGRESS: \"progress\",\n    createObjectURLWithValidation: \"close\",\n    safeURLPattern: \"collapse\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    tf: \"custom_metric_viewable\",\n    transformElementAtIndex: \"audio_audible\",\n    updateOrRemoveElement: \"audio_measurable\",\n    transformAndReplaceArray: \"audio_impression\"\n  };\n  var fp = \"start firstquartile midpoint thirdquartile resume loaded\".split(\" \");\n  var gp = [\"start\", \"firstquartile\", \"midpoint\", \"thirdquartile\"];\n  var httpProtocol = [\"abandon\"];\n  var ip = {\n    UNKNOWN: -1,\n    stringOrNull: 0,\n    FIRST_QUARTILE: 1,\n    MIDPOINT: 2,\n    THIRD_QUARTILE: 3,\n    COMPLETE: 4,\n    parseData: 5,\n    PAUSE: 6,\n    returnNonNull: 7,\n    SKIPPED: 8,\n    VIEWABLE_IMPRESSION: 9,\n    finalizeAdAttributes: 10,\n    getAdPropertyFallbackNumeric: 11,\n    FULLSCREEN: 12,\n    vf: 13,\n    convertSafeInteger: 14,\n    optionalString: 15,\n    finalizeFlagsUpdate: 16,\n    convertNumberToString: 17,\n    IMPRESSION: 18,\n    StorageField: 19,\n    LOADED: 20,\n    tf: 21,\n    qf: 22,\n    replaceArrayIfNotArray: 23,\n    transformAndReplaceArray: 27,\n    updateOrRemoveElement: 28,\n    transformElementAtIndex: 29\n  };\n  var MraidMethods = {\n    invalidClosureURL: \"addEventListener\",\n    truncateString: \"getMaxSize\",\n    repeatString: \"getScreenSize\",\n    stringifyNullable: \"getState\",\n    randomInt: \"getVersion\",\n    getParameterFromUrl: \"removeEventListener\",\n    removeElement: \"isViewable\"\n  };\n  var getMraidContext = function (generatorWrapper) {\n    var value = generatorWrapper !== generatorWrapper.top;\n    var CustomMap = generatorWrapper.top === getTopAccessibleContext(generatorWrapper);\n    var findEntry = -1;\n    var iterateEntries = 0;\n    if (value && CustomMap && generatorWrapper.top.mraid) {\n      findEntry = 3;\n      var createCircularNode = generatorWrapper.top.mraid;\n    } else if (createCircularNode = generatorWrapper.mraid) {\n      if (value) {\n        if (CustomMap) {\n          findEntry = 2;\n        } else {\n          findEntry = 1;\n        }\n      } else {\n        findEntry = 0;\n      }\n    } else {\n      findEntry = -1;\n    }\n    if (createCircularNode) {\n      if (!createCircularNode.IS_GMA_SDK) {\n        iterateEntries = 2;\n      }\n      if (!everyInObject(function (entryIdCounter) {\n        return typeof createCircularNode[entryIdCounter] === \"function\";\n      })) {\n        iterateEntries = 1;\n      }\n    }\n    return {\n      finalizeGenerator: createCircularNode,\n      finalBrowserVersion: iterateEntries,\n      everyInObject: findEntry\n    };\n  };\n  var isElementFromPointSupported = function () {\n    var generatorWrapper = window.document;\n    return generatorWrapper && typeof generatorWrapper.elementFromPoint === \"function\";\n  };\n  function calculateViewportSize(generatorWrapper, value, CustomMap) {\n    try {\n      if (generatorWrapper) {\n        value = value.top;\n      }\n      var findEntry = value;\n      if (generatorWrapper && findEntry !== null && findEntry != findEntry.top) {\n        findEntry = findEntry.top;\n      }\n      try {\n        var iterateEntries = (undefined === CustomMap ? 0 : CustomMap) ? new Size(findEntry.innerWidth, findEntry.innerHeight).roundRectangle() : getViewportSize(findEntry || window).roundRectangle();\n      } catch (currentEntry) {\n        iterateEntries = new Size(-12245933, -12245933);\n      }\n      generatorWrapper = iterateEntries;\n      var createCircularNode = generatorWrapper.height;\n      var entryIdCounter = generatorWrapper.width;\n      if (-12245933 === entryIdCounter) {\n        return new handleThenable(entryIdCounter, entryIdCounter, entryIdCounter, entryIdCounter);\n      }\n      var key = getDocumentScrollCoordinate(getDomHelper(value.document).entryIdCounter);\n      var value = key.inheritPrototype;\n      var entry = key.globalScope;\n      return new handleThenable(entry, value + entryIdCounter, entry + createCircularNode, value);\n    } catch (currentEntry) {\n      return new handleThenable(-12245933, -12245933, -12245933, -12245933);\n    }\n  }\n  var applyStyleOrRemove = function (generatorWrapper, value) {\n    if (typeof value === \"string\") {\n      if (value = getStyleProperty(generatorWrapper, value)) {\n        generatorWrapper.style[value] = undefined;\n      }\n    } else {\n      for (var CustomMap in value) {\n        var findEntry = generatorWrapper;\n        var iterateEntries = value[CustomMap];\n        var createCircularNode = getStyleProperty(findEntry, CustomMap);\n        if (createCircularNode) {\n          findEntry.style[createCircularNode] = iterateEntries;\n        }\n      }\n    }\n  };\n  var styleCache = {};\n  var getStyleProperty = function (generatorWrapper, value) {\n    var CustomMap = styleCache[value];\n    if (!CustomMap) {\n      var findEntry = camelCaseFromDash(value);\n      CustomMap = findEntry;\n      if (undefined === generatorWrapper.style[findEntry]) {\n        findEntry = (isWebKit ? \"Webkit\" : isGecko ? \"Moz\" : isIE ? \"ms\" : null) + capitalizeFirstLetter(findEntry);\n        if (undefined !== generatorWrapper.style[findEntry]) {\n          CustomMap = findEntry;\n        }\n      }\n      styleCache[value] = CustomMap;\n    }\n    return CustomMap;\n  };\n  var getStyleValue = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.style[camelCaseFromDash(value)];\n    if (typeof CustomMap !== \"undefined\") {\n      return CustomMap;\n    } else {\n      return generatorWrapper.style[getStyleProperty(generatorWrapper, value)] || \"\";\n    }\n  };\n  var getComputedStyleValue = function (generatorWrapper, value) {\n    var CustomMap = getDocument(generatorWrapper);\n    if (CustomMap.defaultView && CustomMap.defaultView.getComputedStyle && (generatorWrapper = CustomMap.defaultView.getComputedStyle(generatorWrapper, null))) {\n      return generatorWrapper[value] || generatorWrapper.getPropertyValue(value) || \"\";\n    } else {\n      return \"\";\n    }\n  };\n  var getElementRect = function (generatorWrapper) {\n    try {\n      return generatorWrapper.getBoundingClientRect();\n    } catch (value) {\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n  };\n  var getAbsolutePosition = function (generatorWrapper) {\n    var value = getDocument(generatorWrapper);\n    var CustomMap = new Coordinate(0, 0);\n    if (generatorWrapper == (value ? getDocument(value) : document).documentElement) {\n      return CustomMap;\n    }\n    generatorWrapper = getElementRect(generatorWrapper);\n    value = getDocumentScrollCoordinate(getDomHelper(value).entryIdCounter);\n    CustomMap.inheritPrototype = generatorWrapper.left + value.inheritPrototype;\n    CustomMap.globalScope = generatorWrapper.top + value.globalScope;\n    return CustomMap;\n  };\n  var calculateFrameOffset = function (generatorWrapper, value) {\n    var CustomMap = new Coordinate(0, 0);\n    var findEntry = getWindowForDocument(getDocument(generatorWrapper));\n    if (!tryNoopFunction(findEntry, \"parent\")) {\n      return CustomMap;\n    }\n    do {\n      if (findEntry == value) {\n        var iterateEntries = getAbsolutePosition(generatorWrapper);\n      } else {\n        iterateEntries = getElementRect(generatorWrapper);\n        iterateEntries = new Coordinate(iterateEntries.left, iterateEntries.top);\n      }\n      CustomMap.inheritPrototype += iterateEntries.inheritPrototype;\n      CustomMap.globalScope += iterateEntries.globalScope;\n    } while (findEntry && findEntry != value && findEntry != findEntry.parent && (generatorWrapper = findEntry.frameElement) && (findEntry = findEntry.parent));\n    return CustomMap;\n  };\n  var getFullSize = function () {\n    var generatorWrapper = \"100%\";\n    if (typeof generatorWrapper == \"number\") {\n      generatorWrapper = Math.roundRectangle(generatorWrapper) + \"px\";\n    }\n    return generatorWrapper;\n  };\n  var getElementSizeIfVisible = function (generatorWrapper) {\n    var value = calculateElementSize,\n      CustomMap;\n    if (!(CustomMap = getComputedStyleValue(generatorWrapper, \"display\"))) {\n      if (generatorWrapper.currentStyle) {\n        CustomMap = generatorWrapper.currentStyle.display;\n      } else {\n        CustomMap = null;\n      }\n    }\n    if ((CustomMap || generatorWrapper.style && generatorWrapper.style.display) != \"none\") {\n      return value(generatorWrapper);\n    }\n    CustomMap = generatorWrapper.style;\n    var findEntry = CustomMap.display;\n    var iterateEntries = CustomMap.visibility;\n    var createCircularNode = CustomMap.position;\n    CustomMap.visibility = \"hidden\";\n    CustomMap.position = \"absolute\";\n    CustomMap.display = \"inline\";\n    generatorWrapper = value(generatorWrapper);\n    CustomMap.display = findEntry;\n    CustomMap.position = createCircularNode;\n    CustomMap.visibility = iterateEntries;\n    return generatorWrapper;\n  };\n  var calculateElementSize = function (generatorWrapper) {\n    var value = generatorWrapper.offsetWidth;\n    var CustomMap = generatorWrapper.offsetHeight;\n    var findEntry = isWebKit && !value && !CustomMap;\n    if ((undefined === value || findEntry) && generatorWrapper.getBoundingClientRect) {\n      generatorWrapper = getElementRect(generatorWrapper);\n      return new Size(generatorWrapper.right - generatorWrapper.left, generatorWrapper.bottom - generatorWrapper.top);\n    } else {\n      return new Size(value, CustomMap);\n    }\n  };\n  var calculateInnerSize = function (generatorWrapper) {\n    var value = new Size(generatorWrapper.offsetWidth, generatorWrapper.offsetHeight);\n    var CustomMap = getComputedStyleValue(generatorWrapper, \"paddingLeft\");\n    var findEntry = getComputedStyleValue(generatorWrapper, \"paddingRight\");\n    var iterateEntries = getComputedStyleValue(generatorWrapper, \"paddingTop\");\n    var createCircularNode = getComputedStyleValue(generatorWrapper, \"paddingBottom\");\n    CustomMap = new handleThenable(parseFloat(iterateEntries), parseFloat(findEntry), parseFloat(createCircularNode), parseFloat(CustomMap));\n    findEntry = getComputedStyleValue(generatorWrapper, \"borderLeftWidth\");\n    iterateEntries = getComputedStyleValue(generatorWrapper, \"borderRightWidth\");\n    createCircularNode = getComputedStyleValue(generatorWrapper, \"borderTopWidth\");\n    generatorWrapper = getComputedStyleValue(generatorWrapper, \"borderBottomWidth\");\n    generatorWrapper = new handleThenable(parseFloat(createCircularNode), parseFloat(iterateEntries), parseFloat(generatorWrapper), parseFloat(findEntry));\n    return new Size(value.width - generatorWrapper.left - CustomMap.left - CustomMap.right - generatorWrapper.right, value.height - generatorWrapper.top - CustomMap.top - CustomMap.bottom - generatorWrapper.bottom);\n  };\n  var roundToPrecision = function (generatorWrapper, value) {\n    value = Math.pow(10, value);\n    return Math.floorRectangle(generatorWrapper * value) / value;\n  };\n  function traverseDomAndApply(generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper) {\n      return {\n        value: findEntry,\n        done: false\n      };\n    }\n    findEntry = value(findEntry, generatorWrapper);\n    var iterateEntries = CustomMap(findEntry, generatorWrapper);\n    if (!iterateEntries && tryNoopFunction(generatorWrapper, \"parentElement\")) {\n      return traverseDomAndApply(getParentElement(generatorWrapper), value, CustomMap, findEntry);\n    } else {\n      return {\n        done: iterateEntries,\n        value: findEntry\n      };\n    }\n  }\n  var traverseFramesAndApply = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper) {\n      return findEntry;\n    }\n    findEntry = traverseDomAndApply(generatorWrapper, value, CustomMap, findEntry);\n    if (!findEntry.done) {\n      try {\n        var iterateEntries = getDocument(generatorWrapper);\n        var createCircularNode = iterateEntries && getWindowForDocument(iterateEntries);\n        return traverseFramesAndApply(createCircularNode && createCircularNode.frameElement, value, CustomMap, findEntry.value);\n      } catch (entryIdCounter) {}\n    }\n    return findEntry.value;\n  };\n  function isElementHidden(generatorWrapper) {\n    var value = !isIE || supportsHtml5();\n    return traverseFramesAndApply(generatorWrapper, function (CustomMap, findEntry) {\n      CustomMap = tryNoopFunction(findEntry, \"style\") && findEntry.style && getStyleValue(findEntry, \"visibility\");\n      return {\n        hidden: CustomMap === \"hidden\",\n        visible: value && CustomMap === \"visible\"\n      };\n    }, function (CustomMap) {\n      return CustomMap.hidden || CustomMap.visible;\n    }, {\n      hidden: false,\n      visible: false\n    }).hidden;\n  }\n  var isElementNotDisplayedOrHidden = function (generatorWrapper) {\n    if (traverseFramesAndApply(generatorWrapper, function (value, CustomMap) {\n      return !(!tryNoopFunction(CustomMap, \"style\") || !CustomMap.style || getStyleValue(CustomMap, \"display\") !== \"none\");\n    }, function (value) {\n      return value;\n    }, false)) {\n      return true;\n    } else {\n      return isElementHidden(generatorWrapper);\n    }\n  };\n  var convertRectToBox = function (generatorWrapper) {\n    return new handleThenable(generatorWrapper.top, generatorWrapper.right, generatorWrapper.bottom, generatorWrapper.left);\n  };\n  var convertDimensionsToBox = function (generatorWrapper) {\n    var value = generatorWrapper.top || 0;\n    var CustomMap = generatorWrapper.left || 0;\n    return new handleThenable(value, CustomMap + (generatorWrapper.width || 0), value + (generatorWrapper.height || 0), CustomMap);\n  };\n  var isValidOpacity = function (generatorWrapper) {\n    return generatorWrapper != null && generatorWrapper >= 0 && generatorWrapper <= 1;\n  };\n  function isSmartTV() {\n    var generatorWrapper = getUserAgent();\n    if (generatorWrapper) {\n      if (someElement(\"AmazonWebAppPlatform;Android TV;Apple TV;AppleTV;BRAVIA;BeyondTV;Freebox;GoogleTV;HbbTV;LongTV;MiBOX;MiTV;NetCast.TV;Netcast;Opera TV;PANASONIC;POV_TV;SMART-TV;SMART_TV;SWTV;Smart TV;SmartTV;TV Store;UnionTV;WebOS\".split(\";\"), function (value) {\n        return includesIgnoreCase(generatorWrapper, value);\n      }) || includesIgnoreCase(generatorWrapper, \"OMI/\") && !includesIgnoreCase(generatorWrapper, \"XiaoMi/\")) {\n        return true;\n      } else {\n        return includesIgnoreCase(generatorWrapper, \"Presto\") && includesIgnoreCase(generatorWrapper, \"Linux\") && !includesIgnoreCase(generatorWrapper, \"X11\") && !includesIgnoreCase(generatorWrapper, \"Android\") && !includesIgnoreCase(generatorWrapper, \"Mobi\");\n      }\n    } else {\n      return false;\n    }\n  }\n  function isAppleTV() {\n    var generatorWrapper = getUserAgent();\n    return includesIgnoreCase(generatorWrapper, \"AppleTV\") || includesIgnoreCase(generatorWrapper, \"Apple TV\") || includesIgnoreCase(generatorWrapper, \"CFNetwork\") || includesIgnoreCase(generatorWrapper, \"tvOS\");\n  }\n  function isTVDevice() {\n    var generatorWrapper;\n    if (!(generatorWrapper = includesIgnoreCase(getUserAgent(), \"CrKey\") && !(includesIgnoreCase(getUserAgent(), \"CrKey\") && includesIgnoreCase(getUserAgent(), \"SmartSpeaker\")) || includesIgnoreCase(getUserAgent(), \"PlayStation\") || includesIgnoreCase(getUserAgent(), \"Roku\") || isSmartTV() || includesIgnoreCase(getUserAgent(), \"Xbox\") || isAppleTV())) {\n      generatorWrapper = getUserAgent();\n      generatorWrapper = includesIgnoreCase(generatorWrapper, \"sdk_google_atv_x86\") || includesIgnoreCase(generatorWrapper, \"Android TV\");\n    }\n    return generatorWrapper;\n  }\n  var EnvironmentDetails = function () {\n    this.setTimeoutWrapper = !isAccessibleFrame(window.top);\n    this.onFulfilled = isTablet() || isMobile();\n    var generatorWrapper = collectAncestorOrigins();\n    if (generatorWrapper.length > 0 && generatorWrapper[generatorWrapper.length - 1] != null && generatorWrapper[generatorWrapper.length - 1].url != null) {\n      generatorWrapper = ((generatorWrapper = generatorWrapper[generatorWrapper.length - 1].url.match(urlRegex)[3] || null) ? decodeURI(generatorWrapper) : generatorWrapper) || \"\";\n    } else {\n      generatorWrapper = \"\";\n    }\n    this.domain = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new Size(0, 0);\n    this.createDeferred = new Size(0, 0);\n    this.settlePromise = new handleThenable(0, 0, 0, 0);\n    this.frameOffset = new Coordinate(0, 0);\n    this.isDone = 0;\n    this.executeCallbacks = false;\n    this.tasks = !(!window || !getMraidContext(window).finalizeGenerator);\n    initializeAdEnvironment(this);\n  };\n  var updateScreenSize = function (generatorWrapper, value) {\n    if (value && value.screen) {\n      generatorWrapper.handleAsync = new Size(value.screen.width, value.screen.height);\n    }\n  };\n  var updateViewportSize = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter ? new Size(generatorWrapper.entryIdCounter.getRectangleWidth(), generatorWrapper.entryIdCounter.getRectangleHeight()) : new Size(0, 0);\n    if (undefined === value) {\n      value = window;\n    } else {\n      value = value;\n    }\n    if (value !== null && value != value.top) {\n      value = value.top;\n    }\n    var findEntry = 0;\n    var iterateEntries = 0;\n    try {\n      var createCircularNode = value.document;\n      var entryIdCounter = createCircularNode.body;\n      var key = createCircularNode.documentElement;\n      if (createCircularNode.compatMode == \"CSS1Compat\" && key.scrollHeight) {\n        if (key.scrollHeight != CustomMap.height) {\n          findEntry = key.scrollHeight;\n        } else {\n          findEntry = key.offsetHeight;\n        }\n        if (key.scrollWidth != CustomMap.width) {\n          iterateEntries = key.scrollWidth;\n        } else {\n          iterateEntries = key.offsetWidth;\n        }\n      } else {\n        var value = key.scrollHeight;\n        var entry = key.scrollWidth;\n        var currentEntry = key.offsetHeight;\n        var foundEntry = key.offsetWidth;\n        if (key.clientHeight != currentEntry) {\n          value = entryIdCounter.scrollHeight;\n          entry = entryIdCounter.scrollWidth;\n          currentEntry = entryIdCounter.offsetHeight;\n          foundEntry = entryIdCounter.offsetWidth;\n        }\n        if (value > CustomMap.height) {\n          if (value > currentEntry) {\n            findEntry = value;\n            iterateEntries = entry;\n          } else {\n            findEntry = currentEntry;\n            iterateEntries = foundEntry;\n          }\n        } else if (value < currentEntry) {\n          findEntry = value;\n          iterateEntries = entry;\n        } else {\n          findEntry = currentEntry;\n          iterateEntries = foundEntry;\n        }\n      }\n      var resolveFunction = new Size(iterateEntries, findEntry);\n    } catch (rejectFunction) {\n      resolveFunction = new Size(-12245933, -12245933);\n    }\n    generatorWrapper.createDeferred = resolveFunction;\n  };\n  var initializeAdEnvironment = function (generatorWrapper) {\n    if (window && window.document) {\n      generatorWrapper.settlePromise = calculateViewportSize(false, window, generatorWrapper.onFulfilled);\n      generatorWrapper.entryIdCounter = calculateViewportSize(true, window, generatorWrapper.onFulfilled);\n      updateViewportSize(generatorWrapper, window);\n      updateScreenSize(generatorWrapper, window);\n    }\n  };\n  var isAdPlayingOrMuted = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    if (generatorWrapper.isDone > 0 || generatorWrapper.executeCallbacks) {\n      return true;\n    }\n    generatorWrapper = GetEnvironment().tasks.isAdVisible();\n    var value = getVisibilityStateCode(document) === 0;\n    return generatorWrapper || value;\n  };\n  var getAdEnvironmentInstance = function () {\n    return getSingletonInstance(EnvironmentDetails);\n  };\n  var AdSampling = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = 0;\n    this.entryIdCounter = null;\n  };\n  AdSampling.prototype.cancel = function () {\n    GetEnvironment().clearTimeout(this.entryIdCounter);\n    this.entryIdCounter = null;\n  };\n  var startAdSampling = function (generatorWrapper) {\n    var value = GetEnvironment();\n    var CustomMap = getAdEnvironment().entryIdCounter.entryIdCounter;\n    generatorWrapper.entryIdCounter = value.setTimeout(MonitorFunction(CustomMap, To(143, function () {\n      generatorWrapper.tasks++;\n      generatorWrapper.setTimeoutWrapper.performSample();\n    })), bp());\n  };\n  var AdController = function (generatorWrapper, value, CustomMap) {\n    this.setTimeoutWrapper = generatorWrapper;\n    if (undefined === CustomMap) {\n      this.assignPolyfill = \"na\";\n    } else {\n      this.assignPolyfill = CustomMap;\n    }\n    this.handleAsync = [];\n    this.Generator = false;\n    this.createDeferred = new AdEvent(-1, true, this);\n    this.entryIdCounter = this;\n    this.executeCallbacks = value;\n    this.resolvePromise = this.dispatchUnhandledRejection = false;\n    this.year = \"uk\";\n    this.tryCall = false;\n    this.onFulfilled = true;\n  };\n  AdController.prototype.handleThenable = function () {\n    return false;\n  };\n  AdController.prototype.initializeMraid = function () {\n    return this.Generator = true;\n  };\n  AdController.prototype.isChromiumBased = function () {\n    return this.entryIdCounter.year;\n  };\n  AdController.prototype.removeElement = function () {\n    return this.entryIdCounter.resolvePromise;\n  };\n  var activateAdController = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.resolvePromise || (undefined === CustomMap ? 0 : CustomMap)) {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.year = value;\n      generatorWrapper.executeCallbacks = 0;\n      if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n        updateAdComponents(generatorWrapper);\n      }\n    }\n  };\n  AdController.prototype.getAdName = function () {\n    return this.entryIdCounter.assignPolyfill;\n  };\n  AdController.prototype.encodeString = function () {\n    return this.entryIdCounter.createIterator();\n  };\n  AdController.prototype.createIterator = function () {\n    return {};\n  };\n  AdController.prototype.uniqueIdProperty = function () {\n    return this.entryIdCounter.executeCallbacks;\n  };\n  var registerAdComponent = function (generatorWrapper, value) {\n    if (!containsElement(generatorWrapper.handleAsync, value)) {\n      generatorWrapper.handleAsync.push(value);\n      value.isAndroid(generatorWrapper.entryIdCounter);\n      value.deferError(generatorWrapper.createDeferred);\n      if (value.getClosureFlagValue()) {\n        generatorWrapper.dispatchUnhandledRejection = true;\n      }\n    }\n  };\n  AdController.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    generatorWrapper.entryIdCounter = calculateViewportSize(true, this.setTimeoutWrapper, generatorWrapper.onFulfilled);\n  };\n  AdController.prototype.totalAdBufferingTime = function () {\n    updateScreenSize(getAdEnvironmentInstance(), this.setTimeoutWrapper);\n  };\n  AdController.prototype.definePropertyPolyfill = function () {\n    return this.createDeferred.entryIdCounter;\n  };\n  var refreshAdEnvironment = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    generatorWrapper.totalAdBufferingTime();\n    generatorWrapper.updateMaxSize();\n    var value = getAdEnvironmentInstance();\n    value.settlePromise = calculateViewportSize(false, generatorWrapper.setTimeoutWrapper, value.onFulfilled);\n    updateViewportSize(getAdEnvironmentInstance(), generatorWrapper.setTimeoutWrapper);\n    generatorWrapper.createDeferred.entryIdCounter = generatorWrapper.definePropertyPolyfill();\n  };\n  AdController.prototype.performSample = function () {};\n  AdController.prototype.isActive = function () {\n    return this.entryIdCounter.onFulfilled;\n  };\n  var checkAdComponentsActive = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync.length) {\n      generatorWrapper.dispatchUnhandledRejection = someElement(generatorWrapper.handleAsync, function (value) {\n        return value.getClosureFlagValue();\n      });\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = false;\n    }\n  };\n  var notifyAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.deferError(generatorWrapper.createDeferred);\n    });\n  };\n  var updateAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.isAndroid(generatorWrapper.entryIdCounter);\n    });\n    if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n      notifyAdComponents(generatorWrapper);\n    }\n  };\n  setTimeoutWrapper = AdController.prototype;\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper.uniqueIdProperty() >= this.executeCallbacks) {\n      this.entryIdCounter = generatorWrapper;\n    } else {\n      this.entryIdCounter = this;\n    }\n    if (value !== this.entryIdCounter) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    } else if (this.onFulfilled !== this.entryIdCounter.onFulfilled) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    }\n  };\n  setTimeoutWrapper.deferError = function (generatorWrapper) {\n    if (generatorWrapper.tasks === this.entryIdCounter) {\n      var value = this.createDeferred;\n      var CustomMap = this.dispatchUnhandledRejection;\n      if (CustomMap = generatorWrapper && (undefined === CustomMap || !CustomMap || value.volume == generatorWrapper.volume) && value.setTimeoutWrapper == generatorWrapper.setTimeoutWrapper) {\n        value = value.entryIdCounter;\n        CustomMap = generatorWrapper.entryIdCounter;\n        if (value == CustomMap) {\n          CustomMap = true;\n        } else if (value && CustomMap) {\n          CustomMap = value.top == CustomMap.top && value.right == CustomMap.right && value.bottom == CustomMap.bottom && value.left == CustomMap.left;\n        } else {\n          CustomMap = false;\n        }\n      }\n      this.createDeferred = generatorWrapper;\n      if (!CustomMap) {\n        notifyAdComponents(this);\n      }\n    }\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.tryCall = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.tryCall;\n  };\n  var AdComponent = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new handleThenable(0, 0, 0, 0);\n    this.tasks = value;\n    this.AdEnvironmentConfig = CustomMap;\n    this.resolvePromise = findEntry;\n    this.handleThenable = false;\n    this.timestamp = -1;\n    this.settlePromise = new AdTracker(value.createDeferred, this.entryIdCounter, new handleThenable(0, 0, 0, 0), 0, 0, accumulatePosition(), 0);\n  };\n  setTimeoutWrapper = AdComponent.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    return true;\n  };\n  setTimeoutWrapper.isOpera = function () {};\n  setTimeo"