"ed = function (generatorWrapper, value) {\n    var CustomMap = {};\n    Object.assign(CustomMap, generatorWrapper);\n    if (value) {\n      CustomMap.disableClickThrough = true;\n    }\n    return CustomMap;\n  };\n  AdDisplayOptions.prototype.append = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = generatorWrapper.shouldAutoAlign;\n      if (value != null) {\n        this.shouldAutoAlign = value;\n      }\n      value = parseInteger(generatorWrapper.preferredBitrate);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.preferredBitrate = value;\n      }\n      this.disableClickThrough = generatorWrapper.disableClickThrough || this.disableClickThrough;\n      this.disableUi = generatorWrapper.disableUi || this.disableUi;\n      this.shouldEnablePreloading = generatorWrapper.shouldEnablePreloading || this.shouldEnablePreloading;\n      if ((value = generatorWrapper.supportedMimeTypes) && value.length !== 0) {\n        this.supportedMimeTypes = value;\n      }\n      value = parseInteger(generatorWrapper.startAdsAfterTime);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.startAdsAfterTime = value;\n      }\n      this.shouldRestorePlaybackStateAfterAdBreak = generatorWrapper.shouldRestorePlaybackStateAfterAdBreak || this.shouldRestorePlaybackStateAfterAdBreak;\n      value = parseInteger(generatorWrapper.videoLoadTimeout);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.videoLoadTimeout = value;\n      }\n      this.customUiElements = generatorWrapper.customUiElements || this.customUiElements;\n      this.shouldUseLearnMoreButton = generatorWrapper.shouldUseLearnMoreButton || this.shouldUseLearnMoreButton;\n      this.shouldStyleLinearAds = generatorWrapper.shouldStyleLinearAds || this.shouldStyleLinearAds;\n      this.shouldStyleNonLinearAds = generatorWrapper.shouldStyleNonLinearAds || this.shouldStyleNonLinearAds;\n      if (generatorWrapper.shouldUseDefaultVideoAdUi === false) {\n        this.shouldUseDefaultVideoAdUi = false;\n      } else {\n        this.shouldUseDefaultVideoAdUi = this.shouldUseDefaultVideoAdUi;\n      }\n    }\n  };\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_rendering_settings.AdsRenderingSettings.AUTO_SCALE\", -1);\n  var AdRequest = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequest, AdElement);\n  var AdResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var AdSlot = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSlot, AdElement);\n  var AdSignal = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSignal, AdElement);\n  var AdDimensions = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdDimensions, AdElement);\n  var getAdDimensions = function (generatorWrapper) {\n    return vf(generatorWrapper, QueryWrapper, 5);\n  };\n  AdDimensions.prototype.getRectangleWidth = function () {\n    return getNumericAdProperty(this, 9);\n  };\n  AdDimensions.prototype.getRectangleHeight = function () {\n    return getNumericAdProperty(this, 10);\n  };\n  var AdDimensionsRegistry = parseAndValidateArray(AdDimensions);\n  AdDimensions.findGlobalObject = [3, 7, 27, 11, 32];\n  function processAdResponse(generatorWrapper) {\n    var value = generatorWrapper.isEmptyObject;\n    var CustomMap = generatorWrapper.performanceApi;\n    var findEntry = generatorWrapper.bj;\n    var iterateEntries = generatorWrapper.auctionNonce;\n    var createCircularNode = undefined === generatorWrapper.getAdPropertyNumeric ? 0 : generatorWrapper.getAdPropertyNumeric;\n    var entryIdCounter = generatorWrapper.cj;\n    var key = generatorWrapper.getDeobfuscationId;\n    generatorWrapper = !getBooleanAdProperty(value, 14);\n    for (var value = {}, entry = getIterator(parseData(value, AdResponse, 7)), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n      currentEntry = currentEntry.value;\n      var foundEntry = {};\n      var resolveFunction = undefined;\n      var rejectFunction = (resolveFunction = findEntry) == null ? undefined : resolveFunction.arrayTransformationInstance.keysOfObject.findKeyInObject.updateAdProperty;\n      resolveFunction = dispatchUnhandledRejection(currentEntry, 1);\n      if (dispatchUnhandledRejection(currentEntry, 2).length) {\n        try {\n          foundEntry = JSON.parse(dispatchUnhandledRejection(currentEntry, 2));\n          if (100 * secureRandom() < 1) {\n            var user = undefined;\n            if (!((user = rejectFunction) == null)) {\n              user.setFlag34({\n                updateLengthPrefix: resolveFunction,\n                status: \"SUCCESS\",\n                parseNullableIntEnum: 100\n              });\n            }\n          }\n        } catch (entryNode) {\n          user = undefined;\n          if (!((user = rejectFunction) == null)) {\n            user.setFlag34({\n              updateLengthPrefix: resolveFunction,\n              status: \"ERROR\",\n              parseNullableIntEnum: 1\n            });\n          }\n        }\n      } else {\n        user = undefined;\n        if (!((user = rejectFunction) == null)) {\n          user.setFlag34({\n            updateLengthPrefix: resolveFunction,\n            status: \"EMPTY\",\n            parseNullableIntEnum: 1\n          });\n        }\n      }\n      value[dispatchUnhandledRejection(currentEntry, 1)] = foundEntry;\n    }\n    if (findEntry = fetchData(value, QueryPayload, 6)) {\n      value[\"https://googleads.g.doubleclick.net\"] = findEntry.toJSON();\n      value[\"https://td.doubleclick.net\"] = findEntry.toJSON();\n    }\n    entry = {};\n    findEntry = parseData(value, AdSignal, 11);\n    findEntry = getIterator(findEntry);\n    for (currentEntry = findEntry.next(); !currentEntry.done; currentEntry = findEntry.next()) {\n      currentEntry = currentEntry.value;\n      entry[dispatchUnhandledRejection(currentEntry, 1)] = getNumericAdProperty(currentEntry, 2);\n    }\n    currentEntry = {};\n    if (getNumericAdProperty(value, 21) !== 0) {\n      currentEntry[\"*\"] = getNumericAdProperty(value, 21);\n    }\n    if (parseData(value, AdSlot, 32).length > 0) {\n      var profileData = {};\n      findEntry = getIterator(parseData(value, AdSlot, 32));\n      for (foundEntry = findEntry.next(); !foundEntry.done; foundEntry = findEntry.next()) {\n        foundEntry = foundEntry.value;\n        profileData[dispatchUnhandledRejection(foundEntry, 1)] = getNumericAdProperty(foundEntry, 2);\n      }\n    }\n    foundEntry = {};\n    if (parseNullableUInt32(getTransformedElement(value, 18)) != null) {\n      foundEntry[\"https://googleads.g.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n      foundEntry[\"https://td.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n    }\n    findEntry = value.getSingletonInstance;\n    rejectFunction = getRawBitFlags(findEntry);\n    findEntry = transformAndAddElement(findEntry, rejectFunction, getElementAtIndex(findEntry, rejectFunction, 24), 24, AdRequest);\n    findEntry = getIterator(findEntry);\n    for (rejectFunction = findEntry.next(); !rejectFunction.done; rejectFunction = findEntry.next()) {\n      resolveFunction = rejectFunction.value;\n      if (getAdPropertyNumericValue(resolveFunction[1], 4)) {\n        rejectFunction = resolveFunction[0];\n        resolveFunction = getAdPropertyNumericValue(resolveFunction[1], 4);\n        foundEntry[rejectFunction] = resolveFunction;\n      }\n    }\n    findEntry = dispatchUnhandledRejection(value, 1).split(\"/td/\")[0];\n    if ((rejectFunction = fetchData(value, QueryWrapper, 5)) == null) {\n      rejectFunction = undefined;\n    } else {\n      resolveFunction = rejectFunction.getSingletonInstance;\n      rejectFunction = createInstanceWithTemporaryData(rejectFunction.constructor, transformWithFlags(resolveFunction, getRawBitFlags(resolveFunction), false));\n    }\n    var isDone;\n    if (rejectFunction != null && (isDone = fetchData(rejectFunction, QueryHeader, 5)) != null) {\n      updateElement(isDone, 2);\n    }\n    isDone = Object;\n    resolveFunction = isDone.assign;\n    user = dispatchUnhandledRejection(value, 1);\n    var stream = dispatchUnhandledRejection(value, 2);\n    var keyArray = transformArrayElements(value, 3, stringOrNull);\n    profileData = resolveFunction.call(isDone, {}, {\n      seller: findEntry,\n      decisionLogicUrl: user,\n      trustedScoringSignalsUrl: stream,\n      interestGroupBuyers: keyArray,\n      sellerExperimentGroupId: getAdPropertyNumericValue(value, 17),\n      auctionSignals: JSON.parse(dispatchUnhandledRejection(value, 4) || \"{}\"),\n      sellerSignals: (rejectFunction == null ? undefined : rejectFunction.toJSON()) || [],\n      sellerTimeout: getNumericAdProperty(value, 15) || 50,\n      perBuyerExperimentGroupIds: foundEntry,\n      perBuyerSignals: value,\n      perBuyerTimeouts: entry,\n      perBuyerCumulativeTimeouts: currentEntry\n    }, profileData ? {\n      perBuyerGroupLimits: profileData\n    } : {}, generatorWrapper ? {\n      resolveToConfig: generatorWrapper\n    } : {});\n    if (value == null ? 0 : getBooleanAdProperty(getAdDimensions(value), 25)) {\n      profileData.sellerCurrency = \"USD\";\n      value = Object;\n      isDone = value.fromEntries;\n      entry = transformElementAtIndex(value, 22, getStringOrEmpty);\n      profileData.perBuyerCurrencies = isDone.call(value, entry);\n    }\n    if (dispatchUnhandledRejection(value, 28)) {\n      profileData.directFromSellerSignalsHeaderAdSlot = dispatchUnhandledRejection(value, 28);\n    }\n    if (isInterestGroupBuyerValid(profileData.interestGroupBuyers, key)) {\n      profileData.auctionReportBuyerKeys = profileData.interestGroupBuyers.map(mapBuyerToBigInt);\n      profileData.auctionReportBuyers = {\n        interestGroupCount: {\n          bucket: BigInt(0),\n          scaleRectangle: 1\n        },\n        bidCount: {\n          bucket: BigInt(1),\n          scaleRectangle: 1\n        },\n        totalGenerateBidLatency: {\n          bucket: BigInt(2),\n          scaleRectangle: 1\n        },\n        totalSignalsFetchLatency: {\n          bucket: BigInt(3),\n          scaleRectangle: 1\n        }\n      };\n      var getAdManager = undefined === getAdManager ? BigInt(0) : getAdManager;\n      profileData.auctionReportBuyerDebugModeConfig = {\n        enabled: true,\n        debugKey: getAdManager\n      };\n    }\n    if (iterateEntries) {\n      profileData.auctionNonce = iterateEntries;\n      profileData.additionalBids = Promise.resolve();\n    }\n    if (transformElementAtIndex(value, 33, getStringOrEmpty).size) {\n      profileData.deprecatedRenderURLReplacements = Object.fromEntries(transformElementAtIndex(value, 33, getStringOrEmpty).entries());\n      if (iterateEntries = profileData.deprecatedRenderURLReplacements[\"${RENDER_DATA_td.doubleclick.net_GDA}\"]) {\n        profileData.deprecatedRenderURLReplacements[\"${RENDER_DATA}\"] = iterateEntries;\n      }\n    }\n    switch (createCircularNode) {\n      case 1:\n        profileData.allSlotsRequestedSizes = [{\n          width: value.getRectangleWidth(),\n          height: value.getRectangleHeight()\n        }];\n    }\n    if (entryIdCounter) {\n      profileData.reportingTimeout = entryIdCounter;\n    }\n    createCircularNode = Object;\n    entryIdCounter = createCircularNode.assign;\n    iterateEntries = dispatchUnhandledRejection(value, 1);\n    getAdManager = getAdPropertyNumericValue(value, 17);\n    key = new QueryWrapper();\n    value = getAdDimensions(value);\n    if (undefined !== uf(value, QueryHeader, 5, false)) {\n      value = new QueryHeader();\n      isDone = getAdPropertyStringFallback(vf(getAdDimensions(value), QueryHeader, 5), 2);\n      value = updateOrRemoveElement(value, 2, convertToInt64(isDone), \"0\");\n      isDone = getAdPropertyStringFallback(vf(getAdDimensions(value), QueryHeader, 5), 4);\n      value = updateOrRemoveElement(value, 4, convertToInt64(isDone), \"0\");\n      finalizeAdAttributes(key, 5, value);\n    }\n    if (getAdDimensions(value).getEscapedQueryIdVariantC()) {\n      value = getAdDimensions(value).getEscapedQueryIdVariantC();\n      updateOrRemoveElement(key, 2, optionalString(value), \"\");\n    }\n    if (dispatchUnhandledRejection(getAdDimensions(value), 6)) {\n      value = dispatchUnhandledRejection(getAdDimensions(value), 6);\n      updateOrRemoveElement(key, 6, optionalString(value), \"\");\n    }\n    if (getBooleanAdProperty(getAdDimensions(value), 21)) {\n      updateOrRemoveElement(key, 21, parseNullableBoolean(true), false);\n    }\n    if (getBooleanAdProperty(getAdDimensions(value), 4)) {\n      updateOrRemoveElement(key, 4, parseNullableBoolean(true), false);\n    }\n    if (dispatchUnhandledRejection(getAdDimensions(value), 11)) {\n      value = dispatchUnhandledRejection(getAdDimensions(value), 11);\n      updateOrRemoveElement(key, 11, optionalString(value), \"\");\n    }\n    key = key.toJSON();\n    value = getNumericAdProperty(value, 15) || 50;\n    if (getBooleanAdProperty(value, 30)) {\n      if (CustomMap == null || !CustomMap.length) {\n        throw Error(\"top_td_without_component_auction\");\n      }\n    } else {\n      CustomMap = [profileData].concat(toArray(CustomMap != null ? CustomMap : []));\n    }\n    CustomMap = entryIdCounter.call(createCircularNode, {}, {\n      seller: findEntry,\n      decisionLogicUrl: iterateEntries,\n      sellerExperimentGroupId: getAdManager,\n      sellerSignals: key,\n      sellerTimeout: value,\n      interestGroupBuyers: [],\n      auctionSignals: {},\n      perBuyerExperimentGroupIds: {},\n      perBuyerSignals: {},\n      perBuyerTimeouts: {},\n      perBuyerCumulativeTimeouts: {},\n      componentAuctions: CustomMap\n    }, generatorWrapper ? {\n      resolveToConfig: generatorWrapper\n    } : {});\n    if (dispatchUnhandledRejection(value, 28)) {\n      CustomMap.directFromSellerSignalsHeaderAdSlot = dispatchUnhandledRejection(value, 28);\n    }\n    return CustomMap;\n  }\n  function isInterestGroupBuyerValid(generatorWrapper, value) {\n    return generatorWrapper.some(function (CustomMap) {\n      return mapBuyerToBigInt(CustomMap) !== BigInt(100);\n    }) && (value != null ? value : false);\n  }\n  function mapBuyerToBigInt(generatorWrapper) {\n    var value;\n    if ((value = new Map([[\"https://googleads.g.doubleclick.net\", BigInt(200)], [\"https://td.doubleclick.net\", BigInt(300)], [\"https://f.creativecdn.com\", BigInt(400)], [\"https://fledge.us.criteo.com\", BigInt(500)], [\"https://fledge.eu.criteo.com\", BigInt(600)], [\"https://fledge.as.criteo.com\", BigInt(700)]]).get(generatorWrapper)) != null) {\n      return value;\n    } else {\n      return BigInt(100);\n    }\n  }\n  var AdAuctionManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    var CustomMap = this;\n    this.tasks = value;\n    this.setTimeoutWrapper = function (findEntry) {\n      var iterateEntries = Date.now();\n      try {\n        var createCircularNode = runAdAuctionWithTimeout(CustomMap, findEntry.tdconfig);\n      } catch (entryIdCounter) {\n        createCircularNode = Promise.resolve({\n          isMacOS: false,\n          result: null\n        });\n      }\n      return createCircularNode.then(function (entryIdCounter) {\n        var key = new QueryMetadata();\n        key = setAdPropertyFromString(key, 1, iterateEntries);\n        key = setAdPropertyFromString(key, 2, Date.now());\n        var value = entryIdCounter.result;\n        entryIdCounter = entryIdCounter.isMacOS;\n        var entry;\n        if (typeof value === \"string\") {\n          value = value;\n        } else if ((entry = value == null ? undefined : value.url) != null) {\n          value = entry;\n        } else {\n          value = \"\";\n        }\n        entry = {};\n        entry.ffconfig = value;\n        entry.timeout = 500;\n        entry.auctioninterval = serializeData(key);\n        entry.isauctiontimeout = entryIdCounter;\n        return entry;\n      });\n    };\n    this.entryIdCounter = new AdEventObserver(generatorWrapper, \"fledge\");\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(AdAuctionManager, tryCall);\n  var runAdAuctionWithTimeout = function (generatorWrapper, value) {\n    value = AdDimensionsRegistry(value);\n    var CustomMap = processAdResponse({\n      isEmptyObject: value\n    });\n    value = createTimerPromise(500, null).then(function () {\n      return {\n        isMacOS: true,\n        result: null\n      };\n    });\n    generatorWrapper = generatorWrapper.tasks.runAdAuction(CustomMap).then(function (findEntry) {\n      return {\n        isMacOS: false,\n        result: findEntry\n      };\n    });\n    return Promise.race([value, generatorWrapper]);\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap) {\n    tryCall.call(this);\n    this.onFulfilled = generatorWrapper;\n    this.handleAsync = value;\n    this.isDone = CustomMap;\n    this.entryIdCounter = this.tasks = this.setTimeoutWrapper = null;\n    this.createDeferred = 0;\n    generatorWrapper = new EventDispatcher(this);\n    registerDisposable(this, generatorWrapper);\n    initializeAdManager(this);\n    generatorWrapper.window(this.handleAsync, \"adsManager\", this.dispatchUnhandledRejection);\n  };\n  inheritPrototype(AdManager, tryCall);\n  var setAdManagerListener = function (generatorWrapper, value) {\n    generatorWrapper.setTimeoutWrapper = value;\n    if (generatorWrapper.entryIdCounter && generatorWrapper.setTimeoutWrapper) {\n      setSessionClient(generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var initializeAdManager = function (generatorWrapper) {\n    loadOmsdkScript(generatorWrapper.onFulfilled).then(function (value) {\n      setupAdManagerWithConfig(generatorWrapper, value);\n      return;\n    }).catch(function () {\n      handleAdManagerError(generatorWrapper);\n      return;\n    });\n  };\n  AdManager.prototype.dispatchUnhandledRejection = function (generatorWrapper) {\n    if ([\"complete\", \"skip\", \"error\"].includes(generatorWrapper.messageType)) {\n      this.createDeferred++;\n      if (this.createDeferred === 10) {\n        this.createDeferred = 0;\n        var value;\n        if (!((value = this.entryIdCounter) == null)) {\n          value.markAsCompleted();\n        }\n        initializeAdManager(this);\n      }\n      generatorWrapper = getContentWindow(this.tasks);\n      var CustomMap;\n      if (!(generatorWrapper && ((CustomMap = generatorWrapper.frames) == null ? 0 : CustomMap.omid_v1_present))) {\n        markAsCompleted.getAdInstance().report(188, {});\n      }\n    }\n  };\n  var setupAdManagerWithConfig = function (generatorWrapper, value) {\n    generatorWrapper.tasks = value;\n    generatorWrapper.entryIdCounter = new OmsdkSessionHandler(value, generatorWrapper.isDone);\n    generatorWrapper.entryIdCounter.window(\"error\", function () {\n      handleAdManagerError(generatorWrapper);\n      return;\n    });\n    registerSessionObservers(generatorWrapper.entryIdCounter);\n    if (generatorWrapper.entryIdCounter && generatorWrapper.setTimeoutWrapper) {\n      setSessionClient(generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var handleAdManagerError = function (generatorWrapper) {\n    enqueueMessage(generatorWrapper.handleAsync, \"omid\", \"iframeFailed\");\n    generatorWrapper.markAsCompleted();\n  };\n  AdManager.prototype.getAdEnvironment = function () {\n    if (this.tasks) {\n      removeElement(this.tasks);\n      this.tasks = null;\n    }\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap, findEntry) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = CustomMap;\n    this.onFulfilled = findEntry;\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.tasks.window(this.createDeferred, findEntry, this.isDone);\n  };\n  inheritPrototype(AdManager, tryCall);\n  var handleAdManagerEvents = function (generatorWrapper, value) {\n    var CustomMap = value.setPrototypeOfPolyfill;\n    switch (value.messageType) {\n      case \"showVideo\":\n        generatorWrapper.setTimeoutWrapper.writeVarint();\n        break;\n      case \"hide\":\n        generatorWrapper.setTimeoutWrapper.endsWith();\n        break;\n      case \"resizeAndPositionVideo\":\n        value = CustomMap.resizeAndPositionVideo;\n        generatorWrapper.setTimeoutWrapper.throwIncidentError(new RectangleDimensions(value.inheritPrototype, value.globalScope, value.width, value.height));\n        break;\n      case \"restoreSizeAndPositionVideo\":\n        generatorWrapper.setTimeoutWrapper.createWarningError();\n    }\n  };\n  AdManager.prototype.isDone = function (generatorWrapper) {\n    var value = generatorWrapper.setPrototypeOfPolyfill;\n    switch (generatorWrapper.messageType) {\n      case \"activate\":\n        this.setTimeoutWrapper.isIpad(this.entryIdCounter);\n        break;\n      case \"startTracking\":\n        generatorWrapper = this.entryIdCounter;\n        var CustomMap = this.handleAsync;\n        this.tasks.window(generatorWrapper, valuesOfObject(EventTypes), CustomMap);\n        this.tasks.window(generatorWrapper, mediaEventTypes, CustomMap);\n        generatorWrapper = this.entryIdCounter;\n        resetVideoTracking(generatorWrapper);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, mediaEventTypes, generatorWrapper.isArrayLike);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"ended\", generatorWrapper.arrayOfIntegersTransformationInstance);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"webkitbeginfullscreen\", generatorWrapper.isObjectOrFunction);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"webkitendfullscreen\", generatorWrapper.toArray);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"loadedmetadata\", generatorWrapper.parseAndValidateArray);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"pause\", generatorWrapper.ErrorDetails);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"playing\", generatorWrapper.cloneIfNotFrozen);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"timeupdate\", generatorWrapper.isValidError);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"volumechange\", generatorWrapper.once);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"error\", generatorWrapper.year);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, isAndroidNonChrome || isIphoneIpadIpod && !isIOSVersionAtLeast(8) ? \"loadeddata\" : \"canplay\", generatorWrapper.serializeTransformations);\n        generatorWrapper.handleAsync = new EventController();\n        generatorWrapper.tasks.window(generatorWrapper.handleAsync, \"click\", generatorWrapper.assignPolyfill);\n        initializeEventController(generatorWrapper.handleAsync, generatorWrapper.entryIdCounter);\n        generatorWrapper.handleThenable = new Timer(1000);\n        generatorWrapper.tasks.window(generatorWrapper.handleThenable, \"tick\", generatorWrapper.sliceArguments);\n        generatorWrapper.handleThenable.startTimer();\n        break;\n      case \"stopTracking\":\n        generatorWrapper = this.entryIdCounter;\n        CustomMap = this.handleAsync;\n        this.tasks.compareValues(generatorWrapper, valuesOfObject(EventTypes), CustomMap);\n        this.tasks.compareValues(generatorWrapper, mediaEventTypes, CustomMap);\n        resetVideoTracking(this.entryIdCounter);\n        break;\n      case \"exitFullscreen\":\n        generatorWrapper = this.entryIdCounter;\n        if ((isIphone || isIpod) && generatorWrapper.entryIdCounter.webkitDisplayingFullscreen) {\n          generatorWrapper.entryIdCounter.webkitExitFullscreen();\n        }\n        break;\n      case \"play\":\n        handleAutoPlay(this.entryIdCounter);\n        break;\n      case \"pause\":\n        this.entryIdCounter.pause();\n        break;\n      case \"load\":\n        generatorWrapper = this.entryIdCounter;\n        CustomMap = value.videoUrl;\n        var findEntry = value.muxedMediaUrl;\n        var iterateEntries = value.muxedMimeType;\n        var createCircularNode = value.muxedAudioCodec;\n        var entryIdCounter = value.muxedVideoCodec;\n        var key = value.demuxedAudioUrl;\n        var value = value.demuxedVideoUrl;\n        var entry = value.demuxedAudioMimeType;\n        var currentEntry = value.demuxedVideoMimeType;\n        var foundEntry = value.demuxedAudioCodec;\n        var resolveFunction = value.demuxedVideoCodec;\n        value = value.mseCompatible;\n        var rejectFunction = null;\n        if (value && key && value && currentEntry && entry && resolveFunction && foundEntry) {\n          rejectFunction = new ExtendedAdDimensions({\n            trustedURLMarker: value,\n            setAdProperty: key,\n            sendImageRequest: null,\n            getPerformanceNow: null,\n            TrustedURL: currentEntry,\n            getNestedAdPropertyNumeric: entry,\n            compareVersions: resolveFunction,\n            identityFunction: foundEntry,\n            height: null,\n            width: null,\n            generatorReturn: value,\n            sendAdEvent: null,\n            getCurrentTimeWithPerformanceTiming: null\n          });\n        }\n        key = null;\n        if (findEntry && iterateEntries && entryIdCounter && createCircularNode) {\n          key = new MediaAdDimensions({\n            enumTransformation: findEntry,\n            includesBrand: null,\n            mimeType: iterateEntries,\n            compareVersions: entryIdCounter,\n            identityFunction: createCircularNode,\n            height: null,\n            width: null,\n            generatorReturn: value,\n            isDebugMode: null\n          });\n        }\n        if (rejectFunction) {\n          generatorWrapper.load(CustomMap, rejectFunction);\n        } else if (key) {\n          generatorWrapper.load(CustomMap, key);\n        } else {\n          generatorWrapper.load(CustomMap, null);\n        }\n        break;\n      case \"unload\":\n        generatorWrapper = this.entryIdCounter;\n        resetPlaybackState(generatorWrapper);\n        generatorWrapper.updateMaxSize = false;\n        if (\"removeAttribute\" in generatorWrapper.entryIdCounter) {\n          generatorWrapper.entryIdCounter.removeAttribute(\"src\");\n        } else {\n          generatorWrapper.entryIdCounter.src = \"\";\n        }\n        generatorWrapper.entryIdCounter.load();\n        break;\n      case \"setCurrentTime\":\n        this.entryIdCounter.entryIdCounter.currentTime = value.currentTime;\n        break;\n      case \"setVolume\":\n        this.entryIdCounter.setVolume(value.volume);\n    }\n  };\n  AdManager.prototype.handleAsync = function (generatorWrapper) {\n    var value = {};\n    switch (generatorWrapper.type) {\n      case \"autoplayDisallowed\":\n        generatorWrapper = \"autoplayDisallowed\";\n        break;\n      case \"beginFullscreen\":\n        generatorWrapper = \"fullscreen\";\n        break;\n      case \"endFullscreen\":\n        generatorWrapper = \"exitFullscreen\";\n        break;\n      case \"click\":\n        generatorWrapper = \"click\";\n        break;\n      case \"end\":\n        generatorWrapper = \"end\";\n        break;\n      case \"error\":\n        generatorWrapper = \"error\";\n        break;\n      case \"loaded\":\n        generatorWrapper = \"loaded\";\n        break;\n      case \"mediaLoadTimeout\":\n        generatorWrapper = \"mediaLoadTimeout\";\n        break;\n      case \"pause\":\n        generatorWrapper = \"pause\";\n        value.ended = this.entryIdCounter.entryIdCounter.ended;\n        break;\n      case \"play\":\n        generatorWrapper = \"play\";\n        break;\n      case \"skip\":\n        generatorWrapper = \"skip\";\n        break;\n      case \"start\":\n        generatorWrapper = \"start\";\n        value.volume = this.entryIdCounter.getVolume();\n        break;\n      case \"timeUpdate\":\n        generatorWrapper = \"timeupdate\";\n        value.currentTime = this.entryIdCounter.getCurrentTime();\n        value.duration = this.entryIdCounter.getDuration();\n        break;\n      case \"volumeChange\":\n        generatorWrapper = \"volumeChange\";\n        value.volume = this.entryIdCounter.getVolume();\n        break;\n      case \"loadedmetadata\":\n        generatorWrapper = generatorWrapper.type;\n        value.duration = this.entryIdCounter.getDuration();\n        break;\n      case \"abort\":\n      case \"canplay\":\n      case \"canplaythrough\":\n      case \"durationchange\":\n      case \"emptied\":\n      case \"loadstart\":\n      case \"loadeddata\":\n      case \"progress\":\n      case \"ratechange\":\n      case \"seeked\":\n      case \"seeking\":\n      case \"stalled\":\n      case \"suspend\":\n      case \"waiting\":\n        generatorWrapper = generatorWrapper.type;\n        break;\n      default:\n        return;\n    }\n    enqueueMessage(this.createDeferred, this.onFulfilled, generatorWrapper, value);\n  };\n  var AdManagerInitializer = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.tasks = value;\n    this.entryIdCounter = null;\n    this.setTimeoutWrapper = new AdManager(generatorWrapper, value, this.tasks.identityFunction, \"videoDisplay1\");\n    registerDisposable(this, this.setTimeoutWrapper);\n    var CustomMap = this.tasks.getGeneratorException;\n    if (CustomMap != null) {\n      this.entryIdCounter = new AdManager(generatorWrapper, value, CustomMap, \"videoDisplay2\");\n      registerDisposable(this, this.entryIdCounter);\n    }\n  };\n  inheritPrototype(AdManagerInitializer, tryCall);\n  var createIframeElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = createHtmlElement(\"IFRAME\");\n    iterateEntries.writeBytes = value;\n    iterateEntries.name = value;\n    iterateEntries.width = String(CustomMap);\n    iterateEntries.height = String(findEntry);\n    iterateEntries.allowTransparency = \"true\";\n    iterateEntries.scrolling = \"no\";\n    iterateEntries.marginWidth = \"0\";\n    iterateEntries.marginHeight = \"0\";\n    iterateEntries.frameBorder = \"0\";\n    iterateEntries.style.border = \"0\";\n    iterateEntries.style.verticalAlign = \"bottom\";\n    iterateEntries.src = \"about:blank\";\n    iterateEntries.setAttribute(\"aria-label\", \"Advertisement\");\n    iterateEntries.title = \"3rd party ad content\";\n    iterateEntries.tabIndex = 0;\n    generatorWrapper.appendChild(iterateEntries);\n    return iterateEntries;\n  };\n  function getCompanionAdsService() {\n    var generatorWrapper,\n      value,\n      CustomMap,\n      findEntry = getWindowForDocument();\n    if (undefined === findEntry) {\n      findEntry = window;\n    } else {\n      findEntry = findEntry;\n    }\n    findEntry = ((CustomMap = undefined === findEntry ? null : findEntry) != null ? CustomMap : window).googletag;\n    if (findEntry == null ? 0 : findEntry.apiReady) {\n      CustomMap = findEntry;\n    } else {\n      CustomMap = undefined;\n    }\n    if ((value = CustomMap == null ? undefined : (generatorWrapper = CustomMap.companionAds) == null ? undefined : generatorWrapper.call(CustomMap)) != null) {\n      return value;\n    } else {\n      return null;\n    }\n  }\n  function extractSlotInfo(generatorWrapper) {\n    var value = {};\n    value.slotId = generatorWrapper.getSlotId().getAdId();\n    var CustomMap = [];\n    generatorWrapper = getIterator(generatorWrapper.getSizes() || []);\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      findEntry = findEntry.value;\n      if (typeof findEntry !== \"string\") {\n        var iterateEntries = {};\n        CustomMap.push((iterateEntries.adWidth = findEntry.getRectangleWidth(), iterateEntries.adHeight = findEntry.getRectangleHeight(), iterateEntries));\n      } else if (findEntry === \"fluid\") {\n        findEntry = {};\n        CustomMap.push((findEntry.fluidSize = true, findEntry));\n      }\n    }\n    value.adSizes = CustomMap;\n    return value;\n  }\n  function renderCompanionAds(generatorWrapper) {\n    var value = getCompanionAdsService();\n    if (value && generatorWrapper && Array.isArray(generatorWrapper)) {\n      var CustomMap = new Map(value.getSlots().map(function (resolveFunction) {\n        return [resolveFunction.getSlotId().getAdId(), resolveFunction];\n      }));\n      generatorWrapper = getIterator(generatorWrapper);\n      for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n        var iterateEntries = findEntry.value;\n        var createCircularNode = CustomMap.get(iterateEntries.slotId);\n        if (createCircularNode && !value.isSlotAPersistentRoadblock(createCircularNode)) {\n          var entryIdCounter = iterateEntries.adContent;\n          if (entryIdCounter && (findEntry = getElementByIdOrDirect(createCircularNode.getSlotId().getDomId()))) {\n            findEntry.style.display = \"\";\n            var key = iterateEntries.adWidth;\n            var value = iterateEntries.adHeight;\n            if (iterateEntries.fluidSize) {\n              value = calculateInnerSize(findEntry);\n              key = value.width;\n              value = value.height;\n            }\n            findEntry.textContent = \"\";\n            if (iterateEntries.friendlyIframeRendering) {\n              try {\n                var entry = \"google_companion_\" + createCircularNode.getSlotId().getAdId();\n                var currentEntry = createIframeElement(findEntry, entry, key, value);\n                var foundEntry = currentEntry.contentWindow ? currentEntry.contentWindow.document : currentEntry.contentDocument;\n                if (isGecko) {\n                  foundEntry.open(\"text/html\", \"replace\");\n                }\n                writeSafeHtmlToDocument(foundEntry, sanitizeInput(entryIdCounter));\n                foundEntry.closeCache();\n              } catch (resolveFunction) {}\n            } else {\n              setElementSafeHtml(findEntry, sanitizeInput(entryIdCounter));\n              findEntry.style.width = key + \"px\";\n              findEntry.style.height = value + \"px\";\n            }\n            value.slotRenderEnded(createCircularNode, key, value);\n            if (iterateEntries = iterateEntries.onAdContentSet) {\n              iterateEntries(findEntry);\n            }\n          }\n        }\n      }\n    }\n  }\n  var CustomEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    CustomEvent.call(this, generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    this.entryIdCounter = createCircularNode;\n  };\n  inheritPrototype(CustomEvent, CustomEvent);\n  var MessagingHandler = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.isDone = generatorWrapper;\n    this.handleAsync = value;\n    this.entryIdCounter = {};\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.tasks.window(getWindowForDocument(), \"message\", this.setTimeoutWrapper);\n  };\n  inheritPrototype(MessagingHandler, AdEnvironmentConfig);\n  var dispatchCustomEvent = function (generatorWrapper, value) {\n    var CustomMap = value.entryIdCounter;\n    if (generatorWrapper.entryIdCounter.hasOwnProperty(CustomMap)) {\n      enqueueMessage(generatorWrapper.entryIdCounter[CustomMap], value.type, value.messageType, value.setPrototypeOfPolyfill);\n    }\n  };\n  var setupMessagingChannel = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper.entryIdCounter.hasOwnProperty(value)) {\n      CustomMap = new MessageHandler(value, CustomMap);\n      generatorWrapper.tasks.window(CustomMap, generatorWrapper.isDone, function (iterateEntries) {\n        this.dispatchEvent(new CustomEvent(iterateEntries.type, iterateEntries.messageType, iterateEntries.setPrototypeOfPolyfill, iterateEntries.isAndroid, iterateEntries.origin, value));\n      });\n      CustomMap.entryIdCounter = findEntry;\n      CustomMap.connect();\n      generatorWrapper.entryIdCounter[value] = CustomMap;\n    }\n  };\n  MessagingHandler.prototype.getAdEnvironment = function () {\n    for (var generatorWrapper = getIterator(Object.values(this.entryIdCounter)), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      markAsCompletedWrapper(value.value);\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  MessagingHandler.prototype.setTimeoutWrapper = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    var value = parseImaMessage(generatorWrapper.data);\n    if (value != null) {\n      var CustomMap = value.channel;\n      if (this.handleAsync && !this.entryIdCounter.hasOwnProperty(CustomMap)) {\n        var findEntry = value.sid;\n        setupMessagingChannel(this, CustomMap, findEntry, generatorWrapper.source);\n        this.dispatchEvent(new CustomEvent(value.name, value.type, value.data || {}, findEntry, generatorWrapper.origin, CustomMap));\n      }\n    }\n  };\n  function isGptPresent() {\n    return !!getFromGlobalScope(\"googletag.cmd\", getWindowForDocument());\n  }\n  function getGoogleTagConsole() {\n    var generatorWrapper = getFromGlobalScope(\"googletag.console\", getWindowForDocument());\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var CrossDomainMessagingManager = function () {\n    EventDispatcher.call(this);\n    this.entryIdCounter = null;\n    this.setTimeoutWrapper = new MessagingHandler(\"gpt\", true);\n    registerDisposable(this, this.setTimeoutWrapper);\n    this.window(this.setTimeoutWrapper, \"gpt\", this.isDone);\n    if (!(isGptPresent() || getWindowForDocument().top === getWindowForDocument())) {\n      this.entryIdCounter = new MessagingHandler(\"gpt\", false);\n      registerDisposable(this, this.entryIdCounter);\n      this.window(this.entryIdCounter, \"gpt\", this.handleAsync);\n    }\n  };\n  inheritPrototype(CrossDomainMessagingManager, EventDispatcher);\n  CrossDomainMessagingManager.prototype.isDone = function (generatorWrapper) {\n    var value = generatorWrapper.origin;\n    var CustomMap = \"//imasdk.googleapis.com\".match(urlRegex);\n    value = value.match(urlRegex);\n    if (CustomMap[3] == value[3] && CustomMap[4] == value[4]) {\n      if (this.entryIdCounter != null) {\n        setupMessagingChannel(this.entryIdCounter, generatorWrapper.entryIdCounter, generatorWrapper.isAndroid, getWindowForDocument().parent);\n        if (this.entryIdCounter != null) {\n          dispatchCustomEvent(this.entryIdCounter, generatorWrapper);\n        }\n      } else {\n        CustomMap = generatorWrapper.setPrototypeOfPolyfill;\n        if (CustomMap != null && undefined !== CustomMap.scope) {\n          value = CustomMap.scope;\n          CustomMap = CustomMap.args;\n          var findEntry;\n          if (value === \"proxy\") {\n            var iterateEntries = generatorWrapper.messageType;\n            if (iterateEntries === \"isGptPresent\") {\n              findEntry = isGptPresent();\n            } else if (iterateEntries === \"isConsolePresent\") {\n              findEntry = getGoogleTagConsole() != null;\n            }\n          } else if (isGptPresent()) {\n            if (value === \"pubads\" || value === \"companionAds\") {\n              findEntry = generatorWrapper.messageType;\n              var createCircularNode = getWindowForDocument().googletag;\n              if (createCircularNode != null && createCircularNode[value] != null && (value = createCircularNode[value](), value != null && (findEntry = value[findEntry], findEntry != null))) {\n                try {\n                  iterateEntries = findEntry.apply(value, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n              findEntry = iterateEntries;\n            } else if (value === \"console\") {\n              iterateEntries = getGoogleTagConsole();\n              if (iterateEntries != null && (value = iterateEntries[generatorWrapper.messageType], value != null)) {\n                try {\n                  value.apply(iterateEntries, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n            } else if (value === null) {\n              iterateEntries = generatorWrapper.messageType;\n              if (iterateEntries === \"googleGetCompanionAdSlots\") {\n                if (iterateEntries = getCompanionAdsService()) {\n                  iterateEntries = iterateEntries.getSlots().map(extractSlotInfo);\n                  if (iterateEntries.length) {\n                    findEntry = iterateEntries;\n                  } else {\n                    findEntry = null;\n                  }\n                } else {\n                  findEntry = null;\n                }\n              } else {\n                if (iterateEntries === \"googleSetCompanionAdContents\") {\n                  renderCompanionAds(CustomMap == null ? undefined : CustomMap[0]);\n                }\n                findEntry = null;\n              }\n            }\n          }\n          if (undefined !== findEntry) {\n            generatorWrapper.setPrototypeOfPolyfill.returnValue = findEntry;\n            dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n          }\n        }\n      }\n    }\n  };\n  CrossDomainMessagingManager.prototype.handleAsync = function (generatorWrapper) {\n    dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n  };\n  var removeMessagingChannel = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter) {\n      var CustomMap = generatorWrapper.entryIdCounter;\n      markAsCompletedWrapper(CustomMap.entryIdCounter[value]);\n      delete CustomMap.entryIdCounter[value];\n    }\n    if (generatorWrapper.setTimeoutWrapper) {\n      generatorWrapper = generatorWrapper.setTimeoutWrapper;\n      markAsCompletedWrapper(generatorWrapper.entryIdCounter[value]);\n      delete generatorWrapper.entryIdCounter[value];\n    }\n  };\n  var formatString = function (generatorWrapper, value) {\n    var CustomMap = Array.prototype.slice.call(arguments);\n    var findEntry = CustomMap.shift();\n    if (typeof findEntry == \"undefined\") {\n      throw Error(\"[goog.string.format] Template required\");\n    }\n    return findEntry.replace(/%([0\\- \\+]*)(\\d+)?(\\.(\\d+))?([%sfdiu])/g, function (iterateEntries, createCircularNode, entryIdCounter, key, value, entry, currentEntry, foundEntry) {\n      if (entry == \"%\") {\n        return \"%\";\n      }\n      var resolveFunction = CustomMap.shift();\n      if (typeof resolveFunction == \"undefined\") {\n        throw Error(\"[goog.string.format] Not enough arguments\");\n      }\n      arguments[0] = resolveFunction;\n      return formatFunctions[entry].apply(null, arguments);\n    });\n  };\n  var formatFunctions = {\n    string(generatorWrapper, value, Custom"