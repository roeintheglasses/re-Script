"ata];\n      profileData = getAdEnvironment().entryIdCounter;\n      if (getAdState(profileData.setTimeoutWrapper, \"prf\") == 1) {\n        rejectFunction = new AdConfig();\n        user = profileData.entryIdCounter;\n        iterateEntries = 0;\n        if (-1 < user.entryIdCounter) {\n          iterateEntries = user.setTimeoutWrapper.entryIdCounter.now() - user.entryIdCounter;\n        }\n        user = user.createDeferred + iterateEntries;\n        if (user != null && typeof user !== \"number\") {\n          throw Error(\"Value of float/double field must be a number, found \" + typeof user + \": \" + user);\n        }\n        rejectFunction = updateOrRemoveElement(rejectFunction, 1, user, 0);\n        user = profileData.entryIdCounter;\n        rejectFunction = modifyAdProperty(rejectFunction, 5, -1 < user.entryIdCounter ? user.tasks + 1 : user.tasks);\n        rejectFunction = setAdPropertyFromString(rejectFunction, 2, profileData.tasks.entryIdCounter.setTimeoutWrapper());\n        rejectFunction = setAdPropertyFromString(rejectFunction, 3, profileData.tasks.entryIdCounter.tasks());\n        profileData = setAdPropertyFromString(rejectFunction, 4, profileData.tasks.entryIdCounter.entryIdCounter());\n        rejectFunction = {};\n        profileData = (rejectFunction.pf = base64Encode(profileData.entryIdCounter()), rejectFunction);\n      } else {\n        profileData = {};\n      }\n      extendObject(resolveFunction, profileData);\n      extendObject(value, findEntry, CustomMap, resolveFunction, generatorWrapper());\n    }]);\n  };\n  var adRequestManager = getSingletonInstance(initAdRequestManager);\n  var currentWindow = null;\n  var emptyString = \"\";\n  var isBooleanFlag = false;\n  var generateUrlParams = function () {\n    var generatorWrapper = currentWindow || window;\n    if (!generatorWrapper) {\n      return \"\";\n    }\n    var value = [];\n    if (!generatorWrapper.location || !generatorWrapper.location.href) {\n      return \"\";\n    }\n    value.push(\"url=\" + encodeURIComponent(generatorWrapper.location.href.substring(0, 512)));\n    if (generatorWrapper.document && generatorWrapper.document.referrer) {\n      value.push(\"referrer=\" + encodeURIComponent(generatorWrapper.document.referrer.substring(0, 512)));\n    }\n    return value.join(\"&\");\n  };\n  function extractVersion() {\n    var generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_RC\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+\\.\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_RC\\d+$/),\n      value;\n    if (((value = generatorWrapper) == null ? undefined : value.length) == 2) {\n      return generatorWrapper[1];\n    }\n    generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/.*_(\\d{2})\\.(\\d{4})\\.\\d+_RC\\d+$/);\n    var CustomMap;\n    if (((CustomMap = generatorWrapper) == null ? undefined : CustomMap.length) == 3) {\n      return \"20\" + generatorWrapper[1] + generatorWrapper[2];\n    } else {\n      return null;\n    }\n  }\n  var determineSdkType = function () {\n    if (\"ima_html5_sdk\".includes(\"ima_html5_sdk\")) {\n      return {\n        createArrayIterator: \"ima\",\n        closureLibraryBase: null\n      };\n    } else {\n      if (\"ima_html5_sdk\".includes(\"ima_native_sdk\")) {\n        return {\n          createArrayIterator: \"nima\",\n          closureLibraryBase: null\n        };\n      } else {\n        if (\"ima_html5_sdk\".includes(\"admob-native-video-javascript\")) {\n          return {\n            createArrayIterator: \"an\",\n            closureLibraryBase: null\n          };\n        } else {\n          if (\"av.default_js_unreleased_RCxx\".includes(\"cast_js_sdk\")) {\n            return {\n              createArrayIterator: \"cast\",\n              closureLibraryBase: extractVersion()\n            };\n          } else {\n            if (\"av.default_js_unreleased_RCxx\".includes(\"youtube.player.web\")) {\n              return {\n                createArrayIterator: \"yw\",\n                closureLibraryBase: extractVersion()\n              };\n            } else {\n              if (\"av.default_js_unreleased_RCxx\".includes(\"outstream_web_client\")) {\n                return {\n                  createArrayIterator: \"out\",\n                  closureLibraryBase: extractVersion()\n                };\n              } else {\n                if (\"av.default_js_unreleased_RCxx\".includes(\"drx_rewarded_web\")) {\n                  return {\n                    createArrayIterator: \"r\",\n                    closureLibraryBase: extractVersion()\n                  };\n                } else {\n                  if (\"av.default_js_unreleased_RCxx\".includes(\"gam_native_web_video\")) {\n                    return {\n                      createArrayIterator: \"n\",\n                      closureLibraryBase: extractVersion()\n                    };\n                  } else {\n                    if (\"av.default_js_unreleased_RCxx\".includes(\"admob_interstitial_video\")) {\n                      return {\n                        createArrayIterator: \"int\",\n                        closureLibraryBase: extractVersion()\n                      };\n                    } else {\n                      return {\n                        createArrayIterator: \"j\",\n                        closureLibraryBase: null\n                      };\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  var sdkType = determineSdkType().createArrayIterator;\n  var sdkVersion = determineSdkType().closureLibraryBase;\n  var generateErrorObject = function (generatorWrapper, value) {\n    var CustomMap = {\n      sv: \"962\"\n    };\n    if (sdkVersion !== null) {\n      CustomMap.getIterator = sdkVersion;\n    }\n    CustomMap.cb = sdkType;\n    CustomMap.nas = globalAdContainersManager.entryIdCounter.length;\n    CustomMap.msg = generatorWrapper;\n    if (undefined !== value && (generatorWrapper = getMetricType(value))) {\n      CustomMap.iterateEntries = ip[generatorWrapper];\n    }\n    return CustomMap;\n  };\n  var isCustomMetricViewable = function (generatorWrapper) {\n    return generatorWrapper.lastIndexOf(\"custom_metric_viewable\", 0) == 0;\n  };\n  var getMetricType = function (generatorWrapper) {\n    var value = isCustomMetricViewable(generatorWrapper) ? \"custom_metric_viewable\" : generatorWrapper.toLowerCase();\n    return findKeyInObject(function (CustomMap) {\n      return CustomMap == value;\n    });\n  };\n  var metricNames = {\n    setElementSafeHtml: \"visible\",\n    createSchemeValidator: \"audible\",\n    hasFrameWithName: \"time\",\n    getDeviceType: \"timetype\"\n  };\n  var metricValidators = {\n    visible(generatorWrapper) {\n      return /^(100|[0-9]{1,2})$/.test(generatorWrapper);\n    },\n    audible(generatorWrapper) {\n      return generatorWrapper == \"0\" || generatorWrapper == \"1\";\n    },\n    timetype(generatorWrapper) {\n      return generatorWrapper == \"mtos\" || generatorWrapper == \"tos\";\n    },\n    time(generatorWrapper) {\n      return /^(100|[0-9]{1,2})%$/.test(generatorWrapper) || /^([0-9])+ms$/.test(generatorWrapper);\n    }\n  };\n  var ProfileMetrics = function () {\n    this.entryIdCounter = undefined;\n    this.tasks = false;\n    this.setTimeoutWrapper = 0;\n    this.createDeferred = -1;\n    this.handleAsync = \"tos\";\n  };\n  var parseCustomMetrics = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.split(\",\");\n      if (value.length > keysOfObject(metricNames).length) {\n        return null;\n      } else {\n        return reduceElements(value, function (CustomMap, findEntry) {\n          findEntry = findEntry.toLowerCase().split(\"=\");\n          if (findEntry.length != 2 || undefined === metricValidators[findEntry[0]] || !metricValidators[findEntry[0]](findEntry[1])) {\n            throw Error(\"Entry (\" + findEntry[0] + \", \" + findEntry[1] + \") is invalid.\");\n          }\n          CustomMap[findEntry[0]] = findEntry[1];\n          return CustomMap;\n        }, {});\n      }\n    } catch (CustomMap) {\n      return null;\n    }\n  };\n  var calculateMetricValue = function (generatorWrapper, value) {\n    if (undefined == generatorWrapper.entryIdCounter) {\n      return 0;\n    }\n    switch (generatorWrapper.handleAsync) {\n      case \"mtos\":\n        if (generatorWrapper.tasks) {\n          return calculateMaxVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateMaxVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n      case \"tos\":\n        if (generatorWrapper.tasks) {\n          return calculateVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n    }\n    return 0;\n  };\n  var CustomMetric = function (generatorWrapper, value, CustomMap, findEntry) {\n    yearResetter.call(this, value, findEntry);\n    this.onFulfilled = generatorWrapper;\n    this.settlePromise = CustomMap;\n  };\n  inheritPrototype(CustomMetric, yearResetter);\n  CustomMetric.prototype.getAdId = function () {\n    return this.onFulfilled;\n  };\n  CustomMetric.prototype.isDone = function () {\n    return true;\n  };\n  CustomMetric.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = generatorWrapper.getAdManager();\n    var CustomMap = generatorWrapper.getDuration();\n    return someElement(this.settlePromise, function (findEntry) {\n      if (undefined != findEntry.entryIdCounter) {\n        var iterateEntries = calculateMetricValue(findEntry, value);\n      } else {\n        value: {\n          switch (findEntry.handleAsync) {\n            case \"mtos\":\n              if (findEntry.tasks) {\n                iterateEntries = value.handleAsync.setTimeoutWrapper;\n              } else {\n                iterateEntries = value.setTimeoutWrapper.entryIdCounter;\n              }\n              break value;\n            case \"tos\":\n              if (findEntry.tasks) {\n                iterateEntries = value.handleAsync.entryIdCounter;\n              } else {\n                iterateEntries = value.setTimeoutWrapper.entryIdCounter;\n              }\n              break value;\n          }\n          iterateEntries = 0;\n        }\n      }\n      if (iterateEntries == 0) {\n        findEntry = false;\n      } else {\n        if (-1 != findEntry.setTimeoutWrapper) {\n          findEntry = findEntry.setTimeoutWrapper;\n        } else if (undefined !== CustomMap && CustomMap > 0) {\n          findEntry = findEntry.createDeferred * CustomMap;\n        } else {\n          findEntry = -1;\n        }\n        findEntry = -1 != findEntry && iterateEntries >= findEntry;\n      }\n      return findEntry;\n    });\n  };\n  var AdDataParser = function () {};\n  inheritPrototype(AdDataParser, emptyFunction);\n  AdDataParser.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = new nullResetter();\n    value.entryIdCounter = processResources(generatorWrapper, adDataMapping);\n    value.tasks = processResources(generatorWrapper, additionalDataMapping);\n    return value;\n  };\n  var ViewabilityMeasurement = function (generatorWrapper) {\n    yearResetter.call(this, \"fully_viewable_audible_half_duration_impression\", generatorWrapper);\n  };\n  inheritPrototype(ViewabilityMeasurement, yearResetter);\n  ViewabilityMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    return checkAdQueueTimeout(generatorWrapper);\n  };\n  var MeasurementStrategy = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(MeasurementStrategy, abstractResponder);\n  var ViewableImpressionMeasurement = function (generatorWrapper, value) {\n    yearResetter.call(this, generatorWrapper, value);\n  };\n  inheritPrototype(ViewableImpressionMeasurement, yearResetter);\n  ViewableImpressionMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.getAdManager().removeUniqueId();\n  };\n  var MeasurableImpressionMeasurement = function (generatorWrapper) {\n    zoneResetter.call(this, \"measurable_impression\", generatorWrapper);\n  };\n  inheritPrototype(MeasurableImpressionMeasurement, zoneResetter);\n  MeasurableImpressionMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = containsElement(this.onFulfilled, getAdState(getAdEnvironment().AdEnvironmentConfig, \"ovms\"));\n    return !generatorWrapper.uniqueIdCounter && (generatorWrapper.createObjectPolyfill != 0 || value);\n  };\n  var StrategyFactory = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(StrategyFactory, MeasurementStrategy);\n  StrategyFactory.prototype.tasks = function () {\n    return new MeasurableImpressionMeasurement(this.entryIdCounter);\n  };\n  StrategyFactory.prototype.setTimeoutWrapper = function () {\n    return [new ViewableImpressionMeasurement(\"viewable_impression\", this.entryIdCounter), new ViewabilityMeasurement(this.entryIdCounter)];\n  };\n  var ViewabilityQuery = function (generatorWrapper, value, CustomMap) {\n    ExtendedAd.call(this, generatorWrapper, value, CustomMap);\n  };\n  inheritPrototype(ViewabilityQuery, ExtendedAd);\n  ViewabilityQuery.prototype.createDeferred = function () {\n    var generatorWrapper = getFromGlobalScope(\"ima.admob.getViewability\");\n    var value = getAdState(this.AdEnvironmentConfig, \"queryid\");\n    if (typeof generatorWrapper === \"function\" && value) {\n      generatorWrapper(value);\n    }\n  };\n  ViewabilityQuery.prototype.getAdName = function () {\n    return \"gsv\";\n  };\n  var ViewabilityService = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = window;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    AdCreator.call(this, new AdController(generatorWrapper, 2));\n  };\n  inheritPrototype(ViewabilityService, AdCreator);\n  ViewabilityService.prototype.getAdName = function () {\n    return \"gsv\";\n  };\n  ViewabilityService.prototype.checkIntersectionObserverSupport = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    getAdEnvironment();\n    return generatorWrapper.tasks && false;\n  };\n  ViewabilityService.prototype.isIE = function (generatorWrapper, value, CustomMap) {\n    return new ViewabilityQuery(this.entryIdCounter, value, CustomMap);\n  };\n  var NativeViewabilityQuery = function (generatorWrapper, value, CustomMap) {\n    ExtendedAd.call(this, generatorWrapper, value, CustomMap);\n  };\n  inheritPrototype(NativeViewabilityQuery, ExtendedAd);\n  NativeViewabilityQuery.prototype.createDeferred = function () {\n    var generatorWrapper = this;\n    var value = getFromGlobalScope(\"ima.bridge.getNativeViewability\");\n    var CustomMap = getAdState(this.AdEnvironmentConfig, \"queryid\");\n    if (typeof value === \"function\" && CustomMap) {\n      value(CustomMap, function (findEntry) {\n        if (isEmptyObject(findEntry)) {\n          generatorWrapper.isDone++;\n        }\n        var iterateEntries = findEntry.opt_nativeViewVisibleBounds || {};\n        var createCircularNode = findEntry.opt_nativeViewHidden;\n        generatorWrapper.entryIdCounter = convertDimensionsToBox(findEntry.opt_nativeViewBounds || {});\n        var entryIdCounter = generatorWrapper.tasks.createDeferred;\n        if (createCircularNode) {\n          entryIdCounter.entryIdCounter = createRectangle(defaultAdBounds);\n        } else {\n          entryIdCounter.entryIdCounter = convertDimensionsToBox(iterateEntries);\n        }\n        generatorWrapper.timestamp = findEntry.opt_nativeTime || -1;\n        getAdEnvironmentInstance().entryIdCounter = entryIdCounter.entryIdCounter;\n        findEntry = findEntry.opt_nativeVolume;\n        if (undefined !== findEntry) {\n          entryIdCounter.volume = findEntry;\n        }\n      });\n    }\n  };\n  NativeViewabilityQuery.prototype.getAdName = function () {\n    return \"nis\";\n  };\n  var NativeViewabilityService = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = window;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    AdCreator.call(this, new AdController(generatorWrapper, 2));\n  };\n  inheritPrototype(NativeViewabilityService, AdCreator);\n  NativeViewabilityService.prototype.getAdName = function () {\n    return \"nis\";\n  };\n  NativeViewabilityService.prototype.checkIntersectionObserverSupport = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    getAdEnvironment();\n    return generatorWrapper.tasks && false;\n  };\n  NativeViewabilityService.prototype.isIE = function (generatorWrapper, value, CustomMap) {\n    return new NativeViewabilityQuery(this.entryIdCounter, value, CustomMap);\n  };\n  var adService = function () {\n    AdController.call(this, window, 2, \"mraid\");\n    this.firstQuartileTime = 0;\n    this.logError = this.handleThenable = false;\n    this.settlePromise = null;\n    this.tasks = getMraidContext(this.setTimeoutWrapper);\n    this.createDeferred.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.toArray = false;\n  };\n  inheritPrototype(adService, AdController);\n  adService.prototype.handleThenable = function () {\n    return this.tasks.finalizeGenerator != null;\n  };\n  adService.prototype.createIterator = function () {\n    var generatorWrapper = {};\n    if (this.firstQuartileTime) {\n      generatorWrapper.mraid = this.firstQuartileTime;\n    }\n    if (this.handleThenable) {\n      generatorWrapper.mlc = 1;\n    }\n    generatorWrapper.mtop = this.tasks.everyInObject;\n    if (this.settlePromise) {\n      generatorWrapper.mse = this.settlePromise;\n    }\n    if (this.toArray) {\n      generatorWrapper.msc = 1;\n    }\n    generatorWrapper.mcp = this.tasks.finalBrowserVersion;\n    return generatorWrapper;\n  };\n  adService.prototype.isDone = function (generatorWrapper) {\n    var value = sliceArguments.apply(1, arguments);\n    try {\n      return this.tasks.finalizeGenerator[generatorWrapper].apply(this.tasks.finalizeGenerator, value);\n    } catch (CustomMap) {\n      logError(538, CustomMap, 0.01, function (findEntry) {\n        findEntry.method = generatorWrapper;\n      });\n    }\n  };\n  var addMraidEventListener = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.isDone(\"addEventListener\", value, CustomMap);\n  };\n  adService.prototype.initializeMraid = function () {\n    var generatorWrapper = this;\n    if (this.Generator) {\n      return !this.removeElement();\n    }\n    this.Generator = true;\n    if (this.tasks.finalBrowserVersion === 2) {\n      this.settlePromise = \"ng\";\n      activateAdController(this, \"w\");\n      return false;\n    }\n    if (this.tasks.finalBrowserVersion === 1) {\n      this.settlePromise = \"mm\";\n      activateAdController(this, \"w\");\n      return false;\n    }\n    getAdEnvironmentInstance().executeCallbacks = true;\n    if (this.setTimeoutWrapper.document.readyState && this.setTimeoutWrapper.document.readyState == \"complete\") {\n      setupMraid(this);\n    } else {\n      addEventListenerWithCapture(this.setTimeoutWrapper, \"load\", function () {\n        GetEnvironment().setTimeout(To(292, function () {\n          return setupMraid(generatorWrapper);\n        }), 100);\n      }, 292);\n    }\n    return true;\n  };\n  var setupMraid = function (generatorWrapper) {\n    getAdEnvironment().createDeferred = !!generatorWrapper.isDone(\"isViewable\");\n    addMraidEventListener(generatorWrapper, \"viewableChange\", enableManualVideoAdBreaks);\n    if (generatorWrapper.isDone(\"getState\") === \"loading\") {\n      addMraidEventListener(generatorWrapper, \"ready\", onMraidReady);\n    } else {\n      checkMraidFeatures(generatorWrapper);\n    }\n  };\n  var checkMraidFeatures = function (generatorWrapper) {\n    if (typeof generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR === \"string\") {\n      generatorWrapper.handleThenable = true;\n      startMraidMeasurement(generatorWrapper);\n    } else {\n      generatorWrapper.tasks.finalBrowserVersion = 3;\n      generatorWrapper.settlePromise = \"nc\";\n      activateAdController(generatorWrapper, \"w\");\n    }\n  };\n  var startMraidMeasurement = function (generatorWrapper) {\n    generatorWrapper.logError = false;\n    var value = getAdState(getAdEnvironment().AdEnvironmentConfig, \"rmmt\") == 1;\n    var CustomMap = !!generatorWrapper.isDone(\"isViewable\");\n    if (value ? !CustomMap : 1) {\n      GetEnvironment().setTimeout(To(524, function () {\n        if (!generatorWrapper.logError) {\n          removeMraidEventListener(generatorWrapper);\n          logError(540, Error());\n          generatorWrapper.settlePromise = \"mt\";\n          activateAdController(generatorWrapper, \"w\");\n        }\n      }), 500);\n    }\n    configureMraidExperiments(generatorWrapper);\n    addMraidEventListener(generatorWrapper, generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR, initializeAdDisplayContainer);\n  };\n  var configureMraidExperiments = function (generatorWrapper) {\n    var value = getAdState(getAdEnvironment().AdEnvironmentConfig, \"sneio\") == 1;\n    var CustomMap = undefined !== generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_1;\n    var findEntry = undefined !== generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_2;\n    if (value = value && findEntry) {\n      generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_2 = true;\n    }\n    if (CustomMap) {\n      generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_1 = !value;\n    }\n  };\n  var removeMraidEventListener = function (generatorWrapper) {\n    generatorWrapper.isDone(\"removeEventListener\", generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR, initializeAdDisplayContainer);\n    generatorWrapper.handleThenable = false;\n  };\n  adService.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = getDimensionProperty(this, \"getMaxSize\");\n    generatorWrapper.entryIdCounter = new handleThenable(0, value.width, value.height, 0);\n  };\n  adService.prototype.totalAdBufferingTime = function () {\n    getAdEnvironmentInstance().handleAsync = getDimensionProperty(this, \"getScreenSize\");\n  };\n  var getDimensionProperty = function (generatorWrapper, value) {\n    if (generatorWrapper.isDone(\"getState\") === \"loading\") {\n      return new Size(-1, -1);\n    }\n    value = generatorWrapper.isDone(value);\n    if (!value) {\n      return new Size(-1, -1);\n    }\n    generatorWrapper = parseInt(value.width, 10);\n    value = parseInt(value.height, 10);\n    if (isNaN(generatorWrapper) || isNaN(value)) {\n      return new Size(-1, -1);\n    } else {\n      return new Size(generatorWrapper, value);\n    }\n  };\n  adService.prototype.markAsCompleted = function () {\n    removeMraidEventListener(this);\n    AdController.prototype.markAsCompleted.call(this);\n  };\n  var onMraidReady = function () {\n    try {\n      var generatorWrapper = getSingletonInstance(adService);\n      generatorWrapper.isDone(\"removeEventListener\", \"ready\", onMraidReady);\n      checkMraidFeatures(generatorWrapper);\n    } catch (value) {\n      logError(541, value);\n    }\n  };\n  var initializeAdDisplayContainer = function (generatorWrapper, value) {\n    try {\n      var CustomMap = getSingletonInstance(adService);\n      CustomMap.logError = true;\n      var findEntry = generatorWrapper ? new handleThenable(generatorWrapper.globalScope, generatorWrapper.inheritPrototype + generatorWrapper.width, generatorWrapper.globalScope + generatorWrapper.height, generatorWrapper.inheritPrototype) : new handleThenable(0, 0, 0, 0);\n      var iterateEntries = accumulatePosition();\n      var createCircularNode = isAdPlayingOrMuted();\n      var entryIdCounter = new AdEvent(iterateEntries, createCircularNode, CustomMap);\n      entryIdCounter.entryIdCounter = findEntry;\n      entryIdCounter.volume = value;\n      CustomMap.deferError(entryIdCounter);\n    } catch (key) {\n      logError(542, key);\n    }\n  };\n  var enableManualVideoAdBreaks = function (generatorWrapper) {\n    var value = getAdEnvironment();\n    var CustomMap = getSingletonInstance(adService);\n    if (generatorWrapper && !value.createDeferred) {\n      value.createDeferred = true;\n      CustomMap.toArray = true;\n      if (CustomMap.settlePromise) {\n        activateAdController(CustomMap, \"w\", true);\n      }\n    }\n  };\n  var FeatureToggle = new function (generatorWrapper, value) {\n    this.key = generatorWrapper;\n    if (undefined === value) {\n      this.defaultValue = false;\n    } else {\n      this.defaultValue = value;\n    }\n    this.valueType = \"boolean\";\n  }(\"45378663\");\n  var AdEventReporter = function () {\n    this.setTimeoutWrapper = this.Generator = false;\n    this.entryIdCounter = this.tasks = null;\n    var generatorWrapper = {};\n    this.handleThenable = (generatorWrapper.startTimer = this.applyArrayOrObjectTransformation, generatorWrapper.firstquartile = this.getTransformation, generatorWrapper.midpoint = this.createTransformation, generatorWrapper.thirdquartile = this.float64Transformation, generatorWrapper.complete = this.generateTransformationFunction, generatorWrapper.hasError = this.objectTransformationFallback, generatorWrapper.pause = this.frozenArray, generatorWrapper.resume = this.transformElement, generatorWrapper.skip = this.applyBooleanTransformation, generatorWrapper.viewable_impression = this.getFromGlobalScope, generatorWrapper.mute = this.filterElements, generatorWrapper.unmute = this.filterElements, generatorWrapper.fullscreen = this.objectTransformationInstance, generatorWrapper.exitfullscreen = this.cleanupSymbol, generatorWrapper.fully_viewable_audible_half_duration_impression = this.getFromGlobalScope, generatorWrapper.measurable_impression = this.getFromGlobalScope, generatorWrapper.abandon = this.frozenArray, generatorWrapper.engagedview = this.getFromGlobalScope, generatorWrapper.impression = this.getFromGlobalScope, generatorWrapper.creativeview = this.getFromGlobalScope, generatorWrapper.progress = this.filterElements, generatorWrapper.custom_metric_viewable = this.getFromGlobalScope, generatorWrapper.bufferstart = this.frozenArray, generatorWrapper.bufferfinish = this.transformElement, generatorWrapper.audio_measurable = this.getFromGlobalScope, generatorWrapper.audio_audible = this.getFromGlobalScope, generatorWrapper);\n    generatorWrapper = {};\n    this.updateMaxSize = (generatorWrapper.overlay_resize = this.applyStringOrNumberTransformation, generatorWrapper.abandon = this.setRawBitFlags, generatorWrapper.closeCache = this.setRawBitFlags, generatorWrapper.collapse = this.setRawBitFlags, generatorWrapper.overlay_unmeasurable_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_unmeasurable_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_viewable_immediate_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_viewable_immediate_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_unviewable_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_unviewable_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_viewable_end_of_session_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_viewable_end_of_session_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper);\n    getAdEnvironment().tasks = 3;\n    initializeAdSdk(this);\n  };\n  AdEventReporter.prototype.handleAsync = function (generatorWrapper) {\n    updateVisibilityState(generatorWrapper, false);\n    removeRelatedAdContainers(generatorWrapper);\n  };\n  AdEventReporter.prototype.settlePromise = function () {};\n  var Et = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.isDone(null, findEntry, true, value);\n    generatorWrapper.handleAsync = CustomMap;\n    addUniqueAdContainers([generatorWrapper]);\n    return generatorWrapper;\n  };\n  AdEventReporter.prototype.isDone = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    generatorWrapper = new AdProcessor(window, generatorWrapper, CustomMap ? value : -1, 7, this.generateSymbol(), this.booleanArrayCache());\n    generatorWrapper.constructReflect = findEntry;\n    ensureQueryIdAdState(generatorWrapper.AdEnvironmentConfig);\n    updateAdStateValue(generatorWrapper.AdEnvironmentConfig, \"queryid\", generatorWrapper.constructReflect);\n    generatorWrapper.throwIfFlag2(\"\");\n    configureAdStateHandlers(generatorWrapper, function () {\n      return iterateEntries.logError.apply(iterateEntries, toArray(sliceArguments.apply(0, arguments)));\n    }, function () {\n      return iterateEntries.tryCall.apply(iterateEntries, toArray(sliceArguments.apply(0, arguments)));\n    });\n    if (findEntry = getSingletonInstance(AdInitializationState).entryIdCounter) {\n      replaceAdContainerContent(generatorWrapper, findEntry);\n    }\n    if (generatorWrapper.setPrototypeOfPolyfill.trimString) {\n      getSingletonInstance(EmptyClass);\n    }\n    return generatorWrapper;\n  };\n  var processAdTrackingInfo = function (generatorWrapper, value, CustomMap) {\n    filterInvalidAdRequests(value);\n    var findEntry = generatorWrapper.entryIdCounter;\n    forEachElement(value, function (iterateEntries) {\n      var createCircularNode = mapElements(iterateEntries.setTimeoutWrapper, function (entryIdCounter) {\n        var key = parseCustomMetrics(entryIdCounter);\n        if (key == null) {\n          entryIdCounter = null;\n        } else {\n          entryIdCounter = new ProfileMetrics();\n          if (key.visible != null) {\n            entryIdCounter.entryIdCounter = key.visible / 100;\n          }\n          if (key.audible != null) {\n            entryIdCounter.tasks = key.audible == 1;\n          }\n          if (key.time != null) {\n            var value = key.timetype == \"mtos\" ? \"mtos\" : \"tos\";\n            var entry = endsWith(key.time, \"%\") ? \"%\" : \"ms\";\n            key = parseInt(key.time, 10);\n            if (entry == \"%\") {\n              key /= 100;\n            }\n            if (entry == \"ms\") {\n              entryIdCounter.setTimeoutWrapper = key;\n              entryIdCounter.createDeferred = -1;\n            } else {\n              entryIdCounter.setTimeoutWrapper = -1;\n              entryIdCounter.createDeferred = key;\n            }\n            if (undefined === value) {\n              entryIdCounter.handleAsync = \"tos\";\n            } else {\n              entryIdCounter.handleAsync = value;\n            }\n          }\n        }\n        return entryIdCounter;\n      });\n      if (!someElement(createCircularNode, function (entryIdCounter) {\n        return entryIdCounter == null;\n      })) {\n        addToAdQueue(CustomMap, new CustomMetric(iterateEntries.writeBytes, iterateEntries.entryIdCounter, createCircularNode, findEntry));\n      }\n    });\n  };\n  var getDefaultAdProviders = function () {\n    var generatorWrapper = [];\n    var value = getAdEnvironment();\n    generatorWrapper.push(getSingletonInstance(GeoLocationProvider));\n    if (getAdState(value.AdEnvironmentConfig, \"mvp_lv\")) {\n      generatorWrapper.push(getSingletonInstance(adService));\n    }\n    value = [new ViewabilityService(), new NativeViewabilityService()];\n    value.push(new AdLoader(generatorWrapper));\n    value.push(new AdVisibilityProvider(window));\n    return value;\n  };\n  var initializeAdReporting = function (generatorWrapper) {\n    if (!generatorWrapper.Generator) {\n      generatorWrapper.Generator = true;\n      try {\n        var value = accumulatePosition();\n        var CustomMap = getAdEnvironment();\n        var findEntry = getAdEnvironmentInstance();\n        Xo = value;\n        CustomMap.setTimeoutWrapper = 79463069;\n        if (generatorWrapper.tasks !== \"o\") {\n          currentWindow = getTopAccessibleContext(window);\n        }\n        if (isAdUtilityAvailable()) {\n          adRequestManager.entryIdCounter.createObjectOrUndefined = 0;\n          adRequestManager.entryIdCounter.setFlag32 = accumulatePosition() - value;\n          var iterateEntries = getDefaultAdProviders();\n          var createCircularNode = getSingletonInstance(AdInitializationState);\n          createCircularNode.tasks = iterateEntries;\n          if (initializeAdContainer(createCircularNode, function () {\n            resetAdProviders();\n          })) {\n            if (!adRequestManager.done) {\n              processAllSamples();\n              registerAdComponent(createCircularNode.entryIdCounter.entryIdCounter, generatorWrapper);\n              startSampling();\n            }\n          } else if (findEntry.setTimeoutWrapper) {\n            resetAdProviders();\n          } else {\n            startSampling();\n          }\n        } else {\n          isBooleanFlag = true;\n        }\n      } catch (entryIdCounter) {\n        globalAdContainersManager.resetAdStateController();\n        throw entryIdCounter;\n      }\n    }\n  };\n  var finalizeAdReporting = function (generatorWrapper) {\n    adRequestManager.tasks.cancel();\n    emptyString = generatorWrapper;\n    adRequestManager.done = true;\n  };\n  var getAdReportingMode = function (generatorWrapper) {\n    if (generatorWrapper.tasks) {\n      return generatorWrapper.tasks;\n    }\n    var value = getSingletonInstance(AdInitializationState).entryIdCounter;\n    if (value) {\n      switch (value.getAdName()) {\n        case \"nis\":\n          generatorWrapper.tasks = \"n\";\n          break;\n        case \"gsv\":\n          generatorWrapper.tasks = \"m\";\n      }\n    }\n    if (!generatorWrapper.tasks) {\n      generatorWrapper.tasks = \"h\";\n    }\n    return generatorWrapper.tasks;\n  };\n  var reportAdEvent = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.entryIdCounter == null) {\n      value.Nb |= 4;\n      return false;\n    }\n    generatorWrapper = generatorWrapper.entryIdCounter.report(CustomMap, value);\n    value.Nb |= generatorWrapper;\n    return generatorWrapper == 0;\n  };\n  AdEventReporter.prototype.isAndroid = function (generatorWrapper) {\n    switch (generatorWrapper.uniqueIdProperty()) {\n      case 0:\n        if (generatorWrapper = getSingletonInstance(AdInitializationState).entryIdCounter) {\n          generatorWrapper = generatorWrapper.entryIdCounter;\n          removeElement(generatorWrapper.handleAsync, this);\n          if (generatorWrapper.dispatchUnhandledRejection && this.getClosureFlagValue()) {\n            checkAdComponentsActive(generatorWrapper);\n          }\n        }\n        resetAdProviders();\n        break;\n      case 2:\n        startSampling();\n    }\n  };\n  AdEventReporter.prototype.deferError = function () {};\n  AdEventReporter.prototype.getClosureFlagValue = function () {\n    return false;\n  };\n  var resetAdProviders = function () {\n    var generatorWrapper = [new AdVisibilityProvider(window)];\n    var value = getSingletonInstance(AdInitializationState);\n    value.tasks = generatorWrapper;\n    if (initializeAdContainer(value, function () {\n      finalizeAdReporting(\"i\");\n    })) {\n      if (!adRequestManager.done) {\n        processAllSamples();\n        startSampling();\n      }\n    } else {\n      finalizeAdReporting(\"i\");\n    }\n  };\n  AdEventReporter.prototype.tryCall = function (generatorWrapper, value) {\n    generatorWrapper.uniqueIdCounter = true;\n    switch (generatorWrapper.generatorYield()) {\n      case 1:\n        reportAdStart(generatorWrapper, value);\n        break;\n      case 2:\n        this.undefinedVariable2(generatorWrapper);\n    }\n    this.parseNullableBoolean(generatorWrapper);\n  };\n  var reportAdStart = function (generatorWrapper, value) {\n    if (!generatorWrapper.isObjectOrFunction) {\n      var CustomMap = getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n      CustomMap = generatorWrapper.emptyArray.entryIdCounter(CustomMap).entryIdCounter;\n      var findEntry = {\n        writeBytes: \"lidarv\"\n      };\n      findEntry.foundEntry = value;\n      findEntry.sv = \"962\";\n      if (sdkVersion !== null) {\n        findEntry.getIterator = sdkVersion;\n      }\n      parseQueryString(CustomMap, function (iterateEntries, createCircularNode) {\n        return findEntry[iterateEntries] = iterateEntries == \"mtos\" || iterateEntries == \"tos\" ? createCircularNode : encodeURIComponent(createCircularNode);\n      });\n      value = generateUrlParams();\n      parseQueryString(value, function (iterateEntries, createCircularNode) {\n        return findEntry[iterateEntries] = encodeURIComponent(createCircularNode);\n      });\n      value = \"//pagead2.googlesyndication.com/pagead/gen_204?\" + buildQueryString(addParametersFromObject(new QueryStringBuilder(), findEntry));\n      sendAdRequest(value);\n      generatorWrapper.isObjectOrFunction = true;\n    }\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.applyArrayOrObjectTransformation = function (generatorWrapper) {\n    var value = generatorWrapper.onFulfilled(generatorWrapper);\n    if (value) {\n      value = value.volume;\n      generatorWrapper.sliceArguments = isValidOpacity(value) && value > 0;\n    }\n    updateAdPlaybackData(generatorWrapper, 0);\n    return getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.filterElements = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return this.getFromGlobalScope(generatorWrapper, value, CustomMap);\n  };\n  setTimeoutWrapper.getFromGlobalScope = function (generatorWrapper, value, CustomMap) {\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.getTransformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"firstquartile\", 1);\n  };\n  setTimeoutWrapper.createTransformation = function (generatorWrapper) {\n    generatorWrapper.toArray = true;\n    return trackAdEventByType(generatorWrapper, \"midpoint\", 2);\n  };\n  setTimeoutWrapper.float64Transformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"thirdquartile\", 3);\n  };\n  setTimeoutWrapper.generateTransformationFunction = function (generatorWrapper) {\n    var value = trackAdEventByType(generatorWrapper, \"complete\", 4);\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationFallback = function (generatorWrapper) {\n    generatorWrapper.createObjectPolyfill = 3;\n    return getAdImpressionData(generatorWrapper, \"error\", isAdPlayingOrMuted());\n  };\n  var trackAdEventByType = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    updateAdPlaybackData(generatorWrapper, CustomMap);\n    if (CustomMap != 4) {\n      ensureArraySize(generatorWrapper.handleThenable, CustomMap, generatorWrapper.base64AlphabetIndex);\n    }\n    return getAdImpressionData(generatorWrapper, value, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.transformElement = function (generatorWrapper, value, CustomMap) {\n    value = isAdPlayingOrMuted();\n    if (!(generatorWrapper.createObjectPolyfill != 2 || value)) {\n      generatorWrapper.getAdManager().settlePromise = accumulatePosition();\n    }\n    processSamples(adRequestManager, [generatorWrapper], !value);\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      generatorWrapper.createObjectPolyfill = 1;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, value);\n  };\n  setTimeoutWrapper.applyBooleanTransformation = function (generatorWrapper, value) {\n    value = this.filterElements(generatorWrapper, value || {}, \"skip\");\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationInstance = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, true);\n    return this.filterElements(generatorWrapper, value || {}, \"fullscreen\");\n  };\n  setTimeoutWrapper.cleanupSymbol = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, false);\n    return this.filterElements(generatorWrapper, value || {}, \"exitfullscreen\");\n  };\n  setTimeoutWrapper.frozenArray = function (generatorWrapper, value, CustomMap) {\n    value = generatorWrapper.getAdManager();\n    value.totalAdBufferingTime = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill != 1);\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    if (generatorWrapper.createObjectPolyfill == 1) {\n      generatorWrapper.createObjectPolyfill = 2;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.applyStringOrNumberTransformation = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return generatorWrapper.tasks();\n  };\n  setTimeoutWrapper.setRawBitFlags = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    this.TransformArguments(generatorWrapper);\n    setAdProcessorState(generatorWrapper);\n    return generatorWrapper.tasks();\n  };\n  var initializeAdSdk = function (generatorWrapper) {\n    initializeErrorHandling(function () {\n      var value = getAdSdkInfo();\n      if (generatorWrapper.tasks != null) {\n        value.sdk = generatorWrapper.tasks;\n      }\n      var CustomMap = getSingletonInstance(AdInitializationState);\n      if (CustomMap.entryIdCounter != null) {\n        value.adVerificationMeasurementSystem = CustomMap.entryIdCounter.getAdName();\n      }\n      return value;\n    });\n  };\n  var createAdElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = findAdContainerByNb(globalAdContainersManager, CustomMap);\n    if (iterateEntries !== null && iterateEntries.constructReflect !== value) {\n      generatorWrapper.handleAsync(iterateEntries);\n      iterateEntries = null;\n    }\n    if (!iterateEntries) {\n      value = generatorWrapper.isDone(CustomMap, accumulatePosition(), false, value);\n      if (globalAdContainersManager.tasks.length == 0) {\n        getAdEnvironment().setTimeoutWrapper = 79463069;\n      }\n      addBatchAdContainers([value]);\n      iterateEntries = value;\n      iterateEntries.handleAsync = getAdReportingMode(generatorWrapper);\n      if (findEntry) {\n        iterateEntries.includesString = findEntry;\n      }\n    }\n    return iterateEntries;\n  };\n  AdEventReporter.prototype.logError = function () {};\n  var validateAdProperties = function (generatorWrapper, value) {\n    value.dispatchUnhandledRejection = 0;\n    for (var CustomMap in AdEventTypes) if (generatorWrapper[CustomMap] == null) {\n      value.dispatchUnhandledRejection |= AdEventTypes[CustomMap];\n    }\n    convertAdPropertiesToMillis(generatorWrapper, \"currentTime\");\n    convertAdPropertiesToMillis(generatorWrapper, \"duration\");\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.undefinedVariable2 = function () {};\n  setTimeoutWrapper.TransformArguments = function () {};\n  setTimeoutWrapper.normalizeNumber = function () {};\n  setTimeoutWrapper.parseNullableBoolean = function () {};\n  setTimeoutWrapper.customProperty1 = function () {};\n  setTimeoutWrapper.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      return new StrategyFactory(this.entryIdCounter);\n    }\n  };\n  setTimeoutWrapper.generateSymbol = function () {\n    return new AdDataParser();\n  };\n  var convertAdPropertiesToMillis = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper[value];\n    if (undefined !== CustomMap && CustomMap > 0) {\n      generatorWrapper[value] = Math.floorRectangle(1000 * CustomMap);\n    }\n  };\n  var getAdSdkInfo = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = {};\n    var CustomMap = {};\n    var findEntry = {};\n    return Object.assign({}, (value.sv = \"962\", value), sdkVersion !== null && (CustomMap.getIterator = sdkVersion, CustomMap), (findEntry[\"if\"] = generatorWrapper.setTimeoutWrapper ? \"1\" : \"0\", findEntry.nas = String(globalAdContainersManager.entryIdCounter.length), findEntry));\n  };\n  var AudioAudibleEvent = function (generatorWrapper) {\n    yearResetter.call(this, \"audio_audible\", generatorWrapper);\n  };\n  inheritPrototype(AudioAudibleEvent, yearResetter);\n  AudioAudibleEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.isIos() == 4;\n  };\n  var AudioMeasurableEvent = function (generatorWrapper) {\n    zoneResetter.call(this, \"audio_measurable\", generatorWrapper);\n  };\n  inheritPrototype(AudioMeasurableEvent, zoneResetter);\n  AudioMeasurableEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isIos();\n    return generatorWrapper == 3 || generatorWrapper == 4;\n  };\n  var AudioEventProcessor = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(AudioEventProcessor, MeasurementStrategy);\n  AudioEventProcessor.prototype.tasks = function () {\n    return new AudioMeasurableEvent(this.entryIdCounter);\n  };\n  AudioEventProcessor.prototype.setTimeoutWrapper = function () {\n    return [new AudioAudibleEvent(this.entryIdCounter)];\n  };\n  var AdEventValidator = function () {};\n  inheritPrototype(AdEventValidator, emptyFunction);\n  AdEventValidator.prototype.entryIdCounter = function (generatorWrapper) {\n    if (generatorWrapper && (generatorWrapper.iterateEntries === 28 && (gene"