"  if (CustomMap) {\n      for (var findEntry = Array(arguments.length - 1), iterateEntries = 1, createCircularNode = arguments.length; iterateEntries < createCircularNode; iterateEntries++) {\n        findEntry[iterateEntries - 1] = arguments[iterateEntries];\n      }\n      if (this.dispatchUnhandledRejection) {\n        for (iterateEntries = 0; iterateEntries < CustomMap.length; iterateEntries++) {\n          var entryIdCounter = CustomMap[iterateEntries];\n          invokeEventCallback(this.entryIdCounter[entryIdCounter + 1], this.entryIdCounter[entryIdCounter + 2], findEntry);\n        }\n      } else {\n        this.createDeferred++;\n        try {\n          iterateEntries = 0;\n          for (createCircularNode = CustomMap.length; iterateEntries < createCircularNode && !this.handleIteratorResult(); iterateEntries++) {\n            entryIdCounter = CustomMap[iterateEntries];\n            this.entryIdCounter[entryIdCounter + 1].apply(this.entryIdCounter[entryIdCounter + 2], findEntry);\n          }\n        } finally {\n          this.createDeferred--;\n          if (this.setTimeoutWrapper.length > 0 && this.createDeferred == 0) {\n            for (; CustomMap = this.setTimeoutWrapper.pop();) {\n              this.handleAsync(CustomMap);\n            }\n          }\n        }\n      }\n    }\n  };\n  var invokeEventCallback = function (generatorWrapper, value, CustomMap) {\n    enqueueTask(function () {\n      generatorWrapper.apply(value, CustomMap);\n    });\n  };\n  EventDispatcher.prototype.clearAll = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = this.tasks[generatorWrapper];\n      if (value) {\n        value.forEach(this.handleAsync, this);\n        delete this.tasks[generatorWrapper];\n      }\n    } else {\n      this.entryIdCounter.length = 0;\n      this.tasks = {};\n    }\n  };\n  EventDispatcher.prototype.getAdEnvironment = function () {\n    EventDispatcher.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.clearAll();\n    this.setTimeoutWrapper.length = 0;\n  };\n  var EventDispatcherWrapper = function (generatorWrapper) {\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(generatorWrapper);\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(EventDispatcherWrapper, tryCall);\n  EventDispatcherWrapper.prototype.clearAll = function (generatorWrapper) {\n    this.entryIdCounter.clearAll(undefined !== generatorWrapper ? generatorWrapper.toString() : undefined);\n  };\n  var BaseComponent = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(this);\n    registerDisposable(this, this.entryIdCounter);\n    this.isOperaBrowser = generatorWrapper;\n  };\n  inheritPrototype(BaseComponent, tryCall);\n  var bindComponentEvent = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.isOperaBrowser) {\n      registerEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      executeOrDelayUntilDisposed(generatorWrapper, function () {\n        unregisterEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      });\n    }\n  };\n  var CaptionVisibilityComponent = function (generatorWrapper, value) {\n    BaseComponent.call(this, value);\n    bindComponentEvent(this, function (CustomMap) {\n      if (CustomMap) {\n        generatorWrapper.entryIdCounter.mode = \"showing\";\n      } else {\n        generatorWrapper.endsWith();\n      }\n    }, this);\n  };\n  inheritPrototype(CaptionVisibilityComponent, BaseComponent);\n  var BaseSDKComponent = function () {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = new EventDispatcher(this);\n    registerDisposable(this, this.setTimeoutWrapper);\n  };\n  inheritPrototype(BaseSDKComponent, AdEnvironmentConfig);\n  var placeholderForFutureFunction = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    BaseSDKComponent.call(this);\n    generatorWrapper.setAttribute(\"crossorigin\", \"anonymous\");\n    var findEntry = createElementWithOptionalClassesAndAttributes(\"TRACK\");\n    findEntry.setAttribute(\"kind\", \"captions\");\n    findEntry.setAttribute(\"src\", value);\n    findEntry.setAttribute(\"default\", \"\");\n    generatorWrapper.appendChild(findEntry);\n    this.tasks = document.createElement(\"style\");\n    generatorWrapper.appendChild(this.tasks);\n    this.entryIdCounter = generatorWrapper.textTracks[0];\n    setupCueChangeHandler(this);\n    if (CustomMap) {\n      this.entryIdCounter.mode = \"showing\";\n    } else {\n      this.endsWith();\n    }\n  };\n  inheritPrototype(placeholderForFutureFunction, BaseSDKComponent);\n  var setupCueChangeHandler = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter;\n    document.addEventListener(\"updateCueStyles\", function (CustomMap) {\n      generatorWrapper.tasks.textContent = CustomMap.detail.style;\n    }, true);\n    value.addEventListener(\"cuechange\", function () {\n      for (var CustomMap = value.cues, findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n        var iterateEntries = CustomMap[findEntry];\n        iterateEntries.align = \"center\";\n        iterateEntries.position = \"auto\";\n      }\n    }, {\n      once: true\n    });\n  };\n  placeholderForFutureFunction.prototype.endsWith = function () {\n    this.entryIdCounter.mode = \"hidden\";\n  };\n  function setupReportingObserver(generatorWrapper, value) {\n    if (typeof ReportingObserver !== \"undefined\") {\n      var CustomMap = function (iterateEntries) {\n        iterateEntries = getIterator(iterateEntries);\n        for (var createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n          createCircularNode = createCircularNode.value;\n          if (generatorWrapper(createCircularNode)) {\n            value(createCircularNode);\n          }\n        }\n      };\n      var findEntry = new ReportingObserver(CustomMap, {\n        buffered: true\n      });\n      globalScope.addEventListener(\"pagehide\", function () {\n        CustomMap(findEntry.takeRecords(), findEntry);\n        findEntry.disconnect();\n      });\n      findEntry.observe();\n    }\n  }\n  function handleHeavyAdIntervention(generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    setupReportingObserver(function (value) {\n      return value.body && value.body.writeBytes === \"HeavyAdIntervention\";\n    }, function (value) {\n      var CustomMap = value.body.message;\n      var findEntry = resolvePromise.getAdInstance();\n      settlePromise(findEntry, \"ham\", CustomMap);\n      if (CustomMap.includes(\"CPU\")) {\n        settlePromise(findEntry, \"hacpu\", \"true\");\n      } else if (CustomMap.includes(\"network\")) {\n        settlePromise(findEntry, \"habytes\", \"true\");\n      }\n      if (generatorWrapper) {\n        generatorWrapper(value);\n      }\n    });\n  }\n  var videoAttributes = \"autoplay controls crossorigin demuxedaudiosrc demuxedvideosrc loop muted playsinline poster preload src webkit-playsinline x-webkit-airplay\".split(\" \");\n  var videoMethods = \"autoplay buffered controls crossOrigin currentSrc currentTime defaultMuted defaultPlaybackRate disablePictureInPicture disableRemotePlayback duration ended loop muted networkState onerror onwaitingforkey paused played playsinline poster preload preservesPitch mozPreservesPitch webkitPreservesPitch readyState seekable videoWidth videoHeight volume textTracks canPlayType captureStream getVideoPlaybackQuality load pause play requestPictureInPicture setSinkId oncanplay oncanplaythrough onload onplay onpause onended onfullscreenchange onfullscreenerror addEventListener dispatchEvent removeEventListener requestFullscreen\".split(\" \");\n  var mutationObserverConfig = {\n    childList: true\n  };\n  var supportsClassFields = !RegExp(\"^\\\\s*class\\\\s*\\\\{\\\\s*\\\\}\\\\s*$\").test(function () {}.toString());\n  var CustomHTMLElement = HTMLElement;\n  if (supportsClassFields) {\n    CustomHTMLElement = function () {\n      var generatorWrapper = Object.getPrototypeOf(this).constructor;\n      return globalScope.Reflect.construct(HTMLElement, [], generatorWrapper);\n    };\n    Object.setPrototypeOf(CustomHTMLElement, HTMLElement);\n    Object.setPrototypeOf(CustomHTMLElement.prototype, HTMLElement.prototype);\n  }\n  var findTrackElement = function (generatorWrapper) {\n    if (generatorWrapper !== null) {\n      generatorWrapper = getIterator(generatorWrapper);\n      for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n        value = value.value;\n        if (value.nodeName === \"TRACK\".toString()) {\n          return value;\n        }\n      }\n    }\n    return null;\n  };\n  var MediaErrorWrapper = function (generatorWrapper, value) {\n    this.code = generatorWrapper;\n    if (undefined === value) {\n      this.message = \"\";\n    } else {\n      this.message = value;\n    }\n  };\n  var MediaSrcNotSupportedError = function (generatorWrapper) {\n    MediaErrorWrapper.call(this, MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED, undefined === generatorWrapper ? \"\" : generatorWrapper);\n  };\n  inheritPrototype(MediaSrcNotSupportedError, MediaErrorWrapper);\n  var CustomVideoElement = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    var CustomMap = CustomHTMLElement.call(this) || this;\n    settlePromise(resolvePromise.getAdInstance(), \"ulv\", \"1\");\n    CustomMap.clearObject = value;\n    CustomMap.sa = null;\n    CustomMap.getSingletonInstance = null;\n    CustomMap.getSingletonInstance = null;\n    CustomMap.table = createElementWithOptionalClassesAndAttributes(\"VIDEO\");\n    initializeVideoElement(CustomMap);\n    CustomMap.isOperaBrowser = generatorWrapper || new EventDispatcherWrapper();\n    setupVolumeChangeListener(CustomMap);\n    CustomMap.documentMode = null;\n    initializeCustomVideoElement(CustomMap);\n    CustomMap.attachShadow({\n      mode: \"open\"\n    });\n    CustomMap.shadowRoot.appendChild(CustomMap.table);\n    handleHeavyAdIntervention(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"has\", CustomMap.src || CustomMap.bidRequest);\n      settlePromise(resolvePromise.getAdInstance(), \"hat\", String(CustomMap.table.currentTime));\n    });\n    CustomMap.defaultSigned64 = false;\n    CustomMap.DeepTransform = false;\n    CustomMap.createEmptyStringsArray = null;\n    CustomMap.appendBuffer = null;\n    CustomMap.extendObject = false;\n    CustomMap.transformWithFlags = false;\n    CustomMap.PerformanceMonitor = null;\n    CustomMap.someElement = null;\n    return CustomMap;\n  };\n  inheritPrototype(CustomVideoElement, CustomHTMLElement);\n  var loadVideoElement = function (generatorWrapper) {\n    generatorWrapper.table.load();\n    if (handleThenable(Nm)) {\n      generatorWrapper.table.dispatchEvent(new Event(\"canplaythrough\"));\n    }\n  };\n  CustomVideoElement.prototype.attributeChangedCallback = function (generatorWrapper, value, CustomMap) {\n    switch (generatorWrapper) {\n      case \"src\":\n        updateSrcAttribute(this, CustomMap);\n        break;\n      case \"demuxedaudiosrc\":\n      case \"demuxedvideosrc\":\n        updateDemuxedSources(this);\n        break;\n      case \"muted\":\n        if (CustomMap === \"\") {\n          this.table[generatorWrapper] = true;\n        } else {\n          this.table[generatorWrapper] = !!CustomMap;\n        }\n        syncAttributeWithVideoElement(this, generatorWrapper, CustomMap);\n        break;\n      default:\n        syncAttributeWithVideoElement(this, generatorWrapper, CustomMap);\n    }\n  };\n  CustomVideoElement.prototype.ByteArray = function (generatorWrapper) {\n    this.someElement = generatorWrapper;\n    var value;\n    if (!((value = this.sa) == null)) {\n      value.ByteArray(generatorWrapper);\n    }\n  };\n  var syncAttributeWithVideoElement = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap !== generatorWrapper.table.getAttribute(value)) {\n      if (CustomMap === null) {\n        generatorWrapper.table.removeAttribute(value);\n      } else {\n        generatorWrapper.table.setAttribute(value, CustomMap);\n      }\n    }\n  };\n  var removeTimeUpdateListener = function (generatorWrapper) {\n    if (generatorWrapper.sa) {\n      generatorWrapper.table.removeEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n      generatorWrapper.sa.markAsCompleted();\n      generatorWrapper.sa = null;\n    }\n  };\n  var dispatchMediaError = function (generatorWrapper, value) {\n    generatorWrapper.getSingletonInstance = value;\n    generatorWrapper.table.dispatchEvent(new Event(\"error\"));\n  };\n  var initializeVideoElement = function (generatorWrapper) {\n    proxyVideoProperties(generatorWrapper);\n    defineErrorProperty(generatorWrapper);\n    generatorWrapper.table.addEventListener(\"loadedmetadata\", function () {\n      generatorWrapper.appendBuffer = waitForElementResize(generatorWrapper);\n      generatorWrapper.appendBuffer.then(function (value) {\n        var CustomMap = generatorWrapper.table.videoWidth;\n        var findEntry = generatorWrapper.table.videoHeight;\n        var iterateEntries = value.width;\n        var createCircularNode = value.height;\n        if (CustomMap > 0 && findEntry > 0 && iterateEntries > 0 && createCircularNode > 0) {\n          value = value.width / value.height;\n          CustomMap /= findEntry;\n          if (Math.min(CustomMap, value) / Math.max(CustomMap, value) >= 0.97) {\n            CustomMap = \"cover\";\n          } else {\n            CustomMap = \"contain\";\n          }\n        } else {\n          CustomMap = null;\n        }\n        if (CustomMap !== null) {\n          applyStyleOrRemove(generatorWrapper.table, {\n            \"object-fit\": CustomMap\n          });\n        }\n      });\n    });\n    generatorWrapper.table.addEventListener(\"play\", function () {\n      if (!generatorWrapper.DeepTransform) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_play\");\n        generatorWrapper.DeepTransform = true;\n      }\n    });\n    generatorWrapper.table.addEventListener(\"pause\", function () {\n      if (!generatorWrapper.defaultSigned64) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_pause\");\n        reportVideoPlaybackQuality(generatorWrapper.table);\n        generatorWrapper.defaultSigned64 = true;\n      }\n    });\n    addPageHideListener(globalScope, \"pagehide\", function () {\n      if (!generatorWrapper.defaultSigned64) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_pause\");\n        reportVideoPlaybackQuality(generatorWrapper.table);\n        generatorWrapper.defaultSigned64 = true;\n      }\n    });\n    generatorWrapper.table.addEventListener(\"stalled\", function () {\n      settlePromise(resolvePromise.getAdInstance(), \"ves\", \"1\");\n    });\n    new VideoPlaybackMonitor(generatorWrapper.table).window(\"playbackStalled\", function () {\n      return settlePromise(resolvePromise.getAdInstance(), \"pbs\", \"1\");\n    });\n    generatorWrapper.table.addEventListener(\"media_source_error\", function (value) {\n      removeTimeUpdateListener(generatorWrapper);\n      value = value.detail;\n      dispatchMediaError(generatorWrapper, new MediaErrorWrapper(value.code, value.message));\n    });\n    resetVideoSize(generatorWrapper);\n  };\n  var initializeCustomVideoElement = function (generatorWrapper) {\n    var value = findTrackElement(generatorWrapper.childNodes);\n    if (value) {\n      processSrcAttribute(generatorWrapper, value);\n    }\n    if (generatorWrapper.documentMode === null) {\n      setupMutationObserver(generatorWrapper);\n    }\n  };\n  var setupMutationObserver = function (generatorWrapper) {\n    if (globalScope.MutationObserver) {\n      var value = new MutationObserver(function (CustomMap) {\n        CustomMap = getIterator(CustomMap);\n        for (var findEntry = CustomMap.next(); !findEntry.done; findEntry = CustomMap.next()) {\n          findEntry = findEntry.value;\n          if (findEntry.type === \"childList\" && (findEntry = findTrackElement(findEntry.addedNodes))) {\n            processSrcAttribute(generatorWrapper, findEntry);\n            value.disconnect();\n            break;\n          }\n        }\n      });\n      value.observe(generatorWrapper, mutationObserverConfig);\n    }\n  };\n  var setupVolumeChangeListener = function (generatorWrapper) {\n    generatorWrapper.table.addEventListener(\"volumechange\", function () {\n      generatorWrapper.isOperaBrowser.entryIdCounter.onFulfilled(videoMuteEvent.toString(), generatorWrapper.table.muted);\n      if (!generatorWrapper.clearObject) {\n        generatorWrapper.isOperaBrowser.entryIdCounter.onFulfilled(videoCaptionVisibilityEvent.toString(), generatorWrapper.table.muted);\n      }\n    });\n  };\n  var processSrcAttribute = function (generatorWrapper, value) {\n    if (generatorWrapper.documentMode === null && value.hasAttribute(\"src\")) {\n      var CustomMap = value.getAttribute(\"src\");\n      generatorWrapper.documentMode = new placeholderForFutureFunction(generatorWrapper.table, CustomMap, value.hasAttribute(\"default\"));\n      new CaptionVisibilityComponent(generatorWrapper.documentMode, generatorWrapper.isOperaBrowser);\n      if (CustomMap.includes(\"kind=asr\")) {\n        settlePromise(resolvePromise.getAdInstance(), \"act\", \"1\");\n      }\n    }\n  };\n  var updateSrcAttribute = function (generatorWrapper, value) {\n    if (value !== generatorWrapper.getSingletonInstance) {\n      generatorWrapper.getSingletonInstance = value;\n      if (generatorWrapper.extendObject && value && isGCacheURL(value)) {\n        value = getGCacheURL(value);\n      }\n      var CustomMap = value ? getItagValue(value) : null;\n      var findEntry = !!CustomMap && isSupportedVideoType(CustomMap);\n      settlePromise(resolvePromise.getAdInstance(), \"umsem\", findEntry ? \"1\" : \"0\");\n      if (findEntry) {\n        value = createInstanceWithArguments(MediaSourceConfig, value, getMediaSourceString(CustomMap), 1000 * itagSupportsAutoplayMap[CustomMap], null);\n        generatorWrapper.sa = createInstanceWithArguments(MediaSourceManager, [value]);\n        if (generatorWrapper.someElement) {\n          generatorWrapper.sa.ByteArray(generatorWrapper.someElement);\n        }\n        generatorWrapper.sa.window(\"media_source_error\", function (iterateEntries) {\n          iterateEntries = createCustomEvent(\"media_source_error\", iterateEntries.detail);\n          generatorWrapper.table.dispatchEvent(iterateEntries);\n        });\n        generatorWrapper.createEmptyStringsArray = function () {\n          var iterateEntries = generatorWrapper.sa;\n          iterateEntries.handleThenable = 1000 * generatorWrapper.table.currentTime;\n          updateSegmentTrackers(iterateEntries);\n        };\n        generatorWrapper.table.addEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n        syncAttributeWithVideoElement(generatorWrapper, \"src\", generateObjectURL(generatorWrapper.sa));\n      } else {\n        removeTimeUpdateListener(generatorWrapper);\n        syncAttributeWithVideoElement(generatorWrapper, \"src\", value);\n      }\n      if (!generatorWrapper.transformWithFlags) {\n        loadVideoElement(generatorWrapper);\n      }\n    }\n  };\n  var updateDemuxedSources = function (generatorWrapper) {\n    if (generatorWrapper.src) {\n      dispatchMediaError(generatorWrapper, new MediaErrorWrapper(MediaError.MEDIA_ERR_ABORTED, \"Setting demuxed src after src is already set.\"));\n    }\n    if (!generatorWrapper.unknownVariable && !generatorWrapper.bidRequest && generatorWrapper.sa) {\n      removeTimeUpdateListener(generatorWrapper);\n      syncAttributeWithVideoElement(generatorWrapper, \"src\", null);\n      loadVideoElement(generatorWrapper);\n    } else if (generatorWrapper.unknownVariable && generatorWrapper.bidRequest) {\n      var value = getItagValue(isGCacheURL(generatorWrapper.bidRequest) ? getGCacheURL(generatorWrapper.bidRequest) : generatorWrapper.bidRequest);\n      var CustomMap = getItagValue(isGCacheURL(generatorWrapper.unknownVariable) ? getGCacheURL(generatorWrapper.unknownVariable) : generatorWrapper.unknownVariable);\n      if (value && isSupportedVideoType(value)) {\n        if (CustomMap && isSupportedVideoType(CustomMap)) {\n          var findEntry = !!value && isSupportedVideoType(value) && !!CustomMap && isSupportedVideoType(CustomMap);\n          settlePromise(resolvePromise.getAdInstance(), \"umsed\", findEntry ? \"1\" : \"0\");\n          value = createInstanceWithArguments(MediaSourceConfig, generatorWrapper.bidRequest, getMediaSourceString(value), -1, null);\n          CustomMap = createInstanceWithArguments(MediaSourceConfig, generatorWrapper.unknownVariable, getMediaSourceString(CustomMap), -1, null);\n          generatorWrapper.sa = createInstanceWithArguments(MediaSourceManager, [value, CustomMap]);\n          if (generatorWrapper.someElement) {\n            generatorWrapper.sa.ByteArray(generatorWrapper.someElement);\n          }\n          generatorWrapper.sa.window(\"media_source_error\", function (iterateEntries) {\n            iterateEntries = createCustomEvent(\"media_source_error\", iterateEntries.detail);\n            generatorWrapper.table.dispatchEvent(iterateEntries);\n          });\n          generatorWrapper.createEmptyStringsArray = function () {\n            var iterateEntries = generatorWrapper.sa;\n            iterateEntries.handleThenable = 1000 * generatorWrapper.table.currentTime;\n            updateSegmentTrackers(iterateEntries);\n          };\n          generatorWrapper.table.addEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n          syncAttributeWithVideoElement(generatorWrapper, \"src\", generateObjectURL(generatorWrapper.sa));\n          if (!generatorWrapper.transformWithFlags) {\n            loadVideoElement(generatorWrapper);\n          }\n        } else {\n          dispatchMediaError(generatorWrapper, new MediaSrcNotSupportedError('Audio itag \"' + CustomMap + '\" not supported.'));\n        }\n      } else {\n        dispatchMediaError(generatorWrapper, new MediaSrcNotSupportedError('Video itag \"' + value + '\" not supported.'));\n      }\n    }\n  };\n  var proxyVideoProperties = function (generatorWrapper) {\n    findEntry = {\n      bindOrWrapFunction: undefined,\n      getAdStateValue: undefined\n    };\n    for (var value = getIterator(videoMethods), CustomMap = value.next(), findEntry = {}; !CustomMap.done; CustomMap = value.next()) {\n      findEntry.bindOrWrapFunction = CustomMap.value;\n      if (findEntry.bindOrWrapFunction in generatorWrapper.table) {\n        if (typeof generatorWrapper.table[findEntry.bindOrWrapFunction] === \"function\") {\n          findEntry.getAdStateValue = generatorWrapper.table[findEntry.bindOrWrapFunction].bind(generatorWrapper.table);\n          Object.defineProperty(generatorWrapper, findEntry.bindOrWrapFunction, {\n            set: function (iterateEntries) {\n              return function (createCircularNode) {\n                generatorWrapper.table[iterateEntries.bindOrWrapFunction] = createCircularNode;\n              };\n            }(findEntry),\n            get: function (iterateEntries) {\n              return function () {\n                return iterateEntries.getAdStateValue;\n              };\n            }(findEntry)\n          });\n        } else {\n          Object.defineProperty(generatorWrapper, findEntry.bindOrWrapFunction, {\n            set: function (iterateEntries) {\n              return function (createCircularNode) {\n                generatorWrapper.table[iterateEntries.bindOrWrapFunction] = createCircularNode;\n              };\n            }(findEntry),\n            get: function (iterateEntries) {\n              return function () {\n                return generatorWrapper.table[iterateEntries.bindOrWrapFunction];\n              };\n            }(findEntry)\n          });\n        }\n      }\n    }\n  };\n  var defineErrorProperty = function (generatorWrapper) {\n    Object.defineProperty(generatorWrapper, \"error\", {\n      set() {},\n      get() {\n        if (generatorWrapper.table.hasError) {\n          return generatorWrapper.table.hasError;\n        } else {\n          return generatorWrapper.getSingletonInstance;\n        }\n      }\n    });\n  };\n  var resetVideoSize = function (generatorWrapper) {\n    generatorWrapper.table.style.width = getFullSize();\n    generatorWrapper.table.style.height = getFullSize();\n  };\n  CustomVideoElement.prototype.disconnectedCallback = function () {\n    if (this.appendBuffer) {\n      disconnectResizeObservers(this.appendBuffer);\n    }\n    if (CustomHTMLElement.prototype.disconnectedCallback) {\n      CustomHTMLElement.prototype.disconnectedCallback.call(this);\n    }\n  };\n  globalObject.Object.defineProperties(CustomVideoElement.prototype, {\n    unknownVariable: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"demuxedaudiosrc\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"demuxedaudiosrc\");\n      }\n    },\n    bidRequest: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"demuxedvideosrc\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"demuxedvideosrc\");\n      }\n    },\n    src: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"src\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"src\");\n      }\n    }\n  });\n  globalObject.Object.defineProperties(CustomVideoElement, {\n    observedAttributes: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return videoAttributes;\n      }\n    }\n  });\n  if (globalScope.customElements) {\n    if (!globalScope.customElements.get(\"lima-video\")) {\n      globalScope.customElements.define(\"lima-video\", CustomVideoElement);\n    }\n  }\n  function initializeVideoComponent() {\n    var generatorWrapper = createInstanceWithArguments(CB);\n    generatorWrapper.initializeMraid().then(function () {\n      var value = createCustomEvent(\"initialized\");\n      generatorWrapper.dispatchEvent(value);\n    });\n    return generatorWrapper;\n  }\n  var AdLoader = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    tryCall.call(this);\n    this.handleThenable = generatorWrapper;\n    this.tasks = CustomMap;\n    this.createDeferred = iterateEntries;\n    this.createIterator = this.updateMaxSize = this.isFirefox = this.dispatchUnhandledRejection = this.setTimeoutWrapper = this.isObjectOrFunction = 0;\n    this.onFulfilled = [];\n    this.handleThenable = false;\n    this.definePropertyPolyfill = this.toArray = this.firstQuartileTime = null;\n    this.wrapGeneratorToPromise = false;\n    this.isSafari = this.logError = this.handleAsync = this.sliceArguments = this.isArrayLike = null;\n    this.handleGeneratorError = false;\n    this.resolvePromise = new table(value.url);\n    this.validateStringPrototypeMethod = value.validateStringPrototypeMethod;\n    this.assignPolyfill = findEntry;\n    if (!(this.tryCall = value.entryIdCounter)) {\n      this.resolvePromise.entryIdCounter.removeElement(\"alr\");\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"sl_dv\" + this.createDeferred, (this.tryCall !== null).toString());\n    this.totalAdBufferingTime = !this.tryCall;\n    this.entryIdCounter = new XMLHttpRequest();\n    this.year = 0.1;\n    if (this.isDone = isSupportedEnvironment() && !isGCacheURL(this.resolvePromise)) {\n      this.handleAsync = initializeVideoComponent();\n      registerDisposable(this, this.handleAsync);\n    }\n    setupChunkLoaderEvents(this);\n  };\n  inheritPrototype(AdLoader, tryCall);\n  var dispatchMediaSourceError = function (generatorWrapper, value) {\n    value = createCustomEvent(\"media_source_error\", value);\n    generatorWrapper.handleThenable.dispatchEvent(value);\n  };\n  var handleChunkLoadError = function (generatorWrapper, value) {\n    dispatchMediaSourceError(generatorWrapper, {\n      code: generatorWrapper.setTimeoutWrapper > 1 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n      message: value\n    });\n  };\n  var setupChunkLoaderEvents = function (generatorWrapper) {\n    generatorWrapper.firstQuartileTime = function () {\n      handleChunkLoadResponse(generatorWrapper);\n      if (generatorWrapper.totalAdBufferingTime) {\n        var value = generatorWrapper.entryIdCounter.responseText;\n        generatorWrapper.handleThenable = !value || value.length < generatorWrapper.validateStringPrototypeMethod;\n        generatorWrapper.updateMaxSize = 0;\n        logError(\"sl_cc\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n        generatorWrapper.dispatchUnhandledRejection++;\n        processSourceBuffer(generatorWrapper);\n      }\n    };\n    generatorWrapper.toArray = function () {\n      handleChunkLoadResponse(generatorWrapper);\n    };\n    generatorWrapper.definePropertyPolyfill = function () {\n      logError(\"sl_ec\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n      handleChunkLoadError(generatorWrapper, \"Failed to load chunk \" + generatorWrapper.setTimeoutWrapper + \" for stream \" + generatorWrapper.createDeferred);\n    };\n    generatorWrapper.entryIdCounter.addEventListener(\"load\", generatorWrapper.firstQuartileTime);\n    generatorWrapper.entryIdCounter.addEventListener(\"progress\", generatorWrapper.toArray);\n    generatorWrapper.entryIdCounter.addEventListener(\"error\", generatorWrapper.definePropertyPolyfill);\n    generatorWrapper.tasks.addEventListener(\"updateend\", function () {\n      if (generatorWrapper.tasks.buffered.length) {\n        generatorWrapper.isFirefox = generatorWrapper.tasks.buffered.end(0);\n        if (generatorWrapper.isDone) {\n          if (generatorWrapper.handleGeneratorError && !generatorWrapper.tasks.updating && generatorWrapper.setTimeoutWrapper === generatorWrapper.dispatchUnhandledRejection) {\n            logError(\"sl_lc\" + generatorWrapper.createDeferred);\n            generatorWrapper.assignPolyfill();\n          }\n        } else if (generatorWrapper.handleThenable && !generatorWrapper.tasks.updating && generatorWrapper.setTimeoutWrapper === generatorWrapper.dispatchUnhandledRejection) {\n          logError(\"sl_lc\" + generatorWrapper.createDeferred);\n          generatorWrapper.assignPolyfill();\n        }\n      }\n      if (!generatorWrapper.wrapGeneratorToPromise && generatorWrapper.handleThenable.buffered.length > 1) {\n        settlePromise(resolvePromise.getAdInstance(), \"dbr\", \"1\");\n        generatorWrapper.wrapGeneratorToPromise = true;\n      }\n    });\n    generatorWrapper.tasks.addEventListener(\"update\", function () {\n      if (generatorWrapper.onFulfilled.length && !generatorWrapper.tasks.updating) {\n        generatorWrapper.tasks.appendBuffer(generatorWrapper.onFulfilled.shift());\n      }\n    });\n    generatorWrapper.tasks.addEventListener(\"error\", function () {\n      logError(\"msb_err\" + generatorWrapper.createDeferred);\n      dispatchMediaSourceError(generatorWrapper, {\n        code: MediaError.MEDIA_ERR_DECODE,\n        message: \"Error on SourceBuffer \" + generatorWrapper.createDeferred\n      });\n    });\n    if (generatorWrapper.isDone) {\n      if (generatorWrapper.handleAsync.getUniqueId()) {\n        processAdRequest(generatorWrapper);\n      } else {\n        generatorWrapper.isArrayLike = addPageHideListener(generatorWrapper.handleAsync, \"initialized\", function () {\n          processAdRequest(generatorWrapper);\n        });\n      }\n      generatorWrapper.sliceArguments = addPageHideListener(generatorWrapper.handleAsync, \"get_video_succeeded\", function () {\n        processSourceBuffer(generatorWrapper);\n      });\n    } else {\n      processAdRequest(generatorWrapper);\n    }\n  };\n  var handleAdRequestFailure = function (generatorWrapper) {\n    logError(\"sl_rc\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n    var value = createAdRequestUrl(generatorWrapper);\n    generatorWrapper.entryIdCounter.open(\"get\", value);\n    generatorWrapper.entryIdCounter.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    generatorWrapper.entryIdCounter.send(null);\n    if (generatorWrapper.isDone) {\n      generatorWrapper.logError = null;\n      generatorWrapper.isSafari = value;\n    }\n  };\n  var handleChunkLoadResponse = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter.status >= 400) {\n      handleChunkLoadError(generatorWrapper, 'Response code \"' + generatorWrapper.entryIdCounter.status + '\" on loading chunk ' + generatorWrapper.setTimeoutWrapper + \" for stream \" + generatorWrapper.createDeferred);\n    } else {\n      if (!generatorWrapper.totalAdBufferingTime) {\n        var value = generatorWrapper.entryIdCounter.getResponseHeader(\"content-type\");\n        if (value && value.indexOf(\"text/plain\") >= 0) {\n          if (generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE) {\n            generatorWrapper.resolvePromise = new table(generatorWrapper.entryIdCounter.response);\n            generatorWrapper.setTimeoutWrapper = 0;\n            generatorWrapper.dispatchUnhandledRejection = 0;\n            generatorWrapper.isObjectOrFunction++;\n            processAdRequest(generatorWrapper);\n          }\n          return;\n        }\n        generatorWrapper.totalAdBufferingTime = true;\n        logError(\"sl_redc\" + generatorWrapper.createDeferred);\n        settlePromise(resolvePromise.getAdInstance(), \"sl_tr\" + generatorWrapper.createDeferred, generatorWrapper.isObjectOrFunction.toString());\n      }\n      generatorWrapper.resolvePromise.entryIdCounter.removeElement(\"alr\");\n      if (generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.LOADING || generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE) {\n        value = createBufferFromArrayResponse(generatorWrapper, generatorWrapper.updateMaxSize);\n        generatorWrapper.updateMaxSize = generatorWrapper.entryIdCounter.response.length;\n        generatorWrapper.createIterator += value.byteLength;\n        processVideoAd(generatorWrapper, value);\n      }\n      if (generatorWrapper.isDone && generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE && (value = createBufferFromArrayResponse(generatorWrapper, 0), value.byteLength > 0)) {\n        var CustomMap = generatorWrapper.entryIdCounter.responseText;\n        generatorWrapper.handleGeneratorError = !CustomMap || CustomMap.length < generatorWrapper.validateStringPrototypeMethod;\n        generatorWrapper.handleAsync.isIpod(value, new table(generatorWrapper.isSafari), 0, generatorWrapper.handleGeneratorError);\n      }\n    }\n  };\n  var processVideoAd = function (generatorWrapper, value) {\n    if (value.byteLength > 0) {\n      if (generatorWrapper.tasks.updating || generatorWrapper.onFulfilled.length) {\n        generatorWrapper.onFulfilled.push(value);\n      } else {\n        generatorWrapper.tasks.appendBuffer(value);\n      }\n    }\n  };\n  var createBufferFromArrayResponse = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.entryIdCounter.response;\n    for (var CustomMap = new Uint8Array(generatorWrapper.length - value), findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n      CustomMap[findEntry] = generatorWrapper.charCodeAt(findEntry + value) & 255;\n    }\n    return CustomMap.buffer;\n  };\n  var processSourceBuffer = function (generatorWrapper) {\n    var value = popupBlockerDetectionTimestamp;\n    if (-1 !== value && value < generatorWrapper.createIterator + generatorWrapper.validateStringPrototypeMethod) {\n      generatorWrapper.handleThenable.pause();\n      popupBlockerDetectionTimestamp = -1;\n      value = false;\n    } else {\n      value = generatorWrapper.dispatchUnhandledRejection === generatorWrapper.setTimeoutWrapper && !generatorWrapper.tasks.updating && !generatorWrapper.onFulfilled.length;\n      if (generatorWrapper.isDone) {\n        value = !generatorWrapper.handleGeneratorError && value && generatorWrapper.handleThenable.currentTime >= generatorWrapper.year;\n      } else {\n        value = !generatorWrapper.handleThenable && value && generatorWrapper.handleThenable.currentTime >= generatorWrapper.year;\n      }\n    }\n    if (value) {\n      generatorWrapper.year = generatorWrapper.isFirefox + 0.1;\n      processAdRequest(generatorWrapper);\n    }\n  };\n  var createAdRequestUrl = function (generatorWrapper) {\n    var value = generatorWrapper.isDone && generatorWrapper.logError ? generatorWrapper.logError + 1 : generatorWrapper.setTimeoutWrapper * generatorWrapper.validateStringPrototypeMethod;\n    return setParameter(generatorWrapper.resolvePromise, \"range\", value + \"-\" + (value + generatorWrapper.validateStringPrototypeMethod - 1)).toString();\n  };\n  var processAdRequest = function (generatorWrapper) {\n    if (generatorWrapper.isDone) {\n      var value = new table(createAdRequestUrl(generatorWrapper));\n      generatorWrapper.handleAsync.containsElement(value).then(function (CustomMap) {\n        if (CustomMap) {\n          generatorWrapper.logError = Number(CustomMap.isAndroidBrowser);\n          generatorWrapper.handleGeneratorError = CustomMap.handleGeneratorError;\n          processVideoAd(generatorWrapper, CustomMap.video);\n          CustomMap = createCustomEvent(\"get_video_succeeded\");\n          generatorWrapper.handleAsync.dispatchEvent(CustomMap);\n          generatorWrapper.dispatchUnhandledRejection++;\n        } else {\n          handleAdRequestFailure(generatorWrapper);\n        }\n        generatorWrapper.setTimeoutWrapper++;\n      });\n    } else {\n      handleAdRequestFailure(generatorWrapper);\n      generatorWrapper.setTimeoutWrapper++;\n    }\n  };\n  AdLoader.prototype.getAdEnvironment = function () {\n    if (this.isDone && this.handleAsync.getUniqueId()) {\n      this.handleAsync.closeCache();\n    }\n    this.entryIdCounter.removeEventListener(\"load\", this.firstQuartileTime);\n    this.entryIdCounter.removeEventListener(\"progress\", this.toArray);\n    this.entryIdCounter.removeEventListener(\"error\", this.definePropertyPolyfill);\n    Pu(this.isArrayLike);\n    Pu(this.sliceArguments);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var MediaSourceManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    var CustomMap = this;\n    this.handleAsync = generatorWrapper;\n    this.handleThenable = value;\n    this.entryIdCounter = new MediaSource();\n    this.dispatchUnhandledRejection = [];\n    this.setTimeoutWrapper = [];\n    this.tasks = this.createDeferred = null;\n    this.isDone = false;\n    this.onFulfilled = function () {\n      initializeMediaSource(CustomMap);\n    };\n    this.entryIdCounter.addEventListener(\"sourceopen\", this.onFulfilled);\n  };\n  inheritPrototype(MediaSourceManager, tryCall);\n  var removeTimeUpdateListener = function (generatorWrapper) {\n    if (generatorWrapper.createDeferred) {\n      generatorWrapper.handleAsync.removeEventListener(\"timeupdate\", generatorWrapper.createDeferred);\n    }\n  };\n  var initializeMediaSource = function (generatorWrapper) {\n    logError(\"msmsw_oso\");\n    generatorWrapper.createDeferred = function () {\n      if (!generatorWrapper.isDone) {\n        for (var iterateEntries = getIterator(generatorWrapper.setTimeoutWrapper), createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n          processSourceBuffer(createCircularNode.value);\n        }\n      }\n    };\n    generatorWrapper.handleAsync.addEventListener(\"timeupdate\", generatorWrapper.createDeferred);\n    for (var value = 0; value < generatorWrapper.handleThenable.length; value++) {\n      var CustomMap = generatorWrapper.handleThenable[value];\n      settlePromise(resolvePromise.getAdInstance(), \"msmsw_mime\" + value, CustomMap.mimeType);\n      settlePromise(resolvePromise.getAdInstance(), \"msmsw_cs\" + value, CustomMap.validateStringPrototypeMethod.toString());\n      var findEntry = generatorWrapper.entryIdCounter.addSourceBuffer(CustomMap.mimeType);\n      if (findEntry) {\n        generatorWrapper.dispatchUnhandledRejection.push(findEntry);\n        CustomMap = createInstanceWithArguments(AdLoader, generatorWrapper.handleAsync, CustomMap, findEntry, function () {\n          generatorWrapper: if (!generatorWrapper.isDone) {\n            for (var iterateEntries = getIterator(generatorWrapper.setTimeoutWrapper), createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n              createCircularNode = createCircularNode.value;\n              if (createCircularNode.isDone ? !createCircularNode.handleGeneratorError || createCircularNode.tasks.updating || createCircularNode.onFulfilled.length : !createCircularNode.handleThenable || createCircularNode.tasks.updating || createCircularNode.onFulfilled.length) {\n                break generatorWrapper;\n              }\n            }\n            generatorWrapper.entryIdCounter.endOfStream();\n            generatorWrapper.isDone = true;\n            removeTimeUpdateListener(generatorWrapper);\n          }\n        }, value);\n        generatorWrapper.setTimeoutWrapper.push(CustomMap);\n      } else {\n        logError(\"msmsw_sbf\" + value);\n      }\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"msmsw_ns\", generatorWrapper.dispatchUnhandledRejection.length.toString());\n  };\n  MediaSourceManager.prototype.getAdEnvironment = function () {\n    if (this.tasks) {\n      window.URL.revokeObjectURL(this.tasks);\n    }\n    for (var generatorWrapper = getIterator(this.setTimeoutWrapper), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value.value.markAsCompleted();\n    }\n    removeTimeUpdateListener(this);\n    this.entryIdCounter.removeEventListener(\"sourceopen\", this.onFulfilled);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  RegExp.prototype.hasOwnProperty(\"sticky\");\n  var uuidCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n  var generateUUID = function () {\n    for (var generatorWrapper = Array(36), value = 0, CustomMap, findEntry = 0; findEntry < 36; findEntry++) {\n      if (findEntry == 8 || findEntry == 13 || findEntry == 18 || findEntry == 23) {\n        generatorWrapper[findEntry] = \"-\";\n      } else if (findEntry == 14) {\n        generatorWrapper[findEntry] = \"4\";\n      } else {\n        if (value <= 2) {\n          value = 33554432 + 16777216 * Math.random() | 0;\n        }\n        CustomMap = value & 15;\n        value >>= 4;\n        generatorWrapper[findEntry] = uuidCharacters[findEntry == 19 ? CustomMap & 3 | 8 : CustomMap];\n      }\n    }\n    return generatorWrapper.join(\"\");\n  };\n  var CustomUri = function (generatorWrapper) {\n    table.call(this, generatorWrapper);\n    this.onFulfilled = new Map();\n    generatorWrapper = this.setTimeoutWrapper;\n    var value = generatorWrapper.indexOf(\";\");\n    var CustomMap = null;\n    if (value >= 0) {\n      this.setTimeoutWrapper = generatorWrapper.substring(0, value);\n      CustomMap = generatorWrapper.substring(value + 1);\n    } else {\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n    parseUriParameters(this, CustomMap);\n  };\n  inheritPrototype(CustomUri, table);\n  CustomUri.prototype.toString = function () {\n    return buildUriString(this, table.prototype.toString.call(this));\n  };\n  CustomUri.prototype.dispatchUnhandledRejection = function () {\n    return \"\";\n  };\n  var parseUriParameters = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(value))) {\n      value.split(\";\").forEach(function (CustomMap) {\n        var findEntry = CustomMap.indexOf(\"=\");\n        if (!(findEntry <= 0)) {\n          var iterateEntries = decodeUriComponentWithSpace(CustomMap.substring(0, findEntry));\n          CustomMap = decodeUriComponentWithSpace(CustomMap.substring(findEntry + 1));\n          findEntry = generatorWrapper.onFulfilled.get(iterateEntries);\n          if (findEntry != null) {\n            if (!findEntry.includes(CustomMap)) {\n              findEntry.push(CustomMap);\n            }\n          } else {\n            findEntry = [stringifyNullable(CustomMap)];\n          }\n          generatorWrapper.onFulfilled.set(iterateEntries, findEntry);\n        }\n      }, generatorWrapper);\n    }\n  };\n  var getOrdParameter = function (generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.onFulfilled.get(\"ord\");\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var setOrdParameter = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      value = value.map(stringifyNullable);\n      generatorWrapper.onFulfilled.set(\"ord\", value);\n    }\n  };\n  var buildUriString = function (generatorWrapper, value) {\n    value = [stringifyNullable(value)];\n    value.push.apply(value, toArray(getUriParameters(generatorWrapper)));\n    return value.join(\";\");\n  };\n  var getUriParameters = function (generatorWrapper) {\n    var value = getOrdParameter(generatorWrapper);\n    if (value == null) {\n      value = [stringifyNullable(Date.now())];\n    } else if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      generatorWrapper.onFulfilled.delete(\"ord\");\n    }\n    var CustomMap = [];\n    generatorWrapper.onFulfilled.forEach(function (findEntry, iterateEntries) {\n      findEntry.forEach(function (createCircularNode) {\n        CustomMap.push(iterateEntries + \"=\" + createCircularNode);\n      });\n    });\n    CustomMap.push(\"ord=\" + value[0]);\n    setOrdParameter(generatorWrapper, value);\n    return CustomMap;\n  };\n  CustomUri.prototype.handleThenable = function () {\n    return new CustomUri(this.toString());\n  };\n  function isDoubleClickAd(generatorWrapper) {\n    var value = new CustomUri(generatorWrapper);\n    generatorWrapper = value.tasks;\n    value = buildUriString(value, value.setTimeoutWrapper);\n    return !endsWith(generatorWrapper, \".g.doubleclick.net\") && (endsWith(generatorWrapper, \"doubleclick.net\") || endsWith(generatorWrapper, \"pagead2.googlesyndication.com\")) && matchesRegex(\"/(ad|pfad)[x|i|j]?/\", value);\n  }\n  function isBidRequest(generatorWrapper) {\n    return new table(generatorWrapper).tasks == \"bid.g.doubleclick.net\";\n  }\n  function isGoogleAdsRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"googleads.g.doubleclick.net\") && matchesRegex(\"/pagead/(live/)?ads\", value);\n  }\n  function isGampadRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"doubleclick.net\") && matchesRegex(\"/gampad/(live/)?ads\", value);\n  }\n  function isAdvRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return generatorWrapper.tasks === \"ad.doubleclick.net\" && matchesRegex(\"/dv3/adv\", value);\n  }\n  var updateMaxSize = {\n    DEPRECATED_ERROR_CODE: -1,\n    VAST_MALFORMED_RESPONSE: 100,\n    VAST_SCHEMA_VALIDATION_ERROR: 101,\n    VAST_UNSUPPORTED_VERSION: 102,\n    VAST_TRAFFICKING_ERROR: 200,\n    VAST_UNEXPECTED_LINEARITY: 201,\n    VAST_UNEXPECTED_DURATION_ERROR: 202,\n    VAST_WRAPPER_ERROR: 300,\n    VAST_LOAD_TIMEOUT: 301,\n    VAST_TOO_MANY_REDIRECTS: 302,\n    VAST_NO_ADS_AFTER_WRAPPER: 303,\n    VIDEO_PLAY_ERROR: 400,\n    VAST_MEDIA_LOAD_TIMEOUT: 402,\n    VAST_LINEAR_ASSET_MISMATCH: 403,\n    VAST_PROBLEM_DISPLAYING_MEDIA_FILE: 405,\n    OVERLAY_AD_PLAYING_FAILED: 500,\n    NONLINEAR_DIMENSIONS_ERROR: 501,\n    OVERLAY_AD_LOADING_FAILED: 502,\n    VAST_NONLINEAR_ASSET_MISMATCH: 503,\n    COMPANION_REQUIRED_ERROR: 602,\n    COMPANION_AD_LOADING_FAILED: 603,\n    UNKNOWN_ERROR: 900,\n    VPAID_ERROR: 901,\n    FAILED_TO_REQUEST_ADS: 1005,\n    VAST_ASSET_NOT_FOUND: 1007,\n    VAST_EMPTY_RESPONSE: 1009,\n    UNKNOWN_AD_RESPONSE: 1010,\n    UNSUPPORTED_LOCALE: 1011,\n    ADS_REQUEST_NETWORK_ERROR: 1012,\n    INVALID_AD_TAG: 1013,\n    PROTECTED_AUDIENCE_API_ERROR: 1014,\n    STREAM_INITIALIZATION_FAILED: 1020,\n    ASSET_FALLBACK_FAILED: 1021,\n    INVALID_ARGUMENTS: 1101,\n    NATIVE_MESSAGE_ERROR: 1204,\n    AUTOPLAY_DISALLOWED: 1205,\n    CONSENT_MANAGEMENT_PROVIDER_NOT_READY: 1300,\n    isSecureContext: 2002\n  };\n  updateMaxSize[-1] = \"DEPRECATED_ERROR_CODE\";\n  updateMaxSize[100] = \"VAST_MALFORMED_RESPONSE\";\n  updateMaxSize[101] = \"VAST_SCHEMA_VALIDATION_ERROR\";\n  updateMaxSize[102] = \"VAST_UNSUPPORTED_VERSION\";\n  updateMaxSize[200] = \"VAST_TRAFFICKING_ERROR\";\n  updateMaxSize[201] = \"VAST_UNEXPECTED_LINEARITY\";\n  updateMaxSize[202] = \"VAST_UNEXPECTED_DURATION_ERROR\";\n  updateMaxSize[300] = \"VAST_WRAPPER_ERROR\";\n  updateMaxSize[301] = \"VAST_LOAD_TIMEOUT\";\n  updateMaxSize[302] = \"VAST_TOO_MANY_REDIRECTS\";\n  updateMaxSize[303] = \"VAST_NO_ADS_AFTER_WRAPPER\";\n  updateMaxSize[400] = \"VIDEO_PLAY_ERROR\";\n  updateMaxSize[402] = \"VAST_MEDIA_LOAD_TIMEOUT\";\n  updateMaxSize[403] = \"VAST_LINEAR_ASSET_MISMATCH\";\n  updateMaxSize[405] = \"VAST_PROBLEM_DISPLAYING_MEDIA_FILE\";\n  updateMaxSize[500] = \"OVERLAY_AD_PLAYING_FAILED\";\n  updateMaxSize[501] = \"NONLINEAR_DIMENSIONS_ERROR\";\n  updateMaxSize[502] = \"OVERLAY_AD_LOADING_FAILED\";\n  updateMaxSize[503] = \"VAST_NONLINEAR_ASSET_MISMATCH\";\n  updateMaxSize[602] = \"COMPANION_REQUIRED_ERROR\";\n  updateMaxSize[603] = \"COMPANION_AD_LOADING_FAILED\";\n  updateMaxSize[900] = \"UNKNOWN_ERROR\";\n  updateMaxSize[901] = \"VPAID_ERROR\";\n  updateMaxSize[1005] = \"FAILED_TO_REQUEST_ADS\";\n  updateMaxSize[1007] = \"VAST_ASSET_NOT_FOUND\";\n  updateMaxSize[1009] = \"VAST_EMPTY_RESPONSE\";\n  updateMaxSize[1010] = \"UNKNOWN_AD_RESPONSE\";\n  updateMaxSize[1011] = \"UNSUPPORTED_LOCALE\";\n  updateMaxSize[1012] = \"ADS_REQUEST_NETWORK_ERROR\";\n  updateMaxSize[1013] = \"INVALID_AD_TAG\";\n  updateMaxSize[1014] = \"PROTECTED_AUDIENCE_API_ERROR\";\n  updateMaxSize[1020] = \"STREAM_INITIALIZATION_FAILED\";\n  updateMaxSize[1021] = \"ASSET_FALLBACK_FAILED\";\n  updateMaxSize[1101] = \"INVALID_ARGUMENTS\";\n  updateMaxSize[1204] = \"NATIVE_MESSAGE_ERROR\";\n  updateMaxSize[1205] = \"AUTOPLAY_DISALLOWED\";\n  updateMaxSize[1300] = \"CONSENT_MANAGEMENT_PROVIDER_NOT_READY\";\n  updateMaxSize[2002] = \"SUPPORTED_ADS_NOT_FOUND\";\n  var AdError = function (generatorWrapper, value, CustomMap) {\n    var findEntry = Error.call(this);\n    this.message = findEntry.message;\n    if (\"stack\" in findEntry) {\n      this.stack = findEntry.stack;\n    }\n    this.type = generatorWrapper;\n    this.errorMessage = value;\n    this.errorCode = CustomMap;\n    this.createUnsigned64 = this.entryIdCounter = null;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  setTimeoutWrapper.getInnerError = function () {\n    return this.entryIdCounter;\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    if (this.errorCode < 1000) {\n      return this.errorCode;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  var carJsUrl = identityFunction([\"https://imasdk.googleapis.com/js/sdkloader/car.js\"]);\n  createSafeHtmlFromTemplate(carJsUrl);\n  function identifyAdServer(generatorWrapper) {\n    if (generatorWrapper) {\n   "