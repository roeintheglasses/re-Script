"filled;\n    var CustomMap = 1000 * getCurrentVideoTime(this);\n    if (CustomMap - this.dispatchUnhandledRejection < 0.5 * value) {\n      if (!this.handleAsync) {\n        this.handleAsync = true;\n        this.dispatchEvent(\"playbackStalled\");\n      }\n    } else {\n      this.handleAsync = false;\n    }\n    this.dispatchUnhandledRejection = CustomMap;\n    this.onFulfilled = generatorWrapper;\n  };\n  var trustedDomainsList = \"://secure-...imrworldwide.com/ ://cdn.imrworldwide.com/ ://aksecure.imrworldwide.com/ ://[^.]*.moatads.com ://youtube[0-9]+.moatpixel.com ://pm.adsafeprotected.com/youtube ://pm.test-adsafeprotected.com/youtube ://e[0-9]+.yt.srs.doubleverify.com www.google.com/pagead/xsul www.youtube.com/pagead/slav\".split(\" \");\n  var ocrRegex = /\\bocr\\b/;\n  function isTrustedDomain(generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(generatorWrapper)) || isIE && generatorWrapper.length > 2048) {\n      return false;\n    }\n    try {\n      if (new table(generatorWrapper).dispatchUnhandledRejection().match(ocrRegex)) {\n        return true;\n      }\n    } catch (value) {}\n    return trustedDomainsList.find(function (value) {\n      return generatorWrapper.match(value) != null;\n    }) != null;\n  }\n  function matchesRegex(generatorWrapper, value) {\n    if (isEmptyOrWhitespace(value)) {\n      return false;\n    } else {\n      return new RegExp(generatorWrapper).test(value);\n    }\n  }\n  function parseQueryString(generatorWrapper) {\n    var value = {};\n    generatorWrapper.split(\",\").forEach(function (CustomMap) {\n      var findEntry = CustomMap.split(\"=\");\n      if (findEntry.length == 2) {\n        CustomMap = trimString(findEntry[0]);\n        findEntry = trimString(findEntry[1]);\n        if (CustomMap.length > 0) {\n          value[CustomMap] = findEntry;\n        }\n      }\n    });\n    return value;\n  }\n  function normalizeLanguageCode(generatorWrapper) {\n    var value = \"af am ar_eg ar_sa ar_xb ar be bg bn ca cs da de_at de_cn de el en_au en_ca en_gb en_ie en_in en_sg en_xa en_xc en_za en es_419 es_ar es_bo es_cl es_co es_cr es_do es_ec es_gt es_hn es_mx es_ni es_pa es_pe es_pr es_py es_sv es_us es_uy es_ve es et eu fa fi fil fr_ca fr_ch fr gl gsw gu he hi hr hu id in is it iw ja kn ko ln lo lt lv ml mo mr ms nb ne nl no pl pt_br pt_pt pt ro ru sk sl sr_latn sr sv sw ta te th tl tr uk ur vi zh_cn zh_hk zh_tw zh zu\".split(\" \");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.toLowerCase().replace(\"-\", \"_\");\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    }\n    if (generatorWrapper = generatorWrapper.match(/^\\w{2,3}([-_]|$)/)) {\n      generatorWrapper = generatorWrapper[0].replace(/[_-]/g, \"\");\n    } else {\n      generatorWrapper = \"\";\n    }\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var Timer = function () {\n    this.entryIdCounter = Date.now();\n  };\n  Timer.prototype.resetAdStateController = function () {\n    this.entryIdCounter = Date.now();\n  };\n  var getRemainingTime = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter + 5000 - Date.now();\n    if (generatorWrapper > 0) {\n      return generatorWrapper;\n    } else {\n      return 0;\n    }\n  };\n  var UrlRequest = function (generatorWrapper, value) {\n    this.url = generatorWrapper;\n    if (undefined === value) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = value;\n    }\n  };\n  var getErrorDescription = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case 0:\n        return \"No Error\";\n      case 1:\n        return \"Access denied to content document\";\n      case 2:\n        return \"File not found\";\n      case 3:\n        return \"Firefox silently errored\";\n      case 4:\n        return \"Application custom error\";\n      case 5:\n        return \"An exception occurred\";\n      case 6:\n        return \"Http response at 400 or 500 level\";\n      case 7:\n        return \"Request was aborted\";\n      case 8:\n        return \"Request timed out\";\n      case 9:\n        return \"The resource is not available offline\";\n      default:\n        return \"Unrecognized error code\";\n    }\n  };\n  var CustomError = function (generatorWrapper) {\n    var value = Error.call(this, generatorWrapper);\n    this.message = value.message;\n    if (\"stack\" in value) {\n      this.stack = value.stack;\n    }\n    this.errorCode = generatorWrapper;\n  };\n  inheritPrototype(CustomError, Error);\n  var EventDispatcher = function (generatorWrapper) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.tasks = {};\n  };\n  inheritPrototype(EventDispatcher, tryCall);\n  var singleElementArray = [];\n  EventDispatcher.prototype.window = function (generatorWrapper, value, CustomMap, findEntry) {\n    return addListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var addListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!Array.isArray(CustomMap)) {\n      if (CustomMap) {\n        singleElementArray[0] = CustomMap.toString();\n      }\n      CustomMap = singleElementArray;\n    }\n    for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n      var key = addPageHideListener(value, CustomMap[entryIdCounter], findEntry || generatorWrapper.handleEvent, iterateEntries || false, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!key) {\n        break;\n      }\n      generatorWrapper.tasks[key.key] = key;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.sortArray = function (generatorWrapper, value, CustomMap, findEntry) {\n    return removeListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var removeListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (Array.isArray(CustomMap)) {\n      for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n        removeListener(generatorWrapper, value, CustomMap[entryIdCounter], findEntry, iterateEntries, createCircularNode);\n      }\n    } else {\n      value = Gu(value, CustomMap, findEntry || generatorWrapper.handleEvent, iterateEntries, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!value) {\n        return generatorWrapper;\n      }\n      generatorWrapper.tasks[value.key] = value;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.compareValues = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        this.compareValues(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      CustomMap = CustomMap || this.handleEvent;\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n      } else {\n        findEntry = !!findEntry;\n      }\n      iterateEntries = iterateEntries || this.createDeferred || this;\n      CustomMap = Iu(CustomMap);\n      findEntry = !!findEntry;\n      if (isListenable(generatorWrapper)) {\n        value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n      } else if (generatorWrapper) {\n        if (generatorWrapper = Ku(generatorWrapper)) {\n          value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      if (value) {\n        Pu(value);\n        delete this.tasks[value.key];\n      }\n    }\n  };\n  var removeAllListeners = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.tasks, function (value, CustomMap) {\n      if (this.tasks.hasOwnProperty(CustomMap)) {\n        Pu(value);\n      }\n    }, generatorWrapper);\n    generatorWrapper.tasks = {};\n  };\n  EventDispatcher.prototype.getAdEnvironment = function () {\n    EventDispatcher.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    removeAllListeners(this);\n  };\n  EventDispatcher.prototype.handleEvent = function () {\n    throw Error(\"EventHandler.handleEvent not implemented\");\n  };\n  var Singleton = function () {};\n  Singleton.prototype.entryIdCounter = null;\n  var getSingletonInstance = function (generatorWrapper) {\n    var value;\n    if (!(value = generatorWrapper.entryIdCounter)) {\n      value = generatorWrapper.entryIdCounter = {};\n    }\n    return value;\n  };\n  var singletonInstance,\n    SingletonBase = function () {};\n  inheritPrototype(SingletonBase, Singleton);\n  singletonInstance = new SingletonBase();\n  var HttpRequest = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.headers = new Map();\n    this.year = generatorWrapper || null;\n    this.tasks = false;\n    this.dispatchUnhandledRejection = this.entryIdCounter = null;\n    this.logError = \"\";\n    this.handleAsync = 0;\n    this.setTimeoutWrapper = this.resolvePromise = this.isDone = this.handleThenable = false;\n    this.handleThenable = 0;\n    this.onFulfilled = null;\n    this.totalAdBufferingTime = \"\";\n    this.tryCall = false;\n  };\n  inheritPrototype(HttpRequest, AdEnvironmentConfig);\n  var httpRegex = /^https?$/i;\n  var contentTypesWithPayload = [\"POST\", \"PUT\"];\n  var sendRequest = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper.entryIdCounter) {\n      throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + generatorWrapper.logError + \"; newUri=\" + value);\n    }\n    if (CustomMap) {\n      CustomMap = CustomMap.toUpperCase();\n    } else {\n      CustomMap = \"GET\";\n    }\n    generatorWrapper.logError = value;\n    generatorWrapper.handleAsync = 0;\n    generatorWrapper.handleThenable = false;\n    generatorWrapper.tasks = true;\n    generatorWrapper.entryIdCounter = new XMLHttpRequest();\n    if (generatorWrapper.year) {\n      generatorWrapper.dispatchUnhandledRejection = getSingletonInstance(generatorWrapper.year);\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = getSingletonInstance(singletonInstance);\n    }\n    generatorWrapper.entryIdCounter.onreadystatechange = bindOrWrapFunction(generatorWrapper.updateMaxSize, generatorWrapper);\n    try {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.entryIdCounter.open(CustomMap, String(value), true);\n      generatorWrapper.resolvePromise = false;\n    } catch (entryIdCounter) {\n      handleRequestError(generatorWrapper);\n      return;\n    }\n    value = findEntry || \"\";\n    findEntry = new Map(generatorWrapper.headers);\n    var iterateEntries = Array.from(findEntry.keys()).find(function (entryIdCounter) {\n      return entryIdCounter.toLowerCase() == \"content-type\";\n    });\n    var createCircularNode = globalScope.FormData && value instanceof globalScope.FormData;\n    if (!(!containsElement(contentTypesWithPayload, CustomMap) || iterateEntries || createCircularNode)) {\n      findEntry.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n    }\n    CustomMap = getIterator(findEntry);\n    for (findEntry = CustomMap.next(); !findEntry.done; findEntry = CustomMap.next()) {\n      iterateEntries = getIterator(findEntry.value);\n      findEntry = iterateEntries.next().value;\n      iterateEntries = iterateEntries.next().value;\n      generatorWrapper.entryIdCounter.setRequestHeader(findEntry, iterateEntries);\n    }\n    if (generatorWrapper.totalAdBufferingTime) {\n      generatorWrapper.entryIdCounter.responseType = generatorWrapper.totalAdBufferingTime;\n    }\n    if (\"withCredentials\" in generatorWrapper.entryIdCounter && generatorWrapper.entryIdCounter.withCredentials !== generatorWrapper.tryCall) {\n      generatorWrapper.entryIdCounter.withCredentials = generatorWrapper.tryCall;\n    }\n    try {\n      clearTimeoutIfSet(generatorWrapper);\n      if (generatorWrapper.handleThenable > 0) {\n        generatorWrapper.onFulfilled = setAsyncTimeout(generatorWrapper.definePropertyPolyfill, generatorWrapper.handleThenable, generatorWrapper);\n      }\n      generatorWrapper.isDone = true;\n      generatorWrapper.entryIdCounter.send(value);\n      generatorWrapper.isDone = false;\n    } catch (entryIdCounter) {\n      handleRequestError(generatorWrapper);\n    }\n  };\n  HttpRequest.prototype.definePropertyPolyfill = function () {\n    if (typeof closureLibraryBase != \"undefined\" && this.entryIdCounter) {\n      this.handleAsync = 8;\n      this.dispatchEvent(\"timeout\");\n      this.abort(8);\n    }\n  };\n  var handleRequestError = function (generatorWrapper) {\n    generatorWrapper.tasks = false;\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper.setTimeoutWrapper = true;\n      generatorWrapper.entryIdCounter.abort();\n      generatorWrapper.setTimeoutWrapper = false;\n    }\n    generatorWrapper.handleAsync = 5;\n    dispatchErrorEvents(generatorWrapper);\n    cleanupRequest(generatorWrapper);\n  };\n  var dispatchErrorEvents = function (generatorWrapper) {\n    if (!generatorWrapper.handleThenable) {\n      generatorWrapper.handleThenable = true;\n      generatorWrapper.dispatchEvent(\"complete\");\n      generatorWrapper.dispatchEvent(\"error\");\n    }\n  };\n  HttpRequest.prototype.abort = function (generatorWrapper) {\n    if (this.entryIdCounter && this.tasks) {\n      this.tasks = false;\n      this.setTimeoutWrapper = true;\n      this.entryIdCounter.abort();\n      this.setTimeoutWrapper = false;\n      this.handleAsync = generatorWrapper || 7;\n      this.dispatchEvent(\"complete\");\n      this.dispatchEvent(\"abort\");\n      cleanupRequest(this);\n    }\n  };\n  HttpRequest.prototype.getAdEnvironment = function () {\n    if (this.entryIdCounter) {\n      if (this.tasks) {\n        this.tasks = false;\n        this.setTimeoutWrapper = true;\n        this.entryIdCounter.abort();\n        this.setTimeoutWrapper = false;\n      }\n      cleanupRequest(this, true);\n    }\n    HttpRequest.executeGeneratorAsPromise.getAdEnvironment.call(this);\n  };\n  HttpRequest.prototype.updateMaxSize = function () {\n    if (!this.handleIteratorResult()) {\n      if (this.resolvePromise || this.isDone || this.setTimeoutWrapper) {\n        checkRequestStatus(this);\n      } else {\n        this.createIterator();\n      }\n    }\n  };\n  HttpRequest.prototype.createIterator = function () {\n    checkRequestStatus(this);\n  };\n  var checkRequestStatus = function (generatorWrapper) {\n    if (generatorWrapper.tasks && typeof closureLibraryBase != \"undefined\" && (!generatorWrapper.dispatchUnhandledRejection[1] || getRequestReadyState(generatorWrapper) != 4 || getRequestStatus(generatorWrapper) != 2)) {\n      if (generatorWrapper.isDone && getRequestReadyState(generatorWrapper) == 4) {\n        setAsyncTimeout(generatorWrapper.updateMaxSize, 0, generatorWrapper);\n      } else {\n        generatorWrapper.dispatchEvent(\"readystatechange\");\n        if (getRequestReadyState(generatorWrapper) == 4) {\n          generatorWrapper.tasks = false;\n          try {\n            var value = getRequestStatus(generatorWrapper);\n            generatorWrapper: switch (value) {\n              case 200:\n              case 201:\n              case 202:\n              case 204:\n              case 206:\n              case 304:\n              case 1223:\n                var CustomMap = true;\n                break generatorWrapper;\n              default:\n                CustomMap = false;\n            }\n            var findEntry;\n            if (!(findEntry = CustomMap)) {\n              var iterateEntries;\n              if (iterateEntries = value === 0) {\n                var createCircularNode = String(generatorWrapper.logError).match(urlRegex)[1] || null;\n                if (!createCircularNode && globalScope.self && globalScope.self.location) {\n                  createCircularNode = globalScope.self.location.protocol.slice(0, -1);\n                }\n                iterateEntries = !httpRegex.test(createCircularNode ? createCircularNode.toLowerCase() : \"\");\n              }\n              findEntry = iterateEntries;\n            }\n            if (findEntry) {\n              generatorWrapper.dispatchEvent(\"complete\");\n              generatorWrapper.dispatchEvent(\"success\");\n            } else {\n              generatorWrapper.handleAsync = 6;\n              dispatchErrorEvents(generatorWrapper);\n            }\n          } finally {\n            cleanupRequest(generatorWrapper);\n          }\n        }\n      }\n    }\n  };\n  var cleanupRequest = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter) {\n      clearTimeoutIfSet(generatorWrapper);\n      var CustomMap = generatorWrapper.entryIdCounter;\n      var findEntry = generatorWrapper.dispatchUnhandledRejection[0] ? function () {} : null;\n      generatorWrapper.entryIdCounter = null;\n      generatorWrapper.dispatchUnhandledRejection = null;\n      if (!value) {\n        generatorWrapper.dispatchEvent(\"ready\");\n      }\n      try {\n        CustomMap.onreadystatechange = findEntry;\n      } catch (iterateEntries) {}\n    }\n  };\n  var clearTimeoutIfSet = function (generatorWrapper) {\n    if (generatorWrapper.onFulfilled) {\n      globalScope.clearTimeout(generatorWrapper.onFulfilled);\n      generatorWrapper.onFulfilled = null;\n    }\n  };\n  HttpRequest.prototype.isActive = function () {\n    return !!this.entryIdCounter;\n  };\n  var getRequestReadyState = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      return generatorWrapper.entryIdCounter.readyState;\n    } else {\n      return 0;\n    }\n  };\n  var getRequestStatus = function (generatorWrapper) {\n    try {\n      if (getRequestReadyState(generatorWrapper) > 2) {\n        return generatorWrapper.entryIdCounter.status;\n      } else {\n        return -1;\n      }\n    } catch (value) {\n      return -1;\n    }\n  };\n  var parseResponse = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper: {\n        generatorWrapper = generatorWrapper.entryIdCounter.responseText;\n        if (globalScope.JSON) {\n          try {\n            var value = globalScope.JSON.parse(generatorWrapper);\n            break generatorWrapper;\n          } catch (CustomMap) {}\n        }\n        value = safeParseJSON(generatorWrapper);\n      }\n      return value;\n    }\n  };\n  var GetRequest = function () {};\n  GetRequest.prototype.get = function (generatorWrapper) {\n    return makeGetRequest({\n      url: generatorWrapper.url,\n      timeout: generatorWrapper.timeout,\n      withCredentials: undefined === generatorWrapper.withCredentials ? true : generatorWrapper.withCredentials,\n      method: \"GET\",\n      headers: undefined === generatorWrapper.headers ? {} : generatorWrapper.headers\n    });\n  };\n  var makeGetRequest = function (generatorWrapper) {\n    var value = generatorWrapper.url;\n    var CustomMap = generatorWrapper.timeout;\n    var findEntry = generatorWrapper.withCredentials;\n    var iterateEntries = generatorWrapper.method;\n    var createCircularNode = undefined === generatorWrapper.content ? undefined : generatorWrapper.content;\n    var entryIdCounter = undefined === generatorWrapper.headers ? {} : generatorWrapper.headers;\n    return makeRequest({\n      url: value,\n      timeout: CustomMap,\n      withCredentials: findEntry,\n      method: iterateEntries,\n      content: createCircularNode,\n      headers: entryIdCounter\n    }).then(function (key) {\n      return Promise.resolve(key);\n    }, function (key) {\n      if (key instanceof Error && key.message == 6 && findEntry) {\n        return makeRequest({\n          url: value,\n          timeout: CustomMap,\n          withCredentials: !findEntry,\n          method: iterateEntries,\n          content: createCircularNode,\n          headers: entryIdCounter\n        });\n      } else {\n        return Promise.reject(key);\n      }\n    });\n  };\n  var makeRequest = function (generatorWrapper) {\n    var value = generatorWrapper.url;\n    var CustomMap = generatorWrapper.timeout;\n    var findEntry = generatorWrapper.withCredentials;\n    var iterateEntries = generatorWrapper.method;\n    var createCircularNode = undefined === generatorWrapper.content ? undefined : generatorWrapper.content;\n    if (undefined === generatorWrapper.headers) {\n      generatorWrapper = {};\n    } else {\n      generatorWrapper = generatorWrapper.headers;\n    }\n    var entryIdCounter = new HttpRequest();\n    entryIdCounter.tryCall = findEntry;\n    entryIdCounter.handleThenable = Math.max(0, getRemainingTime(CustomMap));\n    for (var key in generatorWrapper) entryIdCounter.headers.set(key, generatorWrapper[key]);\n    var value = new EventDispatcher();\n    return new Promise(function (entry, currentEntry) {\n      value.sortArray(entryIdCounter, \"success\", function () {\n        generatorWrapper: {\n          if (isAppleTV()) {\n            try {\n              parseResponse(entryIdCounter);\n              var foundEntry = \"application/json\";\n              break generatorWrapper;\n            } catch (user) {\n              foundEntry = \"application/xml\";\n              break generatorWrapper;\n            }\n          }\n          if (entryIdCounter.entryIdCounter && getRequestReadyState(entryIdCounter) == 4) {\n            foundEntry = entryIdCounter.entryIdCounter.getResponseHeader(\"Content-Type\");\n            if (foundEntry === null) {\n              foundEntry = undefined;\n            } else {\n              foundEntry = foundEntry;\n            }\n          } else {\n            foundEntry = undefined;\n          }\n          foundEntry = foundEntry || \"\";\n        }\n        if (-1 != foundEntry.indexOf(\"application/json\")) {\n          try {\n            entry(parseResponse(entryIdCounter) || {});\n          } catch (user) {\n            currentEntry(new CustomError(5, getRequestStatus(entryIdCounter)));\n          }\n        } else {\n          try {\n            var resolveFunction = entryIdCounter.entryIdCounter ? entryIdCounter.entryIdCounter.responseXML : null;\n          } catch (user) {\n            resolveFunction = null;\n          }\n          if (resolveFunction == null) {\n            try {\n              var rejectFunction = entryIdCounter.entryIdCounter ? entryIdCounter.entryIdCounter.responseText : \"\";\n            } catch (user) {\n              rejectFunction = \"\";\n            }\n            if (typeof DOMParser != \"undefined\") {\n              resolveFunction = new DOMParser();\n              rejectFunction = sanitizeInput(rejectFunction);\n              resolveFunction = resolveFunction.parseFromString(unwrapSafeHtml(rejectFunction), \"application/xml\");\n            } else {\n              throw Error(\"Your browser does not support loading xml documents\");\n            }\n          }\n          entry(resolveFunction);\n        }\n        value.markAsCompleted();\n        entryIdCounter.markAsCompleted();\n      });\n      value.sortArray(entryIdCounter, [\"error\", \"timeout\"], function () {\n        currentEntry(new CustomError(entryIdCounter.handleAsync, getRequestStatus(entryIdCounter)));\n        value.markAsCompleted();\n        entryIdCounter.markAsCompleted();\n      });\n      sendRequest(entryIdCounter, convertToHttpsIfApplicable(value), iterateEntries, createCircularNode);\n    });\n  };\n  defineNamespace(\"google.javascript.ads.imalib.common.UrlLoader\", GetRequest);\n  var doubleclickRegExp = RegExp(\"ad\\\\.doubleclick\\\\.net/ddm/track(imp|clk)\");\n  function isAttributionReportingSupported() {\n    return isFeaturePolicySupported(\"attribution-reporting\");\n  }\n  var sendTrackingData = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === CustomMap) {\n      CustomMap = false;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === iterateEntries) {\n      iterateEntries = null;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    try {\n      if (undefined === findEntry ? 0 : findEntry) {\n        value = convertToHttpsIfApplicable(value, \"https\");\n      } else {\n        value = convertToHttpsIfApplicable(value);\n      }\n      if (doubleclickRegExp.test(value)) {\n        value = value.replace(\"?\", \";tpsrc=ima?\");\n        iterateEntries = iterateEntries || \"\";\n      }\n      CustomMap = CustomMap || isTrustedDomain(value);\n      var createCircularNode = iterateEntries != null && window.fetch != null;\n      if (generatorWrapper.tasks || createCircularNode) {\n        fetchWithRetry(generatorWrapper, value, CustomMap, iterateEntries);\n      } else {\n        var entryIdCounter = isAttributionReportingSupported() ? iterateEntries : null;\n        if (isAppleTV()) {\n          sendGetRequest(value);\n        } else {\n          loadImage(generatorWrapper, value, CustomMap, entryIdCounter);\n        }\n      }\n    } catch (key) {}\n  };\n  var createFetchRequestOptions = function (generatorWrapper, value) {\n    var CustomMap = {\n      keepalive: true,\n      method: \"get\",\n      redirect: \"follow\"\n    };\n    if (generatorWrapper) {\n      CustomMap.referrerPolicy = \"no-referrer\";\n    }\n    if (value) {\n      CustomMap.credentials = \"include\";\n      if (\"setAttributionReporting\" in XMLHttpRequest.prototype) {\n        CustomMap.attributionReporting = {\n          eventSourceEligible: true,\n          triggerEligible: false\n        };\n        CustomMap.mode = \"no-cors\";\n      } else {\n        CustomMap.headers = {\n          \"Attribution-Reporting-Eligible\": \"event-source\"\n        };\n      }\n    } else {\n      CustomMap.mode = \"no-cors\";\n    }\n    return CustomMap;\n  };\n  var fetchWithRetry = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === findEntry) {\n      findEntry = null;\n    } else {\n      findEntry = findEntry;\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"faa\", \"1\");\n    settlePromise(resolvePromise.getAdInstance(), \"alp\", findEntry === null ? \"0\" : \"1\");\n    var iterateEntries = isAttributionReportingSupported();\n    settlePromise(resolvePromise.getAdInstance(), \"arpa\", iterateEntries ? \"1\" : \"0\");\n    fetch(value, createFetchRequestOptions(CustomMap, findEntry === \"\" && iterateEntries)).then(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"fas\", \"1\");\n    }).catch(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"faf\", \"1\");\n      generatorWrapper.tasks = false;\n      var createCircularNode = findEntry;\n      if (isAttributionReportingSupported()) {\n        createCircularNode = createCircularNode;\n      } else {\n        createCircularNode = null;\n      }\n      if (isAppleTV()) {\n        sendGetRequest(value);\n      } else {\n        loadImage(generatorWrapper, value, CustomMap, createCircularNode);\n      }\n    });\n    if (iterateEntries && findEntry) {\n      fetch(findEntry, createFetchRequestOptions(CustomMap, true));\n    }\n  };\n  var loadImage = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = new Image();\n    var createCircularNode = (generatorWrapper.setTimeoutWrapper++).toString();\n    generatorWrapper.entryIdCounter.set(createCircularNode, iterateEntries);\n    iterateEntries.onload = iterateEntries.onerror = function () {\n      generatorWrapper.entryIdCounter.delete(createCircularNode);\n    };\n    if (CustomMap) {\n      iterateEntries.referrerPolicy = \"no-referrer\";\n    }\n    if (findEntry != null) {\n      iterateEntries.attributionSrc = findEntry;\n    }\n    iterateEntries.src = value;\n  };\n  var sendGetRequest = function (generatorWrapper) {\n    new GetRequest().get({\n      url: generatorWrapper,\n      timeout: new Timer()\n    });\n  };\n  var EventTypes = {\n    AUTOPLAY_DISALLOWED: \"autoplayDisallowed\",\n    allowedURLSchemes: \"beginFullscreen\",\n    CAN_PLAY: \"canPlay\",\n    CAN_PLAY_THROUGH: \"canPlayThrough\",\n    CLICK: \"click\",\n    DURATION_CHANGE: \"durationChange\",\n    Coordinate: \"end\",\n    Size: \"endFullscreen\",\n    ERROR: \"error\",\n    debugStringifyObject: \"focusSkipButton\",\n    LOAD_START: \"loadStart\",\n    LOADED: \"loaded\",\n    getParentElement: \"mediaLoadTimeout\",\n    containsElement: \"mediaPlaybackTimeout\",\n    PAUSE: \"pause\",\n    PLAY: \"play\",\n    PLAYING: \"playing\",\n    SEEKED: \"seeked\",\n    SEEKING: \"seeking\",\n    forEachInObject: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    STALLED: \"stalled\",\n    stringOrNull: \"start\",\n    TIME_UPDATE: \"timeUpdate\",\n    findFrameByName: \"timedMetadata\",\n    computeReferrerUrl: \"volumeChange\",\n    WAITING: \"waiting\",\n    deobfuscationId: \"windowFocusChanged\",\n    writeSafeHtmlToDocument: \"fullyLoaded\"\n  };\n  var MediaElement = function () {\n    AdEnvironmentConfig.apply(this, arguments);\n  };\n  inheritPrototype(MediaElement, AdEnvironmentConfig);\n  MediaElement.prototype.onFulfilled = function () {\n    return false;\n  };\n  MediaElement.prototype.dispatchUnhandledRejection = function () {\n    return -1;\n  };\n  MediaElement.prototype.handleThenable = function () {};\n  var itagResolutionMap = {};\n  var itagSupportsAutoplayMap = (itagResolutionMap[18] = -1, itagResolutionMap[22] = -1, itagResolutionMap[43] = 350, itagResolutionMap[44] = 350, itagResolutionMap[45] = 350, itagResolutionMap[59] = -1, itagResolutionMap[133] = 350, itagResolutionMap[134] = 350, itagResolutionMap[135] = 350, itagResolutionMap[136] = 350, itagResolutionMap[139] = 50, itagResolutionMap[140] = 50, itagResolutionMap[141] = 50, itagResolutionMap[160] = 350, itagResolutionMap[242] = 150, itagResolutionMap[243] = 150, itagResolutionMap[244] = 150, itagResolutionMap[245] = 150, itagResolutionMap[247] = 150, itagResolutionMap[249] = 50, itagResolutionMap[250] = 50, itagResolutionMap[251] = 50, itagResolutionMap[278] = 150, itagResolutionMap[342] = -1, itagResolutionMap[343] = -1, itagResolutionMap[344] = -1, itagResolutionMap[345] = -1, itagResolutionMap[346] = -1, itagResolutionMap[347] = -1, itagResolutionMap);\n  var itagFormatMap = {};\n  var itagCodecMap = (itagFormatMap[18] = false, itagFormatMap[22] = false, itagFormatMap[43] = true, itagFormatMap[44] = true, itagFormatMap[45] = true, itagFormatMap[59] = false, itagFormatMap[133] = true, itagFormatMap[134] = true, itagFormatMap[135] = true, itagFormatMap[136] = true, itagFormatMap[139] = true, itagFormatMap[140] = true, itagFormatMap[141] = true, itagFormatMap[160] = true, itagFormatMap[242] = true, itagFormatMap[243] = true, itagFormatMap[244] = true, itagFormatMap[245] = true, itagFormatMap[247] = true, itagFormatMap[249] = true, itagFormatMap[250] = true, itagFormatMap[251] = true, itagFormatMap[278] = true, itagFormatMap[342] = false, itagFormatMap[343] = false, itagFormatMap[344] = false, itagFormatMap[345] = false, itagFormatMap[346] = false, itagFormatMap[347] = false, itagFormatMap);\n  var videoFormatMappings = {};\n  var itagContainerMap = (videoFormatMappings[18] = \"video/mp4\", videoFormatMappings[22] = \"video/mp4\", videoFormatMappings[43] = \"video/webm\", videoFormatMappings[44] = \"video/webm\", videoFormatMappings[45] = \"video/webm\", videoFormatMappings[59] = \"video/mp4\", videoFormatMappings[133] = \"video/mp4\", videoFormatMappings[134] = \"video/mp4\", videoFormatMappings[135] = \"video/mp4\", videoFormatMappings[136] = \"video/mp4\", videoFormatMappings[139] = \"audio/mp4\", videoFormatMappings[140] = \"audio/mp4\", videoFormatMappings[141] = \"audio/mp4\", videoFormatMappings[160] = \"video/mp4\", videoFormatMappings[242] = \"video/webm\", videoFormatMappings[243] = \"video/webm\", videoFormatMappings[244] = \"video/webm\", videoFormatMappings[245] = \"video/webm\", videoFormatMappings[247] = \"video/webm\", videoFormatMappings[249] = \"audio/webm\", videoFormatMappings[250] = \"audio/webm\", videoFormatMappings[251] = \"audio/webm\", videoFormatMappings[278] = \"video/webm\", videoFormatMappings[342] = \"video/mp4\", videoFormatMappings[343] = \"video/mp4\", videoFormatMappings[344] = \"video/mp4\", videoFormatMappings[345] = \"video/mp4\", videoFormatMappings[346] = \"video/mp4\", videoFormatMappings[347] = \"video/mp4\", videoFormatMappings);\n  var codecMappings = {};\n  var codecMappingsInitialized = (codecMappings[18] = \"avc1.42001E, mp4a.40.2\", codecMappings[22] = \"avc1.64001F, mp4a.40.2\", codecMappings[43] = \"vp8, vorbis\", codecMappings[44] = \"vp8, vorbis\", codecMappings[45] = \"vp8, vorbis\", codecMappings[59] = \"avc1.4D001F, mp4a.40.2\", codecMappings[133] = \"avc1.4D401E\", codecMappings[134] = \"avc1.4D401E\", codecMappings[135] = \"avc1.4D401E\", codecMappings[136] = \"avc1.4D401E\", codecMappings[139] = \"mp4a.40.2\", codecMappings[140] = \"mp4a.40.2\", codecMappings[141] = \"mp4a.40.2\", codecMappings[160] = \"avc1.4D401E\", codecMappings[242] = \"vp9\", codecMappings[243] = \"vp9\", codecMappings[244] = \"vp9\", codecMappings[245] = \"vp9\", codecMappings[247] = \"vp9\", codecMappings[249] = \"opus\", codecMappings[250] = \"opus\", codecMappings[251] = \"opus\", codecMappings[278] = \"vp9\", codecMappings[342] = \"avc1.42E01E, mp4a.40.2\", codecMappings[343] = \"avc1.42E01E, mp4a.40.2\", codecMappings[344] = \"avc1.42E01E, mp4a.40.2\", codecMappings[345] = \"avc1.42E01E, mp4a.40.2\", codecMappings[346] = \"avc1.42E01E, mp4a.40.2\", codecMappings[347] = \"avc1.4D001F, mp4a.40.2\", codecMappings);\n  var itagRegex = RegExp(\"/itag/(\\\\d+)/\");\n  function getItagValue(generatorWrapper) {\n    var value = Number(getParameterFromUrl(generatorWrapper, \"itag\"));\n    if (value) {\n      return value;\n    } else {\n      if ((generatorWrapper = generatorWrapper.match(itagRegex)) && generatorWrapper.length === 2) {\n        return Number(generatorWrapper[1]);\n      } else {\n        return null;\n      }\n    }\n  }\n  function getMediaSourceString(generatorWrapper) {\n    var value = itagContainerMap[generatorWrapper];\n    generatorWrapper = codecMappingsInitialized[generatorWrapper];\n    if (value) {\n      value = stringifyNullable(value).toLowerCase();\n      if (generatorWrapper) {\n        value = value + '; codecs=\"' + stringifyNullable(generatorWrapper) + '\"';\n      } else {\n        value = value;\n      }\n    } else {\n      value = \"\";\n    }\n    return value;\n  }\n  function createCustomEvent(generatorWrapper, value) {\n    if (typeof CustomEvent === \"function\") {\n      return new CustomEvent(generatorWrapper, {\n        detail: value\n      });\n    }\n    var CustomMap = document.createEvent(\"CustomEvent\");\n    CustomMap.initCustomEvent(generatorWrapper, false, true, value);\n    return CustomMap;\n  }\n  var MediaSourceLoader = function (generatorWrapper, value) {\n    MediaElement.call(this);\n    var CustomMap = this;\n    this.tasks = value;\n    this.isDone = this.setTimeoutWrapper = this.entryIdCounter = 0;\n    this.handleAsync = null;\n    this.uri = new table(generatorWrapper);\n    this.state = 0;\n    var findEntry;\n    if ((findEntry = this.tasks) == null) {\n      this.resolvePromise = undefined;\n    } else {\n      this.resolvePromise = findEntry.initializeMraid();\n    }\n    executeOrDelayUntilDisposed(this, function () {\n      markAsCompletedWrapper(CustomMap.tasks);\n    });\n  };\n  inheritPrototype(MediaSourceLoader, MediaElement);\n  MediaSourceLoader.prototype.dispatchUnhandledRejection = function () {\n    return this.entryIdCounter;\n  };\n  MediaSourceLoader.prototype.onFulfilled = function () {\n    return this.state === 3;\n  };\n  MediaSourceLoader.prototype.handleThenable = function (generatorWrapper) {\n    if (this.state === 1) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 2;\n    } else if (this.state === 0) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 1;\n      checkAndHandleMediaSourceState(this);\n    }\n  };\n  var checkAndHandleMediaSourceState = function (generatorWrapper) {\n    wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        if (generatorWrapper.state === 2) {\n          generatorWrapper.state = 1;\n        }\n        return generatorYield(value, fetchMediaSegments(generatorWrapper), 4);\n      }\n      var CustomMap = generatorWrapper.isDone > 3;\n      if (CustomMap) {\n        if (generatorWrapper.handleAsync === null) {\n          generatorWrapper.handleAsync = 400;\n        }\n        var findEntry = createCustomEvent(\"media_source_error\", {\n          code: generatorWrapper.setTimeoutWrapper > 0 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n          message: 'Response code \"' + generatorWrapper.handleAsync + '\" with ' + generatorWrapper.entryIdCounter + \" bytes requested and \" + generatorWrapper.setTimeoutWrapper + \" bytes loaded\"\n        });\n        generatorWrapper.dispatchEvent(findEntry);\n      }\n      if (generatorWrapper.setTimeoutWrapper < generatorWrapper.entryIdCounter && generatorWrapper.state !== 3 && !CustomMap) {\n        value.entryIdCounter = 1;\n      } else {\n        if (generatorWrapper.state !== 3) {\n          generatorWrapper.state = 0;\n        }\n        value.entryIdCounter = 0;\n      }\n    });\n  };\n  var fetchMediaSegments = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          value = generatorWrapper.setTimeoutWrapper + \"-\" + (generatorWrapper.entryIdCounter - 1);\n          setParameter(generatorWrapper.uri, \"range\", value);\n          if (!generatorWrapper.tasks) {\n            CustomMap.entryIdCounter = 2;\n            break;\n          }\n          return generatorYield(CustomMap, generatorWrapper.resolvePromise, 3);\n        case 3:\n          return CustomMap.return(handleMediaSourceBuffer(generatorWrapper));\n        case 2:\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, fetchAndProcessMedia(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          generatorWrapper.isDone++;\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var handleMediaSourceBuffer = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          if (generatorWrapper.tasks) {\n            return generatorYield(CustomMap, generatorWrapper.tasks.containsElement(generatorWrapper.uri), 2);\n          } else {\n            return CustomMap.return(Promise.reject());\n          }\n        case 2:\n          if (value = CustomMap.tasks) {\n            if (value.handleGeneratorError) {\n              generatorWrapper.state = 3;\n            }\n            dispatchMediaProgressEvent(generatorWrapper, value.video);\n            return CustomMap.return();\n          }\n          CustomMap.setTimeoutWrapper = 3;\n          return generatorYield(CustomMap, fetchAndProcessMedia(generatorWrapper), 5);\n        case 5:\n          resetGeneratorState(CustomMap);\n          break;\n        case 3:\n          getGeneratorException(CustomMap);\n          generatorWrapper.isDone++;\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var fetchAndProcessMedia = function (generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key;\n    return wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        value = 0;\n        CustomMap = generatorWrapper.entryIdCounter - generatorWrapper.setTimeoutWrapper;\n        return generatorYield(value, fetch(generatorWrapper.uri.toString()), 2);\n      }\n      findEntry = value.tasks;\n      if (findEntry.status >= 400) {\n        settlePromise(resolvePromise.getAdInstance(), \"lvlfes\", findEntry.status.toString());\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      if ((iterateEntries = findEntry.body) == null) {\n        createCircularNode = undefined;\n      } else {\n        createCircularNode = iterateEntries.getReader();\n      }\n      if (!createCircularNode) {\n        logError(\"lvlmr\");\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      entryIdCounter = [];\n      key = function () {\n        var entry, currentEntry, foundEntry, resolveFunction, rejectFunction, user;\n        return wrapGeneratorToPromise(function (profileData) {\n          if (profileData.entryIdCounter == 1) {\n            return generatorYield(profileData, createCircularNode.read(), 2);\n          }\n          entry = profileData.tasks;\n          currentEntry = entry.done;\n          foundEntry = entry.value;\n          if (currentEntry) {\n            resolveFunction = value < CustomMap;\n            finalizeMediaBuffer(generatorWrapper, entryIdCounter, resolveFunction);\n            return profileData.return();\n          }\n          entryIdCounter.push(foundEntry);\n          if ((rejectFunction = foundEntry) == null) {\n            value += undefined;\n          } else {\n            value += rejectFunction.length;\n          }\n          dispatchMediaProgressEvent(generatorWrapper, (user = foundEntry) == null ? undefined : user.buffer);\n          return generatorYield(profileData, key(), 0);\n        });\n      };\n      return generatorYield(value, key(), 0);\n    });\n  };\n  var finalizeMediaBuffer = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      generatorWrapper.state = 3;\n      dispatchMediaProgressEvent(generatorWrapper, new ArrayBuffer(0));\n    }\n    var findEntry = new Uint8Array(value.reduce(function (entryIdCounter, key) {\n      return entryIdCounter + key.length;\n    }, 0));\n    var iterateEntries = 0;\n    value = getIterator(value);\n    for (var createCircularNode = value.next(); !createCircularNode.done; createCircularNode = value.next()) {\n      createCircularNode = createCircularNode.value;\n      findEntry.set(createCircularNode, iterateEntries);\n      iterateEntries += createCircularNode.length;\n    }\n    if (generatorWrapper.tasks && findEntry.buffer.byteLength > 0) {\n      generatorWrapper.tasks.isIpod(findEntry.buffer, generatorWrapper.uri, 0, CustomMap);\n    }\n  };\n  var dispatchMediaProgressEvent = function (generatorWrapper, value) {\n    if (value !== null) {\n      value = value.slice(0);\n      generatorWrapper.setTimeoutWrapper += value.byteLength;\n      generatorWrapper.dispatchEvent({\n        type: \"progress\",\n        CustomError: value\n      });\n    }\n  };\n  MediaSourceLoader.prototype.getAdEnvironment = function () {\n    var generatorWrapper;\n    if ((generatorWrapper = this.tasks) == null ? 0 : generatorWrapper.getUniqueId()) {\n      this.tasks.closeCache();\n    }\n    MediaElement.prototype.getAdEnvironment.call(this);\n  };\n  var UriParameterManager = function (generatorWrapper) {\n    this.uri = generatorWrapper;\n    this.entryIdCounter = parseUriParameters(generatorWrapper);\n  };\n  var parseUriParameters = function (generatorWrapper) {\n    return new Map(generatorWrapper.setTimeoutWrapper.split(\"/\").reduce(function (value, CustomMap, findEntry, iterateEntries) {\n      if (findEntry % 2) {\n        value.set(iterateEntries[findEntry - 1], CustomMap);\n      }\n      return value;\n    }, new Map()));\n  };\n  UriParameterManager.prototype.getAdId = function () {\n    return getParameterById(this, \"id\");\n  };\n  var getRangeStart = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.uri.entryIdCounter.get(\"range\");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.split(\"-\")[0];\n    if (!generatorWrapper || isNaN(Number(generatorWrapper))) {\n      return null;\n    } else {\n      return Number(generatorWrapper);\n    }\n  };\n  var getParameterById = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.uri.entryIdCounter.get(value);\n    if (CustomMap) {\n      return CustomMap;\n    } else {\n      if (generatorWrapper = generatorWrapper.entryIdCounter.get(value)) {\n        return generatorWrapper;\n      } else {\n        return null;\n      }\n    }\n  };\n  var EmptyFunction = function () {};\n  var trustedDomains = [\"doubleclick.net\"];\n  function isSupportedEnvironment() {\n    if (isIphone() || handleAsync(\"iPad\") || handleAsync(\"iPod\")) {\n      return false;\n    }\n    if (isAndroid()) {\n      if (undefined === trustedDomainsListCache) {\n        generatorWrapper: {\n          if (undefined === userAgentStringCache) {\n            if (isAppleDevice) {\n              var generatorWrapper = includesString(getUserAgentString(), \"Safari\");\n              var value = new table(window.location.href).entryIdCounter.hasPlatform(\"js\");\n              value: {\n                if ((value = value.length ? value[0] : \"\") && value.lastIndexOf(\"afma-\", 0) == 0) {\n                  var CustomMap = value.lastIndexOf(\"v\");\n                  if (-1 < CustomMap && (value = value.substr(CustomMap + 1).match(/^(\\d+\\.\\d+\\.\\d+|^\\d+\\.\\d+|^\\d+)(-.*)?$/))) {\n                    value = value[1];\n                    break value;\n                  }\n                }\n                value = \"0.0.0\";\n              }\n              if (!generatorWrapper || value !== \"0.0.0\") {\n                generatorWrapper = userAgentStringCache = true;\n                break generatorWrapper;\n              }\n            }\n            userAgentStringCache = false;\n          }\n          generatorWrapper = userAgentStringCache;\n        }\n        if (!generatorWrapper) {\n          if (undefined === isAppleDeviceCache) {\n            if (includesString(getUserAgentString(), \"afma-sdk-a\")) {\n              isAppleDeviceCache = true;\n            } else {\n              isAppleDeviceCache = false;\n            }\n          }\n          generatorWrapper = isAppleDeviceCache;\n        }\n        trustedDomainsListCache = generatorWrapper;\n      }\n      if (trustedDomainsListCache) {\n        return true;\n      } else {\n        if (isTablet()) {\n          return false;\n        } else {\n          return isTrustedDomain();\n        }\n      }\n    }\n    generatorWrapper = isMacOS() || (hasPlatform() ? userAgentData.platform === \"Linux\" : handleAsync(\"Linux\")) || (hasPlatform() ? userAgentData.platform === \"Windows\" : handleAsync(\"Windows\")) || (hasPlatform() ? userAgentData.platform === \"Chrome OS\" : handleAsync(\"CrOS\"));\n    if ((handleThenable(vm) || handleThenable(tm) || handleThenable(um)) && generatorWrapper && isChromiumBased()) {\n      return isTrustedDomain();\n    } else {\n      return false;\n    }\n  }\n  function isTrustedDomain() {\n    var generatorWrapper = false;\n    var value = new table(window.location.href).tasks;\n    trustedDomains.forEach(function (CustomMap) {\n      if (value.includes(CustomMap)) {\n        generatorWrapper = true;\n      }\n    });\n    return generatorWrapper;\n  }\n  var ErrorBase,\n    CustomError = function (generatorWrapper, value, CustomMap) {\n      if (typeof generatorWrapper === \"number\") {\n        var findEntry = {\n          name: getNameFromError(generatorWrapper)\n        };\n      } else {\n        findEntry = generatorWrapper;\n        generatorWrapper = getErrorFromName(generatorWrapper.name);\n      }\n      this.code = generatorWrapper;\n      this.entryIdCounter = findEntry;\n      value = \"Error \" + value + \": \" + this.getAdName();\n      if (CustomMap) {\n        value += \", \" + CustomMap;\n      }\n      CustomError.call(this, value);\n    };\n  inheritPrototype(CustomError, CustomError);\n  CustomError.prototype.getAdName = function () {\n    return this.entryIdCounter.name || \"\";\n  };\n  var ErrorCodes = {\n    getAdPropertyNumericValue: 1,\n    isMobile: 2,\n    NOT_FOUND_ERR: 3,\n    rf: 4,\n    uf: 5,\n    extractBaseUrl: 6,\n    getNumericAdProperty: 7,\n    ABORT_ERR: 8,\n    getAdPropertyValue: 9,\n    createHtmlElement: 10,\n    TIMEOUT_ERR: 11,\n    getAdProperty: 12,\n    INVALID_ACCESS_ERR: 13,\n    INVALID_STATE_ERR: 14\n  };\n  var UnknownErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyNumericValue;\n  var NotFoundErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).NOT_FOUND_ERR;\n  var ConstraintErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).rf;\n  var DataErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).uf;\n  var TransactionInactiveErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getNumericAdProperty;\n  var AbortErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).ABORT_ERR;\n  var ReadOnlyErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyValue;\n  var TimeoutErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).TIMEOUT_ERR;\n  var QuotaExceededErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdProperty;\n  var InvalidAccessErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_ACCESS_ERR;\n  var InvalidStateErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_STATE_ERR;\n  var getErrorFromName = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case \"UnknownError\":\n        return UnknownErrorCode;\n      case \"NotFoundError\":\n        return NotFoundErrorCode;\n      case \"ConstraintError\":\n        return ConstraintErrorCode;\n      case \"DataError\":\n        return DataErrorCode;\n      case \"TransactionInactiveError\":\n        return TransactionInactiveErrorCode;\n      case \"AbortError\":\n        return"