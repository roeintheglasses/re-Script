"t)\n    };\n    markAsCompleted.getAdInstance().report(7, generatorWrapper);\n  };\n  var triggerEvent = function (generatorWrapper, value, CustomMap) {\n    enqueueMessage(generatorWrapper.dispatchUnhandledRejection, \"adsManager\", value, CustomMap);\n  };\n  var GJ = function (generatorWrapper, value) {\n    markAsCompleted.getAdInstance().report(131);\n    CJ(generatorWrapper, value);\n    if (!generatorWrapper.handleIteratorResult()) {\n      generatorWrapper.isDone.startTimer();\n    }\n  };\n  var EJ = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && value.ensureString != null) {\n      value.ensureString();\n    }\n  };\n  var CJ = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && CustomMap.isIphone != null) {\n      CustomMap.isIphone(value);\n    } else if (value) {\n      value();\n    }\n  };\n  setTimeoutWrapper = zone.prototype;\n  setTimeoutWrapper.configureAdsManager = function (generatorWrapper, value) {\n    this.onFulfilled = generatorWrapper;\n    if (generatorWrapper.currentTime != null) {\n      this.isDone = new ContentTimeUpdateTimer(generatorWrapper, this.dispatchUnhandledRejection);\n      this.isDone.startTimer();\n    }\n    if (value != null) {\n      this.handleAsync = JJ(value);\n    }\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (this.handleThenable.isEmpty()) {\n      var iterateEntries = this.entryIdCounter;\n      var createCircularNode = null;\n      if (iterateEntries.tasks && findEntry == null) {\n        createCircularNode = {\n          customProperty3: \"setnull\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks === findEntry) {\n        createCircularNode = {\n          customProperty3: \"match\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks !== findEntry) {\n        createCircularNode = isCustomPlaybackAllowed(findEntry || null);\n        var entryIdCounter = hasPlaysInlineAttribute(findEntry || null);\n        createCircularNode = {\n          customProperty3: \"diff\",\n          isWebKit: iterateEntries.tryCall,\n          isGecko: createCircularNode,\n          getParentFrame: iterateEntries.handleThenable,\n          isAccessibleFrame: entryIdCounter\n        };\n      }\n      if (!iterateEntries.tasks && findEntry) {\n        createCircularNode = {\n          customProperty3: \"new\"\n        };\n      }\n      if (createCircularNode) {\n        createCircularNode.custVid = iterateEntries.logError;\n        markAsCompleted.getAdInstance().report(93, createCircularNode);\n      }\n      if (findEntry != null) {\n        iterateEntries.settlePromise = hasPlaysInlineAttribute(findEntry);\n        if (shouldUseCustomPlayback(iterateEntries.settlePromise)) {\n          iterateEntries.resolvePromise = true;\n          markAsCompletedWrapper(iterateEntries.entryIdCounter);\n          markAsCompletedWrapper(iterateEntries.setTimeoutWrapper);\n          markAsCompletedWrapper(iterateEntries.getGeneratorException);\n          iterateEntries.entryIdCounter = null;\n          iterateEntries.setTimeoutWrapper = null;\n          iterateEntries.getGeneratorException = null;\n          markAsCompletedWrapper(iterateEntries.identityFunction);\n          iterateEntries.identityFunction = new VideoPlayer(findEntry);\n          if (typeof findEntry.getBoundingClientRect !== \"function\") {\n            iterateEntries.onFulfilled = iterateEntries.createDeferred;\n            imaSdkInstanceSingleton.setTimeoutWrapper = iterateEntries.onFulfilled;\n          } else {\n            iterateEntries.onFulfilled = findEntry;\n          }\n          iterateEntries.isDone.isIpad(iterateEntries.identityFunction);\n        }\n      }\n      this.totalAdBufferingTime = true;\n      this.resize(generatorWrapper, value, CustomMap);\n      findEntry = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      iterateEntries = {};\n      generatorWrapper = (iterateEntries.adsRenderingSettings = findEntry, iterateEntries.width = generatorWrapper, iterateEntries.height = value, iterateEntries.viewMode = CustomMap, iterateEntries);\n      triggerEvent(this, \"init\", generatorWrapper);\n    } else {\n      for (; !this.handleThenable.isEmpty();) {\n        value = generatorWrapper = this.handleThenable;\n        if (value.entryIdCounter.length === 0) {\n          value.entryIdCounter = value.tasks;\n          value.entryIdCounter.reverse();\n          value.tasks = [];\n        }\n        generatorWrapper = generatorWrapper.entryIdCounter.pop();\n        this.dispatchEvent(generatorWrapper);\n      }\n      this.markAsCompleted();\n    }\n  };\n  setTimeoutWrapper.isCustomPlaybackUsed = function () {\n    return isCustomElementSupported(this.entryIdCounter);\n  };\n  setTimeoutWrapper.isCustomClickTrackingUsed = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.getRemainingTime = function () {\n    return this.definePropertyPolyfill;\n  };\n  setTimeoutWrapper.getAdSkippableState = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.discardAdBreak = function () {\n    triggerEvent(this, \"discardAdBreak\");\n  };\n  setTimeoutWrapper.updateAdsRenderingSettings = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      generatorWrapper = JJ(generatorWrapper);\n      var value = this.handleAsync.preferredBitrate;\n      var CustomMap = generatorWrapper.preferredBitrate;\n      markAsCompleted.getAdInstance().report(96, {\n        initialize: this.totalAdBufferingTime ? \"1\" : \"0\",\n        startTimer: this.assignPolyfill ? \"1\" : \"0\",\n        old: value,\n        new: CustomMap,\n        changed: value !== CustomMap ? \"1\" : \"0\"\n      });\n      this.handleAsync = generatorWrapper;\n      generatorWrapper = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      value = {};\n      generatorWrapper = (value.adsRenderingSettings = generatorWrapper, value);\n      triggerEvent(this, \"updateAdsRenderingSettings\", generatorWrapper);\n    }\n  };\n  setTimeoutWrapper.skip = function () {\n    triggerEvent(this, \"skip\");\n  };\n  setTimeoutWrapper.startTimer = function () {\n    if (this.adTagUrl) {\n      if (isIphone || isIpod) {\n        markAsCompleted.getAdInstance().report(50, {\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (!this.entryIdCounter.Generator()) {\n        markAsCompleted.getAdInstance().report(26, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (isElementNotDisplayedOrHidden(this.entryIdCounter.createDeferred)) {\n        markAsCompleted.getAdInstance().report(30, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      var CustomMap;\n      var generatorWrapper = this.entryIdCounter.handleAsync;\n      var value = this.entryIdCounter.createDeferred;\n      if (CustomMap = generatorWrapper && value && !isElementNotDisplayedOrHidden(generatorWrapper)) {\n        generatorWrapper = getElementPosition(generatorWrapper);\n        value = getElementPosition(value);\n        CustomMap = generatorWrapper.width > 0 && generatorWrapper.height > 0 && value.width > 0 && value.height > 0 && generatorWrapper.left <= value.left + value.width && value.left <= generatorWrapper.left + generatorWrapper.width && generatorWrapper.top <= value.top + value.height && value.top <= generatorWrapper.top + generatorWrapper.height;\n      }\n      value = CustomMap;\n      markAsCompleted.getAdInstance().report(31, {\n        adtagurl: this.adTagUrl,\n        customPlayback: isCustomElementSupported(this.entryIdCounter),\n        covers: value\n      });\n    }\n    if (!this.entryIdCounter.Generator() && !isCustomElementSupported(this.entryIdCounter)) {\n      throw createAdPlayError(errorType);\n    }\n    value = this.entryIdCounter;\n    value.handleThenable = this.logError && value.handleAsync != null;\n    this.entryIdCounter.isDone.entryIdCounter.style.opacity = \"1\";\n    if (this.onFulfilled != null && this.getVolume() === 1) {\n      var findEntry, iterateEntries;\n      if (typeof ((findEntry = this.onFulfilled) == null ? undefined : findEntry.muted) === \"boolean\" && ((iterateEntries = this.onFulfilled) == null ? 0 : iterateEntries.muted)) {\n        this.setVolume(0);\n      } else {\n        var createCircularNode;\n        if (typeof ((createCircularNode = this.onFulfilled) == null ? undefined : createCircularNode.volume) === \"number\") {\n          var entryIdCounter;\n          if ((entryIdCounter = this.onFulfilled) == null) {\n            findEntry = undefined;\n          } else {\n            findEntry = entryIdCounter.volume;\n          }\n          if (findEntry >= 0 && findEntry <= 1) {\n            var key;\n            this.setVolume((key = this.onFulfilled) == null ? undefined : key.volume);\n          }\n        }\n      }\n    }\n    this.assignPolyfill = true;\n    triggerEvent(this, \"start\");\n  };\n  setTimeoutWrapper.ErrorLogger = function () {\n    if (!this.handleAsync.disableClickThrough && this.tasks != null) {\n      var generatorWrapper = this.tasks.data.clickThroughUrl;\n      if (generatorWrapper != null) {\n        openURLInNewWindow(generatorWrapper, this.tasks.data.attributionParams);\n      }\n    }\n  };\n  setTimeoutWrapper.resize = function (generatorWrapper, value, CustomMap) {\n    var findEntry = this.entryIdCounter;\n    var iterateEntries = findEntry.createDeferred;\n    if (iterateEntries != null) {\n      if (-1 === generatorWrapper) {\n        iterateEntries.style.right = \"0\";\n        iterateEntries.style.left = \"0\";\n      } else {\n        iterateEntries.style.width = generatorWrapper + \"px\";\n      }\n      if (-1 === value) {\n        iterateEntries.style.bottom = \"0\";\n        iterateEntries.style.top = \"0\";\n      } else {\n        iterateEntries.style.height = value + \"px\";\n      }\n    }\n    iterateEntries = findEntry.isDone;\n    if (-1 === generatorWrapper) {\n      iterateEntries.entryIdCounter.width = \"100%\";\n    } else {\n      iterateEntries.entryIdCounter.width = String(generatorWrapper);\n    }\n    if (-1 === value) {\n      iterateEntries.entryIdCounter.height = \"100%\";\n    } else {\n      iterateEntries.entryIdCounter.height = String(value);\n    }\n    try {\n      iterateEntries.entryIdCounter.offsetTop = iterateEntries.entryIdCounter.offsetTop;\n    } catch (createCircularNode) {}\n    findEntry.size = new Size(generatorWrapper, value);\n    findEntry = {};\n    generatorWrapper = (findEntry.width = generatorWrapper, findEntry.height = value, findEntry.viewMode = CustomMap, findEntry);\n    triggerEvent(this, \"resize\", generatorWrapper);\n  };\n  setTimeoutWrapper.stopTimer = function () {\n    triggerEvent(this, \"stop\");\n  };\n  setTimeoutWrapper.expandRectangle = function () {\n    triggerEvent(this, \"expand\");\n  };\n  setTimeoutWrapper.collapse = function () {\n    triggerEvent(this, \"collapse\");\n  };\n  setTimeoutWrapper.getVolume = function () {\n    return this.volume;\n  };\n  setTimeoutWrapper.setVolume = function (generatorWrapper) {\n    this.volume = generatorWrapper;\n    this.entryIdCounter.identityFunction.setVolume(generatorWrapper);\n    var value = {};\n    generatorWrapper = (value.volume = generatorWrapper, value);\n    triggerEvent(this, \"volume\", generatorWrapper);\n  };\n  setTimeoutWrapper.pause = function () {\n    triggerEvent(this, \"pause\");\n  };\n  setTimeoutWrapper.resume = function () {\n    triggerEvent(this, \"resume\");\n  };\n  setTimeoutWrapper.destroy = function () {\n    this.markAsCompleted();\n  };\n  setTimeoutWrapper.getCuePoints = function () {\n    return this.toArray;\n  };\n  setTimeoutWrapper.initializeTransformations = function () {\n    return this.tasks;\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    triggerEvent(this, \"destroy\");\n    if (this.setTimeoutWrapper != null) {\n      this.setTimeoutWrapper.markAsCompleted();\n    }\n    this.updateMaxSize.markAsCompleted();\n    this.handleThenable.clearAll();\n    if (this.isDone) {\n      this.isDone.stopTimer();\n      this.isDone.markAsCompleted();\n    }\n    if (isOnScreenDetectionEnabled()) {\n      unregisterElement(this.resolvePromise, this.tryCall);\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  setTimeoutWrapper.setAdPropertyFromString = function () {\n    markAsCompleted.getAdInstance().report(124, {\n      api: \"clicked\"\n    });\n    var generatorWrapper = this.tasks && this.tasks.data.clickThroughUrl,\n      value;\n    if (generatorWrapper && ((value = this.tasks) == null ? 0 : value.IdentityTransform())) {\n      var CustomMap;\n      openURLInNewWindow(generatorWrapper, (CustomMap = this.tasks) == null ? undefined : CustomMap.data.attributionParams);\n    }\n    triggerEvent(this, \"click\");\n  };\n  setTimeoutWrapper.focus = function () {\n    enqueueMessage(this.dispatchUnhandledRejection, \"userInteraction\", \"focusUiElement\");\n  };\n  var HJ = function (generatorWrapper, value) {\n    var CustomMap = value.gfpCookieUserEnabled;\n    value = value.gfpCookieClearData;\n    var findEntry = new AdConfiguration();\n    findEntry = setAdPropertyFromObject(findEntry, 1, CustomMap ? \"0\" : \"1\");\n    findEntry = updateElement(findEntry, 2, convertToInt64(2147483647));\n    findEntry = setAdPropertyFromObject(findEntry, 3, \"/\");\n    findEntry = setAdPropertyFromObject(findEntry, 4, window.location.hostname);\n    var iterateEntries = new AdCookieManager(),\n      createCircularNode,\n      entryIdCounter;\n    if ((entryIdCounter = (createCircularNode = generatorWrapper.isArrayLike) == null ? undefined : buildAdRequest(createCircularNode)) != null) {\n      generatorWrapper = entryIdCounter;\n    } else {\n      generatorWrapper = null;\n    }\n    setAdCookie(iterateEntries, \"__gpi_opt_out\", findEntry, generatorWrapper);\n    if (!CustomMap || value) {\n      processAdCookie(iterateEntries, \"__gads\", generatorWrapper);\n      processAdCookie(iterateEntries, \"__gpi\", generatorWrapper);\n    }\n  };\n  zone.prototype.clicked = zone.prototype.setAdPropertyFromString;\n  zone.prototype.getCurrentAd = zone.prototype.initializeTransformations;\n  zone.prototype.getCuePoints = zone.prototype.getCuePoints;\n  zone.prototype.destroy = zone.prototype.destroy;\n  zone.prototype.resume = zone.prototype.resume;\n  zone.prototype.pause = zone.prototype.pause;\n  zone.prototype.setVolume = zone.prototype.setVolume;\n  zone.prototype.getVolume = zone.prototype.getVolume;\n  zone.prototype.collapse = zone.prototype.collapse;\n  zone.prototype.expandRectangle = zone.prototype.expandRectangle;\n  zone.prototype.stopTimer = zone.prototype.stopTimer;\n  zone.prototype.resize = zone.prototype.resize;\n  zone.prototype.startTimer = zone.prototype.startTimer;\n  zone.prototype.skip = zone.prototype.skip;\n  zone.prototype.updateAdsRenderingSettings = zone.prototype.updateAdsRenderingSettings;\n  zone.prototype.discardAdBreak = zone.prototype.discardAdBreak;\n  zone.prototype.getAdSkippableState = zone.prototype.getAdSkippableState;\n  zone.prototype.getRemainingTime = zone.prototype.getRemainingTime;\n  zone.prototype.isCustomClickTrackingUsed = zone.prototype.isCustomClickTrackingUsed;\n  zone.prototype.isCustomPlaybackUsed = zone.prototype.isCustomPlaybackUsed;\n  zone.prototype.initialize = zone.prototype.initialize;\n  function JJ(generatorWrapper) {\n    if (generatorWrapper instanceof AdDisplayOptions) {\n      markAsCompleted.getAdInstance().report(174, {\n        valid: true\n      });\n      return generatorWrapper;\n    }\n    markAsCompleted.getAdInstance().report(174, {\n      valid: false\n    });\n    var value = new AdDisplayOptions();\n    value.append(generatorWrapper);\n    return value;\n  }\n  var AdsManagerLoadedEventType = {\n    ADS_MANAGER_LOADED: \"adsManagerLoaded\"\n  };\n  var AdsManagerLoadedEvent = function (generatorWrapper, value) {\n    AdEvent.call(this, \"adsManagerLoaded\");\n    this.entryIdCounter = generatorWrapper;\n    this.setTimeoutWrapper = value;\n  };\n  inheritPrototype(AdsManagerLoadedEvent, AdEvent);\n  AdsManagerLoadedEvent.prototype.getAdsManager = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper || {\n      currentTime: null\n    };\n    this.entryIdCounter.configureAdsManager(generatorWrapper, value);\n    return this.entryIdCounter;\n  };\n  AdsManagerLoadedEvent.prototype.getUserRequestContext = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdsManagerLoadedEvent.prototype.getUserRequestContext = AdsManagerLoadedEvent.prototype.getUserRequestContext;\n  AdsManagerLoadedEvent.prototype.getAdsManager = AdsManagerLoadedEvent.prototype.getAdsManager;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_manager_loaded_event.AdsManagerLoadedEvent.Type\", AdsManagerLoadedEventType);\n  var getUSPData = function (generatorWrapper, value) {\n    (0, generatorWrapper.__uspapi)(\"getUSPData\", 1, function (CustomMap, findEntry) {\n      value.resetGeneratorState({\n        supportsHtml5: CustomMap != null ? CustomMap : undefined,\n        isAndroidNonChrome: findEntry ? undefined : 2\n      });\n    });\n  };\n  var USPDataHandler = {\n    supportsBigInt(generatorWrapper) {\n      return generatorWrapper.resetGeneratorState;\n    },\n    defaultSort(generatorWrapper, value) {\n      generatorWrapper = {};\n      generatorWrapper.__uspapiCall = {\n        callId: value,\n        command: \"getUSPData\",\n        version: 1\n      };\n      return generatorWrapper;\n    },\n    forEachElement(generatorWrapper, value) {\n      value = value.__uspapiReturn;\n      var CustomMap;\n      generatorWrapper({\n        supportsHtml5: (CustomMap = value.returnValue) != null ? CustomMap : undefined,\n        isAndroidNonChrome: value.success ? undefined : 2\n      });\n    }\n  };\n  function parseMessageData(generatorWrapper) {\n    var value = {};\n    if (typeof generatorWrapper.data === \"string\") {\n      value = JSON.parse(generatorWrapper.data);\n    } else {\n      value = generatorWrapper.data;\n    }\n    return {\n      payload: value,\n      singletonInstance: value.__uspapiReturn.callId\n    };\n  }\n  var initializeUSPApiCaller = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    tryCall.call(this);\n    var CustomMap;\n    if ((CustomMap = value.timeoutMs) != null) {\n      this.timeoutMs = CustomMap;\n    } else {\n      this.timeoutMs = 500;\n    }\n    this.caller = new MessageHandler(generatorWrapper, \"__uspapiLocator\", function (findEntry) {\n      return typeof findEntry.__uspapi === \"function\";\n    }, parseMessageData);\n    this.caller.handleAsync.set(\"getDataWithCallback\", getUSPData);\n    this.caller.createDeferred.set(\"getDataWithCallback\", USPDataHandler);\n  };\n  inheritPrototype(initializeUSPApiCaller, tryCall);\n  initializeUSPApiCaller.prototype.getAdEnvironment = function () {\n    this.caller.markAsCompleted();\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var fetchUSPData = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (getEffectiveMessageTarget(generatorWrapper.caller)) {\n      var findEntry = clearFunction(function () {\n        value(CustomMap);\n      });\n      invokeCallerMethod(generatorWrapper.caller, \"getDataWithCallback\", {\n        resetGeneratorState(iterateEntries) {\n          if (!iterateEntries.isAndroidNonChrome) {\n            CustomMap = iterateEntries.supportsHtml5;\n          }\n          findEntry();\n        }\n      });\n      setTimeout(findEntry, generatorWrapper.timeoutMs);\n    } else {\n      value(CustomMap);\n    }\n  };\n  var WindowWrapper = function () {\n    this.entryIdCounter = window;\n  };\n  function findPrebidJs() {\n    var generatorWrapper = window,\n      value,\n      CustomMap;\n    if ((CustomMap = [\"pbjs\"].concat((value = generatorWrapper._pbjsGlobals) != null ? value : []).map(function (findEntry) {\n      return generatorWrapper[findEntry];\n    }).find(function (findEntry) {\n      return Array.isArray(findEntry == null ? undefined : findEntry.que);\n    })) != null) {\n      return CustomMap;\n    } else {\n      return null;\n    }\n  }\n  function getAdDataOrZero(generatorWrapper, value) {\n    var CustomMap, findEntry, iterateEntries;\n    if (value == null) {\n      iterateEntries = undefined;\n    } else {\n      iterateEntries = value.get.call(value, generatorWrapper);\n    }\n    if ((findEntry = (CustomMap = iterateEntries) != null ? CustomMap : value == null ? undefined : value.get(hashString(generatorWrapper))) != null) {\n      return findEntry;\n    } else {\n      return 0;\n    }\n  }\n  var versionRegex = /^v?\\d{1,3}(\\.\\d{1,3}){0,2}(-pre)?$/;\n  var globalMap = new Map();\n  function processBidResponses(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = iterateEntries.getBidResponsesForAdUnitCode;\n    if (createCircularNode) {\n      var entryIdCounter,\n        key,\n        value,\n        entry,\n        currentEntry,\n        foundEntry = (currentEntry = (entryIdCounter = createCircularNode((value = value.findElement) != null ? value : \"\")) == null ? undefined : entryIdCounter.bids) != null ? currentEntry : (key = createCircularNode((entry = value.adUnitCode) != null ? entry : \"\")) == null ? undefined : key.bids;\n      if (foundEntry != null && foundEntry.length && (entryIdCounter = foundEntry.filter(function (user) {\n        var profileData = user.adId;\n        return user.auctionId !== CustomMap && Object.values(findEntry).some(function (isDone) {\n          return isDone.includes(profileData);\n        });\n      }), entryIdCounter.length)) {\n        var resolveFunction, rejectFunction;\n        if ((resolveFunction = iterateEntries.adUnits) == null) {\n          createCircularNode = undefined;\n        } else if ((rejectFunction = resolveFunction.find(function (user) {\n          user = user.code;\n          return user === value.findElement || user === value.adUnitCode;\n        })) == null) {\n          createCircularNode = undefined;\n        } else {\n          createCircularNode = rejectFunction.mediaTypes;\n        }\n        resolveFunction = getIterator(entryIdCounter);\n        for (rejectFunction = resolveFunction.next(); !rejectFunction.done; rejectFunction = resolveFunction.next()) {\n          rejectFunction = rejectFunction.value;\n          entryIdCounter = createBidResponseObject(rejectFunction, findEntry, createCircularNode);\n          entryIdCounter = addAdRequestToAdBreak(generatorWrapper, addAdToAdRequest(setAdProperty(setAdRequestAdUnitPath(setAdRequestType(new AdRequest(), rejectFunction.bidder), 1), 6, true), entryIdCounter));\n          updateAliasRegistry(rejectFunction.bidder, iterateEntries, entryIdCounter);\n          if (typeof rejectFunction.timeToRespond === \"number\") {\n            updateElement(entryIdCounter, 2, convertToInt64(Math.roundRectangle(rejectFunction.timeToRespond)));\n          }\n        }\n      }\n    }\n  }\n  function updateAliasRegistry(generatorWrapper, value, CustomMap) {\n    for (var findEntry = []; generatorWrapper && !findEntry.includes(generatorWrapper);) {\n      findEntry.unshift(generatorWrapper);\n      var iterateEntries = undefined;\n      var createCircularNode = undefined;\n      if ((iterateEntries = value) == null) {\n        generatorWrapper = undefined;\n      } else if ((createCircularNode = iterateEntries.aliasRegistry) == null) {\n        generatorWrapper = undefined;\n      } else {\n        generatorWrapper = createCircularNode[generatorWrapper];\n      }\n    }\n    transformAndReplaceArray(CustomMap, 10, findEntry, ensureString);\n  }\n  function updateAdUnitCode(generatorWrapper, value, CustomMap) {\n    if (!(parseNullableInt(getTransformedElement(generatorWrapper, 3)) != null)) {\n      if (CustomMap === value.adUnitCode) {\n        clearAdProperty(generatorWrapper, 3, 1);\n      } else if (CustomMap === value.findElement) {\n        clearAdProperty(generatorWrapper, 3, 2);\n      }\n    }\n  }\n  function updateBidRequest(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    createCircularNode = createCircularNode.get(entryIdCounter != null ? entryIdCounter : function () {\n      return null;\n    });\n    if ((createCircularNode == null ? undefined : getAdPropertyNumeric(createCircularNode, 1)) !== 1) {\n      finalizeAdAttributes(value, 5, createCircularNode);\n    }\n    if (!(undefined !== uf(generatorWrapper, AdEvent, 5, false))) {\n      if (createCircularNode) {\n        if (getAdPropertyNumeric(createCircularNode, 1) === 1) {\n          setAdBreakFillType(generatorWrapper, createCircularNode);\n        } else {\n          setAdBreakFillType(generatorWrapper, setAdEventAdData(setAdEventType(setAdEventTimeStamp(new AdEvent(), iterateEntries), 1), getAdDataOrZero(CustomMap, findEntry)));\n        }\n      } else {\n        setAdBreakFillType(generatorWrapper, setAdEventType(setAdEventTimeStamp(new AdEvent(), iterateEntries), getAdDataOrZero(CustomMap, findEntry) ? 2 : 3));\n      }\n    }\n  }\n  function createBidResponseObject(generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.cpm;\n    var iterateEntries = generatorWrapper.originalCpm;\n    var createCircularNode = generatorWrapper.currency;\n    var entryIdCounter = generatorWrapper.originalCurrency;\n    var key = generatorWrapper.dealId;\n    var value = generatorWrapper.adserverTargeting;\n    var entry = generatorWrapper.bidder;\n    var currentEntry = generatorWrapper.adId;\n    var foundEntry = generatorWrapper.mediaType;\n    var resolveFunction = generatorWrapper.height;\n    var rejectFunction = generatorWrapper.width;\n    var user = new Ad();\n    if (typeof findEntry === \"number\") {\n      updateElement(user, 2, convertToInt64(Math.roundRectangle(1000000 * findEntry)));\n      if (!(entryIdCounter && entryIdCounter !== createCircularNode)) {\n        findEntry = Math.roundRectangle(1000000 * Number(iterateEntries));\n        if (!(isNaN(findEntry) || findEntry === getAdPropertyFallbackNumeric(user, 2))) {\n          updateElement(user, 8, convertToInt64(findEntry));\n        }\n      }\n    }\n    if (typeof createCircularNode === \"string\") {\n      setAdPropertyFromObject(user, 3, createCircularNode);\n    }\n    if ([\"string\", \"number\"].includes(typeof key)) {\n      createCircularNode = new AdSlot();\n      key = setAdPropertyFromObject(createCircularNode, 1, String(key));\n      finalizeAdAttributes(user, 6, key);\n    }\n    if (typeof value === \"object\") {\n      key = getIterator([\"\", \"_\" + entry]);\n      for (createCircularNode = key.next(); !createCircularNode.done; createCircularNode = key.next()) {\n        findEntry = createCircularNode.value;\n        createCircularNode = [];\n        iterateEntries = getIterator(Object.entries(value));\n        for (entryIdCounter = iterateEntries.next(); !entryIdCounter.done; entryIdCounter = iterateEntries.next()) {\n          entryIdCounter = getIterator(entryIdCounter.value);\n          var profileData = entryIdCounter.next().value;\n          entryIdCounter = entryIdCounter.next().value;\n          profileData = (\"\" + profileData + findEntry).slice(0, 20);\n          var isDone = undefined;\n          if ((isDone = value[profileData]) != null && isDone.length) {\n            if (value[profileData][0] === String(entryIdCounter)) {\n              createCircularNode.push(profileData);\n            } else {\n              createCircularNode = [];\n              break;\n            }\n          }\n        }\n        findEntry = transformArrayElements(user, 4, stringOrNull);\n        transformAndReplaceArray(user, 4, findEntry.concat(createCircularNode), ensureString);\n      }\n    }\n    switch (foundEntry || \"banner\") {\n      case \"banner\":\n        clearAdProperty(user, 5, 1);\n        break;\n      case \"native\":\n        clearAdProperty(user, 5, 2);\n        break;\n      case \"video\":\n        clearAdProperty(user, 5, 3);\n        value = new AdParameters();\n        var stream;\n        if ((CustomMap == null ? undefined : (stream = CustomMap.video) == null ? undefined : stream.context) === \"adpod\") {\n          var keyArray,\n            getAdManager = CustomMap == null ? undefined : (keyArray = CustomMap.video) == null ? undefined : keyArray.adPodDurationSec;\n          updateElement(value, 1, convertToInt64(getAdManager));\n        } else {\n          if (CustomMap == null) {\n            keyArray = undefined;\n          } else if ((getAdManager = CustomMap.video) == null) {\n            keyArray = undefined;\n          } else {\n            keyArray = getAdManager.maxduration;\n          }\n          updateElement(value, 1, convertToInt64(keyArray));\n        }\n        var entryNode;\n        if (typeof (CustomMap == null ? undefined : (entryNode = CustomMap.video) == null ? undefined : entryNode.skip) === \"number\") {\n          var lastNode;\n          CustomMap = !!(CustomMap == null ? 0 : (lastNode = CustomMap.video) == null ? 0 : lastNode.skip);\n          setAdProperty(value, 2, CustomMap);\n        }\n        var adServerCatIdWrapper;\n        if ((adServerCatIdWrapper = generatorWrapper.meta) == null) {\n          generatorWrapper = undefined;\n        } else {\n          generatorWrapper = adServerCatIdWrapper.adServerCatId;\n        }\n        adServerCatIdWrapper = setAdPropertyFromObject(value, 3, generatorWrapper);\n        if (typeof value !== \"object\") {\n          value = null;\n        } else {\n          var getIterator, Nb;\n          generatorWrapper = String((Nb = (getIterator = value[\"hb_pb_cat_dur_\" + entry]) != null ? getIterator : value.hb_pb_cat_dur) != null ? Nb : \"\");\n          var keyTransformFunction, errorHandler, Uh, Vh;\n          getIterator = String((Vh = (Uh = (errorHandler = (keyTransformFunction = value[\"hb_cache_id_\" + entry]) != null ? keyTransformFunction : value[\"hb_uuid_\" + entry]) != null ? errorHandler : value.hb_cache_id) != null ? Uh : value.hb_uuid) != null ? Vh : \"\");\n          if (generatorWrapper && getIterator) {\n            value = generatorWrapper + \"_\" + getIterator;\n          } else if (getIterator) {\n            value = getIterator;\n          } else {\n            value = null;\n          }\n        }\n        setAdPropertyFromObject(adServerCatIdWrapper, 4, value);\n        finalizeAdAttributes(user, 9, value);\n    }\n    if (Number.isFinite(resolveFunction) && Number.isFinite(rejectFunction)) {\n      value = new AdSize();\n      rejectFunction = updateAdProperty(value, 1, Math.roundRectangle(rejectFunction));\n      resolveFunction = updateAdProperty(rejectFunction, 2, Math.roundRectangle(resolveFunction));\n      finalizeAdAttributes(user, 7, resolveFunction);\n    }\n    if (typeof currentEntry === \"string\") {\n      setAdPropertyFromObject(user, 1, currentEntry);\n    }\n    return user;\n  }\n  function createMapFunction(generatorWrapper, value) {\n    var CustomMap = new Map();\n    var findEntry = function (value) {\n      var entry = CustomMap.get(value);\n      if (!entry) {\n        entry = {};\n        CustomMap.set(value, entry);\n      }\n      return entry;\n    };\n    var iterateEntries = [];\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var createCircularNode = generatorWrapper.next(); !createCircularNode.done; createCircularNode = generatorWrapper.next()) {\n      createCircularNode = createCircularNode.value;\n      var entryIdCounter = createCircularNode.args;\n      var key = createCircularNode.eventType;\n      createCircularNode = createCircularNode.elapsedTime;\n      if (key === \"bidTimeout\") {\n        iterateEntries.push.apply(iterateEntries, toArray(entryIdCounter));\n      }\n      switch (key) {\n        case \"bidRequested\":\n          if (entryIdCounter.auctionId !== value) {\n            continue;\n          }\n          if (!Array.isArray(entryIdCounter.bids)) {\n            continue;\n          }\n          entryIdCounter = getIterator(entryIdCounter.bids);\n          for (key = entryIdCounter.next(); !key.done; key = entryIdCounter.next()) {\n            if (key = key.value.bidId) {\n              findEntry(key).requestTime = createCircularNode;\n            }\n          }\n          break;\n        case \"noBid\":\n          if (entryIdCounter.auctionId === value && entryIdCounter.bidId) {\n            findEntry(entryIdCounter.bidId).supportsPassive = createCircularNode;\n          }\n      }\n    }\n    findEntry = new Map();\n    generatorWrapper = getIterator(CustomMap.entries());\n    for (createCircularNode = generatorWrapper.next(); !createCircularNode.done; createCircularNode = generatorWrapper.next()) {\n      entryIdCounter = getIterator(createCircularNode.value);\n      createCircularNode = entryIdCounter.next().value;\n      key = entryIdCounter.next().value;\n      entryIdCounter = key.requestTime;\n      key = key.supportsPassive;\n      if (entryIdCounter && key) {\n        findEntry.set(createCircularNode, {\n          latency: key - entryIdCounter,\n          isMacOS: false\n        });\n      }\n    }\n    iterateEntries = getIterator(iterateEntries);\n    for (generatorWrapper = iterateEntries.next(); !generatorWrapper.done; generatorWrapper = iterateEntries.next()) {\n      createCircularNode = generatorWrapper.value;\n      generatorWrapper = createCircularNode.bidId;\n      createCircularNode = createCircularNode.auctionId;\n      if (generatorWrapper && createCircularNode === value && (generatorWrapper = findEntry.get(generatorWrapper))) {\n        generatorWrapper.isMacOS = true;\n      }\n    }\n    return findEntry;\n  }\n  function processAuctionEndEvents(generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    var findEntry = undefined === findEntry ? new Map() : findEntry;\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    var createCircularNode = undefined === createCircularNode ? new Map() : createCircularNode;\n    var entryIdCounter = undefined === entryIdCounter ? new AdResponse() : entryIdCounter;\n    var key = undefined === key ? 0 : key;\n    var rejectFunction, user, profileData, stream;\n    var value = new Map();\n    var entry = (0, generatorWrapper.getEvents)();\n    var currentEntry = entry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport = bidRequest.args;\n      return bidRequest.eventType === \"auctionEnd\" && checkIntersectionObserverSupport.auctionId;\n    });\n    var foundEntry = new AdSchedule();\n    var resolveFunction = function (bidRequest) {\n      return bidRequest === value.findElement || bidRequest === value.adUnitCode;\n    };\n    var isDone = (profileData = globalMap.get(((rejectFunction = value.findElement) != null ? rejectFunction : \"\") + ((user = value.adUnitCode) != null ? user : \"\"))) != null ? profileData : 0;\n    if ((stream = currentEntry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport, rz, sz;\n      return Number((checkIntersectionObserverSupport = bidRequest.args) == null ? undefined : checkIntersectionObserverSupport.timestamp) > isDone && ((rz = bidRequest.args) == null ? undefined : (sz = rz.adUnitCodes) == null ? undefined : sz.find(resolveFunction));\n    })) != null) {\n      currentEntry = stream;\n    } else {\n      currentEntry = [];\n    }\n    if (!currentEntry.length) {\n      return null;\n    }\n    var keyArray;\n    if (currentEntry = (keyArray = currentEntry.reduce(function (bidRequest, checkIntersectionObserverSupport) {\n      if (Number(checkIntersectionObserverSupport.args.timestamp) > Number(bidRequest.args.timestamp)) {\n        return checkIntersectionObserverSupport;\n      } else {\n        return bidRequest;\n      }\n    })) == null ? undefined : keyArray.args) {\n      if (undefined === currentEntry.bidderRequests) {\n        stream = [];\n      } else {\n        stream = currentEntry.bidderRequests;\n      }\n      if (undefined === currentEntry.bidsReceived) {\n        keyArray = [];\n      } else {\n        keyArray = currentEntry.bidsReceived;\n      }\n      var getAdManager = currentEntry.auctionId;\n      currentEntry = currentEntry.timestamp;\n      if (getAdManager && currentEntry != null && stream.length) {\n        var entryNode, lastNode;\n        globalMap.set(((entryNode = value.findElement) != null ? entryNode : \"\") + ((lastNode = value.adUnitCode) != null ? lastNode : \"\"), currentEntry);\n        entryNode = addAdBreakToAdSchedule(foundEntry);\n        if (generatorWrapper.version && versionRegex.test(generatorWrapper.version)) {\n          setAdPropertyFromObject(entryNode, 6, generatorWrapper.version);\n        }\n        var adServerCatIdWrapper, getIterator, Nb;\n        if ((adServerCatIdWrapper = generatorWrapper.getConfig) == null ? 0 : (getIterator = adServerCatIdWrapper.call(generatorWrapper).cache) == null ? 0 : (Nb = getIterator.url) == null ? 0 : Nb.length) {\n          var keyTransformFunction, errorHandler;\n          setAdBreakId(entryNode, (keyTransformFunction = generatorWrapper.getConfig) == null ? undefined : (errorHandler = keyTransformFunction.call(generatorWrapper).cache) == null ? undefined : errorHandler.url);\n        }\n        finalizeAdAttributes(entryNode, 9, entryIdCounter);\n        entryIdCounter = once(function () {\n          return createMapFunction(entry, getAdManager);\n        });\n        adServerCatIdWrapper = getIterator(stream);\n        Nb = adServerCatIdWrapper.next();\n        getIterator = {\n          bidderCode: undefined,\n          checkFlags: undefined\n        };\n        for (getIterator = {}; !Nb.done; Nb = adServerCatIdWrapper.next()) {\n          keyTransformFunction = Nb.value;\n          getIterator.bidderCode = keyTransformFunction.bidderCode;\n          errorHandler = keyTransformFunction.bids;\n          Nb = keyTransformFunction.timeout;\n          getIterator.checkFlags = keyTransformFunction.src;\n          keyTransformFunction = keyTransformFunction.auctionStart;\n          errorHandler = getIterator(errorHandler);\n          stream = errorHandler.next();\n          lastNode = {\n            userAgentVersion: undefined\n          };\n          for (lastNode = {}; !stream.done; stream = errorHandler.next()) {\n            profileData = stream.value;\n            lastNode.userAgentVersion = profileData.bidId;\n            user = profileData.transactionId;\n            stream = profileData.adUnitCode;\n            currentEntry = profileData.getFloor;\n            rejectFunction = profileData.mediaTypes;\n            profileData = profileData.ortb2Imp;\n            if (lastNode.userAgentVersion && resolveFunction(stream)) {\n              updateAdUnitCode(entryNode, value, stream);\n              var Uh = undefined;\n              var Vh = undefined;\n              if (key && getAdPropertyValue(entryNode, 11) == null && typeof ((Uh = profileData) == null ? undefined : (Vh = Uh.ext) == null ? undefined : Vh.gpid) === \"string\") {\n                setAdPropertyFromObject(entryNode, 11, profileData.ext.gpid.substring(0, key));\n              }\n              if (user) {\n                if (!(getAdPropertyValue(entryNode, 4) != null)) {\n                  setAdPropertyFromObject(entryNode, 4, user);\n                }\n                if (!value.has(user)) {\n                  value.set(user, keyTransformFunction);\n                }\n              }\n              if (parseNullableInt32(getTransformedElement(entryNode, 8)) == null && Number.isFinite(Nb)) {\n                updateAdProperty(entryNode, 8, Nb);\n              }\n              profileData = keyArray.find(function (bidRequest) {\n                return function (checkIntersectionObserverSupport) {\n                  return checkIntersectionObserverSupport.requestId === bidRequest.userAgentVersion;\n                };\n              }(lastNode));\n              user = addAdRequestToAdBreak(entryNode, function (bidRequest) {\n                return function () {\n                  var checkIntersectionObserverSupport = setAdRequestType(new AdRequest(), bidRequest.bidderCode);\n                  updateAliasRegistry(bidRequest.bidderCode, generatorWrapper, checkIntersectionObserverSupport);\n                  switch (bidRequest.checkFlags) {\n                    case \"client\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 1);\n                      break;\n                    case \"s2s\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 2);\n                  }\n                  return checkIntersectionObserverSupport;\n                };\n              }(getIterator)());\n              updateBidRequest(entryNode, user, stream, findEntry, iterateEntries, createCircularNode, currentEntry);\n              if (profileData) {\n                setAdRequestAdUnitPath(user, 1);\n                if (typeof profileData.timeToRespond === \"number\" && Number.isFinite(profileData.timeToRespond)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(profileData.timeToRespond)));\n                }\n                lastNode = createBidResponseObject(profileData, CustomMap, rejectFunction);\n                addAdToAdRequest(user, lastNode);\n              } else if ((lastNode = entryIdCounter().get(lastNode.userAgentVersion)) && !lastNode.isMacOS) {\n                setAdRequestAdUnitPath(user, 2);\n                if (Number.isFinite(lastNode.latency)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(lastNode.latency)));\n                }\n              } else {\n                lastNode = setAdRequestAdUnitPath(user, 3);\n                if (Number.isFinite(Nb)) {\n                  updateElement(lastNode, 2, convertToInt64(Math.roundRectangle(Nb)));\n                }\n              }\n            }\n          }\n        }\n        var bidCacheConfig;\n        if ((bidCacheConfig = generatorWrapper.getConfig) == null ? 0 : bidCacheConfig.call(generatorWrapper).useBidCache) {\n  "