"de = AdError.prototype.getVastErrorCode;\n  AdError.prototype.getErrorCode = AdError.prototype.getErrorCode;\n  AdError.prototype.getMessage = AdError.prototype.getMessage;\n  AdError.prototype.getInnerError = AdError.prototype.getInnerError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error.AdError.Type\", AdErrorType);\n  var AdErrorEventType = {\n    AD_ERROR: \"adError\"\n  };\n  var AdErrorEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adError\");\n    this.hasError = generatorWrapper;\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdErrorEvent, AdEvent);\n  AdErrorEvent.prototype.getAdErrorResponseError = function () {\n    return this.hasError;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = function () {\n    return this.entryIdCounter;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = AdErrorEvent.prototype.getUserRequestContext;\n  AdErrorEvent.prototype.getAdErrorResponseError = AdErrorEvent.prototype.getAdErrorResponseError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error_event.AdErrorEvent.Type\", AdErrorEventType);\n  var AdEventTypes = {\n    AD_CAN_PLAY: \"adCanPlay\",\n    URLSchemeValidator: \"adStarted\",\n    CONTENT_PAUSE_REQUESTED: \"contentPauseRequested\",\n    CONTENT_RESUME_REQUESTED: \"contentResumeRequested\",\n    CLICK: \"click\",\n    VIDEO_CLICKED: \"videoClicked\",\n    VIDEO_ICON_CLICKED: \"videoIconClicked\",\n    convertNumberToString: \"engagedView\",\n    EXPANDED_CHANGED: \"expandedChanged\",\n    STARTED: \"start\",\n    AD_PROGRESS: \"adProgress\",\n    AD_BUFFERING: \"adBuffering\",\n    IMPRESSION: \"impression\",\n    optionalString: \"measurable_impression\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    setElementSrcFromTrustedUrl: \"externalActivityEvent\",\n    PAUSED: \"pause\",\n    RESUMED: \"resume\",\n    FIRST_QUARTILE: \"firstQuartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdQuartile\",\n    COMPLETE: \"complete\",\n    DURATION_CHANGE: \"durationChange\",\n    USER_CLOSE: \"userClose\",\n    getTopAccessibleContext: \"userRecall\",\n    searchDelimiterRegex: \"prefetched\",\n    LOADED: \"loaded\",\n    ALL_ADS_COMPLETED: \"allAdsCompleted\",\n    SKIPPED: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    LINEAR_CHANGED: \"linearChanged\",\n    SKIPPABLE_STATE_CHANGED: \"skippableStateChanged\",\n    AD_METADATA: \"adMetadata\",\n    AD_BREAK_FETCH_ERROR: \"adBreakFetchError\",\n    AD_BREAK_READY: \"adBreakReady\",\n    LOG: \"log\",\n    VOLUME_CHANGED: \"volumeChange\",\n    VOLUME_MUTED: \"mute\",\n    INTERACTION: \"interaction\",\n    safeHTMLMarker: \"companionBackfill\",\n    generatePageViewId: \"trackingUrlPinged\",\n    ampProjectUrlRegex: \"video_card_endcap_collapse\",\n    collectAncestorOrigins: \"video_card_endcap_dismiss\",\n    UrlDepthInfo: \"video_card_endcap_impression\",\n    safeStyleMarker: \"companionInitialized\",\n    emptySafeHTML: \"companionImpression\",\n    SafeHTML: \"companionClick\",\n    getContentWindow: \"mediaUrlPinged\",\n    LOAD_START: \"loadStart\",\n    isTablet: \"navigationRequested\"\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (undefined === CustomMap) {\n      CustomMap = null;\n    } else {\n      CustomMap = CustomMap;\n    }\n    AdEvent.call(this, generatorWrapper);\n    this.createUnsigned64 = value;\n    this.setTimeoutWrapper = CustomMap;\n  };\n  inheritPrototype(AdEvent, AdEvent);\n  AdEvent.prototype.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  AdEvent.prototype.getAdData = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdEvent.prototype.getAdData = AdEvent.prototype.getAdData;\n  AdEvent.prototype.getAdInstance = AdEvent.prototype.getAdInstance;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_event.AdEvent.Type\", AdEventTypes);\n  var AdMetadataEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adMetadata\", generatorWrapper);\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdMetadataEvent, AdEvent);\n  AdMetadataEvent.prototype.getAdPropertyHandler = function () {\n    return this.entryIdCounter;\n  };\n  AdMetadataEvent.prototype.getAdCuePoints = AdMetadataEvent.prototype.getAdPropertyHandler;\n  var AdBreakData = function (generatorWrapper) {\n    this.adBreakDuration = generatorWrapper.adBreakDuration;\n    this.adPosition = generatorWrapper.adPosition;\n    this.currentTime = generatorWrapper.currentTime;\n    this.duration = generatorWrapper.duration;\n    this.totalAds = generatorWrapper.totalAds;\n  };\n  var ContentTimeUpdateTimer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = generatorWrapper;\n    this.isDone = value;\n    this.tasks = this.setTimeoutWrapper.currentTime;\n    this.entryIdCounter = new Timer(250);\n    registerDisposable(this, this.entryIdCounter);\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    addListener(this.handleAsync, this.entryIdCounter, \"tick\", this.onFulfilled, false, this);\n  };\n  inheritPrototype(ContentTimeUpdateTimer, AdEnvironmentConfig);\n  ContentTimeUpdateTimer.prototype.getUserAgent = function () {\n    return this.tasks;\n  };\n  ContentTimeUpdateTimer.prototype.startTimer = function () {\n    notifyContentTimeUpdate(this);\n    this.entryIdCounter.startTimer();\n  };\n  ContentTimeUpdateTimer.prototype.stopTimer = function () {\n    this.entryIdCounter.stopTimer();\n  };\n  ContentTimeUpdateTimer.prototype.onFulfilled = function () {\n    var generatorWrapper = this.setTimeoutWrapper.currentTime;\n    if (generatorWrapper !== this.getUserAgent()) {\n      this.tasks = generatorWrapper;\n      notifyContentTimeUpdate(this);\n    }\n  };\n  var notifyContentTimeUpdate = function (generatorWrapper) {\n    var value = {};\n    value.currentTime = generatorWrapper.getUserAgent();\n    enqueueMessage(generatorWrapper.isDone, \"contentTimeUpdate\", \"contentTimeUpdate\", value);\n  };\n  var supportsSrcdoc = isWebKit && \"srcdoc\" in createElement(document, \"IFRAME\");\n  var writeDocument = function (generatorWrapper, value) {\n    generatorWrapper.open(\"text/html\", \"replace\");\n    writeSafeHtmlToDocument(generatorWrapper, sanitizeInput(String(value)));\n    generatorWrapper.closeCache();\n  };\n  var allowedCssFunctions = {\n    rgb: true,\n    rgba: true,\n    alpha: true,\n    rect: true,\n    image: true,\n    \"linear-gradient\": true,\n    \"radial-gradient\": true,\n    \"repeating-linear-gradient\": true,\n    \"repeating-radial-gradient\": true,\n    \"cubic-bezier\": true,\n    matrix: true,\n    perspective: true,\n    rotate: true,\n    rotate3d: true,\n    rotatex: true,\n    rotatey: true,\n    steps: true,\n    rotatez: true,\n    scaleRectangle: true,\n    scale3d: true,\n    scalex: true,\n    scaley: true,\n    scalez: true,\n    skew: true,\n    skewx: true,\n    skewy: true,\n    translate: true,\n    translate3d: true,\n    translatex: true,\n    translatey: true,\n    translatez: true\n  };\n  var sanitizeCssValue = function (generatorWrapper) {\n    generatorWrapper = trimString(generatorWrapper);\n    if (generatorWrapper == \"\") {\n      return null;\n    }\n    var value = String(generatorWrapper.slice(0, 4)).toLowerCase();\n    if ((value > \"url(\" ? -1 : value == \"url(\" ? 0 : 1) == 0) {\n      return null;\n    }\n    if (generatorWrapper.indexOf(\"(\") > 0) {\n      if (/\"|'/.test(generatorWrapper)) {\n        return null;\n      }\n      value = /([\\-\\w]+)\\(/g;\n      for (var CustomMap; CustomMap = value.exec(generatorWrapper);) {\n        if (!(CustomMap[1].toLowerCase() in allowedCssFunctions)) {\n          return null;\n        }\n      }\n    }\n    return generatorWrapper;\n  };\n  function getPrototypeDescriptor(generatorWrapper, value) {\n    generatorWrapper = globalScope[generatorWrapper];\n    if (generatorWrapper && generatorWrapper.prototype) {\n      return (value = Object.getOwnPropertyDescriptor(generatorWrapper.prototype, value)) && value.get || null;\n    } else {\n      return null;\n    }\n  }\n  function getStyleDescriptor(generatorWrapper) {\n    var value = globalScope.CSSStyleDeclaration;\n    return value && value.prototype && value.prototype[generatorWrapper] || null;\n  }\n  if (!getPrototypeDescriptor(\"Element\", \"attributes\")) {\n    getPrototypeDescriptor(\"Node\", \"attributes\");\n  }\n  if (!getPrototypeDescriptor(\"Element\", \"innerHTML\")) {\n    getPrototypeDescriptor(\"HTMLElement\", \"innerHTML\");\n  }\n  getPrototypeDescriptor(\"Node\", \"nodeName\");\n  getPrototypeDescriptor(\"Node\", \"nodeType\");\n  getPrototypeDescriptor(\"Node\", \"parentNode\");\n  getPrototypeDescriptor(\"Node\", \"childNodes\");\n  if (!getPrototypeDescriptor(\"HTMLElement\", \"style\")) {\n    getPrototypeDescriptor(\"Element\", \"style\");\n  }\n  getPrototypeDescriptor(\"HTMLStyleElement\", \"sheet\");\n  var AdsManagerLoaderInteractionEvent = getStyleDescriptor(\"getPropertyValue\");\n  var AdsManagerLoaderProgressEvent = getStyleDescriptor(\"setProperty\");\n  if (!getPrototypeDescriptor(\"Element\", \"namespaceURI\")) {\n    getPrototypeDescriptor(\"Node\", \"namespaceURI\");\n  }\n  function invokeDescriptorMethod(generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper) {\n      return generatorWrapper.apply(value, findEntry);\n    }\n    if (isIE && document.documentMode < 10) {\n      if (!value[CustomMap].call) {\n        throw Error(\"IE Clobbering detected\");\n      }\n    } else if (typeof value[CustomMap] != \"function\") {\n      throw Error(\"Clobbering detected\");\n    }\n    return value[CustomMap].apply(value, findEntry);\n  }\n  var webkitSpecificStyles = {\n    \"-webkit-border-horizontal-spacing\": true,\n    \"-webkit-border-vertical-spacing\": true\n  };\n  var sanitizeStyle = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return emptySafeHTML;\n    }\n    var value = document.createElement(\"div\").style;\n    sanitizeCssText(generatorWrapper).forEach(function (CustomMap) {\n      var findEntry = isWebKit && CustomMap in webkitSpecificStyles ? CustomMap : CustomMap.replace(/^-(?:apple|css|epub|khtml|moz|mso?|o|rim|wap|webkit|xv)-(?=[a-z])/i, \"\");\n      if (findEntry.lastIndexOf(\"--\", 0) != 0 && findEntry.lastIndexOf(\"var\", 0) != 0) {\n        CustomMap = invokeDescriptorMethod(AdsManagerLoaderInteractionEvent, generatorWrapper, generatorWrapper.getPropertyValue ? \"getPropertyValue\" : \"getAttribute\", [CustomMap]) || \"\";\n        CustomMap = sanitizeCssValue(CustomMap);\n        if (CustomMap != null) {\n          invokeDescriptorMethod(AdsManagerLoaderProgressEvent, value, value.setProperty ? \"setProperty\" : \"setAttribute\", [findEntry, CustomMap]);\n        }\n      }\n    });\n    return new SafeHTML(value.cssText || \"\", safeHTMLMarker);\n  };\n  var sanitizeCssText = function (generatorWrapper) {\n    if (isArrayLike(generatorWrapper)) {\n      generatorWrapper = copyArray(generatorWrapper);\n    } else {\n      generatorWrapper = keysOfObject(generatorWrapper);\n      removeElement(generatorWrapper, \"cssText\");\n    }\n    return generatorWrapper;\n  };\n  var emptyStringArray = identityFunction([\"\"]);\n  var AdLoader = function (generatorWrapper, value, CustomMap) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = generatorWrapper;\n    this.handleAsync = value;\n    this.dispatchUnhandledRejection = CustomMap;\n    this.entryIdCounter = null;\n    this.handleThenable = \"\";\n    this.resolvePromise = createSafeStyleFromTemplate(emptyStringArray);\n    this.logError = 0;\n    this.isDone = this.slot = this.setTimeoutWrapper = null;\n    this.onFulfilled = \"\";\n  };\n  inheritPrototype(AdLoader, AdEnvironmentConfig);\n  AdLoader.prototype.initialize = function (generatorWrapper) {\n    this.onFulfilled = generatorWrapper;\n    generatorWrapper = \"about:blank\";\n    if (isIE) {\n      generatorWrapper = \"\";\n    }\n    this.setTimeoutWrapper = createElementWithOptionalClassesAndAttributes(\"IFRAME\", {\n      src: generatorWrapper,\n      allowtransparency: true,\n      background: \"transparent\",\n      title: \"Advertisement\"\n    });\n    applyStyleOrRemove(this.setTimeoutWrapper, {\n      display: \"none\",\n      width: \"0\",\n      height: \"0\"\n    });\n    generatorWrapper = this.tasks.Signed64;\n    generatorWrapper.appendChild(this.setTimeoutWrapper);\n    generatorWrapper = generatorWrapper.ownerDocument;\n    generatorWrapper = generatorWrapper.defaultView || generatorWrapper.parentWindow;\n    if (this.isDone == null) {\n      this.isDone = new EventDispatcher(this);\n    }\n    this.isDone.window(generatorWrapper, \"message\", this.handleThenable);\n    generatorWrapper = '<body><script src=\"//imasdk.googleapis.com/js/sdkloader/loader.js\">\\x3c/script><script>loader = new VPAIDLoader(false, \"' + (this.onFulfilled + '\");\\x3c/script></body>');\n    if (isIos || isAndroidBrowser || isEdge) {\n      var value = this.setTimeoutWrapper.contentWindow;\n      if (value) {\n        writeDocument(value.document, generatorWrapper);\n      }\n    } else {\n      value = this.setTimeoutWrapper;\n      if (supportsSrcdoc) {\n        generatorWrapper = sanitizeInput(generatorWrapper);\n        value.srcdoc = unwrapSafeHtml(generatorWrapper);\n      } else if (value = value.contentWindow) {\n        writeDocument(value.document, generatorWrapper);\n      }\n    }\n  };\n  AdLoader.prototype.handleThenable = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.entryIdCounter.data;\n      try {\n        var CustomMap = JSON.parse(value);\n      } catch (rejectFunction) {\n        return;\n      }\n      var findEntry = CustomMap.session;\n      if (findEntry != null && this.onFulfilled === findEntry) {\n        switch (CustomMap.type) {\n          case \"friendlyReady\":\n            var iterateEntries = getVideoElement(this);\n            if (iterateEntries != null) {\n              this.entryIdCounter = iterateEntries;\n              this.handleThenable = iterateEntries.currentSrc;\n              var createCircularNode = iterateEntries.style.cssText;\n              var entryIdCounter = document.implementation.createHTMLDocument(\"\").createElement(\"DIV\");\n              entryIdCounter.style.cssText = createCircularNode;\n              this.resolvePromise = sanitizeStyle(entryIdCounter.style);\n              this.logError = iterateEntries.currentTime;\n            } else {\n              var key = this.tasks.Signed64;\n              var value = \"border: 0; margin: 0; padding: 0; position: absolute; \";\n              var entry = this.tasks.getRectangleSize();\n              value += \"width:\" + entry.width + \"px;\";\n              value += \"height:\" + entry.height + \"px;\";\n              this.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"VIDEO\", {\n                style: value,\n                autoplay: true\n              });\n              key.appendChild(this.entryIdCounter);\n            }\n            var currentEntry = this.tasks.Signed64;\n            key = \"border: 0; margin: 0; padding: 0;position: absolute; \";\n            var foundEntry = getElementSizeIfVisible(this.entryIdCounter);\n            key += \"width:\" + foundEntry.width + \"px;\";\n            key += \"height:\" + foundEntry.height + \"px;\";\n            this.slot = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n              style: key\n            });\n            currentEntry.appendChild(this.slot);\n            try {\n              this.setTimeoutWrapper.contentWindow.loader.initFriendly(this.entryIdCounter, this.slot);\n            } catch (rejectFunction) {\n              sendAdLoaderError(this);\n            }\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"becameLinear\":\n            if (this.entryIdCounter && !isMobile() && !isTablet()) {\n              applyStyleOrRemove(this.entryIdCounter, {\n                visibility: \"visible\"\n              });\n            }\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"becameNonlinear\":\n            hideVideoElement(this);\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"startAd\":\n            currentEntry = {};\n            if (this.entryIdCounter) {\n              value = this.entryIdCounter.paused;\n              var resolveFunction = this.entryIdCounter.currentTime > 0;\n              if (resolveFunction && !value) {\n                currentEntry.apl = \"1\";\n              } else {\n                currentEntry.apl = \"0\";\n              }\n              if (value) {\n                currentEntry.ip = \"1\";\n              } else {\n                currentEntry.ip = \"0\";\n              }\n              if (resolveFunction) {\n                currentEntry.iavp = \"1\";\n              } else {\n                currentEntry.iavp = \"0\";\n              }\n            } else {\n              currentEntry.apl = \"n\";\n            }\n            markAsCompleted.getAdInstance().report(99, currentEntry);\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            this.writeVarint();\n            break;\n          default:\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n        }\n      }\n    } catch (rejectFunction) {\n      sendAdLoaderError(this);\n    }\n  };\n  var sendAdLoaderError = function (generatorWrapper) {\n    var value = {\n      type: \"error\"\n    };\n    value.session = generatorWrapper.onFulfilled;\n    value = JSON.stringify(value);\n    generatorWrapper.sendPostMessage(value);\n  };\n  AdLoader.prototype.sendPostMessage = function (generatorWrapper) {\n    window.sendPostMessage(generatorWrapper, \"*\");\n  };\n  var getVideoElement = function (generatorWrapper) {\n    return (generatorWrapper.dispatchUnhandledRejection === \"videoDisplayUnknown\" ? generatorWrapper.tasks.identityFunction : generatorWrapper.tasks.convertStringToInt64.get(generatorWrapper.dispatchUnhandledRejection)).tryCall.entryIdCounter;\n  };\n  AdLoader.prototype.writeVarint = function () {\n    if (getVideoElement(this) != null) {\n      this.tasks.writeVarint();\n    }\n  };\n  var hideVideoElement = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter && !isMobile() && !isTablet()) {\n      applyStyleOrRemove(generatorWrapper.entryIdCounter, {\n        visibility: \"hidden\"\n      });\n    }\n  };\n  AdLoader.prototype.getAdEnvironment = function () {\n    markAsCompletedWrapper(this.isDone);\n    this.isDone = null;\n    removeElement(this.slot);\n    this.slot = null;\n    removeElement(this.setTimeoutWrapper);\n    this.setTimeoutWrapper = null;\n    var generatorWrapper = getVideoElement(this);\n    if (generatorWrapper != null) {\n      var value = this.resolvePromise;\n      if (value instanceof SafeHTML && value.constructor === SafeHTML) {\n        generatorWrapper.style.cssText = value.entryIdCounter;\n      } else {\n        generatorWrapper.style.cssText = \"type_error:SafeStyle\";\n      }\n      if (isMobile() || isTablet()) {\n        generatorWrapper.src = this.handleThenable;\n        generatorWrapper.currentTime = this.logError;\n      } else {\n        generatorWrapper.removeAttribute(\"src\");\n        this.tasks.endsWith();\n      }\n    } else {\n      removeElement(this.entryIdCounter);\n      this.entryIdCounter = null;\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var VpaidEventManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = new Map();\n  };\n  inheritPrototype(VpaidEventManager, tryCall);\n  var handleVpaidEvent = function (generatorWrapper, value) {\n    try {\n      var CustomMap = value.setPrototypeOfPolyfill;\n      var findEntry = CustomMap.session;\n      switch (CustomMap.vpaidEventType) {\n        case \"createFriendlyIframe\":\n          value = \"videoDisplayUnknown\";\n          if (CustomMap.videoDisplayName) {\n            value = CustomMap.videoDisplayName;\n          }\n          var iterateEntries = CustomMap.session;\n          var createCircularNode = new AdLoader(generatorWrapper.tasks, generatorWrapper.setTimeoutWrapper, value);\n          generatorWrapper.entryIdCounter.set(iterateEntries, createCircularNode);\n          createCircularNode.initialize(iterateEntries);\n          break;\n        case \"vpaidNonLinear\":\n          var entryIdCounter = generatorWrapper.entryIdCounter.get(findEntry);\n          if (entryIdCounter) {\n            hideVideoElement(entryIdCounter);\n          }\n          break;\n        case \"destroyFriendlyIframe\":\n          var key = generatorWrapper.entryIdCounter.get(findEntry);\n          if (key) {\n            key.markAsCompleted();\n            generatorWrapper.entryIdCounter.delete(findEntry);\n          }\n      }\n    } catch (value) {\n      markAsCompleted.getAdInstance().report(125, {\n        msg: value.message\n      });\n    }\n  };\n  VpaidEventManager.prototype.getAdEnvironment = function () {\n    this.entryIdCounter.forEach(function (generatorWrapper) {\n      generatorWrapper.markAsCompleted();\n    });\n  };\n  var AdConfiguration = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdConfiguration, AdElement);\n  AdConfiguration.prototype.getAdStateValue = function () {\n    return dispatchUnhandledRejection(this, 1);\n  };\n  AdConfiguration.prototype.getAdManifestVersion = function () {\n    return getAdPropertyNumeric(this, 5);\n  };\n  var AdsManagerLoaderViewModeChangedEvent = parseAndValidateArray(AdConfiguration);\n  var AdCookieManager = function () {\n    this.entryIdCounter = window;\n    this.tasks = 0;\n  };\n  var checkAdCookie = function (generatorWrapper, value) {\n    if (generatorWrapper.tasks === 0) {\n      if (value && evaluateCondition(\"__gads\", value, generatorWrapper.entryIdCounter)) {\n        value = true;\n      } else {\n        var CustomMap = generatorWrapper.entryIdCounter;\n        if (getBooleanAdProperty(value, 5)) {\n          setCookieValue(\"GoogleAdServingTest\", \"Good\", undefined, CustomMap);\n        }\n        if (CustomMap = evaluateCondition(\"GoogleAdServingTest\", value, generatorWrapper.entryIdCounter) === \"Good\") {\n          var findEntry = generatorWrapper.entryIdCounter;\n          if (getBooleanAdProperty(value, 5) && findEntry.origin !== \"null\") {\n            new CookieManager(findEntry.document).removeElement(\"GoogleAdServingTest\", undefined, undefined);\n          }\n        }\n        value = CustomMap;\n      }\n      if (value) {\n        generatorWrapper.tasks = 2;\n      } else {\n        generatorWrapper.tasks = 1;\n      }\n    }\n    return generatorWrapper.tasks === 2;\n  };\n  var setAdCookie = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (findEntry) {\n      var iterateEntries = getAdPropertyFallbackNumeric(CustomMap, 2) - Date.now() / 1000;\n      iterateEntries = {\n        lowOrderInteger: Math.max(iterateEntries, 0),\n        path: dispatchUnhandledRejection(CustomMap, 3),\n        domain: dispatchUnhandledRejection(CustomMap, 4),\n        transformElementContent: false\n      };\n      CustomMap = CustomMap.getAdStateValue();\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      if (getBooleanAdProperty(findEntry, 5)) {\n        setCookieValue(value, CustomMap, iterateEntries, generatorWrapper);\n      }\n    }\n  };\n  var processAdCookie = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap && evaluateCondition(value, CustomMap, generatorWrapper.entryIdCounter)) {\n      var findEntry = generatorWrapper.entryIdCounter.location.hostname;\n      if (findEntry === \"localhost\") {\n        findEntry = [\"localhost\"];\n      } else {\n        findEntry = findEntry.split(\".\");\n        if (findEntry.length < 2) {\n          findEntry = [];\n        } else {\n          for (var iterateEntries = [], createCircularNode = 0; createCircularNode < findEntry.length - 1; ++createCircularNode) {\n            iterateEntries.push(findEntry.slice(createCircularNode).join(\".\"));\n          }\n          findEntry = iterateEntries;\n        }\n      }\n      findEntry = getIterator(findEntry);\n      for (var entryIdCounter = findEntry.next(); !entryIdCounter.done; entryIdCounter = findEntry.next()) {\n        iterateEntries = value;\n        createCircularNode = generatorWrapper.entryIdCounter;\n        entryIdCounter = entryIdCounter.value;\n        if (getBooleanAdProperty(CustomMap, 5) && createCircularNode.origin !== \"null\") {\n          new CookieManager(createCircularNode.document).removeElement(iterateEntries, \"/\", entryIdCounter);\n        }\n      }\n    }\n  };\n  var SimpleSet = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  setTimeoutWrapper = SimpleSet.prototype;\n  setTimeoutWrapper.isEmpty = function () {\n    return this.entryIdCounter.length === 0 && this.tasks.length === 0;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  setTimeoutWrapper.rectangleContains = function (generatorWrapper) {\n    return containsElement(this.entryIdCounter, generatorWrapper) || containsElement(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.removeElement = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    value: {\n      var CustomMap = value.length - 1;\n      if (CustomMap < 0) {\n        CustomMap = Math.max(0, value.length + CustomMap);\n      }\n      if (typeof value === \"string\") {\n        if (typeof generatorWrapper !== \"string\" || generatorWrapper.length != 1) {\n          CustomMap = -1;\n        } else {\n          CustomMap = value.lastIndexOf(generatorWrapper, CustomMap);\n        }\n      } else {\n        for (; CustomMap >= 0; CustomMap--) {\n          if (CustomMap in value && value[CustomMap] === generatorWrapper) {\n            break value;\n          }\n        }\n        CustomMap = -1;\n      }\n    }\n    if (CustomMap >= 0) {\n      removeElementAtIndex(value, CustomMap);\n      value = true;\n    } else {\n      value = false;\n    }\n    return value || removeElement(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.hasPlatform = function () {\n    for (var generatorWrapper = [], value = this.entryIdCounter.length - 1; value >= 0; --value) {\n      generatorWrapper.push(this.entryIdCounter[value]);\n    }\n    var CustomMap = this.tasks.length;\n    for (value = 0; value < CustomMap; ++value) {\n      generatorWrapper.push(this.tasks[value]);\n    }\n    return generatorWrapper;\n  };\n  var zone = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key) {\n    AdEnvironmentConfig.call(this);\n    var value = this;\n    this.resolvePromise = generatorWrapper;\n    this.entryIdCounter = value;\n    this.adTagUrl = CustomMap;\n    this.toArray = findEntry;\n    this.isObjectOrFunction = iterateEntries;\n    this.dispatchUnhandledRejection = entryIdCounter;\n    this.isArrayLike = key;\n    this.handleAsync = new AdDisplayOptions();\n    this.handleThenable = false;\n    this.volume = 1;\n    this.toArray = findEntry;\n    this.definePropertyPolyfill = -1;\n    this.onFulfilled = this.setTimeoutWrapper = this.tasks = null;\n    this.isDone = new ContentTimeUpdateTimer({\n      currentTime: 0\n    }, this.dispatchUnhandledRejection);\n    this.handleThenable = new SimpleSet();\n    this.assignPolyfill = this.totalAdBufferingTime = false;\n    this.year = new Map();\n    this.createIterator = this.wrapGeneratorToPromise = false;\n    this.sliceArguments = new VpaidEventManager(value, entryIdCounter);\n    registerDisposable(this, this.sliceArguments);\n    this.logError = createCircularNode && this.entryIdCounter.handleAsync != null;\n    this.tryCall = function () {\n      var entry = value.entryIdCounter.identityFunction;\n      var currentEntry = entry.getCurrentTime();\n      entry = entry.getDuration();\n      return {\n        currentTime: currentEntry,\n        duration: entry,\n        isPlaying: true,\n        volume: value.volume\n      };\n    };\n    this.updateMaxSize = new EventDispatcher(this);\n    this.updateMaxSize.window(this.dispatchUnhandledRejection, \"adsManager\", this.isSafari);\n  };\n  inheritPrototype(zone, AdEnvironmentConfig);\n  zone.prototype.isSafari = function (generatorWrapper) {\n    var value = this;\n    var CustomMap = generatorWrapper.messageType;\n    var findEntry = generatorWrapper.setPrototypeOfPolyfill;\n    var iterateEntries = {};\n    switch (CustomMap) {\n      case \"error\":\n        CJ(this);\n        DJ(this, findEntry);\n        break;\n      case \"contentPauseRequested\":\n        markAsCompleted.getAdInstance().report(130);\n        EJ(this);\n        this.isDone.stopTimer();\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"contentResumeRequested\":\n        GJ(this, function () {\n          dispatchAdEvent(value, CustomMap, findEntry);\n        });\n        break;\n      case \"remainingTime\":\n        this.definePropertyPolyfill = findEntry.remainingTime;\n        break;\n      case \"skip\":\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"log\":\n        dispatchAdEvent(this, CustomMap, findEntry, findEntry.logData);\n        break;\n      case \"companionBackfill\":\n        generatorWrapper = getFromGlobalScope(\"window.google_show_companion_ad\");\n        if (generatorWrapper != null) {\n          generatorWrapper();\n        }\n        break;\n      case \"skipShown\":\n        this.handleThenable = true;\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"interaction\":\n        dispatchAdEvent(this, CustomMap, findEntry, findEntry.interactionData);\n        break;\n      case \"vpaidEvent\":\n        handleVpaidEvent(this.sliceArguments, generatorWrapper);\n        break;\n      case \"skippableStateChanged\":\n        iterateEntries = findEntry.adData;\n        if (iterateEntries.skippable != null) {\n          this.handleThenable = iterateEntries.skippable;\n        }\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"volumeChange\":\n        iterateEntries = findEntry.adData;\n        if (iterateEntries != null && typeof iterateEntries.volume === \"number\") {\n          this.volume = iterateEntries.volume;\n        }\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"firstQuartile\":\n        dispatchAdEvent(this, defineAdEventTypes.firstQuartile, findEntry);\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"thirdQuartile\":\n        dispatchAdEvent(this, defineAdEventTypes.thirdQuartile, findEntry);\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"updateGfpCookie\":\n        HJ(this, findEntry);\n        break;\n      default:\n        dispatchAdEvent(this, CustomMap, findEntry);\n    }\n  };\n  var dispatchAdEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (CustomMap.companions == null) {\n      var iterateEntries = generatorWrapper.year.get(CustomMap.adId);\n      if (iterateEntries != null) {\n        CustomMap.companions = iterateEntries;\n      } else {\n        CustomMap.companions = [];\n      }\n    }\n    var createCircularNode = CustomMap.adData;\n    if (iterateEntries = createCircularNode == null ? null : new year(createCircularNode)) {\n      generatorWrapper.tasks = iterateEntries;\n    }\n    switch (value) {\n      case \"adBreakReady\":\n      case \"mediaUrlPinged\":\n        value = new AdEvent(value, null, CustomMap);\n        break;\n      case \"adMetadata\":\n        value = null;\n        if (CustomMap.adCuePoints != null) {\n          value = new CuePoints(CustomMap.adCuePoints);\n        }\n        value = new AdMetadataEvent(iterateEntries, value);\n        break;\n      case \"allAdsCompleted\":\n        generatorWrapper.tasks = null;\n        generatorWrapper.wrapGeneratorToPromise = true;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"contentPauseRequested\":\n        generatorWrapper.createIterator = false;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"contentResumeRequested\":\n        generatorWrapper.tasks = null;\n        generatorWrapper.createIterator = true;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"loaded\":\n        generatorWrapper.definePropertyPolyfill = iterateEntries.getDuration();\n        generatorWrapper.handleThenable = false;\n        if (isOnScreenDetectionEnabled()) {\n          findEntry = generatorWrapper.resolvePromise;\n          CustomMap = generatorWrapper.isObjectOrFunction;\n          findEntry.tasks.set(getAdQueryId(iterateEntries), generatorWrapper.tryCall);\n          if (isInitialized(findEntry)) {\n            calculateViewabilityData(findEntry, \"loaded\", getAdQueryId(iterateEntries), CustomMap);\n          }\n        }\n        value = new AdEvent(value, iterateEntries, createCircularNode);\n        break;\n      case \"start\":\n        generatorWrapper.year.set(CustomMap.adId, CustomMap.companions);\n        if (generatorWrapper.entryIdCounter.findLastElement() != null) {\n          if (generatorWrapper.setTimeoutWrapper == null) {\n            generatorWrapper.setTimeoutWrapper = new EventController();\n            generatorWrapper.updateMaxSize.window(generatorWrapper.setTimeoutWrapper, \"click\", generatorWrapper.ErrorLogger);\n          } else {\n            resetEventController(generatorWrapper.setTimeoutWrapper);\n          }\n          initializeEventController(generatorWrapper.setTimeoutWrapper, generatorWrapper.entryIdCounter.findLastElement());\n        }\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"complete\":\n        if (generatorWrapper.setTimeoutWrapper != null) {\n          resetEventController(generatorWrapper.setTimeoutWrapper);\n        }\n        if (isOnScreenDetectionEnabled()) {\n          unregisterElement(generatorWrapper.resolvePromise, generatorWrapper.tryCall, getAdQueryId(iterateEntries));\n        }\n        generatorWrapper.tasks = null;\n        generatorWrapper.year.delete(CustomMap.adId);\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"log\":\n        CustomMap = null;\n        if (findEntry != null && findEntry.type != null) {\n          createCircularNode = findEntry.type;\n          createCircularNode = createCircularNode === \"adLoadError\" || createCircularNode === \"adPlayError\";\n        } else {\n          createCircularNode = false;\n        }\n        if (createCircularNode) {\n          CustomMap = {\n            adError: new AdError(findEntry)\n          };\n        }\n        value = new AdEvent(value, iterateEntries, CustomMap);\n        break;\n      case \"interaction\":\n        value = new AdEvent(value, iterateEntries, findEntry);\n        break;\n      case \"adProgress\":\n        value = new AdEvent(value, iterateEntries, new AdBreakData(CustomMap));\n        break;\n      default:\n        value = new AdEvent(value, iterateEntries);\n    }\n    generatorWrapper.dispatchEvent(value);\n    if (generatorWrapper.wrapGeneratorToPromise && generatorWrapper.createIterator) {\n      generatorWrapper.destroy();\n    }\n  };\n  var DJ = function (generatorWrapper, value) {\n    var CustomMap = new AdErrorEvent(new AdError(value));\n    if (generatorWrapper.totalAdBufferingTime) {\n      generatorWrapper.dispatchEvent(CustomMap);\n      if (isOnScreenDetectionEnabled() && generatorWrapper.tasks) {\n        unregisterElement(generatorWrapper.resolvePromise, generatorWrapper.tryCall, getAdQueryId(generatorWrapper.tasks));\n      }\n      generatorWrapper.tasks = null;\n    } else {\n      generatorWrapper.handleThenable.tasks.push(CustomMap);\n    }\n    generatorWrapper = {\n      hasError: value.errorCode,\n      vis: getVisibilityStateCode(document)\n    };\n    markAsCompleted.getAdInstance().report(7, generatorWrapper);\n  };\n  var triggerEvent = function (generatorWrapper, value, CustomMap) {\n    enqueueMessage(generatorWrapper.dispatchUnhandledRejection, \"adsManager\", value, CustomMap);\n  };\n  var GJ = function (generatorWrapper, value) {\n    markAsCompleted.getAdInstance().report(131);\n    CJ(generatorWrapper, value);\n    if (!generatorWrapper.handleIteratorResult()) {\n      generatorWrapper.isDone.startTimer();\n    }\n  };\n  var EJ = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && value.ensureString != null) {\n      value.ensureString();\n    }\n  };\n  var CJ = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && CustomMap.isIphone != null) {\n      CustomMap.isIphone(value);\n    } else if (value) {\n      value();\n    }\n  };\n  setTimeoutWrapper = zone.prototype;\n  setTimeoutWrapper.configureAdsManager = function (generatorWrapper, value) {\n    this.onFulfilled = generatorWrapper;\n    if (generatorWrapper.currentTime != null) {\n      this.isDone = new ContentTimeUpdateTimer(generatorWrapper, this.dispatchUnhandledRejection);\n      this.isDone.startTimer();\n    }\n    if (value != null) {\n      this.handleAsync = JJ(value);\n    }\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (this.handleThenable.isEmpty()) {\n      var iterateEntries = this.entryIdCounter;\n      var createCircularNode = null;\n      if (iterateEntries.tasks && findEntry == null) {\n        createCircularNode = {\n          customProperty3: \"setnull\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks === findEntry) {\n        createCircularNode = {\n          customProperty3: \"match\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks !== findEntry) {\n        createCircularNode = isCustomPlaybackAllowed(findEntry || null);\n        var entryIdCounter = hasPlaysInlineAttribute(findEntry || null);\n        createCircularNode = {\n          customProperty3: \"diff\",\n          isWebKit: iterateEntries.tryCall,\n          isGecko: createCircularNode,\n          getParentFrame: iterateEntries.handleThenable,\n          isAccessibleFrame: entryIdCounter\n        };\n      }\n      if (!iterateEntries.tasks && findEntry) {\n        createCircularNode = {\n          customProperty3: \"new\"\n        };\n      }\n      if (createCircularNode) {\n        createCircularNode.custVid = iterateEntries.logError;\n        markAsCompleted.getAdInstance().report(93, createCircularNode);\n      }\n      if (findEntry != null) {\n        iterateEntries.settlePromise = hasPlaysInlineAttribute(findEntry);\n        if (shouldUseCustomPlayback(iterateEntries.settlePromise)) {\n          iterateEntries.resolvePromise = true;\n          markAsCompletedWrapper(iterateEntries.entryIdCounter);\n          markAsCompletedWrapper(iterateEntries.setTimeoutWrapper);\n          markAsCompletedWrapper(iterateEntries.getGeneratorException);\n          iterateEntries.entryIdCounter = null;\n          iterateEntries.setTimeoutWrapper = null;\n          iterateEntries.getGeneratorException = null;\n          markAsCompletedWrapper(iterateEntries.identityFunction);\n          iterateEntries.identityFunction = new VideoPlayer(findEntry);\n          if (typeof findEntry.getBoundingClientRect !== \"function\") {\n            iterateEntries.onFulfilled = iterateEntries.createDeferred;\n            imaSdkInstanceSingleton.setTimeoutWrapper = iterateEntries.onFulfilled;\n          } else {\n            iterateEntries.onFulfilled = findEntry;\n          }\n          iterateEntries.isDone.isIpad(iterateEntries.identityFunction);\n        }\n      }\n      this.totalAdBufferingTime = true;\n      this.resize(generatorWrapper, value, CustomMap);\n      findEntry = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      iterateEntries = {};\n      generatorWrapper = (iterateEntries.adsRenderingSettings = findEntry, iterateEntries.width = generatorWrapper, iterateEntries.height = value, iterateEntries.viewMode = CustomMap, iterateEntries);\n      triggerEvent(this, \"init\", generatorWrapper);\n    } else {\n      for (; !this.handleThenable.isEmpty();) {\n        value = generatorWrapper = this.handleThenable;\n        if (value.entryIdCounter.length === 0) {\n          value.entryIdCounter = value.tasks;\n          value.entryIdCounter.reverse();\n          value.tasks = [];\n        }\n        generatorWrapper = generatorWrapper.entryIdCounter.pop();\n        this.dispatchEvent(generatorWrapper);\n      }\n      this.markAsCompleted();\n    }\n  };\n  setTimeoutWrapper.isCustomPlaybackUsed = function () {\n    return isCustomElementSupported(this.entryIdCounter);\n  };\n  setTimeoutWrapper.isCustomClickTrackingUsed = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.getRemainingTime = function () {\n    return this.definePropertyPolyfill;\n  };\n  setTimeoutWrapper.getAdSkippableState = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.discardAdBreak = function () {\n    triggerEvent(this, \"discardAdBreak\");\n  };\n  setTimeoutWrapper.updateAdsRenderingSettings = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      generatorWrapper = JJ(generatorWrapper);\n      var value = this.handleAsync.preferredBitrate;\n      var CustomMap = generatorWrapper.preferredBitrate;\n      markAsCompleted.getAdInstance().report(96, {\n        initialize: this.totalAdBufferingTime ? \"1\" : \"0\",\n        startTimer: this.assignPolyfill ? \"1\" : \"0\",\n        old: value,\n        new: CustomMap,\n        changed: value !== CustomMap ? \"1\" : \"0\"\n      });\n      this.handleAsync = generatorWrapper;\n      generatorWrapper = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      value = {};\n      generatorWrapper = (value.adsRenderingSettings = generatorWrapper, value);\n      triggerEvent(this, \"updateAdsRenderingSettings\", generatorWrapper);\n    }\n  };\n  setTimeoutWrapper.skip = function () {\n    triggerEvent(this, \"skip\");\n  };\n  setTimeoutWrapper.startTimer = function () {\n    if (this.adTagUrl) {\n      if (isIphone || isIpod) {\n        markAsCompleted.getAdInstance().report(50, {\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (!this.entryIdCounter.Generator()) {\n        markAsCompleted.getAdInstance().report(26, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (isElementNotDisplayedOrHidden(this.entryIdCounter.createDeferred)) {\n        markAsCompleted.getAdInstance().report(30, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      var CustomMap;\n      var generatorWrapper = this.entryIdCounter.handleAsync;\n      var value = this.entryIdCounter.createDeferred;\n      if (CustomMap = generatorWrapper && value && !isElementNotDisplayedOrHidden(generatorWrapper)) {\n        generatorWrapper = getElementPosition(generatorWrapper);\n        value = getElementPosition(value);\n        CustomMap = generatorWrapper.width > 0 && generatorWrapper.height > 0 && value.width > 0 && value.height > 0 && generatorWrapper.left <= value.left + value.width && value.left <= generatorWrapper.left + generatorWrapper.width && generatorWrapper.top <= value.top + value.height && value.top <= generatorWrapper.top + generatorWrapper.height;\n      }\n      value = CustomMap;\n      markAsCompleted.getAdInstance().report(31, {\n        adtagurl: this.adTagUrl,\n        customPlayback: isCustomElementSupported(this.entryIdCounter),\n        covers: value\n      });\n    }\n    if (!this.entryIdCounter.Generator() && !isCustomElementSupported(this.entryIdCounter)) {\n      throw createAdPlayError(errorType);\n    }\n    value = this.entryIdCounter;\n    value.handleThenable = this.logError && value.handleAsync != null;\n    this.entryIdCounter.isDone.entryIdCounter.style.opacity = \"1\";\n    if (this.onFulfilled != null && this.getVolume() === 1) {\n      var findEntry, iterateEntries;\n      if (typeof ((findEntry = this.onFulfilled) == null ? undefined : findEntry.muted) === \"boolean\" && ((iterateEntries = this.onFulfilled) == null ? 0 : iterateEntries.muted)) {\n        this.setVolume(0);\n      } else {\n        var createCircularNode;\n        if (typeof ((createCircularNode = this.onFulfilled) == null ? undefined : createCircularNode.volume) === \"number\") {\n          var entryIdCounter;\n          if ((entryIdCounter = this.onFulfilled) == null) {\n            findEntry = undefined;\n          } else {\n         "