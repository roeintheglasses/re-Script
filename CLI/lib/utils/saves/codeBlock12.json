"r.onFulfilled);\n      generatorWrapper.entryIdCounter = calculateViewportSize(true, window, generatorWrapper.onFulfilled);\n      updateViewportSize(generatorWrapper, window);\n      updateScreenSize(generatorWrapper, window);\n    }\n  };\n  var isAdPlayingOrMuted = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    if (generatorWrapper.isDone > 0 || generatorWrapper.executeCallbacks) {\n      return true;\n    }\n    generatorWrapper = GetEnvironment().tasks.isAdVisible();\n    var value = getVisibilityStateCode(document) === 0;\n    return generatorWrapper || value;\n  };\n  var getAdEnvironmentInstance = function () {\n    return getSingletonInstance(EnvironmentDetails);\n  };\n  var AdSampling = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = 0;\n    this.entryIdCounter = null;\n  };\n  AdSampling.prototype.cancel = function () {\n    GetEnvironment().clearTimeout(this.entryIdCounter);\n    this.entryIdCounter = null;\n  };\n  var startAdSampling = function (generatorWrapper) {\n    var value = GetEnvironment();\n    var CustomMap = getAdEnvironment().entryIdCounter.entryIdCounter;\n    generatorWrapper.entryIdCounter = value.setTimeout(MonitorFunction(CustomMap, To(143, function () {\n      generatorWrapper.tasks++;\n      generatorWrapper.setTimeoutWrapper.performSample();\n    })), bp());\n  };\n  var AdController = function (generatorWrapper, value, CustomMap) {\n    this.setTimeoutWrapper = generatorWrapper;\n    if (undefined === CustomMap) {\n      this.assignPolyfill = \"na\";\n    } else {\n      this.assignPolyfill = CustomMap;\n    }\n    this.handleAsync = [];\n    this.Generator = false;\n    this.createDeferred = new AdEvent(-1, true, this);\n    this.entryIdCounter = this;\n    this.executeCallbacks = value;\n    this.resolvePromise = this.dispatchUnhandledRejection = false;\n    this.year = \"uk\";\n    this.tryCall = false;\n    this.onFulfilled = true;\n  };\n  AdController.prototype.handleThenable = function () {\n    return false;\n  };\n  AdController.prototype.initializeMraid = function () {\n    return this.Generator = true;\n  };\n  AdController.prototype.isChromiumBased = function () {\n    return this.entryIdCounter.year;\n  };\n  AdController.prototype.removeElement = function () {\n    return this.entryIdCounter.resolvePromise;\n  };\n  var activateAdController = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.resolvePromise || (undefined === CustomMap ? 0 : CustomMap)) {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.year = value;\n      generatorWrapper.executeCallbacks = 0;\n      if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n        updateAdComponents(generatorWrapper);\n      }\n    }\n  };\n  AdController.prototype.getAdName = function () {\n    return this.entryIdCounter.assignPolyfill;\n  };\n  AdController.prototype.encodeString = function () {\n    return this.entryIdCounter.createIterator();\n  };\n  AdController.prototype.createIterator = function () {\n    return {};\n  };\n  AdController.prototype.uniqueIdProperty = function () {\n    return this.entryIdCounter.executeCallbacks;\n  };\n  var registerAdComponent = function (generatorWrapper, value) {\n    if (!containsElement(generatorWrapper.handleAsync, value)) {\n      generatorWrapper.handleAsync.push(value);\n      value.isAndroid(generatorWrapper.entryIdCounter);\n      value.deferError(generatorWrapper.createDeferred);\n      if (value.getClosureFlagValue()) {\n        generatorWrapper.dispatchUnhandledRejection = true;\n      }\n    }\n  };\n  AdController.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    generatorWrapper.entryIdCounter = calculateViewportSize(true, this.setTimeoutWrapper, generatorWrapper.onFulfilled);\n  };\n  AdController.prototype.totalAdBufferingTime = function () {\n    updateScreenSize(getAdEnvironmentInstance(), this.setTimeoutWrapper);\n  };\n  AdController.prototype.definePropertyPolyfill = function () {\n    return this.createDeferred.entryIdCounter;\n  };\n  var refreshAdEnvironment = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    generatorWrapper.totalAdBufferingTime();\n    generatorWrapper.updateMaxSize();\n    var value = getAdEnvironmentInstance();\n    value.settlePromise = calculateViewportSize(false, generatorWrapper.setTimeoutWrapper, value.onFulfilled);\n    updateViewportSize(getAdEnvironmentInstance(), generatorWrapper.setTimeoutWrapper);\n    generatorWrapper.createDeferred.entryIdCounter = generatorWrapper.definePropertyPolyfill();\n  };\n  AdController.prototype.performSample = function () {};\n  AdController.prototype.isActive = function () {\n    return this.entryIdCounter.onFulfilled;\n  };\n  var checkAdComponentsActive = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync.length) {\n      generatorWrapper.dispatchUnhandledRejection = someElement(generatorWrapper.handleAsync, function (value) {\n        return value.getClosureFlagValue();\n      });\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = false;\n    }\n  };\n  var notifyAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.deferError(generatorWrapper.createDeferred);\n    });\n  };\n  var updateAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.isAndroid(generatorWrapper.entryIdCounter);\n    });\n    if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n      notifyAdComponents(generatorWrapper);\n    }\n  };\n  setTimeoutWrapper = AdController.prototype;\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper.uniqueIdProperty() >= this.executeCallbacks) {\n      this.entryIdCounter = generatorWrapper;\n    } else {\n      this.entryIdCounter = this;\n    }\n    if (value !== this.entryIdCounter) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    } else if (this.onFulfilled !== this.entryIdCounter.onFulfilled) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    }\n  };\n  setTimeoutWrapper.deferError = function (generatorWrapper) {\n    if (generatorWrapper.tasks === this.entryIdCounter) {\n      var value = this.createDeferred;\n      var CustomMap = this.dispatchUnhandledRejection;\n      if (CustomMap = generatorWrapper && (undefined === CustomMap || !CustomMap || value.volume == generatorWrapper.volume) && value.setTimeoutWrapper == generatorWrapper.setTimeoutWrapper) {\n        value = value.entryIdCounter;\n        CustomMap = generatorWrapper.entryIdCounter;\n        if (value == CustomMap) {\n          CustomMap = true;\n        } else if (value && CustomMap) {\n          CustomMap = value.top == CustomMap.top && value.right == CustomMap.right && value.bottom == CustomMap.bottom && value.left == CustomMap.left;\n        } else {\n          CustomMap = false;\n        }\n      }\n      this.createDeferred = generatorWrapper;\n      if (!CustomMap) {\n        notifyAdComponents(this);\n      }\n    }\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.tryCall = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.tryCall;\n  };\n  var AdComponent = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new handleThenable(0, 0, 0, 0);\n    this.tasks = value;\n    this.AdEnvironmentConfig = CustomMap;\n    this.resolvePromise = findEntry;\n    this.handleThenable = false;\n    this.timestamp = -1;\n    this.settlePromise = new AdTracker(value.createDeferred, this.entryIdCounter, new handleThenable(0, 0, 0, 0), 0, 0, accumulatePosition(), 0);\n  };\n  setTimeoutWrapper = AdComponent.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    return true;\n  };\n  setTimeoutWrapper.isOpera = function () {};\n  setTimeoutWrapper.markAsCompleted = function () {\n    if (!this.handleIteratorResult()) {\n      var generatorWrapper = this.tasks;\n      removeElement(generatorWrapper.handleAsync, this);\n      if (generatorWrapper.dispatchUnhandledRejection && this.getClosureFlagValue()) {\n        checkAdComponentsActive(generatorWrapper);\n      }\n      this.isOpera();\n      this.handleThenable = true;\n    }\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.encodeString = function () {\n    return this.tasks.encodeString();\n  };\n  setTimeoutWrapper.uniqueIdProperty = function () {\n    return this.tasks.uniqueIdProperty();\n  };\n  setTimeoutWrapper.isChromiumBased = function () {\n    return this.tasks.isChromiumBased();\n  };\n  setTimeoutWrapper.removeElement = function () {\n    return this.tasks.removeElement();\n  };\n  setTimeoutWrapper.isAndroid = function () {};\n  setTimeoutWrapper.deferError = function () {\n    this.CustomError();\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.resolvePromise;\n  };\n  var AdCreator = function (generatorWrapper) {\n    this.handleAsync = false;\n    this.entryIdCounter = generatorWrapper;\n    this.createDeferred = function () {};\n  };\n  setTimeoutWrapper = AdCreator.prototype;\n  setTimeoutWrapper.uniqueIdProperty = function () {\n    return this.entryIdCounter.uniqueIdProperty();\n  };\n  setTimeoutWrapper.isChromiumBased = function () {\n    return this.entryIdCounter.isChromiumBased();\n  };\n  setTimeoutWrapper.removeElement = function () {\n    return this.entryIdCounter.removeElement();\n  };\n  setTimeoutWrapper.create = function (generatorWrapper, value, CustomMap) {\n    var findEntry = null;\n    if (this.entryIdCounter) {\n      findEntry = this.isIE(generatorWrapper, value, CustomMap);\n      registerAdComponent(this.entryIdCounter, findEntry);\n    }\n    return findEntry;\n  };\n  setTimeoutWrapper.isPositiveInt64 = function () {\n    return this.checkIntersectionObserverSupport();\n  };\n  setTimeoutWrapper.checkIntersectionObserverSupport = function () {\n    return false;\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper) {\n    if (this.entryIdCounter.initializeMraid()) {\n      registerAdComponent(this.entryIdCounter, this);\n      this.createDeferred = generatorWrapper;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    if (generatorWrapper.uniqueIdProperty() == 0) {\n      this.createDeferred(generatorWrapper.isChromiumBased(), this);\n    }\n  };\n  setTimeoutWrapper.deferError = function () {};\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return false;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.handleAsync = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.handleAsync;\n  };\n  setTimeoutWrapper.encodeString = function () {\n    return {};\n  };\n  var AdParameters = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      this.setTimeoutWrapper = 0;\n    } else {\n      this.setTimeoutWrapper = CustomMap;\n    }\n    this.tasks = generatorWrapper;\n    if (value == null) {\n      this.entryIdCounter = \"\";\n    } else {\n      this.entryIdCounter = value;\n    }\n  };\n  var normalizePriority = function (generatorWrapper) {\n    switch (Math.trunc(generatorWrapper.setTimeoutWrapper)) {\n      case -16:\n        return -16;\n      case -8:\n        return -8;\n      case 0:\n        return 0;\n      case 8:\n        return 8;\n      case 16:\n        return 16;\n      default:\n        return 16;\n    }\n  };\n  var isPriorityLower = function (generatorWrapper, value) {\n    if (generatorWrapper.setTimeoutWrapper < value.setTimeoutWrapper) {\n      return true;\n    } else {\n      if (generatorWrapper.setTimeoutWrapper > value.setTimeoutWrapper) {\n        return false;\n      } else {\n        if (generatorWrapper.tasks < value.tasks) {\n          return true;\n        } else {\n          if (generatorWrapper.tasks > value.tasks) {\n            return false;\n          } else {\n            if (typeof generatorWrapper.entryIdCounter < typeof value.entryIdCounter) {\n              return true;\n            } else {\n              if (typeof generatorWrapper.entryIdCounter > typeof value.entryIdCounter) {\n                return false;\n              } else {\n                return generatorWrapper.entryIdCounter < value.entryIdCounter;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  var QueryStringBuilder = function () {\n    this.setTimeoutWrapper = 0;\n    this.entryIdCounter = [];\n    this.tasks = false;\n  };\n  QueryStringBuilder.prototype.addParameter = function (generatorWrapper, value, CustomMap) {\n    ++this.setTimeoutWrapper;\n    generatorWrapper = new AdParameters(generatorWrapper, value, CustomMap);\n    this.entryIdCounter.push(new AdParameters(generatorWrapper.tasks, generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper + this.setTimeoutWrapper / 4096));\n    this.tasks = true;\n    return this;\n  };\n  var mergeParameters = function (generatorWrapper, value) {\n    forEachElement(value.entryIdCounter, function (CustomMap) {\n      generatorWrapper.addParameter(CustomMap.tasks, CustomMap.entryIdCounter, normalizePriority(CustomMap));\n    });\n  };\n  var addParametersFromObject = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    var findEntry = undefined === findEntry ? true : findEntry;\n    forEachInObject(value, function (iterateEntries, createCircularNode) {\n      if (!(findEntry && undefined === iterateEntries)) {\n        generatorWrapper.addParameter(createCircularNode, iterateEntries, CustomMap);\n      }\n    });\n    return generatorWrapper;\n  };\n  var buildQueryString = function (generatorWrapper) {\n    var value = parameterToString;\n    if (generatorWrapper.tasks) {\n      sortArray(generatorWrapper.entryIdCounter, function (CustomMap, findEntry) {\n        if (isPriorityLower(findEntry, CustomMap)) {\n          return 1;\n        } else {\n          if (isPriorityLower(CustomMap, findEntry)) {\n            return -1;\n          } else {\n            return 0;\n          }\n        }\n      });\n      generatorWrapper.tasks = false;\n    }\n    return reduceElements(generatorWrapper.entryIdCounter, function (CustomMap, findEntry) {\n      findEntry = value(findEntry);\n      return \"\" + CustomMap + (CustomMap != \"\" && findEntry != \"\" ? \"&\" : \"\") + findEntry;\n    }, \"\");\n  };\n  var parameterToString = function (generatorWrapper) {\n    var value = generatorWrapper.tasks;\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    if (generatorWrapper === \"\") {\n      return value;\n    } else {\n      if (typeof generatorWrapper === \"boolean\") {\n        if (generatorWrapper) {\n          return value;\n        } else {\n          return \"\";\n        }\n      } else {\n        if (Array.isArray(generatorWrapper)) {\n          if (generatorWrapper.length === 0) {\n            return value;\n          } else {\n            return value + \"=\" + generatorWrapper.join();\n          }\n        } else {\n          return value + \"=\" + (containsElement([\"mtos\", \"tos\", \"p\"], value) ? generatorWrapper : encodeURIComponent(generatorWrapper));\n        }\n      }\n    }\n  };\n  var UrlBuilder = function (generatorWrapper) {\n    var value = undefined === value ? true : value;\n    this.entryIdCounter = new QueryStringBuilder();\n    if (undefined !== generatorWrapper) {\n      mergeParameters(this.entryIdCounter, generatorWrapper);\n    }\n    if (value) {\n      this.entryIdCounter.addParameter(\"v\", \"unreleased\", -16);\n    }\n  };\n  UrlBuilder.prototype.toString = function () {\n    var generatorWrapper = \"//pagead2.googlesyndication.com//pagead/gen_204\";\n    var value = buildQueryString(this.entryIdCounter);\n    if (value.length > 0) {\n      generatorWrapper += \"?\" + value;\n    }\n    return generatorWrapper;\n  };\n  var buildAdRequestParams = function (generatorWrapper) {\n    var value = [];\n    var CustomMap = [];\n    forEachInObject(generatorWrapper, function (findEntry, iterateEntries) {\n      if (!(iterateEntries in Object.prototype) && typeof findEntry != \"undefined\") {\n        if (Array.isArray(findEntry)) {\n          findEntry = findEntry.join(\",\");\n        }\n        findEntry = [iterateEntries, \"=\", findEntry].join(\"\");\n        switch (iterateEntries) {\n          case \"adk\":\n          case \"r\":\n          case \"tt\":\n          case \"error\":\n          case \"mtos\":\n          case \"tos\":\n          case \"p\":\n          case \"bs\":\n            value.unshift(findEntry);\n            break;\n          case \"req\":\n          case \"url\":\n          case \"referrer\":\n          case \"iframe_loc\":\n            CustomMap.push(findEntry);\n            break;\n          default:\n            value.push(findEntry);\n        }\n      }\n    });\n    return value.concat(CustomMap);\n  };\n  var sendAdRequest = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.toString();\n    GetEnvironment();\n    sendImageRequestWithRetry(window, generatorWrapper);\n  };\n  var AdRequestCounter = function () {\n    this.entryIdCounter = 0;\n  };\n  function markAsCompletedWrapper(generatorWrapper) {\n    if (generatorWrapper && typeof generatorWrapper.markAsCompleted == \"function\") {\n      generatorWrapper.markAsCompleted();\n    }\n  }\n  var tryCall = function () {\n    this.executeCallbacks = this.executeCallbacks;\n    this.settlePromise = this.settlePromise;\n  };\n  tryCall.prototype.executeCallbacks = false;\n  tryCall.prototype.handleIteratorResult = function () {\n    return this.executeCallbacks;\n  };\n  tryCall.prototype.markAsCompleted = function () {\n    if (!this.executeCallbacks) {\n      this.executeCallbacks = true;\n      this.getAdEnvironment();\n    }\n  };\n  var registerDisposable = function (generatorWrapper, value) {\n    executeOrDelayUntilDisposed(generatorWrapper, createFunctionWithArguments(markAsCompletedWrapper, value));\n  };\n  var executeOrDelayUntilDisposed = function (generatorWrapper, value) {\n    if (generatorWrapper.executeCallbacks) {\n      value();\n    } else {\n      if (!generatorWrapper.settlePromise) {\n        generatorWrapper.settlePromise = [];\n      }\n      generatorWrapper.settlePromise.push(value);\n    }\n  };\n  tryCall.prototype.getAdEnvironment = function () {\n    if (this.settlePromise) {\n      for (; this.settlePromise.length;) {\n        this.settlePromise.shift()();\n      }\n    }\n  };\n  var processVerificationRequests = function (generatorWrapper, value, CustomMap) {\n    forEachElement(generatorWrapper.setTimeoutWrapper, function (findEntry) {\n      var iterateEntries = generatorWrapper.entryIdCounter;\n      if (!findEntry.entryIdCounter && (findEntry.setTimeoutWrapper(value, CustomMap), findEntry.createDeferred())) {\n        findEntry.entryIdCounter = true;\n        var createCircularNode = findEntry.tasks();\n        var entryIdCounter = new QueryStringBuilder();\n        entryIdCounter.addParameter(\"id\", \"av-js\");\n        entryIdCounter.addParameter(\"type\", \"verif\");\n        entryIdCounter.addParameter(\"vtype\", findEntry.handleAsync);\n        findEntry = getSingletonInstance(AdRequestCounter);\n        entryIdCounter.addParameter(\"i\", findEntry.entryIdCounter++);\n        entryIdCounter.addParameter(\"adk\", iterateEntries);\n        addParametersFromObject(entryIdCounter, createCircularNode);\n        iterateEntries = new UrlBuilder(entryIdCounter);\n        sendAdRequest(iterateEntries);\n      }\n    });\n  };\n  var MetricsTracker = function () {\n    this.tasks = this.setTimeoutWrapper = this.createDeferred = this.entryIdCounter = 0;\n  };\n  var updateMetrics = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (value) {\n      generatorWrapper.entryIdCounter += CustomMap;\n      generatorWrapper.tasks += CustomMap;\n      generatorWrapper.createDeferred += CustomMap;\n      generatorWrapper.setTimeoutWrapper = Math.max(generatorWrapper.setTimeoutWrapper, generatorWrapper.createDeferred);\n    }\n    if (undefined === findEntry ? !value : findEntry) {\n      generatorWrapper.createDeferred = 0;\n    }\n  };\n  var visibilityThresholds = [1, 0.75, 0.5, 0.3, 0];\n  var VisibilityMetricsCalculator = function (generatorWrapper) {\n    this.tasks = generatorWrapper = undefined === generatorWrapper ? visibilityThresholds : generatorWrapper;\n    this.entryIdCounter = mapElements(this.tasks, function () {\n      return new MetricsTracker();\n    });\n  };\n  var calculateTotalVisibility = function (generatorWrapper, value) {\n    return aggregateMetrics(generatorWrapper, function (CustomMap) {\n      return CustomMap.entryIdCounter;\n    }, undefined === value ? true : value);\n  };\n  var calculateVisibilityAtThreshold = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.entryIdCounter;\n    });\n  };\n  var calculateMaxVisibility = function (generatorWrapper, value) {\n    return aggregateMetrics(generatorWrapper, function (CustomMap) {\n      return CustomMap.setTimeoutWrapper;\n    }, undefined === value ? true : value);\n  };\n  var calculateMaxVisibilityAtThreshold = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.setTimeoutWrapper;\n    });\n  };\n  var calculateAverageVisibility = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.tasks;\n    });\n  };\n  var resetVisibilityMetrics = function (generatorWrapper) {\n    forEachElement(generatorWrapper.entryIdCounter, function (value) {\n      value.tasks = 0;\n    });\n  };\n  var updateVisibilityMetrics = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    if (undefined === entryIdCounter) {\n      entryIdCounter = true;\n    } else {\n      entryIdCounter = entryIdCounter;\n    }\n    if (createCircularNode) {\n      CustomMap = Math.min(value, CustomMap);\n    } else {\n      CustomMap = CustomMap;\n    }\n    for (createCircularNode = 0; createCircularNode < generatorWrapper.tasks.length; createCircularNode++) {\n      var key = generatorWrapper.tasks[createCircularNode];\n      var value = CustomMap > 0 && CustomMap >= key;\n      key = !(value > 0 && value >= key) || findEntry;\n      updateMetrics(generatorWrapper.entryIdCounter[createCircularNode], entryIdCounter && value, iterateEntries, !entryIdCounter || key);\n    }\n  };\n  var aggregateMetrics = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = mapElements(generatorWrapper.entryIdCounter, function (findEntry) {\n      return value(findEntry);\n    });\n    if (CustomMap) {\n      return generatorWrapper;\n    } else {\n      return calculateDifferentialMetrics(generatorWrapper);\n    }\n  };\n  var getMetricAtThreshold = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findLastElementIndex(generatorWrapper.tasks, function (iterateEntries) {\n      return value <= iterateEntries;\n    });\n    if (-1 == findEntry) {\n      return 0;\n    } else {\n      return CustomMap(generatorWrapper.entryIdCounter[findEntry]);\n    }\n  };\n  var calculateDifferentialMetrics = function (generatorWrapper) {\n    return mapElements(generatorWrapper, function (value, CustomMap, findEntry) {\n      if (CustomMap > 0) {\n        return findEntry[CustomMap] - findEntry[CustomMap - 1];\n      } else {\n        return findEntry[CustomMap];\n      }\n    });\n  };\n  var AdVisibilityTracker = function () {\n    this.tasks = new VisibilityMetricsCalculator();\n    this.year = new MetricsTracker();\n    this.resolvePromise = this.onFulfilled = -1;\n    this.firstQuartileTime = 1000;\n    this.toArray = new VisibilityMetricsCalculator([1, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0]);\n    this.tryCall = this.logError = -1;\n  };\n  var getMaxVisibility = function (generatorWrapper, value) {\n    return calculateMaxVisibility(generatorWrapper.tasks, undefined === value ? true : value);\n  };\n  AdVisibilityTracker.prototype.executeCallbacks = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (-1 != this.onFulfilled) {\n      this.onFulfilled = Math.min(this.onFulfilled, value.zone);\n    } else {\n      this.onFulfilled = value.zone;\n    }\n    this.resolvePromise = Math.max(this.resolvePromise, value.zone);\n    if (-1 != this.logError) {\n      this.logError = Math.min(this.logError, value.ta);\n    } else {\n      this.logError = value.ta;\n    }\n    this.tryCall = Math.max(this.tryCall, value.ta);\n    updateVisibilityMetrics(this.toArray, value.ta, CustomMap.ta, value.entryIdCounter, generatorWrapper, findEntry);\n    updateVisibilityMetrics(this.tasks, value.zone, CustomMap.zone, value.entryIdCounter, generatorWrapper, findEntry);\n    if (findEntry || CustomMap.navigatorReference != value.navigatorReference) {\n      CustomMap = CustomMap.isAdVisible() && value.isAdVisible();\n    } else {\n      CustomMap = CustomMap.isAdVisible();\n    }\n    value = !value.isAdVisible() || value.entryIdCounter;\n    updateMetrics(this.year, CustomMap, generatorWrapper, value);\n  };\n  AdVisibilityTracker.prototype.removeUniqueId = function () {\n    return this.year.setTimeoutWrapper >= this.firstQuartileTime;\n  };\n  if (document && document.URL) {\n    var currentURL = document.URL,\n      isDebugMode;\n    if (isDebugMode = !!currentURL) {\n      var debugParam;\n      generatorWrapper: {\n        if (currentURL) {\n          var Hq = RegExp(\".*[&#?]google_debug(=[^&]*)?(&.*)?$\");\n          try {\n            var Iq = Hq.exec(decodeURIComponent(currentURL));\n            if (Iq) {\n              if (Iq[1] && Iq[1].length > 1) {\n                debugParam = Iq[1].substring(1);\n              } else {\n                debugParam = \"true\";\n              }\n              break generatorWrapper;\n            }\n          } catch (generatorWrapper) {}\n        }\n        debugParam = \"\";\n      }\n      isDebugMode = debugParam.length > 0;\n    }\n    Po.numericStringRegex(!isDebugMode);\n  }\n  var addEventListenerWithCapture = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    CustomMap = To(findEntry, CustomMap);\n    addEventListenerWithNormalization(generatorWrapper, value, CustomMap, {\n      capture: iterateEntries\n    });\n  };\n  var emptyRect = new handleThenable(0, 0, 0, 0);\n  function calculateVisibilityRatio(generatorWrapper, value) {\n    value = calculateArea(value);\n    if (value === 0) {\n      return 0;\n    } else {\n      return calculateArea(generatorWrapper) / value;\n    }\n  }\n  function calculateArea(generatorWrapper) {\n    return Math.max(generatorWrapper.bottom - generatorWrapper.top, 0) * Math.max(generatorWrapper.right - generatorWrapper.left, 0);\n  }\n  function isAncestorOrSelf(generatorWrapper, value) {\n    if (!generatorWrapper || !value) {\n      return false;\n    }\n    for (var CustomMap = 0; generatorWrapper !== null && CustomMap++ < 100;) {\n      if (generatorWrapper === value) {\n        return true;\n      }\n      try {\n        if (generatorWrapper = getParentElement(generatorWrapper) || generatorWrapper) {\n          var findEntry = getDocument(generatorWrapper);\n          var iterateEntries = findEntry && getWindowForDocument(findEntry);\n          var createCircularNode = iterateEntries && iterateEntries.frameElement;\n          if (createCircularNode) {\n            generatorWrapper = createCircularNode;\n          }\n        }\n      } catch (entryIdCounter) {\n        break;\n      }\n    }\n    return false;\n  }\n  function isElementFullyInView(generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper || !value) {\n      return false;\n    }\n    value = translateRectangle(createRectangle(generatorWrapper), -value.left, -value.top);\n    generatorWrapper = (value.left + value.right) / 2;\n    value = (value.top + value.bottom) / 2;\n    if (isAccessibleFrame(window.top) && window.top && window.top.document) {\n      window = window.top;\n    }\n    if (!isElementFromPointSupported()) {\n      return false;\n    }\n    generatorWrapper = window.document.elementFromPoint(generatorWrapper, value);\n    if (!generatorWrapper) {\n      return false;\n    }\n    value = (value = (value = getDocument(CustomMap)) && value.defaultView && value.defaultView.frameElement) && isAncestorOrSelf(value, generatorWrapper);\n    var findEntry = generatorWrapper === CustomMap;\n    generatorWrapper = !findEntry && generatorWrapper && findParentElement(generatorWrapper, function (iterateEntries) {\n      return iterateEntries === CustomMap;\n    });\n    return !(value || findEntry || generatorWrapper);\n  }\n  function isElementInvisibleOrOutOfView(generatorWrapper, value, CustomMap, findEntry) {\n    if (getAdEnvironmentInstance().setTimeoutWrapper) {\n      return false;\n    } else {\n      if (generatorWrapper.getRectangleWidth() <= 0 || generatorWrapper.getRectangleHeight() <= 0) {\n        return true;\n      } else {\n        if (CustomMap && findEntry) {\n          return So(208, function () {\n            return isElementFullyInView(generatorWrapper, value, CustomMap);\n          });\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n  var initialRect = new handleThenable(0, 0, 0, 0);\n  var AdContainer = function (generatorWrapper, value, CustomMap) {\n    tryCall.call(this);\n    this.position = createRectangle(initialRect);\n    this.invertAndIncrement = this.base64AlphabetIndex();\n    this.set34Clear14557Flag = -2;\n    this.hasOwnPropertySafe = Date.now();\n    this.updateElementAtIndex = -1;\n    this.decodeBase64 = value;\n    this.base64Encode = null;\n    this.findElementIndex = false;\n    this.Unsigned64 = null;\n    this.opacity = -1;\n    this.debounceFunction = CustomMap;\n    this.containsValue = false;\n    this.emptyObject1 = function () {};\n    this.transformArrayElements = function () {};\n    this.setPrototypeOfPolyfill = new PerformanceMonitor();\n    this.setPrototypeOfPolyfill.trimString = generatorWrapper;\n    this.setPrototypeOfPolyfill.entryIdCounter = generatorWrapper;\n    this.uniqueIdCounter = false;\n    this.hasNavigatorUserAgentData = {\n      isPlainObject: null,\n      isObjectWithId: null\n    };\n    this.cloneOrTransform = true;\n    this.getCachedValue = null;\n    this.isIphone = this.safeIntegerTransformation = false;\n    getAdEnvironment().isDone++;\n    this.adData = this.toggleBitFlag();\n    this.getTransformedElement = -1;\n    this.globalObject = null;\n    this.TransformValue = this.stringOrNumberTransformation1 = false;\n    this.AdEnvironmentConfig = new AdStateController();\n    configureAdStateTrackers(this.AdEnvironmentConfig);\n    checkDataAttributes(this);\n    if (this.debounceFunction == 1) {\n      updateAdStateValue(this.AdEnvironmentConfig, \"od\", 1);\n    } else {\n      updateAdStateValue(this.AdEnvironmentConfig, \"od\", 0);\n    }\n  };\n  inheritPrototype(AdContainer, tryCall);\n  AdContainer.prototype.getAdEnvironment = function () {\n    if (this.setPrototypeOfPolyfill.entryIdCounter) {\n      if (this.hasNavigatorUserAgentData.isPlainObject) {\n        removeEventListenerWithNormalization(this.setPrototypeOfPolyfill.entryIdCounter, \"mouseover\", this.hasNavigatorUserAgentData.isPlainObject);\n        this.hasNavigatorUserAgentData.isPlainObject = null;\n      }\n      if (this.hasNavigatorUserAgentData.isObjectWithId) {\n        removeEventListenerWithNormalization(this.setPrototypeOfPolyfill.entryIdCounter, \"mouseout\", this.hasNavigatorUserAgentData.isObjectWithId);\n        this.hasNavigatorUserAgentData.isObjectWithId = null;\n      }\n    }\n    if (this.getCachedValue) {\n      this.getCachedValue.markAsCompleted();\n    }\n    if (this.globalObject) {\n      this.globalObject.markAsCompleted();\n    }\n    delete this.invertAndIncrement;\n    delete this.emptyObject1;\n    delete this.transformArrayElements;\n    delete this.setPrototypeOfPolyfill.trimString;\n    delete this.setPrototypeOfPolyfill.entryIdCounter;\n    delete this.hasNavigatorUserAgentData;\n    delete this.getCachedValue;\n    delete this.globalObject;\n    delete this.AdEnvironmentConfig;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  AdContainer.prototype.getUserAgent = function () {\n    if (this.globalObject) {\n      return this.globalObject.entryIdCounter;\n    } else {\n      return this.position;\n    }\n  };\n  AdContainer.prototype.throwIfFlag2 = function (generatorWrapper) {\n    getAdEnvironment().throwIfFlag2(generatorWrapper);\n  };\n  var checkDataAttributes = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.setPrototypeOfPolyfill.trimString;\n    var value;\n    if (value = generatorWrapper && generatorWrapper.getAttribute) {\n      if (/-[a-z]/.test(\"googleAvInapp\")) {\n        value = false;\n      } else if (isLegacyBrowser && generatorWrapper.dataset) {\n        value = \"googleAvInapp\" in generatorWrapper.dataset;\n      } else if (generatorWrapper.hasAttribute) {\n        value = generatorWrapper.hasAttribute(\"data-\" + dashCaseFromCamel());\n      } else {\n        value = !!generatorWrapper.getAttribute(\"data-\" + dashCaseFromCamel());\n      }\n    }\n    if (value) {\n      getAdEnvironmentInstance().tasks = true;\n    }\n  };\n  AdContainer.prototype.getClosureFlagValue = function () {\n    return false;\n  };\n  AdContainer.prototype.base64AlphabetIndex = function () {\n    return new AdVisibilityTracker();\n  };\n  AdContainer.prototype.getAdManager = function () {\n    return this.invertAndIncrement;\n  };\n  var updateVisibilityState = function (generatorWrapper, value) {\n    if (value != generatorWrapper.isIphone) {\n      generatorWrapper.isIphone = value;\n      generatorWrapper = getAdEnvironmentInstance();\n      if (value) {\n        generatorWrapper.isDone++;\n      } else if (generatorWrapper.isDone > 0) {\n        generatorWrapper.isDone--;\n      }\n    }\n  };\n  var replaceAdContainerContent = function (generatorWrapper, value) {\n    if (generatorWrapper.globalObject) {\n      if (value.getAdName() === generatorWrapper.globalObject.getAdName()) {\n        return;\n      }\n      generatorWrapper.globalObject.markAsCompleted();\n      generatorWrapper.globalObject = null;\n    }\n    value = value.create(generatorWrapper.setPrototypeOfPolyfill.entryIdCounter, generatorWrapper.AdEnvironmentConfig, generatorWrapper.getClosureFlagValue());\n    if (value = value != null && value.writeFieldHeader() ? value : null) {\n      generatorWrapper.globalObject = value;\n    }\n  };\n  var calculateTimeDifference = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.base64Encode || -1 == generatorWrapper.decodeBase64 || -1 === value.getTimestamp() || -1 === generatorWrapper.base64Encode.getTimestamp()) {\n      return 0;\n    }\n    generatorWrapper = value.getTimestamp() - generatorWrapper.base64Encode.getTimestamp();\n    if (generatorWrapper > CustomMap) {\n      return 0;\n    } else {\n      return generatorWrapper;\n    }\n  };\n  AdContainer.prototype.CustomMap = function (generatorWrapper) {\n    return calculateTimeDifference(this, generatorWrapper, 10000);\n  };\n  var updateAdContainerState = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.globalObject) {\n      generatorWrapper.globalObject.CustomError();\n      var findEntry = generatorWrapper.globalObject.settlePromise;\n      var iterateEntries = findEntry.setTimeoutWrapper;\n      var createCircularNode = iterateEntries.entryIdCounter;\n      if (findEntry.handleAsync != null) {\n        var entryIdCounter = findEntry.tasks;\n        generatorWrapper.Unsigned64 = new Coordinate(entryIdCounter.left - createCircularNode.left, entryIdCounter.top - createCircularNode.top);\n      }\n      if (generatorWrapper.writeVarint32()) {\n        createCircularNode = Math.max(findEntry.entryIdCounter, findEntry.createDeferred);\n      } else {\n        createCircularNode = findEntry.entryIdCounter;\n      }\n      entryIdCounter = {};\n      if (iterateEntries.volume !== null) {\n        entryIdCounter.volume = iterateEntries.volume;\n      }\n      iterateEntries = generatorWrapper.CustomMap(findEntry);\n      generatorWrapper.base64Encode = findEntry;\n      generatorWrapper.parseInt32(createCircularNode, value, CustomMap, false, entryIdCounter, iterateEntries, findEntry.isDone);\n    }\n  };\n  var processAdContainerMetrics = function (generatorWrapper) {\n    if (generatorWrapper.findElementIndex && generatorWrapper.getCachedValue) {\n      var value = getAdState(generatorWrapper.AdEnvironmentConfig, \"od\") == 1;\n      var CustomMap = getAdEnvironmentInstance().entryIdCounter;\n      var findEntry = generatorWrapper.getCachedValue;\n      var iterateEntries = generatorWrapper.globalObject ? generatorWrapper.globalObject.getAdName() : \"ns\";\n      var createCircularNode = generatorWrapper.Unsigned64;\n      var entryIdCounter = new Size(CustomMap.getRectangleWidth(), CustomMap.getRectangleHeight());\n      CustomMap = generatorWrapper.writeVarint32();\n      generatorWrapper = {\n        valuesOfObject: iterateEntries,\n        Unsigned64: createCircularNode,\n        MediaSourceURL: entryIdCounter,\n        writeVarint32: CustomMap,\n        zone: generatorWrapper.adData.zone,\n        trustedTypesPolicy: value\n      };\n      if (value = findEntry.tasks) {\n        value.CustomError();\n        iterateEntries = value.settlePromise;\n        createCircularNode = iterateEntries.setTimeoutWrapper.entryIdCounter;\n        var key = entryIdCounter = null;\n        if (iterateEntries.handleAsync != null && createCircularNode) {\n          entryIdCounter = iterateEntries.tasks;\n          entryIdCounter = new Coordinate(entryIdCounter.left - createCircularNode.left, entryIdCounter.top - createCircularNode.top);\n          key = new Size(createCircularNode.right - createCircularNode.left, createCircularNode.bottom - createCircularNode.top);\n        }\n        if (CustomMap) {\n          iterateEntries = Math.max(iterateEntries.entryIdCounter, iterateEntries.createDeferred);\n        } else {\n          iterateEntries = iterateEntries.entryIdCounter;\n        }\n        CustomMap = {\n          valuesOfObject: value.getAdName(),\n          Unsigned64: entryIdCounter,\n          MediaSourceURL: key,\n          writeVarint32: CustomMap,\n          trustedTypesPolicy: false,\n          zone: iterateEntries\n        };\n      } else {\n        CustomMap = null;\n      }\n      if (CustomMap) {\n        processVerificationRequests(findEntry, generatorWrapper, CustomMap);\n      }\n    }\n  };\n  setTimeoutWrapper = AdContainer.prototype;\n  setTimeoutWrapper.parseInt32 = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    if (!this.uniqueIdCounter) {\n      if (this.findElementIndex) {\n        generatorWrapper = this.finalizeAndAppendBuffer(generatorWrapper, CustomMap, iterateEntries, entryIdCounter);\n        findEntry = findEntry && this.adData.zone >= (this.navigatorReference() ? 0.3 : 0.5);\n        this.parseNullableInt32(createCircularNode, generatorWrapper, findEntry);\n        this.decodeBase64 = value;\n        if (generatorWrapper.zone > 0 && -1 === this.getTransformedElement) {\n          this.getTransformedElement = value;\n        }\n        if (-1 == this.updateElementAtIndex && this.removeUniqueId()) {\n          this.updateElementAtIndex = value;\n        }\n        if (-2 == this.set34Clear14557Flag) {\n          if (calculateArea(this.getUserAgent())) {\n            this.set34Clear14557Flag = generatorWrapper.zone;\n          } else {\n            this.set34Clear14557Flag = -1;\n          }\n        }\n        this.adData = generatorWrapper;\n      }\n      this.emptyObject1(this);\n    }\n  };\n  setTimeoutWrapper.parseNullableInt32 = function (generatorWrapper, value, CustomMap) {\n    this.getAdManager().executeCallbacks(generatorWrapper, value, this.adData, CustomMap);\n  };\n  setTimeoutWrapper.toggleBitFlag = function () {\n    return new AdVisibilityTracker();\n  };\n  setTimeoutWrapper.finalizeAndAppendBuffer = function (generatorWrapper, value, CustomMap, findEntry) {\n    CustomMap = this.toggleBitFlag();\n    CustomMap.entryIdCounter = value;\n    value = GetEnvironment().tasks;\n    if (getVisibilityStateCode(document) === 0) {\n      value = -1;\n    } else if (value.isAdVisible()) {\n      value = 0;\n    } else {\n      value = 1;\n    }\n    CustomMap.tasks = value;\n    CustomMap.zone = this.toArray(generatorWrapper);\n    CustomMap.navigatorReference = this.navigatorReference();\n    CustomMap.ta = findEntry;\n    return CustomMap;\n  };\n  setTimeoutWrapper.toArray = function (generatorWrapper) {\n    if (this.opacity === 0 && getAdState(this.AdEnvironmentConfig, \"opac\") === 1) {\n      return 0;\n    } else {\n      return generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.navigatorReference = function () {\n    return false;\n  };\n  setTimeoutWrapper.writeVarint32 = function () {\n    return this.stringOrNumberTransformation1 || this.safeIntegerTransformation;\n  };\n  setTimeoutWrapper.generatorYield = function () {\n    return 0;\n  };\n  setTimeoutWrapper.removeUniqueId = function () {\n    return this.invertAndIncrement.removeUniqueId();\n  };\n  setTimeoutWrapper.identityFunction = function () {\n    var generatorWrapper = this.findElementIndex;\n    generatorWrapper = (this.TransformValue || this.handleIteratorResult()) && !generatorWrapper;\n    var value = getAdEnvironment().tasks !== 2 || this.containsValue;\n    if (this.uniqueIdCounter || value && generatorWrapper) {\n      return 2;\n    } else {\n      if (this.removeUniqueId()) {\n        return 4;\n      } else {\n        return 3;\n      }\n    }\n  };\n  setTimeoutWrapper.isIos = function () {\n    return 0;\n  };\n  var configureAdStateHandlers = function (generatorWrapper, value, CustomMap) {\n    if (value) {\n      generatorWrapper.emptyObject1 = value;\n    }\n    if (CustomMap) {\n      generatorWrapper.transformArrayElements = CustomMap;\n    }\n  };\n  var IteratorPrototype = function () {};\n  IteratorPrototype.prototype.next = function () {\n    return iteratorDoneValue;\n  };\n  var iteratorDoneValue = {\n    done: true,\n    value: undefined\n  };\n  IteratorPrototype.prototype.getIterator = function () {\n    return this;\n  };\n  var PerformanceData = function () {\n    this.createDeferred = this.entryIdCounter = this.setTimeoutWrapper = this.tasks = this.handleAsync = 0;\n  };\n  var getPerformanceData = function (generatorWrapper) {\n    var value = {};\n    value = (value.ptlt = Date.now() - generatorWrapper.handleAsync, value);\n    var CustomMap = generatorWrapper.tasks;\n    if (CustomMap) {\n      value.pnk = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.setTimeoutWrapper) {\n      value.pnc = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.createDeferred) {\n      value.pnmm = CustomMap;\n    }\n    if (generatorWrapper = generatorWrapper.entryIdCounter) {\n      value.pns = generatorWrapper;\n    }\n    return value;\n  };\n  var AdPlaybackData = function () {\n    AdVisibilityTracker.call(this);\n    this.fullscreen = false;\n    this.volume = undefined;\n    this.setTimeoutWrapper = false;\n    this.mediaTime = -1;\n  };\n  inheritPrototype(AdPlaybackData, AdVisibilityTracker);\n  var isVolumeNonZero = function (generatorWrapper) {\n    return isValidOpacity(generatorWrapper.volume) && generatorWrapper.volume > 0;\n  };\n  var filterAndTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = function () {\n        return true;\n      };\n    } else {\n      findEntry = findEntry;\n    }\n    return function (iterateEntries) {\n      var createCircularNode = iterateEntries[generatorWrapper];\n      if (Array.isArray(createCircularNode) && findEntry(iterateEntries)) {\n        return transformArray(createCircularNode, value, CustomMap);\n      }\n    };\n  };\n  var getPropertyIfCondition = function (generatorWrapper, value) {\n    return function (CustomMap) {\n      if (value(CustomMap)) {\n        return CustomMap[generatorWrapper];\n      } else {\n        return undefined;\n      }\n    };\n  };\n  var checkConditionInArray = function (generatorWrapper) {\n    return function (value) {\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        if (generatorWrapper[CustomMap] === value.iterateEntries || undefined === generatorWrapper[CustomMap] && !value.hasOwnProperty(\"e\")) {\n          return true;\n        }\n      }\n      return false;\n    };\n  };\n  var transformArray = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap || CustomMap) {\n      return filterElements(generatorWrapper, function (findEntry, iterateEntries) {\n        return containsElement(value, iterateEntries);\n      });\n    } else {\n      return mapElements(value, function (findEntry, iterateEntries, createCircularNode) {\n        return generatorWrapper.slice(iterateEntries > 0 ? createCircularNode[iterateEntries - 1] + 1 : 0, findEntry + 1).reduce(function (entryIdCounter, key) {\n          return entryIdCounter + key;\n        }, 0);\n      });\n    }\n  };\n  var defaultConditionChecker = checkConditionInArray([undefined, 1, 2, 3, 4, 8, 16]);\n  var specificConditionChecker = checkConditionInArray([undefined, 4, 8, 16]);\n  var adDataMapping = {\n    sv: \"sv\",\n    getIterator: \"v\",\n    cb: \"cb\",\n    iterateEntries: \"e\",\n    nas: \"nas\",\n    msg: \"msg\",\n    if: \"if\",\n    sdk: \"sdk\",\n    resolveFunction: \"p\",\n    position0: getPropertyIfCondition(\"p0\", specificConditionChecker),\n    p1: getPropertyIfCondition(\"p1\", specificConditionChecker),\n    p2: getPropertyIfCondition(\"p2\", specificConditionChecker),\n    p3: getPropertyIfCondition(\"p3\", specificConditionChecker),\n    AdEvent: \"cp\",\n    tos: \"tos\",\n    mtos: \"mtos\",\n    amtos: \"amtos\",\n    mediaTimeOffset1: filterAndTransform(\"mtos1\", [0, 2, 4], false, specificConditionChecker),\n    mtos2: filterAndTransform(\"mtos2\", [0, 2, 4], false, specificConditionChecker),\n    mtos3: filterAndTransform(\"mtos3\", [0, 2, 4], false, specificConditionChecker),\n    mcvt: \"mcvt\",\n    removeRelatedAdContainers: \"ps\",\n    screenSize: \"scs\",\n    browserSize: \"bs\",\n    vht: \"vht\",\n    mut: \"mut\",\n    generatorWrapper: \"a\",\n    attribute0: getPropertyIfCondition(\"a0\", specificConditionChecker),\n    a1: getPropertyIfCondition(\"a1\", specificConditionChecker),\n    a2: getPropertyIfCondition(\"a2\", specificConditionChecker),\n    a3: getPropertyIfCondition(\"a3\", specificConditionChecker),\n    CustomMetric: \"ft\",\n    deviceFullScreenTime: \"dft\",\n    metricNames: \"at\",\n    deviceAdTime: \"dat\",\n    assignSession: \"as\",\n    vpt: \"vpt\",\n    gmm: \"gmm\",\n    std: \"std\",\n    efpf: \"efpf\",\n    swf: \"swf\",\n    nio: \"nio\",\n    decodeVendor: \"px\",\n    nnutPlaceholder: \"nnut\",\n    videoMergeError: \"vmer\",\n    videoMergeMark: \"vmmk\",\n    videoMergeIEC: \"vmiec\",\n    networkMediaType: \"nmt\",\n    timeCodeMethod: \"tcm\",\n    metricValidators: \"bt\",\n    pixelAspectRatio: \"pst\",\n    isVpaid: \"vpaid\",\n    duration: \"dur\",\n    viewModeTime: \"vmtime\",\n    deviceTotalOffsetScale: \"dtos\",\n    deviceTotalOffsetScaleSum: \"dtoss\",\n    deviceViewportScale: \"dvs\",\n    deviceFullViewportScale: \"dfvs\",\n    deviceViewport: \"dvpt\",\n    fmf: \"fmf\",\n    videoDataStream: \"vds\",\n    screenDimensions: \"is\",\n    image0: \"i0\",\n    i1: \"i1\",\n    i2: \"i2\",\n    i3: \"i3\",\n    browserFeatures: \"ic\",\n    checksum: \"cs\",\n    CustomMap: \"c\",\n    coordinate0: getPropertyIfCondition(\"c0\", specificConditionChecker),\n    c1: getPropertyIfCondition(\"c1\", specificConditionChecker),\n    c2: getPropertyIfCondition(\"c2\", specificConditionChecker),\n    c3: getPropertyIfCondition(\"c3\", specificConditionChecker),\n    isEdge: \"mc\",\n    isGecko: \"nc\",\n    mediaVersion: \"mv\",\n    networkVersion: \"nv\",\n    qmt: getPropertyIfCondition(\"qmtos\", defaultConditionChecker),\n    qualityNetworkChecksum: getPropertyIfCondition(\"qnc\", defaultConditionChecker),\n    qualityMediaVersion: getPropertyIfCondition(\"qmv\", defaultConditionChecker),\n    qualityNetworkVersion: getPropertyIfCondition(\"qnv\", defaultConditionChecker),\n    raf: \"raf\",\n    rafc: \"rafc\",\n    latestTimeElapsed: \"lte\",\n    checksumEntities: \"ces\",\n    totalTimeHeld: \"tth\",\n    femt: \"femt\",\n    femvt: \"femvt\",\n    emc: \"emc\",\n    emuc: \"emuc\",\n    emb: \"emb\",\n    adVerificationMeasurementSystem: \"avms\",\n    nvat: \"nvat\",\n    getTopMostAccessibleWindow: \"qi\",\n    playerSizeMethod: \"psm\",\n    playerSizeValue: \"psv\",\n    playerSizeFullValue: \"psfv\",\n    playerSizeAttribute: \"psa\",\n    pnk: \"pnk\",\n    pnc: \"pnc\",\n    pnmm: \"pnmm\",\n    pns: \"pns\",\n    ptlt: \"ptlt\",\n    pngs: \"pings\",\n    videoElementId: \"veid\",\n    ssb: \"ssb\",\n    subSample0: getPropertyIfCondition(\"ss0\", specificConditionChecker),\n    ss1: getPropertyIfCondition(\"ss1\", specificConditionChecker),\n    ss2: getPropertyIfCondition(\"ss2\", specificConditionChecker),\n    ss3: getPropertyIfCondition(\"ss3\", specificConditionChecker),\n    dc_rfl: \"urlsigs\",\n    obd: \"obd\",\n    omidp: \"omidp\",\n    omidr: \"omidr\",\n    omidv: \"omidv\",\n    omida: \"omida\",\n    omids: \"omids\",\n    omidpv: \"omidpv\",\n    omidam: \"omidam\",\n    omidct: \"omidct\",\n    omidia: \"omidia\",\n    omiddc: \"omiddc\",\n    omidlat: \"omidlat\",\n    omiddit: \"omiddit\",\n    nopd: \"nopd\",\n    ensureQueryIdAdState: \"co\"\n  };\n  var extendedAdDataMapping = Object.assign({}, adDataMapping, {\n    avid: function (generatorWrapper) {\n      return function () {\n        return generatorWrapper;\n      };\n    }(\"audio\"),\n    adVerificationAdSystem: \"avas\",\n    filterAndLinkAdContainers: \"vs\"\n  });\n  var additionalDataMapping = {\n    audioToString: \"atos\",\n    audioValueTransform: filterAndTransform(\"atos\", [2]),\n    defaultAudioVideoSync: \"davs\",\n    defaultAudioFrequencyVideoSync: \"dafvs\",\n    defaultAudioVideo: \"dav\",\n    safeSelector: function (generatorWrapper, value) {\n      return function (CustomMap) {\n        if (undefined === CustomMap[generatorWrapper] && undefined !== value) {\n          return value;\n        } else {\n          return CustomMap[generatorWrapper];\n        }\n      };\n    }(\"ss\", 0),\n    rejectFunction: \"t\"\n  };\n  var nullResetter = function () {\n    this.tasks = this.entryIdCounter = \"\";\n  };\n  var emptyFunction = function () {};\n  var processResources = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined !== generatorWrapper) {\n      if (value != null) {\n        for (var findEntry in value) {\n          var iterateEntries = value[findEntry];\n          if (!(findEntry in Object.prototype)) {\n            if (iterateEntries != null) {\n              if (typeof iterateEntries === \"function\") {\n                CustomMap[findEntry] = iterateEntries(generatorWrapper);\n              } else {\n                CustomMap[findEntry] = generatorWrapper[iterateEntries];\n              }\n            }\n          }\n        }\n      } else {\n        extendObject(CustomMap, generatorWrapper);\n      }\n    }\n    return buildQueryString(addParametersFromObject(new QueryStringBuilder(), CustomMap));\n  };\n  var queryReporter = function () {\n    var generatorWrapper = {};\n    this.tasks = (generatorWrapper.filterAndLinkAdContainers = [1, 0], generatorWrapper.AdError = [0, 1], generatorWrapper.am = [2, 2], generatorWrapper.generatorWrapper = [4, 4], generatorWrapper.createCircularNode = [8, 8], generatorWrapper.bm = [16, 16], generatorWrapper.value = [32, 32], generatorWrapper.avw = [0, 64], generatorWrapper.avs = [64, 0], generatorWrapper.finalizePromise = [256, 256], generatorWrapper.gdr = [0, 512], generatorWrapper.resolveFunction = [0, 1024], generatorWrapper.foundEntry = [0, 2048], generatorWrapper.currentEntry = [0, 4096], generatorWrapper.um = [0, 8192], generatorWrapper.updateFlagsForFrozenObjects = [0, 16384], generatorWrapper.string = [0, 32768], generatorWrapper.pmx = [0, 16777216], generatorWrapper.mut = [33554432, 33554432], generatorWrapper.umutb = [67108864, 67108864], generatorWrapper.tvoff = [134217728, 134217728], generatorWrapper);\n    this.entryIdCounter = {};\n    for (var value in this.tasks) if (this.tasks[value][1] > 0) {\n      this.entryIdCounter[value] = 0;\n    }\n    this.setTimeoutWrapper = 0;\n  };\n  queryReporter.prototype.reportEvent = function (generatorWrapper) {\n    var value = this.tasks[generatorWrapper];\n    var CustomMap = value[1];\n    this.setTimeoutWrapper += value[0];\n    if (CustomMap > 0 && this.entryIdCounter[generatorWrapper] == 0) {\n      this.entryIdCounter[generatorWrapper] = 1;\n    }\n  };\n  var reportRetriever = function (generatorWrapper) {\n    var findEntry;\n    var value = keysOfObject(generatorWrapper.tasks);\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper.entryIdCounter) if (contains"