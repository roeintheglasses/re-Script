[
  {
    "name": "setTimeoutWrapper",
    "newName": "delayedExecution"
  },
  {
    "name": "createIterator",
    "newName": "createArrayIterator"
  },
  {
    "name": "generatorWrapper",
    "newName": "array"
  },
  {
    "name": "value",
    "newName": "index"
  },
  {
    "name": "CustomMap",
    "newName": "propertyDescriptor"
  },
  {
    "name": "definePropertyPolyfill",
    "newName": "defineProperty"
  },
  {
    "name": "findGlobalObject",
    "newName": "getGlobalObject"
  },
  {
    "name": "globalObject",
    "newName": "global"
  },
  {
    "name": "definePolyfill",
    "newName": "defineOrUpdatePolyfill"
  },
  {
    "name": "createCircularNode",
    "newName": "symbolPrefix"
  },
  {
    "name": "entryIdCounter",
    "newName": "symbolDescription"
  },
  {
    "name": "findEntry",
    "newName": "subObject"
  },
  {
    "name": "iterateEntries",
    "newName": "SymbolConstructor"
  },
  {
    "name": "identityFunction",
    "newName": "identity"
  },
  {
    "name": "getIterator",
    "newName": "getIterableIterator"
  },
  {
    "name": "toArray",
    "newName": "convertToArray"
  },
  {
    "name": "hasOwnPropertySafe",
    "newName": "safeHasOwnProperty"
  },
  {
    "name": "assignPolyfill",
    "newName": "assignProperties"
  },
  {
    "name": "setPrototypeOfPolyfill",
    "newName": "setPrototypeOf"
  },
  {
    "name": "createObjectPolyfill",
    "newName": "createObject"
  },
  {
    "name": "constructReflect",
    "newName": "reflectConstruct"
  },
  {
    "name": "adData",
    "newName": "isProtoSupported"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritFrom"
  },
  {
    "name": "Generator",
    "newName": "AsyncGenerator"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetAsyncGeneratorState"
  },
  {
    "name": "handleGeneratorError",
    "newName": "handleAsyncGeneratorError"
  },
  {
    "name": "generatorYield",
    "newName": "yieldAsyncGenerator"
  },
  {
    "name": "getGeneratorException",
    "newName": "getAsyncGeneratorException"
  },
  {
    "name": "GeneratorFunctionConstructor",
    "newName": "AsyncGeneratorFunction"
  },
  {
    "name": "generatorReturn",
    "newName": "returnAsyncGenerator"
  },
  {
    "name": "handleIteratorResult",
    "newName": "handleAsyncIteratorResult"
  },
  {
    "name": "finalizeGenerator",
    "newName": "finalizeAsyncGenerator"
  },
  {
    "name": "GeneratorExecutor",
    "newName": "AsyncGeneratorExecutor"
  },
  {
    "name": "executeGeneratorAsPromise",
    "newName": "executeAsyncGeneratorAsPromise"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapAsyncGeneratorToPromise"
  },
  {
    "name": "sliceArguments",
    "newName": "sliceFunctionArguments"
  },
  {
    "name": "value",
    "newName": "setTimeoutFunction"
  },
  {
    "name": "CustomMap",
    "newName": "PromiseConstructor"
  },
  {
    "name": "findEntry",
    "newName": "resolveFunction"
  },
  {
    "name": "iterateEntries",
    "newName": "PromiseExecutor"
  },
  {
    "name": "createCircularNode",
    "newName": "microtaskQueue"
  },
  {
    "name": "entryIdCounter",
    "newName": "promiseState"
  },
  {
    "name": "key",
    "newName": "promiseResult"
  },
  {
    "name": "entry",
    "newName": "promiseHandler"
  },
  {
    "name": "currentEntry",
    "newName": "promiseError"
  },
  {
    "name": "foundEntry",
    "newName": "promiseInstance"
  },
  {
    "name": "createCircularNode",
    "newName": "taskQueue"
  },
  {
    "name": "entryIdCounter",
    "newName": "weakMapKey"
  },
  {
    "name": "key",
    "newName": "weakMapInstance"
  },
  {
    "name": "value",
    "newName": "mapInstance"
  },
  {
    "name": "CustomMap",
    "newName": "MapConstructor"
  },
  {
    "name": "findEntry",
    "newName": "mapEntry"
  },
  {
    "name": "createCircularNode",
    "newName": "mapSentinel"
  },
  {
    "name": "entryIdCounter",
    "newName": "mapCounter"
  },
  {
    "name": "key",
    "newName": "mapKey"
  },
  {
    "name": "currentEntry",
    "newName": "mapIterator"
  },
  {
    "name": "foundEntry",
    "newName": "mapResult"
  },
  {
    "name": "entry",
    "newName": "entryData"
  },
  {
    "name": "findEntry",
    "newName": "findEntryData"
  },
  {
    "name": "key",
    "newName": "entryKey"
  },
  {
    "name": "value",
    "newName": "entryValue"
  },
  {
    "name": "list",
    "newName": "entryList"
  },
  {
    "name": "writeBytes",
    "newName": "entryWriteBytes"
  },
  {
    "name": "entryNode",
    "newName": "entryNodeData"
  },
  {
    "name": "next",
    "newName": "nextNode"
  },
  {
    "name": "lastNode",
    "newName": "lastNodeData"
  },
  {
    "name": "head",
    "newName": "headNode"
  },
  {
    "name": "size",
    "newName": "mapSize"
  },
  {
    "name": "clearAll",
    "newName": "clearAllEntries"
  },
  {
    "name": "has",
    "newName": "hasEntry"
  },
  {
    "name": "get",
    "newName": "getEntry"
  },
  {
    "name": "entries",
    "newName": "getAllEntries"
  },
  {
    "name": "keys",
    "newName": "getAllKeys"
  },
  {
    "name": "values",
    "newName": "getAllValues"
  },
  {
    "name": "forEach",
    "newName": "forEachEntry"
  },
  {
    "name": "createCircularNode",
    "newName": "createCircularLinkedNode"
  },
  {
    "name": "iterateEntries",
    "newName": "iterateOverEntries"
  },
  {
    "name": "createIterator",
    "newName": "createEntryIterator"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryIdCounter"
  },
  {
    "name": "hasOwnPropertySafe",
    "newName": "hasOwnPropertySafeCheck"
  },
  {
    "name": "CustomMap",
    "newName": "CustomMapClass"
  },
  {
    "name": "definePolyfill",
    "newName": "definePolyfillFunction"
  },
  {
    "name": "generatorWrapper",
    "newName": "polyfillGeneratorWrapper"
  },
  {
    "name": "Math.floorRectangle",
    "newName": "MathFloorRectangle"
  },
  {
    "name": "Math.ceilRectangle",
    "newName": "MathCeilRectangle"
  },
  {
    "name": "Object.screenDimensions",
    "newName": "ObjectScreenDimensions"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototypeFunction"
  },
  {
    "name": "getIterator",
    "newName": "getIteratorFunction"
  },
  {
    "name": "globalObject",
    "newName": "globalObjectReference"
  },
  {
    "name": "closureLibraryBase",
    "newName": "closureLibraryBaseNamespace"
  },
  {
    "name": "globalScope",
    "newName": "globalScopeReference"
  },
  {
    "name": "defineNamespace",
    "newName": "defineNamespaceFunction"
  },
  {
    "name": "getClosureFlagValue",
    "newName": "getClosureFlagValueFunction"
  },
  {
    "name": "getFromGlobalScope",
    "newName": "getFromGlobalScopeFunction"
  },
  {
    "name": "getType",
    "newName": "getTypeFunction"
  },
  {
    "name": "isArrayLike",
    "newName": "isArrayLikeFunction"
  },
  {
    "name": "isObjectOrFunction",
    "newName": "isObjectOrFunctionCheck"
  },
  {
    "name": "getUniqueId",
    "newName": "getUniqueIdFunction"
  },
  {
    "name": "removeUniqueId",
    "newName": "removeUniqueIdFunction"
  },
  {
    "name": "uniqueIdProperty",
    "newName": "uniqueIdPropertyKey"
  },
  {
    "name": "uniqueIdCounter",
    "newName": "uniqueIdCounterValue"
  },
  {
    "name": "boundFunctionCall",
    "newName": "boundFunctionCallMethod"
  },
  {
    "name": "partialFunctionApplication",
    "newName": "partialFunctionApplicationMethod"
  },
  {
    "name": "bindOrWrapFunction",
    "newName": "bindOrWrapFunctionMethod"
  },
  {
    "name": "createFunctionWithArguments",
    "newName": "createFunctionWithArgumentsMethod"
  },
  {
    "name": "identityFunction",
    "newName": "identityFunctionMethod"
  },
  {
    "name": "CustomError",
    "newName": "CustomErrorClass"
  },
  {
    "name": "cb",
    "newName": "cbVariable"
  },
  {
    "name": "db",
    "newName": "dbVariable"
  },
  {
    "name": "hasStringPrototypeNormalize",
    "newName": "hasStringPrototypeNormalizeCheck"
  },
  {
    "name": "hasTextEncoder",
    "newName": "hasTextEncoderCheck"
  },
  {
    "name": "encodeString",
    "newName": "encodeStringMethod"
  },
  {
    "name": "deferError",
    "newName": "deferErrorMethod"
  },
  {
    "name": "endsWith",
    "newName": "endsWithMethod"
  },
  {
    "name": "isEmptyOrWhitespace",
    "newName": "isEmptyOrWhitespaceMethod"
  },
  {
    "name": "trimString",
    "newName": "trimStringMethod"
  },
  {
    "name": "includesString",
    "newName": "includesStringMethod"
  },
  {
    "name": "includesIgnoreCase",
    "newName": "includesIgnoreCaseMethod"
  },
  {
    "name": "compareVersions",
    "newName": "compareVersionsMethod"
  },
  {
    "name": "compareValues",
    "newName": "compareValuesMethod"
  },
  {
    "name": "hasNavigatorUserAgentData",
    "newName": "hasNavigatorUserAgentDataCheck"
  },
  {
    "name": "unknownVariable",
    "newName": "unknownVariableCheck"
  },
  {
    "name": "getUserAgent",
    "newName": "getUserAgentMethod"
  },
  {
    "name": "userAgentData",
    "newName": "userAgentDataVariable"
  },
  {
    "name": "navigatorReference",
    "newName": "navigatorReferenceVariable"
  },
  {
    "name": "includesBrand",
    "newName": "includesBrandMethod"
  },
  {
    "name": "handleAsync",
    "newName": "handleAsyncMethod"
  },
  {
    "name": "hasBrands",
    "newName": "hasBrandsMethod"
  },
  {
    "name": "isOperaBrowser",
    "newName": "isOperaBrowserMethod"
  },
  {
    "name": "isInternetExplorer",
    "newName": "isInternetExplorerMethod"
  },
  {
    "name": "isFirefox",
    "newName": "isFirefoxMethod"
  },
  {
    "name": "isSafari",
    "newName": "isSafariMethod"
  },
  {
    "name": "isChromiumBased",
    "newName": "isChromiumBasedMethod"
  },
  {
    "name": "hasPlatform",
    "newName": "hasPlatformMethod"
  },
  {
    "name": "isAndroid",
    "newName": "isAndroidMethod"
  },
  {
    "name": "isIphone",
    "newName": "isIphoneMethod"
  },
  {
    "name": "isMacOS",
    "newName": "isMacOSMethod"
  },
  {
    "name": "indexOfChar",
    "newName": "indexOfCharMethod"
  },
  {
    "name": "forEachElement",
    "newName": "forEachElementMethod"
  },
  {
    "name": "forEachElementReverse",
    "newName": "forEachElementReverseMethod"
  },
  {
    "name": "filterElements",
    "newName": "filterElementsMethod"
  },
  {
    "name": "mapElements",
    "newName": "mapElementsMethod"
  },
  {
    "name": "reduceElements",
    "newName": "reduceElementsMethod"
  },
  {
    "name": "someElement",
    "newName": "someElementMethod"
  },
  {
    "name": "findElement",
    "newName": "findElementMethod"
  },
  {
    "name": "findElementIndex",
    "newName": "findElementIndexMethod"
  },
  {
    "name": "findLastElement",
    "newName": "findLastElementMethod"
  },
  {
    "name": "findLastElementIndex",
    "newName": "findLastElementIndexMethod"
  },
  {
    "name": "containsElement",
    "newName": "containsElementMethod"
  },
  {
    "name": "removeElement",
    "newName": "removeElementMethod"
  },
  {
    "name": "removeElementAtIndex",
    "newName": "removeElementAtIndexMethod"
  },
  {
    "name": "removeElementsByCondition",
    "newName": "removeElementsByConditionMethod"
  },
  {
    "name": "concatArrays",
    "newName": "concatArraysMethod"
  },
  {
    "name": "copyArray",
    "newName": "copyArrayMethod"
  },
  {
    "name": "uniqueElements",
    "newName": "uniqueElementsMethod"
  },
  {
    "name": "sortArray",
    "newName": "sortArrayMethod"
  },
  {
    "name": "defaultSort",
    "newName": "defaultSortMethod"
  },
  {
    "name": "createEmptyStringsArray",
    "newName": "createEmptyStringsArrayMethod"
  },
  {
    "name": "noopFunction",
    "newName": "noopFunctionMethod"
  },
  {
    "name": "tryNoopFunction",
    "newName": "tryNoopFunctionMethod"
  },
  {
    "name": "getCachedValue",
    "newName": "getCachedValueMethod"
  },
  {
    "name": "userAgentVersion",
    "newName": "userAgentVersionVariable"
  },
  {
    "name": "isOpera",
    "newName": "isOperaCheck"
  },
  {
    "name": "isIE",
    "newName": "isIECheck"
  },
  {
    "name": "isEdge",
    "newName": "isEdgeCheck"
  },
  {
    "name": "isGecko",
    "newName": "isGeckoCheck"
  },
  {
    "name": "isWebKit",
    "newName": "isWebKitCheck"
  },
  {
    "name": "isMacOS",
    "newName": "isMacOSCheck"
  },
  {
    "name": "isAndroid",
    "newName": "isAndroidCheck"
  },
  {
    "name": "isIphone",
    "newName": "isIphoneCheck"
  },
  {
    "name": "isIpad",
    "newName": "isIpadCheck"
  },
  {
    "name": "isIpod",
    "newName": "isIpodCheck"
  },
  {
    "name": "isIphoneIpadIpod",
    "newName": "isIphoneIpadIpodCheck"
  },
  {
    "name": "browserVersion",
    "newName": "browserVersionVariable"
  },
  {
    "name": "executeCallbacks",
    "newName": "executeCallbacksMethod"
  },
  {
    "name": "currentDocument",
    "newName": "currentDocumentVariable"
  },
  {
    "name": "finalBrowserVersion",
    "newName": "finalBrowserVersionVariable"
  },
  {
    "name": "browserFeatures",
    "newName": "browserFeaturesVariable"
  },
  {
    "name": "supportsHtml5",
    "newName": "supportsHtml5Method"
  },
  {
    "name": "isAndroidBrowser",
    "newName": "isAndroidBrowserCheck"
  },
  {
    "name": "isAndroidNonChrome",
    "newName": "isAndroidNonChromeCheck"
  },
  {
    "name": "isIos",
    "newName": "isIosCheck"
  },
  {
    "name": "base64AlphabetVariants",
    "newName": "base64AlphabetVariantsVariable"
  },
  {
    "name": "base64AlphabetIndex",
    "newName": "base64AlphabetIndexVariable"
  },
  {
    "name": "base64Encode",
    "newName": "base64EncodeMethod"
  },
  {
    "name": "generatorWrapper",
    "newName": "input"
  },
  {
    "name": "value",
    "newName": "predicate"
  },
  {
    "name": "CustomMap",
    "newName": "length"
  },
  {
    "name": "findEntry",
    "newName": "elements"
  },
  {
    "name": "iterateEntries",
    "newName": "index"
  },
  {
    "name": "createCircularNode",
    "newName": "key"
  },
  {
    "name": "entryIdCounter",
    "newName": "charCode"
  },
  {
    "name": "noopFunction",
    "newName": "noop"
  },
  {
    "name": "tryNoopFunction",
    "newName": "tryNoop"
  },
  {
    "name": "getCachedValue",
    "newName": "getCachedResult"
  },
  {
    "name": "browserFeatures",
    "newName": "features"
  },
  {
    "name": "isOpera",
    "newName": "isOperaBrowser"
  },
  {
    "name": "isIE",
    "newName": "isInternetExplorer"
  },
  {
    "name": "isEdge",
    "newName": "isEdgeBrowser"
  },
  {
    "name": "isGecko",
    "newName": "isGeckoBrowser"
  },
  {
    "name": "isWebKit",
    "newName": "isWebKitBrowser"
  },
  {
    "name": "isMacOS",
    "newName": "isMacOSPlatform"
  },
  {
    "name": "isAndroid",
    "newName": "isAndroidPlatform"
  },
  {
    "name": "isIphone",
    "newName": "isIphonePlatform"
  },
  {
    "name": "isIpad",
    "newName": "isIpadPlatform"
  },
  {
    "name": "isIpod",
    "newName": "isIpodPlatform"
  },
  {
    "name": "isIphoneIpadIpod",
    "newName": "isAppleMobileDevice"
  },
  {
    "name": "browserVersion",
    "newName": "version"
  },
  {
    "name": "executeCallbacks",
    "newName": "versionMatch"
  },
  {
    "name": "currentDocument",
    "newName": "document"
  },
  {
    "name": "userAgentVersion",
    "newName": "userAgentVersion"
  },
  {
    "name": "finalBrowserVersion",
    "newName": "finalVersion"
  },
  {
    "name": "supportsHtml5",
    "newName": "supportsHtml5"
  },
  {
    "name": "isAndroidBrowser",
    "newName": "isFirefoxBrowser"
  },
  {
    "name": "isAndroidNonChrome",
    "newName": "isAndroidNonChromeBrowser"
  },
  {
    "name": "isIos",
    "newName": "isChromiumBased"
  },
  {
    "name": "base64AlphabetVariants",
    "newName": "base64Variants"
  },
  {
    "name": "base64AlphabetIndex",
    "newName": "base64Index"
  },
  {
    "name": "base64Encode",
    "newName": "encodeBase64"
  },
  {
    "name": "getBase64EncodedArray",
    "newName": "decodeBase64ToArray"
  },
  {
    "name": "decodeBase64",
    "newName": "decodeBase64"
  },
  {
    "name": "initializeBase64Encoding",
    "newName": "initializeBase64"
  },
  {
    "name": "supportsUint8Array",
    "newName": "hasUint8Array"
  },
  {
    "name": "supportsBtoa",
    "newName": "hasBtoa"
  },
  {
    "name": "supportsBigInt",
    "newName": "hasBigInt"
  },
  {
    "name": "unusedVar1",
    "newName": "unusedVar1"
  },
  {
    "name": "lowOrderInteger",
    "newName": "lowOrderInt"
  },
  {
    "name": "highOrderInteger",
    "newName": "highOrderInt"
  },
  {
    "name": "calculateIntegers",
    "newName": "calculateIntegerParts"
  },
  {
    "name": "formatLongNumber",
    "newName": "formatLongInt"
  },
  {
    "name": "padNumber",
    "newName": "padInt"
  },
  {
    "name": "getFormattedNumber",
    "newName": "getFormattedInt"
  },
  {
    "name": "parseAndSetBigIntegers",
    "newName": "parseAndSetBigInts"
  },
  {
    "name": "invertAndIncrement",
    "newName": "invertAndAddOne"
  },
  {
    "name": "defaultUnsigned64",
    "newName": "defaultUnsigned64"
  },
  {
    "name": "defaultSigned64",
    "newName": "defaultSigned64"
  },
  {
    "name": "Unsigned64",
    "newName": "Unsigned64"
  },
  {
    "name": "createUnsigned64",
    "newName": "createUnsigned64"
  },
  {
    "name": "Signed64",
    "newName": "Signed64"
  },
  {
    "name": "createSigned64",
    "newName": "createSigned64"
  },
  {
    "name": "ByteArray",
    "newName": "ByteArray"
  },
  {
    "name": "writeVarint32",
    "newName": "writeVarint32"
  },
  {
    "name": "writeVarint",
    "newName": "writeVarint"
  },
  {
    "name": "writeVarint64",
    "newName": "writeVarint64"
  },
  {
    "name": "writeBytes",
    "newName": "writeBytes"
  },
  {
    "name": "ProtobufWriter",
    "newName": "ProtobufWriter"
  },
  {
    "name": "appendBuffer",
    "newName": "appendBuffer"
  },
  {
    "name": "finalizeAndAppendBuffer",
    "newName": "finalizeAndAppendBuffer"
  },
  {
    "name": "updateLengthPrefix",
    "newName": "updateLengthPrefix"
  },
  {
    "name": "writeFieldHeader",
    "newName": "writeFieldHeader"
  },
  {
    "name": "writeBytesField",
    "newName": "writeBytesField"
  },
  {
    "name": "CustomError",
    "newName": "CustomError"
  },
  {
    "name": "toArray",
    "newName": "toArray"
  },
  {
    "name": "generateSymbol",
    "newName": "generateSymbol"
  },
  {
    "name": "uniqueSymbol",
    "newName": "uniqueSymbol"
  },
  {
    "name": "customProperty1",
    "newName": "customProperty1"
  },
  {
    "name": "customProperty2",
    "newName": "customProperty2"
  },
  {
    "name": "customProperty3",
    "newName": "customProperty3"
  },
  {
    "name": "setCustomProperty",
    "newName": "setCustomProperty"
  },
  {
    "name": "clearBitFlag",
    "newName": "clearBitFlag"
  },
  {
    "name": "toggleBitFlag",
    "newName": "toggleBitFlag"
  },
  {
    "name": "getBitFlags",
    "newName": "getBitFlags"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getRawBitFlags"
  },
  {
    "name": "setRawBitFlags",
    "newName": "setRawBitFlags"
  },
  {
    "name": "setFlag34",
    "newName": "setFlag34"
  },
  {
    "name": "setFlag32",
    "newName": "setFlag32"
  },
  {
    "name": "clear14591Flag",
    "newName": "clear14591Flag"
  },
  {
    "name": "set34Clear14557Flag",
    "newName": "set34Clear14557Flag"
  },
  {
    "name": "get1023Shifted",
    "newName": "get1023Shifted"
  },
  {
    "name": "emptyObject1",
    "newName": "emptyObject1"
  },
  {
    "name": "emptyObject2",
    "newName": "emptyObject2"
  },
  {
    "name": "isObjectWithId",
    "newName": "isObjectWithId"
  },
  {
    "name": "isPlainObject",
    "newName": "isPlainObject"
  },
  {
    "name": "undefinedVariable1",
    "newName": "undefinedVariable1"
  },
  {
    "name": "undefinedFunction1",
    "newName": "undefinedFunction1"
  },
  {
    "name": "frozenArray",
    "newName": "frozenArray"
  },
  {
    "name": "emptyArray",
    "newName": "emptyArray"
  },
  {
    "name": "throwIfFlag2",
    "newName": "throwIfFlag2"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "IteratorWithTransform"
  },
  {
    "name": "setErrorContext",
    "newName": "setErrorContext"
  },
  {
    "name": "undefinedVariable2",
    "newName": "undefinedVariable2"
  },
  {
    "name": "throwIncidentError",
    "newName": "throwIncidentError"
  },
  {
    "name": "createWarningError",
    "newName": "createWarningError"
  },
  {
    "name": "parseNumericValue",
    "newName": "parseNumericValue"
  },
  {
    "name": "assertBoolean",
    "newName": "assertBoolean"
  },
  {
    "name": "parseNullableBoolean",
    "newName": "parseNullableBoolean"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseBooleanOrNumber"
  },
  {
    "name": "numericStringRegex",
    "newName": "numericStringRegex"
  },
  {
    "name": "isNumericString",
    "newName": "isNumericString"
  },
  {
    "name": "parseIntEnum",
    "newName": "parseIntEnum"
  },
  {
    "name": "parseNullableIntEnum",
    "newName": "parseNullableIntEnum"
  },
  {
    "name": "parseNullableInt",
    "newName": "parseNullableInt"
  },
  {
    "name": "parseInt32",
    "newName": "parseInt32"
  },
  {
    "name": "parseNullableInt32",
    "newName": "parseNullableInt32"
  },
  {
    "name": "parseNullableUInt32",
    "newName": "parseNullableUInt32"
  },
  {
    "name": "convertToInt64",
    "newName": "convertToInt64"
  },
  {
    "name": "isPositiveInt64",
    "newName": "isPositiveInt64"
  },
  {
    "name": "isValidInt64Range",
    "newName": "isValidInt64Range"
  },
  {
    "name": "normalizeNumber",
    "newName": "normalizeNumber"
  },
  {
    "name": "convertSafeInteger",
    "newName": "convertSafeInteger"
  },
  {
    "name": "convertNumberToString",
    "newName": "convertNumberToString"
  },
  {
    "name": "convertStringToInt64",
    "newName": "convertStringToInt64"
  },
  {
    "name": "ensureString",
    "newName": "ensureString"
  },
  {
    "name": "optionalString",
    "newName": "optionalString"
  },
  {
    "name": "stringOrNull",
    "newName": "stringOrNull"
  },
  {
    "name": "createObjectOrUndefined",
    "newName": "createObjectOrUndefined"
  },
  {
    "name": "getSingletonInstance",
    "newName": "getSingletonInstance"
  },
  {
    "name": "getValidatedDataOrUndefined",
    "newName": "getValidatedDataOrUndefined"
  },
  {
    "name": "getStringOrEmpty",
    "newName": "getStringOrEmpty"
  },
  {
    "name": "temporaryData",
    "newName": "temporaryData"
  },
  {
    "name": "createInstanceWithTemporaryData",
    "newName": "createInstanceWithTemporaryData"
  },
  {
    "name": "booleanArrayCache",
    "newName": "booleanArrayCache"
  },
  {
    "name": "zeroValueArrayCache",
    "newName": "zeroValueArrayCache"
  },
  {
    "name": "convertToTuple",
    "newName": "convertToTuple"
  },
  {
    "name": "onFulfilled",
    "newName": "onFulfilled"
  },
  {
    "name": "polyfillCheckCache",
    "newName": "polyfillCheckCache"
  },
  {
    "name": "requiresPolyfill",
    "newName": "requiresPolyfill"
  },
  {
    "name": "CustomMap",
    "newName": "CustomMap"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "setTimeoutWrapper"
  },
  {
    "name": "EnhancedMap",
    "newName": "EnhancedMap"
  },
  {
    "name": "EnsureMutable",
    "newName": "EnsureMutable"
  },
  {
    "name": "TransformMapEntries",
    "newName": "TransformMapEntries"
  },
  {
    "name": "TransformEntries",
    "newName": "TransformEntries"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGenerator"
  },
  {
    "name": "value",
    "newName": "adValue"
  },
  {
    "name": "CustomMap",
    "newName": "adMap"
  },
  {
    "name": "findEntry",
    "newName": "adEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCircularNode"
  },
  {
    "name": "setFlag34",
    "newName": "setAdFlag"
  },
  {
    "name": "assertBoolean",
    "newName": "validateBoolean"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseAdBooleanOrNumber"
  },
  {
    "name": "ensureString",
    "newName": "validateString"
  },
  {
    "name": "stringOrNull",
    "newName": "parseAdStringOrNull"
  },
  {
    "name": "getBitFlags",
    "newName": "getAdBitFlags"
  },
  {
    "name": "setRawBitFlags",
    "newName": "setAdRawBitFlags"
  },
  {
    "name": "noopFunction",
    "newName": "emptyFunction"
  },
  {
    "name": "inheritPrototype",
    "newName": "extendPrototype"
  },
  {
    "name": "temporaryData",
    "newName": "tempAdData"
  },
  {
    "name": "booleanArrayCache",
    "newName": "boolArrayCache"
  },
  {
    "name": "zeroValueArrayCache",
    "newName": "zeroArrayCache"
  },
  {
    "name": "onFulfilled",
    "newName": "onAdFulfilled"
  },
  {
    "name": "polyfillCheckCache",
    "newName": "polyfillCache"
  },
  {
    "name": "requiresPolyfill",
    "newName": "needsPolyfill"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adTimeoutWrapper"
  },
  {
    "name": "identityFunction",
    "newName": "identity"
  },
  {
    "name": "EnhancedMap",
    "newName": "EnhancedAdMap"
  },
  {
    "name": "EnsureMutable",
    "newName": "ensureAdMutable"
  },
  {
    "name": "TransformMapEntries",
    "newName": "transformAdMapEntries"
  },
  {
    "name": "TransformEntries",
    "newName": "transformAdEntries"
  },
  {
    "name": "CustomMap",
    "newName": "AdMap"
  },
  {
    "name": "transformElement",
    "newName": "transformAdElement"
  },
  {
    "name": "transformElementContent",
    "newName": "transformAdContent"
  },
  {
    "name": "cloneOrTransform",
    "newName": "cloneOrTransformAd"
  },
  {
    "name": "transformWithFlags",
    "newName": "transformAdWithFlags"
  },
  {
    "name": "cloneIfNotFrozen",
    "newName": "cloneAdIfNotFrozen"
  },
  {
    "name": "checkFlags",
    "newName": "checkAdFlags"
  },
  {
    "name": "getTransformedElement",
    "newName": "getTransformedAdElement"
  },
  {
    "name": "getElementAtIndexWithDefault",
    "newName": "getAdElementAtIndexWithDefault"
  },
  {
    "name": "getElementAtIndex",
    "newName": "getAdElementAtIndex"
  },
  {
    "name": "updateElement",
    "newName": "updateAdElement"
  },
  {
    "name": "updateElementAtIndex",
    "newName": "updateAdElementAtIndex"
  },
  {
    "name": "transformArrayElements",
    "newName": "transformAdArrayElements"
  },
  {
    "name": "getArrayOrEmpty",
    "newName": "getAdArrayOrEmpty"
  },
  {
    "name": "updateFlags",
    "newName": "updateAdFlags"
  },
  {
    "name": "checkIfFrozen",
    "newName": "checkAdIfFrozen"
  },
  {
    "name": "transformAndAddElement",
    "newName": "transformAndAddAdElement"
  },
  {
    "name": "transformElementAtIndex",
    "newName": "transformAdElementAtIndex"
  },
  {
    "name": "transformAndReplaceArray",
    "newName": "transformAndReplaceAdArray"
  },
  {
    "name": "updateOrRemoveElement",
    "newName": "updateOrRemoveAdElement"
  },
  {
    "name": "replaceArrayIfNotArray",
    "newName": "replaceAdArrayIfNotArray"
  },
  {
    "name": "pf",
    "newName": "processAd"
  },
  {
    "name": "qf",
    "newName": "queryAd"
  },
  {
    "name": "rf",
    "newName": "retrieveAd"
  },
  {
    "name": "of",
    "newName": "optimizeAd"
  },
  {
    "name": "tf",
    "newName": "transformField"
  },
  {
    "name": "uf",
    "newName": "updateField"
  },
  {
    "name": "vf",
    "newName": "validateField"
  },
  {
    "name": "fetchData",
    "newName": "fetchAdData"
  },
  {
    "name": "xf",
    "newName": "executeAdFunction"
  },
  {
    "name": "parseData",
    "newName": "parseAdData"
  },
  {
    "name": "finalizeAdAttributes",
    "newName": "finalizeAdFields"
  },
  {
    "name": "Bf",
    "newName": "beginAdProcessing"
  },
  {
    "name": "Cf",
    "newName": "completeAdProcessing"
  },
  {
    "name": "rateEntries",
    "newName": "getSingletonInstance"
  },
  {
    "name": "createCircularNode",
    "newName": "circularNode"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getBitFlags"
  },
  {
    "name": "iterateEntries",
    "newName": "entries"
  },
  {
    "name": "throwIfFlag2",
    "newName": "validateFlag"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "of",
    "newName": "findInEntries"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "updateElementAtIndex",
    "newName": "updateEntryAtIndex"
  },
  {
    "name": "value",
    "newName": "newValue"
  },
  {
    "name": "qf",
    "newName": "compareEntries"
  },
  {
    "name": "rf",
    "newName": "getEntry"
  },
  {
    "name": "tf",
    "newName": "cloneEntry"
  },
  {
    "name": "StorageField",
    "newName": "storageField"
  },
  {
    "name": "cloneIfNotFrozen",
    "newName": "cloneEntryIfNotFrozen"
  },
  {
    "name": "createObjectOrUndefined",
    "newName": "createObject"
  },
  {
    "name": "uf",
    "newName": "createOrUpdateEntry"
  },
  {
    "name": "vf",
    "newName": "getOrCreateEntry"
  },
  {
    "name": "fetchData",
    "newName": "fetchEntryData"
  },
  {
    "name": "xf",
    "newName": "processEntries"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryCounter"
  },
  {
    "name": "key",
    "newName": "entryKey"
  },
  {
    "name": "entry",
    "newName": "currentEntry"
  },
  {
    "name": "toggleBitFlag",
    "newName": "toggleFlag"
  },
  {
    "name": "setRawBitFlags",
    "newName": "setBitFlags"
  },
  {
    "name": "checkIfFrozen",
    "newName": "isFrozen"
  },
  {
    "name": "toArray",
    "newName": "convertToArray"
  },
  {
    "name": "updateFlagsForFrozenObjects",
    "newName": "updateFlagsForFrozen"
  },
  {
    "name": "finalizeFlagsUpdate",
    "newName": "finalizeFlagUpdates"
  },
  {
    "name": "parseData",
    "newName": "parseEntryData"
  },
  {
    "name": "pf",
    "newName": "processEntry"
  },
  {
    "name": "TagSessionFields",
    "newName": "tagFields"
  },
  {
    "name": "Cf",
    "newName": "updateEntryData"
  },
  {
    "name": "sanitizeAdElementData",
    "newName": "sanitizeData"
  },
  {
    "name": "undefinedVariable1",
    "newName": "isUndefined1"
  },
  {
    "name": "processElements",
    "newName": "processEntryElements"
  },
  {
    "name": "transformElementContent",
    "newName": "transformContent"
  },
  {
    "name": "unknownVariable",
    "newName": "isUnknown"
  },
  {
    "name": "emptyObject1",
    "newName": "emptyObject"
  },
  {
    "name": "sanitizeAdElementData",
    "newName": "sanitizeData"
  },
  {
    "name": "objectTransformationFallback",
    "newName": "fallbackTransformation"
  },
  {
    "name": "objectTransformationInstance",
    "newName": "objectTransformation"
  },
  {
    "name": "arrayTransformationInstance",
    "newName": "arrayTransformation"
  },
  {
    "name": "applyTransformations",
    "newName": "applyEntryTransformations"
  },
  {
    "name": "initializeTransformations",
    "newName": "initializeEntryTransformations"
  },
  {
    "name": "transformationsSymbol",
    "newName": "entryTransformationsSymbol"
  },
  {
    "name": "cleanupSymbol",
    "newName": "entryCleanupSymbol"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "trustedTypesPolicy",
    "newName": "typesPolicy"
  },
  {
    "name": "getTrustedTypesPolicy",
    "newName": "getTypesPolicy"
  },
  {
    "name": "trustedURLMarker",
    "newName": "urlMarker"
  },
  {
    "name": "createTrustedURL",
    "newName": "createURL"
  },
  {
    "name": "invalidClosureURL",
    "newName": "invalidURL"
  },
  {
    "name": "URLSchemeValidator",
    "newName": "schemeValidator"
  },
  {
    "name": "createSchemeValidator",
    "newName": "createValidator"
  },
  {
    "name": "allowedURLSchemes",
    "newName": "urlSchemes"
  },
  {
    "name": "createObjectURLWithValidation",
    "newName": "createValidatedURL"
  },
  {
    "name": "safeURLPattern",
    "newName": "urlPattern"
  },
  {
    "name": "safeHTMLMarker",
    "newName": "htmlMarker"
  },
  {
    "name": "SafeHTML",
    "newName": "safeHTML"
  },
  {
    "name": "emptySafeHTML",
    "newName": "emptyHTML"
  },
  {
    "name": "safeStyleMarker",
    "newName": "styleMarker"
  },
  {
    "name": "SafeHtml",
    "newName": "safeHtml"
  },
  {
    "name": "unwrapSafeHtml",
    "newName": "unwrapHtml"
  },
  {
    "name": "createSafeHtmlFromTemplate",
    "newName": "createHtmlFromTemplate"
  },
  {
    "name": "createSafeStyleFromTemplate",
    "newName": "createStyleFromTemplate"
  },
  {
    "name": "Coordinate",
    "newName": "CoordinateClass"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritProto"
  },
  {
    "name": "globalScope",
    "newName": "globalContext"
  },
  {
    "name": "Size",
    "newName": "SizeClass"
  },
  {
    "name": "areSizesEqual",
    "newName": "compareSizes"
  },
  {
    "name": "setElementSafeHtml",
    "newName": "setElementHtml"
  },
  {
    "name": "setElementSrcFromTrustedUrl",
    "newName": "setElementSrc"
  },
  {
    "name": "debugStringifyObject",
    "newName": "debugStringify"
  },
  {
    "name": "writeSafeHtmlToDocument",
    "newName": "writeHtmlToDoc"
  },
  {
    "name": "AdElement",
    "newName": "AdElementClass"
  },
  {
    "name": "serializeData",
    "newName": "serializeEntryData"
  },
  {
    "name": "ErrorLogger",
    "newName": "Logger"
  },
  {
    "name": "ErrorDetails",
    "newName": "ErrorInfo"
  },
  {
    "name": "isValidError",
    "newName": "validateError"
  },
  {
    "name": "noopFunction",
    "newName": "noop"
  },
  {
    "name": "once",
    "newName": "runOnce"
  },
  {
    "name": "clearFunction",
    "newName": "clearFunc"
  },
  {
    "name": "debounceFunction",
    "newName": "debounce"
  },
  {
    "name": "supportsPassive",
    "newName": "checkPassiveSupport"
  },
  {
    "name": "normalizeEventOptions",
    "newName": "normalizeOptions"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addNormalizedEventListener"
  },
  {
    "name": "removeEventListenerWithNormalization",
    "newName": "removeNormalizedEventListener"
  },
  {
    "name": "forEachInObject",
    "newName": "forEachObject"
  },
  {
    "name": "filterObject",
    "newName": "filterObj"
  },
  {
    "name": "everyInObject",
    "newName": "everyObj"
  },
  {
    "name": "valuesOfObject",
    "newName": "getObjectValues"
  },
  {
    "name": "keysOfObject",
    "newName": "getObjectKeys"
  },
  {
    "name": "getObjectPathValue",
    "newName": "getPathValue"
  },
  {
    "name": "hasOwnPropertySafe",
    "newName": "hasProperty"
  },
  {
    "name": "containsValue",
    "newName": "containsVal"
  },
  {
    "name": "findKeyInObject",
    "newName": "findKey"
  },
  {
    "name": "isEmptyObject",
    "newName": "isEmptyObj"
  },
  {
    "name": "clearObject",
    "newName": "clearObj"
  },
  {
    "name": "getObjectPropertyOrDefault",
    "newName": "getPropertyOrDefault"
  },
  {
    "name": "commonObjectKeys",
    "newName": "commonKeys"
  },
  {
    "name": "extendObject",
    "newName": "extendObj"
  },
  {
    "name": "getTrustedTypesPolicy",
    "newName": "getTypesPolicy"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getBitFlags"
  },
  {
    "name": "updateElementAtIndex",
    "newName": "updateEntryAtIndex"
  },
  {
    "name": "createObjectOrUndefined",
    "newName": "createObject"
  },
  {
    "name": "trustedTypesPolicy",
    "newName": "trustedTypesPolicyInstance"
  },
  {
    "name": "getTrustedTypesPolicy",
    "newName": "getTrustedTypesPolicyInstance"
  },
  {
    "name": "generatorWrapper",
    "newName": "policyGenerator"
  },
  {
    "name": "value",
    "newName": "trustedTypes"
  },
  {
    "name": "CustomMap",
    "newName": "error"
  },
  {
    "name": "TrustedURL",
    "newName": "TrustedResourceURL"
  },
  {
    "name": "trustedURLMarker",
    "newName": "trustedResourceURLMarker"
  },
  {
    "name": "createTrustedURL",
    "newName": "createTrustedResourceURL"
  },
  {
    "name": "MediaSourceURL",
    "newName": "MediaSourceObjectURL"
  },
  {
    "name": "invalidClosureURL",
    "newName": "invalidClosureResourceURL"
  },
  {
    "name": "URLSchemeValidator",
    "newName": "URLSchemeChecker"
  },
  {
    "name": "createSchemeValidator",
    "newName": "createURLSchemeChecker"
  },
  {
    "name": "allowedURLSchemes",
    "newName": "allowedURLSchemeCheckers"
  },
  {
    "name": "createObjectURLWithValidation",
    "newName": "createValidatedObjectURL"
  },
  {
    "name": "safeURLPattern",
    "newName": "safeURLRegex"
  },
  {
    "name": "safeHTMLMarker",
    "newName": "safeHTMLMarkerInstance"
  },
  {
    "name": "SafeHTML",
    "newName": "SafeHTMLString"
  },
  {
    "name": "emptySafeHTML",
    "newName": "emptySafeHTMLString"
  },
  {
    "name": "safeStyleMarker",
    "newName": "safeStyleMarkerInstance"
  },
  {
    "name": "SafeHtml",
    "newName": "SafeStyleString"
  },
  {
    "name": "unwrapSafeHtml",
    "newName": "unwrapSafeStyleString"
  },
  {
    "name": "createSafeHtmlFromTemplate",
    "newName": "createSafeHTMLFromTemplate"
  },
  {
    "name": "createSafeStyleFromTemplate",
    "newName": "createSafeStyleStringFromTemplate"
  },
  {
    "name": "Coordinate",
    "newName": "Point"
  },
  {
    "name": "inheritPrototype",
    "newName": "x"
  },
  {
    "name": "globalScope",
    "newName": "y"
  },
  {
    "name": "ceilRectangle",
    "newName": "ceil"
  },
  {
    "name": "floorRectangle",
    "newName": "floor"
  },
  {
    "name": "roundRectangle",
    "newName": "round"
  },
  {
    "name": "scaleRectangle",
    "newName": "scale"
  },
  {
    "name": "Size",
    "newName": "Dimension"
  },
  {
    "name": "areSizesEqual",
    "newName": "areDimensionsEqual"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "dimensionPrototype"
  },
  {
    "name": "aspectRatio",
    "newName": "getAspectRatio"
  },
  {
    "name": "isEmpty",
    "newName": "isZero"
  },
  {
    "name": "setElementSafeHtml",
    "newName": "setElementSafeHTML"
  },
  {
    "name": "setElementSrcFromTrustedUrl",
    "newName": "setElementSrcFromTrustedResourceURL"
  },
  {
    "name": "debugStringifyObject",
    "newName": "debugStringify"
  },
  {
    "name": "writeSafeHtmlToDocument",
    "newName": "writeSafeHTML"
  },
  {
    "name": "decodeUriComponentWithSpace",
    "newName": "decodeURIComponentWithSpaces"
  },
  {
    "name": "truncateString",
    "newName": "truncate"
  },
  {
    "name": "repeatString",
    "newName": "repeat"
  },
  {
    "name": "stringifyNullable",
    "newName": "stringifyOrEmpty"
  },
  {
    "name": "randomInt",
    "newName": "randomInteger"
  },
  {
    "name": "camelCaseFromDash",
    "newName": "toCamelCase"
  },
  {
    "name": "dashCaseFromCamel",
    "newName": "toDashCase"
  },
  {
    "name": "capitalizeFirstLetter",
    "newName": "capitalize"
  },
  {
    "name": "parseInteger",
    "newName": "parseIntSafe"
  },
  {
    "name": "getDomHelper",
    "newName": "getDocumentHelper"
  },
  {
    "name": "getElementByIdOrDirect",
    "newName": "getElement"
  },
  {
    "name": "setElementAttributes",
    "newName": "setAttributes"
  },
  {
    "name": "attributeMappings",
    "newName": "attributeMap"
  },
  {
    "name": "getViewportSize",
    "newName": "getViewportDimensions"
  },
  {
    "name": "getDocumentScrollCoordinate",
    "newName": "getDocumentScrollPosition"
  },
  {
    "name": "getWindowForDocument",
    "newName": "getWindow"
  },
  {
    "name": "createElementWithOptionalClassesAndAttributes",
    "newName": "createElementWithClassesAndAttributes"
  },
  {
    "name": "appendChildren",
    "newName": "appendChildNodes"
  },
  {
    "name": "createElement",
    "newName": "createElementInDocument"
  },
  {
    "name": "removeElement",
    "newName": "removeNode"
  },
  {
    "name": "getParentElement",
    "newName": "getParentNode"
  },
  {
    "name": "containsElement",
    "newName": "containsNode"
  },
  {
    "name": "getDocument",
    "newName": "getNodeDocument"
  },
  {
    "name": "getContentWindow",
    "newName": "getIframeContentWindow"
  },
  {
    "name": "findParentElement",
    "newName": "findParentNode"
  },
  {
    "name": "DocumentHelper",
    "newName": "DOMHelper"
  },
  {
    "name": "canHaveChildren",
    "newName": "canContainChildren"
  },
  {
    "name": "rectangleContains",
    "newName": "containsNode"
  },
  {
    "name": "isMobile",
    "newName": "isMobileDevice"
  },
  {
    "name": "isTablet",
    "newName": "isTabletDevice"
  },
  {
    "name": "urlRegex",
    "newName": "urlPattern"
  },
  {
    "name": "extractBaseUrl",
    "newName": "getBaseURL"
  },
  {
    "name": "parseQueryString",
    "newName": "parseQueryParams"
  },
  {
    "name": "searchDelimiterRegex",
    "newName": "searchDelimiterPattern"
  },
  {
    "name": "getParameterFromUrl",
    "newName": "getQueryParam"
  },
  {
    "name": "isAccessibleFrame",
    "newName": "isAccessibleWindow"
  },
  {
    "name": "iterateFrames",
    "newName": "iterateParentFrames"
  },
  {
    "name": "getTopMostAccessibleWindow",
    "newName": "getTopAccessibleWindow"
  },
  {
    "name": "getParentFrame",
    "newName": "getParentWindow"
  },
  {
    "name": "getTopFrame",
    "newName": "getTopWindow"
  },
  {
    "name": "secureRandom",
    "newName": "secureRandomNumber"
  },
  {
    "name": "forEachInObject",
    "newName": "forEachProperty"
  },
  {
    "name": "hashString",
    "newName": "hash"
  },
  {
    "name": "extractHostname",
    "newName": "getHostname"
  },
  {
    "name": "isSecureContext",
    "newName": "isSecureProtocol"
  },
  {
    "name": "hasFrameWithName",
    "newName": "hasFrame"
  },
  {
    "name": "findFrameByName",
    "newName": "findFrame"
  },
  {
    "name": "getDeviceType",
    "newName": "getDeviceCategory"
  },
  {
    "name": "generatePageViewId",
    "newName": "generateUniquePageViewId"
  },
  {
    "name": "createHtmlElement",
    "newName": "createHTMLElement"
  },
  {
    "name": "getTopAccessibleContext",
    "newName": "getTopAccessibleWindow"
  },
  {
    "name": "ampProjectUrlRegex",
    "newName": "ampProjectURLPattern"
  },
  {
    "name": "computeReferrerUrl",
    "newName": "getReferrerURL"
  },
  {
    "name": "collectAncestorOrigins",
    "newName": "collectAncestorURLs"
  },
  {
    "name": "AdUrlComponent",
    "newName": "AdURLComponent"
  },
  {
    "name": "UrlDepthInfo",
    "newName": "URLDepthInfo"
  },
  {
    "name": "deobfuscationId",
    "newName": "debuggingId"
  },
  {
    "name": "getDeobfuscationId",
    "newName": "getDebuggingId"
  },
  {
    "name": "getCurrentTimeWithPerformanceTiming",
    "newName": "getCurrentTime"
  },
  {
    "name": "getPerformanceNow",
    "newName": "getPerformanceTime"
  },
  {
    "name": "getPerformanceTimingAttribute",
    "newName": "getPerformanceTimingValue"
  },
  {
    "name": "getEarliestDomLoadingOrInteractiveTime",
    "newName": "getEarliestDomEventTime"
  },
  {
    "name": "PerformanceEvent",
    "newName": "PerformanceMetric"
  },
  {
    "name": "performanceApi",
    "newName": "performanceAPI"
  },
  {
    "name": "supportsPerformanceMarks",
    "newName": "isPerformanceMarkSupported"
  },
  {
    "name": "isDebugMode",
    "newName": "isDebuggingEnabled"
  },
  {
    "name": "PerformanceMonitor",
    "newName": "PerformanceTracker"
  },
  {
    "name": "clearPerformanceMarks",
    "newName": "clearPerformanceMetrics"
  },
  {
    "name": "UrlQueryBuilder",
    "newName": "URLQueryBuilder"
  },
  {
    "name": "createKeyValuePair",
    "newName": "createKeyValueEntry"
  },
  {
    "name": "serializeParameters",
    "newName": "serializeParams"
  },
  {
    "name": "encodeParameterValue",
    "newName": "encodeParamValue"
  },
  {
    "name": "addParameter",
    "newName": "addQueryParam"
  },
  {
    "name": "addKeyValuePair",
    "newName": "addKeyValueEntry"
  },
  {
    "name": "buildAdUrl",
    "newName": "buildAdRequestURL"
  },
  {
    "name": "calculateAvailableSpace",
    "newName": "getMaxURLLength"
  },
  {
    "name": "ErrorLogger",
    "newName": "ErrorReporter"
  },
  {
    "name": "handleAsync",
    "newName": "reportingEndpoint"
  },
  {
    "name": "isDone",
    "newName": "errorContext"
  },
  {
    "name": "createDeferred",
    "newName": "isDeferred"
  },
  {
    "name": "tasks",
    "newName": "metaData"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "errorLoggerPrototype"
  },
  {
    "name": "createSigned64",
    "newName": "setMetaData"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "setErrorContext"
  },
  {
    "name": "numericStringRegex",
    "newName": "setDeferred"
  },
  {
    "name": "parseIntEnum",
    "newName": "setReportingEnabled"
  },
  {
    "name": "hasBrands",
    "newName": "executeWithErrorHandling"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "wrapFunctionWithErrorHandling"
  },
  {
    "name": "boundFunctionCall",
    "newName": "reportError"
  },
  {
    "name": "formatErrorMessage",
    "newName": "formatError"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "sendImageRequestWithRetryHandler"
  },
  {
    "name": "sendImageRequest",
    "newName": "sendImageRequestHandler"
  },
  {
    "name": "sendBeaconWithParams",
    "newName": "sendBeaconWithParameters"
  },
  {
    "name": "sendBeacon",
    "newName": "sendBeaconRequest"
  },
  {
    "name": "serializeDataWithFilter",
    "newName": "serializeFilteredData"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "iterate"
  },
  {
    "name": "createCircularNode",
    "newName": "node"
  },
  {
    "name": "entryIdCounter",
    "newName": "idCounter"
  },
  {
    "name": "key",
    "newName": "propertyKey"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryCounter"
  },
  {
    "name": "value",
    "newName": "index"
  },
  {
    "name": "key",
    "newName": "entryKeys"
  },
  {
    "name": "findEntry",
    "newName": "entryFound"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "generatorWrapper",
    "newName": "generator"
  },
  {
    "name": "iterateEntries",
    "newName": "entryIterator"
  },
  {
    "name": "serializeParameters",
    "newName": "serializeParams"
  },
  {
    "name": "calculateAvailableSpace",
    "newName": "calcAvailableSpace"
  },
  {
    "name": "ErrorLogger",
    "newName": "ErrorLoggerClass"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "errorLoggerPrototype"
  },
  {
    "name": "createSigned64",
    "newName": "createSigned64Task"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseBooleanOrNum"
  },
  {
    "name": "numericStringRegex",
    "newName": "setDeferred"
  },
  {
    "name": "parseIntEnum",
    "newName": "setTimeoutFlag"
  },
  {
    "name": "hasBrands",
    "newName": "executeWithBrands"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "createIteratorWithTransform"
  },
  {
    "name": "boundFunctionCall",
    "newName": "boundFunctionCallHandler"
  },
  {
    "name": "clearPerformanceMarks",
    "newName": "clearPerfMarks"
  },
  {
    "name": "ErrorDetails",
    "newName": "ErrorDetailsClass"
  },
  {
    "name": "formatErrorMessage",
    "newName": "formatErrorMsg"
  },
  {
    "name": "addKeyValuePair",
    "newName": "addKeyValuePairToQuery"
  },
  {
    "name": "isValidError",
    "newName": "isErrorValid"
  },
  {
    "name": "computeReferrerUrl",
    "newName": "getReferrerUrl"
  },
  {
    "name": "addParameter",
    "newName": "addParamToQuery"
  },
  {
    "name": "extractBaseUrl",
    "newName": "getBaseUrl"
  },
  {
    "name": "sendAdEvent",
    "newName": "sendAdEventWithParams"
  },
  {
    "name": "UrlQueryBuilder",
    "newName": "QueryBuilder"
  },
  {
    "name": "sendImageRequest",
    "newName": "sendImage"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "retrySendImage"
  },
  {
    "name": "createHtmlElement",
    "newName": "createElement"
  },
  {
    "name": "removeElement",
    "newName": "removeArrayElement"
  },
  {
    "name": "removeEventListenerWithNormalization",
    "newName": "removeNormalizedEventListener"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addNormalizedEventListener"
  },
  {
    "name": "sendBeaconWithParams",
    "newName": "sendBeaconRequest"
  },
  {
    "name": "sendBeacon",
    "newName": "sendBeaconRequestWithOptions"
  },
  {
    "name": "serializeDataWithFilter",
    "newName": "serializeData"
  },
  {
    "name": "logErrorWithBeacon",
    "newName": "logError"
  },
  {
    "name": "getAdPropertyNumeric",
    "newName": "getAdNumericProperty"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchRejection"
  },
  {
    "name": "MessageBuilder",
    "newName": "AdMessageBuilder"
  },
  {
    "name": "updateOrRemoveElement",
    "newName": "updateOrRemoveAdElement"
  },
  {
    "name": "parseNullableIntEnum",
    "newName": "parseIntEnumOrNull"
  },
  {
    "name": "optionalString",
    "newName": "getOptionalString"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getBitFlags"
  },
  {
    "name": "createInstanceWithTemporaryData",
    "newName": "createTempInstance"
  },
  {
    "name": "AdElement",
    "newName": "AdElementClass"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritFrom"
  },
  {
    "name": "Message",
    "newName": "AdMessage"
  },
  {
    "name": "MessagePart",
    "newName": "AdMessageParts"
  },
  {
    "name": "MessageHeader",
    "newName": "AdMessageHeader"
  },
  {
    "name": "MessagePayload",
    "newName": "AdMessagePayload"
  },
  {
    "name": "MessageFooter",
    "newName": "AdMessageFooter"
  },
  {
    "name": "MessageSignature",
    "newName": "AdMessageSignature"
  },
  {
    "name": "MessageTimestamp",
    "newName": "AdMessageTimestamp"
  },
  {
    "name": "setMessageType",
    "newName": "setAdMessageType"
  },
  {
    "name": "setMessageId",
    "newName": "setAdMessageId"
  },
  {
    "name": "MessageBody",
    "newName": "AdMessageBody"
  },
  {
    "name": "MessageBodyTypes",
    "newName": "AdMessageBodyTypes"
  },
  {
    "name": "MessageWrapper",
    "newName": "AdMessageWrapper"
  },
  {
    "name": "wrapMessage",
    "newName": "wrapAdMessage"
  },
  {
    "name": "setWrapperType",
    "newName": "setAdWrapperType"
  },
  {
    "name": "setWrapperSignature",
    "newName": "setAdWrapperSignature"
  },
  {
    "name": "setWrapperTimestamp",
    "newName": "setAdWrapperTimestamp"
  },
  {
    "name": "setWrapperId",
    "newName": "setAdWrapperId"
  },
  {
    "name": "WrapperMetadata",
    "newName": "AdWrapperMetadata"
  },
  {
    "name": "MetadataTypes",
    "newName": "AdMetadataTypes"
  },
  {
    "name": "TagSession",
    "newName": "AdTagSession"
  },
  {
    "name": "TagSessionMetadata",
    "newName": "AdTagSessionMetadata"
  },
  {
    "name": "SessionTypes",
    "newName": "AdSessionTypes"
  },
  {
    "name": "SessionMetadataTypes",
    "newName": "AdSessionMetadataTypes"
  },
  {
    "name": "TagSessionBuilder",
    "newName": "AdTagSessionBuilder"
  },
  {
    "name": "getAdSessionCorrelator",
    "newName": "getSessionCorrelator"
  },
  {
    "name": "buildTagSession",
    "newName": "buildAdTagSession"
  },
  {
    "name": "TagSessionFields",
    "newName": "AdTagSessionFields"
  },
  {
    "name": "QueryMetadata",
    "newName": "AdQueryMetadata"
  },
  {
    "name": "QueryData",
    "newName": "AdQueryData"
  },
  {
    "name": "QueryPayload",
    "newName": "AdQueryPayload"
  },
  {
    "name": "getEscapedQueryIdVariantC",
    "newName": "getQueryIdVariantC"
  },
  {
    "name": "QueryHeader",
    "newName": "AdQueryHeader"
  },
  {
    "name": "QueryWrapper",
    "newName": "AdQueryWrapper"
  },
  {
    "name": "QueryService",
    "newName": "AdQueryService"
  },
  {
    "name": "QueryHandler",
    "newName": "AdQueryHandler"
  },
  {
    "name": "QueryProcessor",
    "newName": "AdQueryProcessor"
  },
  {
    "name": "ProcessQuery",
    "newName": "AdProcessQuery"
  },
  {
    "name": "setFlag34",
    "newName": "setAdFlag34"
  },
  {
    "name": "QueryMessageBuilder",
    "newName": "AdQueryMessageBuilder"
  },
  {
    "name": "QueryMessageProcessor",
    "newName": "AdQueryMessageProcessor"
  },
  {
    "name": "assertBoolean",
    "newName": "assertAdBoolean"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "sendHttpRequest",
    "newName": "sendAdHttpRequest"
  },
  {
    "name": "AdEventLogger",
    "newName": "AdEventLoggerClass"
  },
  {
    "name": "flushAdEvents",
    "newName": "flushEvents"
  },
  {
    "name": "AdEventLoggerWithThrottling",
    "newName": "AdEventLoggerWithThrottle"
  },
  {
    "name": "handleThenable",
    "newName": "Rectangle"
  },
  {
    "name": "getRectangleWidth",
    "newName": "getWidth"
  },
  {
    "name": "getRectangleHeight",
    "newName": "getHeight"
  },
  {
    "name": "createRectangle",
    "newName": "createRectangleFromObject"
  },
  {
    "name": "rectangleContains",
    "newName": "containsRectangle"
  },
  {
    "name": "expandRectangle",
    "newName": "expandRect"
  },
  {
    "name": "ceilRectangle",
    "newName": "ceilRect"
  },
  {
    "name": "floorRectangle",
    "newName": "floorRect"
  },
  {
    "name": "roundRectangle",
    "newName": "roundRect"
  },
  {
    "name": "translateRectangle",
    "newName": "translateRect"
  },
  {
    "name": "scaleRectangle",
    "newName": "scaleRect"
  },
  {
    "name": "RectangleDimensions",
    "newName": "RectDimensions"
  },
  {
    "name": "rectangleFromDimensions",
    "newName": "createRectangleFromDimensions"
  },
  {
    "name": "getRectangleSize",
    "newName": "getRectSize"
  },
  {
    "name": "getContextData",
    "newName": "getAdContextData"
  },
  {
    "name": "PersistentState",
    "newName": "AdPersistentState"
  },
  {
    "name": "generateCorrelator",
    "newName": "generateAdCorrelator"
  },
  {
    "name": "getCachedValueOrCompute",
    "newName": "getCachedOrComputeValue"
  },
  {
    "name": "getOrGenerateCorrelator",
    "newName": "getOrGenerateAdCorrelator"
  },
  {
    "name": "getMasterOrGlobalCorrelator",
    "newName": "getMasterOrGlobalAdCorrelator"
  },
  {
    "name": "masterPersistentState",
    "newName": "masterAdPersistentState"
  },
  {
    "name": "adFormatRegionMapping",
    "newName": "adRegionMapping"
  },
  {
    "name": "adRegionConfig",
    "newName": "adRegionConfigMapping"
  },
  {
    "name": "errorReportingUrl",
    "newName": "errorReportingScriptUrl"
  },
  {
    "name": "ErrorReporter",
    "newName": "AdErrorReporter"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "setTasks"
  },
  {
    "name": "createSigned64",
    "newName": "setEntryCounter"
  },
  {
    "name": "numericStringRegex",
    "newName": "setDeferredFlag"
  },
  {
    "name": "parseIntEnum",
    "newName": "setCreateDeferredFlag"
  },
  {
    "name": "boundFunctionCall",
    "newName": "handleError"
  },
  {
    "name": "hasBrands",
    "newName": "executeWithErrorHandling"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "createErrorHandlingIterator"
  },
  {
    "name": "getVisibilityStateCode",
    "newName": "getVisibilityCode"
  },
  {
    "name": "getVisibilityChangeEventName",
    "newName": "getVisibilityChangeEvent"
  },
  {
    "name": "getRumEventQueue",
    "newName": "getRumQueue"
  },
  {
    "name": "sanitizeInput",
    "newName": "sanitizeHtmlInput"
  },
  {
    "name": "appendToUrl",
    "newName": "appendParamsToUrl"
  },
  {
    "name": "PerformanceLogger",
    "newName": "PerformanceLoggerClass"
  },
  {
    "name": "flushData",
    "newName": "flushLoggerData"
  },
  {
    "name": "initPerformanceLogger",
    "newName": "initializeLogger"
  },
  {
    "name": "setPerformanceMetric",
    "newName": "setLoggerMetric"
  },
  {
    "name": "logEventWithDimension",
    "newName": "logEventWithDimensionData"
  },
  {
    "name": "calculateEventDimensionLength",
    "newName": "calculateDimensionLength"
  },
  {
    "name": "recordEvent",
    "newName": "recordLoggerEvent"
  },
  {
    "name": "checkAndFlushIfNeeded",
    "newName": "checkAndFlushLogger"
  },
  {
    "name": "generateBeaconUrl",
    "newName": "generateBeaconRequestUrl"
  },
  {
    "name": "processEvent",
    "newName": "processLoggerEvent"
  },
  {
    "name": "getSingletonInstance",
    "newName": "getSingleton"
  },
  {
    "name": "resolvePromise",
    "newName": "initializeLoggerInstance"
  },
  {
    "name": "settlePromise",
    "newName": "setLoggerPromise"
  },
  {
    "name": "addMultipleKeyValues",
    "newName": "addMultipleParams"
  },
  {
    "name": "value",
    "newName": "documentWrapper"
  },
  {
    "name": "entryIdCounter",
    "newName": "performanceLogger"
  },
  {
    "name": "executeCallbacks",
    "newName": "flushTimeout"
  },
  {
    "name": "createDeferred",
    "newName": "deferredTaskSize"
  },
  {
    "name": "events",
    "newName": "eventQueue"
  },
  {
    "name": "tasks",
    "newName": "taskSize"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "unhandledRejectionQueue"
  },
  {
    "name": "settlePromise",
    "newName": "settledPromises"
  },
  {
    "name": "resolvePromise",
    "newName": "resolvedPromises"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandlers"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandlers"
  },
  {
    "name": "report",
    "newName": "eventReport"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutSet"
  },
  {
    "name": "tryCall",
    "newName": "tryCalling"
  },
  {
    "name": "sendBeacon",
    "newName": "sendBeaconRequest"
  },
  {
    "name": "isDone",
    "newName": "finalizeLogging"
  },
  {
    "name": "logError",
    "newName": "logErrorHandler"
  },
  {
    "name": "firstQuartileTime",
    "newName": "firstQuartileEventHandler"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "createIterator",
    "newName": "iteratorCreator"
  },
  {
    "name": "totalAdBufferingTime",
    "newName": "totalBufferingTime"
  },
  {
    "name": "domain",
    "newName": "adDomain"
  },
  {
    "name": "path",
    "newName": "adPath"
  },
  {
    "name": "google_timing_params",
    "newName": "googleTimingParams"
  },
  {
    "name": "updateMaxSize",
    "newName": "maxSizeUpdater"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "sendImageRequest"
  },
  {
    "name": "getVisibilityChangeEventName",
    "newName": "getVisibilityEventName"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addNormalizedEventListener"
  },
  {
    "name": "removeEventListenerWithNormalization",
    "newName": "removeNormalizedEventListener"
  },
  {
    "name": "flushData",
    "newName": "flushEventData"
  },
  {
    "name": "forEachElement",
    "newName": "iterateOverElements"
  },
  {
    "name": "getRumEventQueue",
    "newName": "getRumQueue"
  },
  {
    "name": "processEvent",
    "newName": "processPerformanceEvent"
  },
  {
    "name": "initPerformanceLogger",
    "newName": "initializeLogger"
  },
  {
    "name": "inheritPrototype",
    "newName": "extendPrototype"
  },
  {
    "name": "PerformanceLogger",
    "newName": "PerformanceEventLogger"
  },
  {
    "name": "PerformanceMonitor",
    "newName": "PerformanceEventMonitor"
  },
  {
    "name": "getCurrentTimeWithPerformanceTiming",
    "newName": "getCurrentPerformanceTime"
  },
  {
    "name": "Math.roundRectangle",
    "newName": "roundNumber"
  },
  {
    "name": "CustomMap",
    "newName": "customEventInfo"
  },
  {
    "name": "findEntry",
    "newName": "eventLabel"
  },
  {
    "name": "iterateEntries",
    "newName": "eventDuration"
  },
  {
    "name": "calculateEventDimensionLength",
    "newName": "calculateEventSize"
  },
  {
    "name": "recordEvent",
    "newName": "storeEvent"
  },
  {
    "name": "checkAndFlushIfNeeded",
    "newName": "flushIfNeeded"
  },
  {
    "name": "generateBeaconUrl",
    "newName": "createBeaconUrl"
  },
  {
    "name": "appendToUrl",
    "newName": "appendParamsToUrl"
  },
  {
    "name": "getIterator",
    "newName": "createIterator"
  },
  {
    "name": "logEventWithDimension",
    "newName": "logDimensionedEvent"
  },
  {
    "name": "setPerformanceMetric",
    "newName": "setPerformanceMetric"
  },
  {
    "name": "resolvePromise",
    "newName": "resolvePendingPromises"
  },
  {
    "name": "settlePromise",
    "newName": "settlePendingPromises"
  },
  {
    "name": "addMultipleKeyValues",
    "newName": "addMultipleValues"
  },
  {
    "name": "logError",
    "newName": "logPerformanceError"
  },
  {
    "name": "safeParseJSON",
    "newName": "parseJSONSafely"
  },
  {
    "name": "JsonStringifySafe",
    "newName": "SafeJsonStringify"
  },
  {
    "name": "serializeToJsonString",
    "newName": "serializeJson"
  },
  {
    "name": "escapeString",
    "newName": "escapeJsonString"
  },
  {
    "name": "ExperimentData",
    "newName": "AdExperimentData"
  },
  {
    "name": "getExperimentDataFromElement",
    "newName": "fetchExperimentData"
  },
  {
    "name": "loadExperimentData",
    "newName": "initializeExperimentData"
  },
  {
    "name": "resetAdStateController",
    "newName": "resetAdState"
  },
  {
    "name": "CookieManager",
    "newName": "AdCookieManager"
  },
  {
    "name": "areCookiesEnabled",
    "newName": "checkCookiesEnabled"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "cookieManagerPrototype"
  },
  {
    "name": "get",
    "newName": "getCookie"
  },
  {
    "name": "set",
    "newName": "setCookie"
  },
  {
    "name": "removeElement",
    "newName": "removeCookie"
  },
  {
    "name": "base64AlphabetVariants",
    "newName": "getCookieKeys"
  },
  {
    "name": "hasPlatform",
    "newName": "getCookieValues"
  },
  {
    "name": "isEmpty",
    "newName": "isCookieEmpty"
  },
  {
    "name": "clearAll",
    "newName": "clearAllCookies"
  },
  {
    "name": "getCookies",
    "newName": "retrieveCookies"
  },
  {
    "name": "evaluateCondition",
    "newName": "evaluateAdCondition"
  },
  {
    "name": "checkCookiesEnabled",
    "newName": "isCookiesEnabled"
  },
  {
    "name": "getCookieValue",
    "newName": "fetchCookieValue"
  },
  {
    "name": "setCookieValue",
    "newName": "updateCookieValue"
  },
  {
    "name": "executeCallback",
    "newName": "executeAdCallback"
  },
  {
    "name": "processConditions",
    "newName": "evaluateAdConditions"
  },
  {
    "name": "checkCondition",
    "newName": "verifyAdCondition"
  },
  {
    "name": "verifyCondition",
    "newName": "isAdConditionValid"
  },
  {
    "name": "StorageField",
    "newName": "AdStorageField"
  },
  {
    "name": "onFulfilled",
    "newName": "handleFulfilledPromise"
  },
  {
    "name": "findGlobalObject",
    "newName": "globalObject"
  },
  {
    "name": "ValueField",
    "newName": "AdValueField"
  },
  {
    "name": "getAdStateValue",
    "newName": "fetchAdStateValue"
  },
  {
    "name": "ConfigField",
    "newName": "AdConfigField"
  },
  {
    "name": "serializeConfig",
    "newName": "serializeAdConfig"
  },
  {
    "name": "conditionTypes",
    "newName": "adConditionTypes"
  },
  {
    "name": "AdRequest",
    "newName": "AdRequestHandler"
  },
  {
    "name": "sendAdRequest",
    "newName": "dispatchAdRequest"
  },
  {
    "name": "recordAdEvent",
    "newName": "logAdEvent"
  },
  {
    "name": "createAdEvent",
    "newName": "generateAdEvent"
  },
  {
    "name": "SessionStorage",
    "newName": "AdSessionStorage"
  },
  {
    "name": "fetchConditionValue",
    "newName": "fetchAdConditionValue"
  },
  {
    "name": "extractValue",
    "newName": "extractAdValue"
  },
  {
    "name": "getSessionStorageData",
    "newName": "fetchSessionStorageData"
  },
  {
    "name": "getConfigValue",
    "newName": "fetchConfigValue"
  },
  {
    "name": "resolveValue",
    "newName": "resolveAdValue"
  },
  {
    "name": "ConfigManager",
    "newName": "AdConfigManager"
  },
  {
    "name": "getBooleanConfig",
    "newName": "fetchBooleanConfig"
  },
  {
    "name": "getNumberConfig",
    "newName": "fetchNumberConfig"
  },
  {
    "name": "getStringConfig",
    "newName": "fetchStringConfig"
  },
  {
    "name": "getArrayConfig",
    "newName": "fetchArrayConfig"
  },
  {
    "name": "getComplexArrayConfig",
    "newName": "fetchComplexArrayConfig"
  },
  {
    "name": "getConfigs",
    "newName": "retrieveConfigs"
  },
  {
    "name": "updateConfigs",
    "newName": "updateAdConfigs"
  },
  {
    "name": "processAdRequests",
    "newName": "handleAdRequests"
  },
  {
    "name": "mergeAdData",
    "newName": "mergeAdConfigs"
  },
  {
    "name": "getAdIds",
    "newName": "fetchAdIds"
  },
  {
    "name": "addToAdQueue",
    "newName": "enqueueAdRequest"
  },
  {
    "name": "definePropertyIfNotExists",
    "newName": "definePropertyIfAbsent"
  },
  {
    "name": "getValueOrDefault",
    "newName": "fetchValueOrDefault"
  },
  {
    "name": "registerAdFunctions",
    "newName": "registerAdHandlers"
  },
  {
    "name": "registerDataHandlers",
    "newName": "registerAdDataHandlers"
  },
  {
    "name": "markInitializationDone",
    "newName": "markInitComplete"
  },
  {
    "name": "BaseClass",
    "newName": "BaseEventClass"
  },
  {
    "name": "r",
    "newName": "adManagerInstance"
  },
  {
    "name": "generatorWrapper",
    "newName": "adInstance"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "CustomMap",
    "newName": "configMap"
  },
  {
    "name": "findEntry",
    "newName": "adEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterator"
  },
  {
    "name": "createCircularNode",
    "newName": "circularNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryCounter"
  },
  {
    "name": "qf",
    "newName": "createNode"
  },
  {
    "name": "conditionTypes",
    "newName": "conditionTypeList"
  },
  {
    "name": "parseNullableInt",
    "newName": "parseIntOrNull"
  },
  {
    "name": "getTransformedElement",
    "newName": "transformElement"
  },
  {
    "name": "tf",
    "newName": "transformNode"
  },
  {
    "name": "vf",
    "newName": "validateArray"
  },
  {
    "name": "StorageField",
    "newName": "storageField"
  },
  {
    "name": "stringOrNull",
    "newName": "stringOrNullValidator"
  },
  {
    "name": "replaceArrayIfNotArray",
    "newName": "replaceArray"
  },
  {
    "name": "serializeConfig",
    "newName": "serializeConfiguration"
  },
  {
    "name": "getConfigs",
    "newName": "fetchConfigurations"
  },
  {
    "name": "forEachInObject",
    "newName": "iterateObject"
  },
  {
    "name": "rf",
    "newName": "fetchCondition"
  },
  {
    "name": "fetchConditionValue",
    "newName": "getConditionValue"
  },
  {
    "name": "getIterator",
    "newName": "fetchIterator"
  },
  {
    "name": "ConfigManager",
    "newName": "ConfigurationManager"
  },
  {
    "name": "WrapperMetadata",
    "newName": "MetadataWrapper"
  },
  {
    "name": "pf",
    "newName": "populateMetadata"
  },
  {
    "name": "MetadataTypes",
    "newName": "metadataTypeList"
  },
  {
    "name": "parseNullableIntEnum",
    "newName": "parseEnumOrNull"
  },
  {
    "name": "transformAndReplaceArray",
    "newName": "transformReplaceArray"
  },
  {
    "name": "parseInt32",
    "newName": "parseInteger"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "TagSession",
    "newName": "AdSession"
  },
  {
    "name": "Cf",
    "newName": "createConfig"
  },
  {
    "name": "TagSessionBuilder",
    "newName": "AdSessionBuilder"
  },
  {
    "name": "Bf",
    "newName": "buildConfig"
  },
  {
    "name": "createAdEvent",
    "newName": "triggerAdEvent"
  },
  {
    "name": "modifyAdProperty",
    "newName": "updateAdProperty"
  },
  {
    "name": "getBooleanConfig",
    "newName": "fetchBooleanConfig"
  },
  {
    "name": "getNumberConfig",
    "newName": "fetchNumberConfig"
  },
  {
    "name": "getStringConfig",
    "newName": "fetchStringConfig"
  },
  {
    "name": "getArrayConfig",
    "newName": "fetchArrayConfig"
  },
  {
    "name": "getComplexArrayConfig",
    "newName": "fetchComplexArrayConfig"
  },
  {
    "name": "SessionStorage",
    "newName": "SessionManager"
  },
  {
    "name": "GeneratorExecutor",
    "newName": "executor"
  },
  {
    "name": "mainAdQueue",
    "newName": "primaryAdQueue"
  },
  {
    "name": "ExperimentData",
    "newName": "ExperimentManager"
  },
  {
    "name": "resolvePromise",
    "newName": "promiseResolver"
  },
  {
    "name": "settlePromise",
    "newName": "resolvePromise"
  },
  {
    "name": "getNumericAdProperty",
    "newName": "fetchNumericAdProperty"
  },
  {
    "name": "getFromGlobalScope",
    "newName": "fetchFromGlobalScope"
  },
  {
    "name": "verifyCondition",
    "newName": "validateCondition"
  },
  {
    "name": "fetchData",
    "newName": "retrieveData"
  },
  {
    "name": "MessageBody",
    "newName": "AdMessage"
  },
  {
    "name": "MessageBodyTypes",
    "newName": "messageTypeList"
  },
  {
    "name": "fetchSingletonInstance",
    "newName": "getSingletonInstance"
  },
  {
    "name": "getAdPropertyNumeric",
    "newName": "fetchNumericProperty"
  },
  {
    "name": "recordAdEvent",
    "newName": "logAdEvent"
  },
  {
    "name": "generatorWrapper",
    "newName": "adManager"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "CustomMap",
    "newName": "adMap"
  },
  {
    "name": "findEntry",
    "newName": "entryIterator"
  },
  {
    "name": "iterateEntries",
    "newName": "entry"
  },
  {
    "name": "createCircularNode",
    "newName": "circularNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "entry",
    "newName": "adEntry"
  },
  {
    "name": "getIterator",
    "newName": "getIteratorFromMap"
  },
  {
    "name": "parseData",
    "newName": "parseAdData"
  },
  {
    "name": "AdPreferenceManager",
    "newName": "AdPreferences"
  },
  {
    "name": "AdIdManager",
    "newName": "AdIdentifiers"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdNumericValue"
  },
  {
    "name": "getAdPropertyNumeric",
    "newName": "getAdNumericProperty"
  },
  {
    "name": "addIdToSet",
    "newName": "addAdIdToSet"
  },
  {
    "name": "toArray",
    "newName": "convertToArray"
  },
  {
    "name": "excludedAdTypes",
    "newName": "excludedAdTypesList"
  },
  {
    "name": "AdManager",
    "newName": "AdController"
  },
  {
    "name": "sendAdRequest",
    "newName": "requestAd"
  },
  {
    "name": "SessionStorage",
    "newName": "SessionStorageSingleton"
  },
  {
    "name": "MessageBody",
    "newName": "AdMessageBody"
  },
  {
    "name": "verifyCondition",
    "newName": "validateCondition"
  },
  {
    "name": "fetchData",
    "newName": "fetchAdData"
  },
  {
    "name": "TagSessionMetadata",
    "newName": "AdSessionTags"
  },
  {
    "name": "recordAdEvent",
    "newName": "logAdEvent"
  },
  {
    "name": "modifyAdProperty",
    "newName": "updateAdProperty"
  },
  {
    "name": "rf",
    "newName": "checkAdProperty"
  },
  {
    "name": "ConfigField",
    "newName": "AdConfigField"
  },
  {
    "name": "getAdIds",
    "newName": "getAdIdentifiersList"
  },
  {
    "name": "markInitializationDone",
    "newName": "setInitializationComplete"
  },
  {
    "name": "registerAdFunctions",
    "newName": "initializeAdFunctions"
  },
  {
    "name": "registerDataHandlers",
    "newName": "initializeDataHandlers"
  },
  {
    "name": "initializeAdChecks",
    "newName": "runAdChecks"
  },
  {
    "name": "generatePageViewId",
    "newName": "generatePageViewIdentifier"
  },
  {
    "name": "configFunctions",
    "newName": "configurationFunctions"
  },
  {
    "name": "secureRandom",
    "newName": "generateSecureRandom"
  },
  {
    "name": "hashString",
    "newName": "hashAdString"
  },
  {
    "name": "filterInvalidAdRequests",
    "newName": "removeInvalidAdRequests"
  },
  {
    "name": "adErrorCodes",
    "newName": "AdErrorCodes"
  },
  {
    "name": "adWarningCodes",
    "newName": "AdWarningCodes"
  },
  {
    "name": "AdMediaTypes",
    "newName": "MediaTypes"
  },
  {
    "name": "AdVisibilityTracker",
    "newName": "VisibilityTracker"
  },
  {
    "name": "AdOpacityState",
    "newName": "OpacityState"
  },
  {
    "name": "AdEngagementState",
    "newName": "EngagementState"
  },
  {
    "name": "AdInteractionState",
    "newName": "InteractionState"
  },
  {
    "name": "AdErrorState",
    "newName": "ErrorState"
  },
  {
    "name": "AdResolutionState",
    "newName": "ResolutionState"
  },
  {
    "name": "activateAdState",
    "newName": "enableAdState"
  },
  {
    "name": "applyAdEnvironmentVariables",
    "newName": "setAdEnvironmentVariables"
  },
  {
    "name": "NumericAdStateTracker",
    "newName": "NumericStateTracker"
  },
  {
    "name": "StringAdStateTracker",
    "newName": "StringStateTracker"
  },
  {
    "name": "QueryIdAdStateTracker",
    "newName": "QueryIdStateTracker"
  },
  {
    "name": "AdStateController",
    "newName": "AdStateManager"
  },
  {
    "name": "getOrCreateAdStateTracker",
    "newName": "initializeAdStateTracker"
  },
  {
    "name": "ensureQueryIdAdState",
    "newName": "initializeQueryIdState"
  },
  {
    "name": "updateAdStateValue",
    "newName": "setAdStateValue"
  },
  {
    "name": "getAdState",
    "newName": "retrieveAdState"
  },
  {
    "name": "getAllAdStates",
    "newName": "retrieveAllAdStates"
  },
  {
    "name": "serializeAdStates",
    "newName": "serializeAdStateData"
  },
  {
    "name": "applyAdEnvironmentConfig",
    "newName": "configureAdEnvironment"
  },
  {
    "name": "configureAdStateTrackers",
    "newName": "setupAdStateTrackers"
  },
  {
    "name": "PerformanceMonitor",
    "newName": "AdPerformanceMonitor"
  },
  {
    "name": "BasicPerformanceMonitor",
    "newName": "BasicMonitor"
  },
  {
    "name": "AdvancedPerformanceMonitor",
    "newName": "AdvancedMonitor"
  },
  {
    "name": "isPerformanceMonitoringAvailable",
    "newName": "isMonitoringAvailable"
  },
  {
    "name": "VisibilityTracker",
    "newName": "AdVisibilityTracker"
  },
  {
    "name": "AdFrame",
    "newName": "AdFrameData"
  },
  {
    "name": "getAdFrames",
    "newName": "retrieveAdFrames"
  },
  {
    "name": "createAdFrameHierarchy",
    "newName": "buildAdFrameHierarchy"
  },
  {
    "name": "serializeAdFrames",
    "newName": "serializeAdFrameData"
  },
  {
    "name": "AdUtility",
    "newName": "AdUtilityManager"
  },
  {
    "name": "isAdUtilityAvailable",
    "newName": "isUtilityAvailable"
  },
  {
    "name": "getSerializedAdFrames",
    "newName": "retrieveSerializedAdFrames"
  },
  {
    "name": "noopFunction",
    "newName": "noop"
  },
  {
    "name": "GetEnvironment",
    "newName": "getAdEnvironmentManager"
  },
  {
    "name": "AdConfig",
    "newName": "AdConfiguration"
  },
  {
    "name": "PerformanceMonitor",
    "newName": "AdPerformanceMonitor"
  },
  {
    "name": "MonitorFunction",
    "newName": "monitorAdFunction"
  },
  {
    "name": "AdPerformanceMonitor",
    "newName": "AdMonitor"
  },
  {
    "name": "FlagsContainer",
    "newName": "AdFlagsContainer"
  },
  {
    "name": "GetFlags",
    "newName": "retrieveFlags"
  },
  {
    "name": "FlagEnums",
    "newName": "FlagConstants"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerInstance"
  },
  {
    "name": "getAdEnvironment",
    "newName": "retrieveAdEnvironment"
  },
  {
    "name": "SendAdErrorReport",
    "newName": "sendAdErrorReport"
  },
  {
    "name": "ErrorReporter",
    "newName": "AdErrorReporter"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "setTimeoutHandler"
  },
  {
    "name": "createSigned64",
    "newName": "createSignedInt64"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseBooleanOrInt"
  },
  {
    "name": "numericStringRegex",
    "newName": "numericStringPattern"
  },
  {
    "name": "parseIntEnum",
    "newName": "parseIntegerEnum"
  },
  {
    "name": "hasBrands",
    "newName": "validateBrands"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "TransformedIterator"
  },
  {
    "name": "boundFunctionCall",
    "newName": "boundFunction"
  },
  {
    "name": "computeReferrerUrl",
    "newName": "getReferrerUrl"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "retryImageRequest"
  },
  {
    "name": "clearPerformanceMarks",
    "newName": "resetPerformanceMarks"
  },
  {
    "name": "Ko",
    "newName": "defaultKo"
  },
  {
    "name": "Lo",
    "newName": "defaultLo"
  },
  {
    "name": "onFulfilled",
    "newName": "fulfilledCallback"
  },
  {
    "name": "CustomError",
    "newName": "AdCustomError"
  },
  {
    "name": "isValidError",
    "newName": "isErrorValid"
  },
  {
    "name": "UrlQueryBuilder",
    "newName": "QueryBuilder"
  },
  {
    "name": "addParameter",
    "newName": "addQueryParameter"
  },
  {
    "name": "addKeyValuePair",
    "newName": "addKeyValue"
  },
  {
    "name": "buildAdUrl",
    "newName": "constructAdUrl"
  },
  {
    "name": "AdElement",
    "newName": "AdElementClass"
  },
  {
    "name": "serializeTransformations",
    "newName": "serializeAdTransformations"
  },
  {
    "name": "float64Transformation",
    "newName": "float64Transform"
  },
  {
    "name": "stringOrNumberTransformation2",
    "newName": "stringOrNumberTransform"
  },
  {
    "name": "booleanTransformation2",
    "newName": "booleanTransform"
  },
  {
    "name": "MonitorFunction",
    "newName": "createMonitorFunction"
  },
  {
    "name": "MonitorFunction",
    "newName": "createMonitorFunction"
  },
  {
    "name": "AdPerformanceMonitor",
    "newName": "AdPerformanceMonitor"
  },
  {
    "name": "FlagsContainer",
    "newName": "FlagsContainer"
  },
  {
    "name": "GetFlags",
    "newName": "retrieveFlags"
  },
  {
    "name": "FlagEnums",
    "newName": "FlagConstants"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerInstance"
  },
  {
    "name": "getAdEnvironment",
    "newName": "retrieveAdEnvironment"
  },
  {
    "name": "SendAdErrorReport",
    "newName": "sendAdErrorReport"
  },
  {
    "name": "ErrorReporter",
    "newName": "AdErrorReporter"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "setTimeoutHandler"
  },
  {
    "name": "createSigned64",
    "newName": "createSignedInt64"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseBooleanOrInt"
  },
  {
    "name": "numericStringRegex",
    "newName": "numericStringPattern"
  },
  {
    "name": "parseIntEnum",
    "newName": "parseIntegerEnum"
  },
  {
    "name": "hasBrands",
    "newName": "validateBrands"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "TransformedIterator"
  },
  {
    "name": "boundFunctionCall",
    "newName": "boundFunction"
  },
  {
    "name": "computeReferrerUrl",
    "newName": "getReferrerUrl"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "retryImageRequest"
  },
  {
    "name": "clearPerformanceMarks",
    "newName": "resetPerformanceMarks"
  },
  {
    "name": "Ko",
    "newName": "defaultKo"
  },
  {
    "name": "Lo",
    "newName": "defaultLo"
  },
  {
    "name": "onFulfilled",
    "newName": "fulfilledCallback"
  },
  {
    "name": "CustomError",
    "newName": "AdCustomError"
  },
  {
    "name": "isValidError",
    "newName": "isErrorValid"
  },
  {
    "name": "UrlQueryBuilder",
    "newName": "QueryBuilder"
  },
  {
    "name": "addParameter",
    "newName": "addQueryParameter"
  },
  {
    "name": "addKeyValuePair",
    "newName": "addKeyValue"
  },
  {
    "name": "buildAdUrl",
    "newName": "constructAdUrl"
  },
  {
    "name": "AdElement",
    "newName": "AdElementClass"
  },
  {
    "name": "serializeTransformations",
    "newName": "serializeAdTransformations"
  },
  {
    "name": "float64Transformation",
    "newName": "float64Transform"
  },
  {
    "name": "stringOrNumberTransformation2",
    "newName": "stringOrNumberTransform"
  },
  {
    "name": "booleanTransformation2",
    "newName": "booleanTransform"
  },
  {
    "name": "activateAdState",
    "newName": "activateAdState"
  },
  {
    "name": "getOrCreateAdStateTracker",
    "newName": "getOrCreateAdStateTracker"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "adEnvironmentConfig"
  },
  {
    "name": "AdOpacityState",
    "newName": "adOpacityState"
  },
  {
    "name": "AdEngagementState",
    "newName": "adEngagementState"
  },
  {
    "name": "FlagEnums",
    "newName": "flagEnums"
  },
  {
    "name": "StringAdStateTracker",
    "newName": "stringAdStateTracker"
  },
  {
    "name": "AdMediaTypes",
    "newName": "adMediaTypes"
  },
  {
    "name": "adWarningCodes",
    "newName": "adWarningCodes"
  },
  {
    "name": "AdInteractionState",
    "newName": "adInteractionState"
  },
  {
    "name": "AdPerformanceMonitor",
    "newName": "adPerformanceMonitor"
  },
  {
    "name": "GetEnvironment",
    "newName": "getEnvironment"
  },
  {
    "name": "FlagsContainer",
    "newName": "flagsContainer"
  },
  {
    "name": "throwIfFlag2",
    "newName": "throwIfFlag2"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryIdCounter"
  },
  {
    "name": "tasks",
    "newName": "tasks"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "setTimeoutWrapper"
  },
  {
    "name": "UrlQueryBuilder",
    "newName": "urlQueryBuilder"
  },
  {
    "name": "forEachInObject",
    "newName": "forEachInObject"
  },
  {
    "name": "addParameter",
    "newName": "addParameter"
  },
  {
    "name": "createKeyValuePair",
    "newName": "createKeyValuePair"
  },
  {
    "name": "buildAdUrl",
    "newName": "buildAdUrl"
  },
  {
    "name": "sendImageRequestWithRetry",
    "newName": "sendImageRequestWithRetry"
  },
  {
    "name": "ErrorReporter",
    "newName": "errorReporter"
  },
  {
    "name": "boundFunctionCall",
    "newName": "boundFunctionCall"
  },
  {
    "name": "createSigned64",
    "newName": "createSigned64"
  },
  {
    "name": "parseBooleanOrNumber",
    "newName": "parseBooleanOrNumber"
  },
  {
    "name": "numericStringRegex",
    "newName": "numericStringRegex"
  },
  {
    "name": "parseIntEnum",
    "newName": "parseIntEnum"
  },
  {
    "name": "hasBrands",
    "newName": "hasBrands"
  },
  {
    "name": "MonitorFunction",
    "newName": "monitorFunction"
  },
  {
    "name": "IteratorWithTransform",
    "newName": "iteratorWithTransform"
  },
  {
    "name": "CustomError",
    "newName": "customError"
  },
  {
    "name": "FormatErrorMessage",
    "newName": "formatErrorMessage"
  },
  {
    "name": "getSingletonInstance",
    "newName": "getSingletonInstance"
  },
  {
    "name": "Ko",
    "newName": "performanceMonitorInstance"
  },
  {
    "name": "Lo",
    "newName": "loInstance"
  },
  {
    "name": "Po",
    "newName": "poInstance"
  },
  {
    "name": "checkDocumentState",
    "newName": "checkDocumentState"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addEventListenerWithNormalization"
  },
  {
    "name": "Ro",
    "newName": "roInstance"
  },
  {
    "name": "So",
    "newName": "soInstance"
  },
  {
    "name": "To",
    "newName": "toInstance"
  },
  {
    "name": "logError",
    "newName": "logError"
  },
  {
    "name": "yearOffset",
    "newName": "yearOffset"
  },
  {
    "name": "Vo",
    "newName": "voInstance"
  },
  {
    "name": "Wo",
    "newName": "woInstance"
  },
  {
    "name": "Xo",
    "newName": "xoInstance"
  },
  {
    "name": "adEventTimestamp",
    "newName": "adEventTimestamp"
  },
  {
    "name": "$o",
    "newName": "dollarOInstance"
  },
  {
    "name": "accumulatePosition",
    "newName": "accumulatePosition"
  },
  {
    "name": "bp",
    "newName": "bpInstance"
  },
  {
    "name": "AdEvent",
    "newName": "adEvent"
  },
  {
    "name": "AdTracker",
    "newName": "adTracker"
  },
  {
    "name": "AdEventTypes",
    "newName": "adEventTypes"
  },
  {
    "name": "AdEventNames",
    "newName": "adEventNames"
  },
  {
    "name": "fp",
    "newName": "fpInstance"
  },
  {
    "name": "gp",
    "newName": "gpInstance"
  },
  {
    "name": "httpProtocol",
    "newName": "httpProtocol"
  },
  {
    "name": "ip",
    "newName": "ipInstance"
  },
  {
    "name": "MraidMethods",
    "newName": "mraidMethods"
  },
  {
    "name": "getMraidContext",
    "newName": "getMraidContext"
  },
  {
    "name": "isElementFromPointSupported",
    "newName": "isElementFromPointSupported"
  },
  {
    "name": "calculateViewportSize",
    "newName": "calculateViewportSize"
  },
  {
    "name": "applyStyleOrRemove",
    "newName": "applyStyleOrRemove"
  },
  {
    "name": "styleCache",
    "newName": "styleCache"
  },
  {
    "name": "getStyleProperty",
    "newName": "getStyleProperty"
  },
  {
    "name": "getStyleValue",
    "newName": "getStyleValue"
  },
  {
    "name": "getComputedStyleValue",
    "newName": "getComputedStyleValue"
  },
  {
    "name": "getElementRect",
    "newName": "getElementRect"
  },
  {
    "name": "getAbsolutePosition",
    "newName": "getAbsolutePosition"
  },
  {
    "name": "calculateFrameOffset",
    "newName": "calculateFrameOffset"
  },
  {
    "name": "getFullSize",
    "newName": "getFullSize"
  },
  {
    "name": "getElementSizeIfVisible",
    "newName": "getElementSizeIfVisible"
  },
  {
    "name": "calculateElementSize",
    "newName": "calculateElementSize"
  },
  {
    "name": "calculateInnerSize",
    "newName": "calculateInnerSize"
  },
  {
    "name": "roundToPrecision",
    "newName": "roundToPrecision"
  },
  {
    "name": "traverseDomAndApply",
    "newName": "traverseDomAndApply"
  },
  {
    "name": "traverseFramesAndApply",
    "newName": "traverseFramesAndApply"
  },
  {
    "name": "isElementHidden",
    "newName": "isElementHidden"
  },
  {
    "name": "isElementNotDisplayedOrHidden",
    "newName": "isElementNotDisplayedOrHidden"
  },
  {
    "name": "convertRectToBox",
    "newName": "convertRectToBox"
  },
  {
    "name": "convertDimensionsToBox",
    "newName": "convertDimensionsToBox"
  },
  {
    "name": "isValidOpacity",
    "newName": "isValidOpacity"
  },
  {
    "name": "isSmartTV",
    "newName": "isSmartTV"
  },
  {
    "name": "isAppleTV",
    "newName": "isAppleTV"
  },
  {
    "name": "isTVDevice",
    "newName": "isTVDevice"
  },
  {
    "name": "EnvironmentDetails",
    "newName": "environmentDetails"
  },
  {
    "name": "updateScreenSize",
    "newName": "updateScreenSize"
  },
  {
    "name": "updateViewportSize",
    "newName": "updateViewportSize"
  },
  {
    "name": "initializeAdEnvironment",
    "newName": "initializeAdEnvironment"
  },
  {
    "name": "isAdPlayingOrMuted",
    "newName": "isAdPlayingOrMuted"
  },
  {
    "name": "getAdEnvironmentInstance",
    "newName": "getAdEnvironmentInstance"
  },
  {
    "name": "AdSampling",
    "newName": "adSampling"
  },
  {
    "name": "startAdSampling",
    "newName": "startAdSampling"
  },
  {
    "name": "AdController",
    "newName": "adController"
  },
  {
    "name": "activateAdController",
    "newName": "activateAdController"
  },
  {
    "name": "registerAdComponent",
    "newName": "registerAdComponent"
  },
  {
    "name": "refreshAdEnvironment",
    "newName": "refreshAdEnvironment"
  },
  {
    "name": "checkAdComponentsActive",
    "newName": "checkAdComponentsActive"
  },
  {
    "name": "notifyAdComponents",
    "newName": "notifyAdComponents"
  },
  {
    "name": "updateAdComponents",
    "newName": "updateAdComponents"
  },
  {
    "name": "AdComponent",
    "newName": "adComponent"
  },
  {
    "name": "writeFieldHeader",
    "newName": "writeFieldHeader"
  },
  {
    "name": "isOpera",
    "newName": "isOpera"
  },
  {
    "name": "r",
    "newName": "adResource"
  },
  {
    "name": "generatorWrapper",
    "newName": "adInstance"
  },
  {
    "name": "value",
    "newName": "adValue"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "findEntry",
    "newName": "adEntry"
  },
  {
    "name": "bp",
    "newName": "getTimeoutDuration"
  },
  {
    "name": "calculateViewportSize",
    "newName": "calculateAdViewportSize"
  },
  {
    "name": "updateViewportSize",
    "newName": "updateAdViewportSize"
  },
  {
    "name": "updateScreenSize",
    "newName": "updateAdScreenSize"
  },
  {
    "name": "isAdPlayingOrMuted",
    "newName": "checkAdPlayingOrMuted"
  },
  {
    "name": "getAdEnvironmentInstance",
    "newName": "getAdEnvironment"
  },
  {
    "name": "GetEnvironment",
    "newName": "getAdEnvironmentDetails"
  },
  {
    "name": "getVisibilityStateCode",
    "newName": "getDocumentVisibilityState"
  },
  {
    "name": "AdSampling",
    "newName": "AdSamplingController"
  },
  {
    "name": "startAdSampling",
    "newName": "initializeAdSampling"
  },
  {
    "name": "AdController",
    "newName": "AdPlaybackController"
  },
  {
    "name": "handleThenable",
    "newName": "PromiseHandler"
  },
  {
    "name": "AdEvent",
    "newName": "AdEventTracker"
  },
  {
    "name": "registerAdComponent",
    "newName": "registerAdElement"
  },
  {
    "name": "containsElement",
    "newName": "elementExistsInArray"
  },
  {
    "name": "updateAdComponents",
    "newName": "refreshAdElements"
  },
  {
    "name": "copyArray",
    "newName": "duplicateArray"
  },
  {
    "name": "forEachElement",
    "newName": "iterateArray"
  },
  {
    "name": "AdComponent",
    "newName": "AdElement"
  },
  {
    "name": "removeElement",
    "newName": "removeAdElement"
  },
  {
    "name": "checkAdComponentsActive",
    "newName": "validateAdElementsActive"
  },
  {
    "name": "notifyAdComponents",
    "newName": "notifyAdElements"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adTimeoutHandler"
  },
  {
    "name": "AdCreator",
    "newName": "AdElementCreator"
  },
  {
    "name": "isPositiveInt64",
    "newName": "validatePositiveInt64"
  },
  {
    "name": "AdParameters",
    "newName": "AdParameter"
  },
  {
    "name": "normalizePriority",
    "newName": "normalizeAdPriority"
  },
  {
    "name": "isPriorityLower",
    "newName": "compareAdPriority"
  },
  {
    "name": "QueryStringBuilder",
    "newName": "AdQueryStringBuilder"
  },
  {
    "name": "addParameter",
    "newName": "appendAdParameter"
  },
  {
    "name": "mergeParameters",
    "newName": "mergeAdParameters"
  },
  {
    "name": "addParametersFromObject",
    "newName": "appendAdParametersFromObject"
  },
  {
    "name": "buildQueryString",
    "newName": "generateAdQueryString"
  },
  {
    "name": "parameterToString",
    "newName": "convertParameterToString"
  },
  {
    "name": "UrlBuilder",
    "newName": "AdUrlBuilder"
  },
  {
    "name": "buildAdRequestParams",
    "newName": "generateAdRequestParams"
  },
  {
    "name": "sendAdRequest",
    "newName": "sendAdRequestToServer"
  },
  {
    "name": "AdRequestCounter",
    "newName": "AdRequestCounterController"
  },
  {
    "name": "markAsCompletedWrapper",
    "newName": "markAdAsCompleted"
  },
  {
    "name": "tryCall",
    "newName": "AdPromiseHandler"
  },
  {
    "name": "registerDisposable",
    "newName": "registerAdDisposable"
  },
  {
    "name": "executeOrDelayUntilDisposed",
    "newName": "executeOrDelayAd"
  },
  {
    "name": "processVerificationRequests",
    "newName": "processAdVerificationRequests"
  },
  {
    "name": "MetricsTracker",
    "newName": "AdMetricsTracker"
  },
  {
    "name": "updateMetrics",
    "newName": "refreshAdMetrics"
  },
  {
    "name": "visibilityThresholds",
    "newName": "adVisibilityThresholds"
  },
  {
    "name": "VisibilityMetricsCalculator",
    "newName": "AdVisibilityMetricsCalculator"
  },
  {
    "name": "calculateTotalVisibility",
    "newName": "calculateTotalAdVisibility"
  },
  {
    "name": "calculateVisibilityAtThreshold",
    "newName": "calculateAdVisibilityAtThreshold"
  },
  {
    "name": "calculateMaxVisibility",
    "newName": "calculateMaxAdVisibility"
  },
  {
    "name": "calculateMaxVisibilityAtThreshold",
    "newName": "calculateMaxAdVisibilityAtThreshold"
  },
  {
    "name": "calculateAverageVisibility",
    "newName": "calculateAverageAdVisibility"
  },
  {
    "name": "resetVisibilityMetrics",
    "newName": "resetAdVisibilityMetrics"
  },
  {
    "name": "updateVisibilityMetrics",
    "newName": "refreshAdVisibilityMetrics"
  },
  {
    "name": "aggregateMetrics",
    "newName": "aggregateAdMetrics"
  },
  {
    "name": "getMetricAtThreshold",
    "newName": "getAdMetricAtThreshold"
  },
  {
    "name": "calculateDifferentialMetrics",
    "newName": "calculateAdDifferentialMetrics"
  },
  {
    "name": "AdVisibilityTracker",
    "newName": "AdVisibilityTrackerController"
  },
  {
    "name": "getMaxVisibility",
    "newName": "getMaxAdVisibility"
  },
  {
    "name": "getMaxVisibility",
    "newName": "getMaxAdVisibility"
  },
  {
    "name": "removeUniqueId",
    "newName": "removeAdUniqueId"
  },
  {
    "name": "addEventListenerWithCapture",
    "newName": "addAdEventListenerWithCapture"
  },
  {
    "name": "emptyRect",
    "newName": "emptyRectangle"
  },
  {
    "name": "calculateVisibilityRatio",
    "newName": "calculateAdVisibilityRatio"
  },
  {
    "name": "calculateArea",
    "newName": "calculateRectangleArea"
  },
  {
    "name": "isAncestorOrSelf",
    "newName": "checkAncestorOrSelf"
  },
  {
    "name": "isElementFullyInView",
    "newName": "isAdElementFullyInView"
  },
  {
    "name": "isElementInvisibleOrOutOfView",
    "newName": "isAdElementInvisibleOrOutOfView"
  },
  {
    "name": "initialRect",
    "newName": "initialRectangle"
  },
  {
    "name": "AdContainer",
    "newName": "AdContainerController"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritAdPrototype"
  },
  {
    "name": "checkDataAttributes",
    "newName": "validateAdDataAttributes"
  },
  {
    "name": "updateVisibilityState",
    "newName": "refreshAdVisibilityState"
  },
  {
    "name": "replaceAdContainerContent",
    "newName": "replaceAdContainerContent"
  },
  {
    "name": "calculateTimeDifference",
    "newName": "calculateAdTimeDifference"
  },
  {
    "name": "processAdContainerMetrics",
    "newName": "processAdContainerMetrics"
  },
  {
    "name": "configureAdStateHandlers",
    "newName": "configureAdStateHandlers"
  },
  {
    "name": "IteratorPrototype",
    "newName": "AdIteratorPrototype"
  },
  {
    "name": "iteratorDoneValue",
    "newName": "adIteratorDoneValue"
  },
  {
    "name": "PerformanceData",
    "newName": "AdPerformanceData"
  },
  {
    "name": "getPerformanceData",
    "newName": "retrieveAdPerformanceData"
  },
  {
    "name": "AdPlaybackData",
    "newName": "AdPlaybackDataController"
  },
  {
    "name": "isVolumeNonZero",
    "newName": "checkVolumeNonZero"
  },
  {
    "name": "filterAndTransform",
    "newName": "filterAndTransformAdData"
  },
  {
    "name": "getPropertyIfCondition",
    "newName": "getAdPropertyIfCondition"
  },
  {
    "name": "checkConditionInArray",
    "newName": "checkAdConditionInArray"
  },
  {
    "name": "transformArray",
    "newName": "transformAdArray"
  },
  {
    "name": "defaultConditionChecker",
    "newName": "defaultAdConditionChecker"
  },
  {
    "name": "specificConditionChecker",
    "newName": "specificAdConditionChecker"
  },
  {
    "name": "adDataMapping",
    "newName": "adDataMapping"
  },
  {
    "name": "extendedAdDataMapping",
    "newName": "extendedAdDataMapping"
  },
  {
    "name": "additionalDataMapping",
    "newName": "additionalAdDataMapping"
  },
  {
    "name": "nullResetter",
    "newName": "adNullResetter"
  },
  {
    "name": "emptyFunction",
    "newName": "emptyAdFunction"
  },
  {
    "name": "processResources",
    "newName": "processAdResources"
  },
  {
    "name": "queryReporter",
    "newName": "AdQueryReporter"
  },
  {
    "name": "reportRetriever",
    "newName": "AdReportRetriever"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGenerator"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "findEntry",
    "newName": "entry"
  },
  {
    "name": "iterateEntries",
    "newName": "entries"
  },
  {
    "name": "createCircularNode",
    "newName": "circularNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryCounter"
  },
  {
    "name": "key",
    "newName": "keyValue"
  },
  {
    "name": "AdVisibilityTracker",
    "newName": "AdTracker"
  },
  {
    "name": "isValidOpacity",
    "newName": "isValidVolume"
  },
  {
    "name": "transformArray",
    "newName": "processArray"
  },
  {
    "name": "filterElements",
    "newName": "filterArray"
  },
  {
    "name": "mapElements",
    "newName": "mapArray"
  },
  {
    "name": "inheritPrototype",
    "newName": "extendPrototype"
  },
  {
    "name": "handleThenable",
    "newName": "asyncHandler"
  },
  {
    "name": "updateVisibilityMetrics",
    "newName": "updateVisibilityData"
  },
  {
    "name": "updateMetrics",
    "newName": "updateMetricData"
  },
  {
    "name": "calculateFrameOffset",
    "newName": "getFrameOffset"
  },
  {
    "name": "calculateVisibilityRatio",
    "newName": "getVisibilityRatio"
  },
  {
    "name": "translateRectangle",
    "newName": "translateRect"
  },
  {
    "name": "isElementInvisibleOrOutOfView",
    "newName": "isElementHidden"
  },
  {
    "name": "calculateTimeDifference",
    "newName": "getTimeDifference"
  },
  {
    "name": "calculateTotalVisibility",
    "newName": "getTotalVisibility"
  },
  {
    "name": "calculateMaxVisibility",
    "newName": "getMaxVisibility"
  },
  {
    "name": "calculateAverageVisibility",
    "newName": "getAverageVisibility"
  },
  {
    "name": "roundToPrecision",
    "newName": "roundValue"
  },
  {
    "name": "keysOfObject",
    "newName": "getObjectKeys"
  },
  {
    "name": "containsElement",
    "newName": "arrayContains"
  },
  {
    "name": "filterAndTransform",
    "newName": "filterAndMap"
  },
  {
    "name": "filterAndLinkAdContainers",
    "newName": "linkAdContainers"
  },
  {
    "name": "getPropertyIfCondition",
    "newName": "getPropertyIf"
  },
  {
    "name": "checkConditionInArray",
    "newName": "checkArrayCondition"
  },
  {
    "name": "defaultConditionChecker",
    "newName": "defaultChecker"
  },
  {
    "name": "specificConditionChecker",
    "newName": "specificChecker"
  },
  {
    "name": "adDataMapping",
    "newName": "adMapping"
  },
  {
    "name": "extendedAdDataMapping",
    "newName": "extendedAdMapping"
  },
  {
    "name": "additionalDataMapping",
    "newName": "additionalMapping"
  },
  {
    "name": "nullResetter",
    "newName": "resetNullValues"
  },
  {
    "name": "emptyFunction",
    "newName": "noopFunction"
  },
  {
    "name": "processResources",
    "newName": "processAdResources"
  },
  {
    "name": "queryReporter",
    "newName": "adQueryReporter"
  },
  {
    "name": "reportRetriever",
    "newName": "retrieveReport"
  },
  {
    "name": "statusRetriever",
    "newName": "retrieveStatus"
  },
  {
    "name": "toggleRegister",
    "newName": "toggleAdRegister"
  },
  {
    "name": "updateRegister",
    "newName": "updateAdRegister"
  },
  {
    "name": "videoReporter",
    "newName": "videoAdReporter"
  },
  {
    "name": "widthRetriever",
    "newName": "retrieveAdWidth"
  },
  {
    "name": "executionResetter",
    "newName": "resetExecution"
  },
  {
    "name": "yearResetter",
    "newName": "resetYear"
  },
  {
    "name": "zoneResetter",
    "newName": "resetZone"
  },
  {
    "name": "abstractResponder",
    "newName": "baseHandler"
  },
  {
    "name": "baseResponder",
    "newName": "baseAdHandler"
  },
  {
    "name": "coordinateResponder",
    "newName": "coordinateAdHandler"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutHandler"
  },
  {
    "name": "getAdState",
    "newName": "fetchAdState"
  },
  {
    "name": "getAdEnvironmentInstance",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "isAdPlayingOrMuted",
    "newName": "isAdMuted"
  },
  {
    "name": "calculateVisibilityAtThreshold",
    "newName": "getVisibilityAtThreshold"
  },
  {
    "name": "isAdTimeout",
    "newName": "checkAdTimeout"
  },
  {
    "name": "generateAdPlaybackData",
    "newName": "createAdPlaybackData"
  },
  {
    "name": "generateDetailedAdPlaybackData",
    "newName": "createDetailedAdPlaybackData"
  },
  {
    "name": "updateAdPlaybackData",
    "newName": "updateAdPlaybackInfo"
  },
  {
    "name": "ensureArraySize",
    "newName": "resizeArray"
  },
  {
    "name": "generateImpressionDataArray",
    "newName": "createImpressionDataArray"
  },
  {
    "name": "generateAdRequestData",
    "newName": "createAdRequestData"
  },
  {
    "name": "verifyRequest",
    "newName": "validateRequest"
  },
  {
    "name": "extendObject",
    "newName": "extendAdObject"
  },
  {
    "name": "addParametersFromObject",
    "newName": "addAdParameters"
  },
  {
    "name": "buildQueryString",
    "newName": "createQueryString"
  },
  {
    "name": "accumulatePosition",
    "newName": "getCurrentPosition"
  },
  {
    "name": "roundRectangle",
    "newName": "roundRect"
  },
  {
    "name": "createRectangle",
    "newName": "createRect"
  },
  {
    "name": "convertRectToBox",
    "newName": "rectToBox"
  },
  {
    "name": "createRectangle",
    "newName": "createRect"
  },
  {
    "name": "Size",
    "newName": "Dimension"
  },
  {
    "name": "AdComponent",
    "newName": "AdElement"
  },
  {
    "name": "AdContainer",
    "newName": "AdContainerElement"
  },
  {
    "name": "VisibilityMetricsCalculator",
    "newName": "VisibilityCalculator"
  },
  {
    "name": "MetricsTracker",
    "newName": "MetricTracker"
  },
  {
    "name": "AdEventNames",
    "newName": "AdEventTypes"
  },
  {
    "name": "AdProcessor",
    "newName": "AdHandler"
  },
  {
    "name": "mappedAdEventTypes",
    "newName": "mappedEventTypes"
  },
  {
    "name": "adEventTimestamp",
    "newName": "adEventTime"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironmentConfig"
  },
  {
    "name": "isAdVisible",
    "newName": "checkAdVisibility"
  },
  {
    "name": "adData",
    "newName": "adDataObject"
  },
  {
    "name": "adGenerator",
    "newName": "adGeneratorObject"
  },
  {
    "name": "adMapping",
    "newName": "adDataMapping"
  },
  {
    "name": "rrentEntry",
    "newName": "currentAdEntry"
  },
  {
    "name": "generatorWrapper",
    "newName": "adDataWrapper"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "entry",
    "newName": "adType"
  },
  {
    "name": "createCircularNode",
    "newName": "currentNode"
  },
  {
    "name": "normalizeAdDuration",
    "newName": "calculateAdDuration"
  },
  {
    "name": "calculateTotalVisibility",
    "newName": "computeTotalVisibility"
  },
  {
    "name": "calculateMaxVisibility",
    "newName": "computeMaxVisibility"
  },
  {
    "name": "isAdTimeout",
    "newName": "checkAdTimeout"
  },
  {
    "name": "getAdPlaybackType",
    "newName": "determineAdPlaybackType"
  },
  {
    "name": "getAdBoundsArray",
    "newName": "retrieveAdBoundsArray"
  },
  {
    "name": "generateImpressionDataArray",
    "newName": "createImpressionDataArray"
  },
  {
    "name": "statusRetriever",
    "newName": "fetchStatus"
  },
  {
    "name": "reportRetriever",
    "newName": "fetchReport"
  },
  {
    "name": "calculateAverageVisibility",
    "newName": "computeAverageVisibility"
  },
  {
    "name": "resetVisibilityMetrics",
    "newName": "clearVisibilityMetrics"
  },
  {
    "name": "uniqueElements",
    "newName": "removeDuplicateElements"
  },
  {
    "name": "mapElements",
    "newName": "mapArrayElements"
  },
  {
    "name": "filterElements",
    "newName": "filterArrayElements"
  },
  {
    "name": "copyArray",
    "newName": "duplicateArray"
  },
  {
    "name": "extendObject",
    "newName": "mergeObjects"
  },
  {
    "name": "roundToPrecision",
    "newName": "roundToDecimal"
  },
  {
    "name": "accumulatePosition",
    "newName": "sumPositions"
  },
  {
    "name": "getAdEventByIndex",
    "newName": "fetchAdEventByIndex"
  },
  {
    "name": "getMaxVisibility",
    "newName": "computeMaxVisibilityScore"
  },
  {
    "name": "serializeAdStates",
    "newName": "convertAdStatesToString"
  },
  {
    "name": "getPerformanceData",
    "newName": "retrievePerformanceData"
  },
  {
    "name": "verifyRequest",
    "newName": "validateRequest"
  },
  {
    "name": "AdProcessor",
    "newName": "AdHandler"
  },
  {
    "name": "zeroReset",
    "newName": "resetToZero"
  },
  {
    "name": "checksum",
    "newName": "calculateChecksum"
  },
  {
    "name": "browserSize",
    "newName": "retrieveBrowserSize"
  },
  {
    "name": "assignSession",
    "newName": "initializeSession"
  },
  {
    "name": "addEventListenerWithCapture",
    "newName": "addEventListenerWithCapturePhase"
  },
  {
    "name": "incrementPropertyL",
    "newName": "increasePropertyL"
  },
  {
    "name": "incrementPropertyGInB",
    "newName": "increasePropertyGInB"
  },
  {
    "name": "incrementPropertyGInBRepeated",
    "newName": "increasePropertyGInBRepeated"
  },
  {
    "name": "incrementPropertyJ",
    "newName": "increasePropertyJ"
  },
  {
    "name": "incrementPropertyO",
    "newName": "increasePropertyO"
  },
  {
    "name": "screenDimensions",
    "newName": "ScreenDimensions"
  },
  {
    "name": "findAdContainerByNa",
    "newName": "locateAdContainerByNa"
  },
  {
    "name": "findAdContainerByNb",
    "newName": "locateAdContainerByNb"
  },
  {
    "name": "findAdContainerByNaAndType2",
    "newName": "locateAdContainerByNaAndType2"
  },
  {
    "name": "mergeAdContainerArrays",
    "newName": "combineAdContainerArrays"
  },
  {
    "name": "removeAdContainer",
    "newName": "deleteAdContainer"
  },
  {
    "name": "removeRelatedAdContainers",
    "newName": "deleteRelatedAdContainers"
  },
  {
    "name": "addUniqueAdContainers",
    "newName": "insertUniqueAdContainers"
  },
  {
    "name": "addBatchAdContainers",
    "newName": "insertBatchAdContainers"
  },
  {
    "name": "globalAdContainersManager",
    "newName": "adContainersManager"
  },
  {
    "name": "AdInitializationState",
    "newName": "AdStateInitializer"
  },
  {
    "name": "initializeAdContainer",
    "newName": "setupAdContainer"
  },
  {
    "name": "AdLoader",
    "newName": "AdRequestLoader"
  },
  {
    "name": "AdCreator",
    "newName": "AdRequestCreator"
  },
  {
    "name": "inheritPrototype",
    "newName": "extendPrototype"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "registerAdComponent",
    "newName": "addAdComponent"
  },
  {
    "name": "filterAndLinkAdContainers",
    "newName": "filterAndConnectAdContainers"
  },
  {
    "name": "intersectionObserverOptions",
    "newName": "observerOptions"
  },
  {
    "name": "AdVisibilityMonitor",
    "newName": "AdVisibilityObserver"
  },
  {
    "name": "accumulatePosition",
    "newName": "sumPositions"
  },
  {
    "name": "setupAdVisibilityMonitoring",
    "newName": "initializeAdVisibilityMonitoring"
  },
  {
    "name": "getIntersectionObserverRecords",
    "newName": "fetchObserverRecords"
  },
  {
    "name": "handleVisibilityChange",
    "newName": "processVisibilityChange"
  },
  {
    "name": "getMostRecentEntry",
    "newName": "fetchMostRecentEntry"
  },
  {
    "name": "convertRectToBox",
    "newName": "transformRectToBox"
  },
  {
    "name": "translateRectangle",
    "newName": "translateRect"
  },
  {
    "name": "logError",
    "newName": "logErrorDetails"
  },
  {
    "name": "activateAdController",
    "newName": "enableAdController"
  },
  {
    "name": "AdVisibilityProvider",
    "newName": "AdVisibilityProvider"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "getAdEnvironmentInstance",
    "newName": "fetchAdEnvironmentInstance"
  },
  {
    "name": "GeoLocationProvider",
    "newName": "GeoLocationProvider"
  },
  {
    "name": "getGeoFlag",
    "newName": "fetchGeoFlag"
  },
  {
    "name": "EmptyClass",
    "newName": "PlaceholderClass"
  },
  {
    "name": "initAdRequestManager",
    "newName": "initializeAdRequestManager"
  },
  {
    "name": "startSampling",
    "newName": "initiateSampling"
  },
  {
    "name": "resetGlobalState",
    "newName": "clearGlobalState"
  },
  {
    "name": "processSamples",
    "newName": "handleSamples"
  },
  {
    "name": "setupSamplingEvent",
    "newName": "initializeSamplingEvent"
  },
  {
    "name": "processAllSamples",
    "newName": "handleAllSamples"
  },
  {
    "name": "generateTargetingValues",
    "newName": "createTargetingValues"
  },
  {
    "name": "initializeErrorHandling",
    "newName": "setupErrorHandling"
  },
  {
    "name": "generateUrlParams",
    "newName": "createUrlParams"
  },
  {
    "name": "extractVersion",
    "newName": "fetchVersion"
  },
  {
    "name": "determineSdkType",
    "newName": "identifySdkType"
  },
  {
    "name": "sdkType",
    "newName": "sdkIdentifier"
  },
  {
    "name": "sdkVersion",
    "newName": "sdkReleaseVersion"
  },
  {
    "name": "generateErrorObject",
    "newName": "createErrorObject"
  },
  {
    "name": "isCustomMetricViewable",
    "newName": "checkCustomMetricViewability"
  },
  {
    "name": "getMetricType",
    "newName": "fetchMetricType"
  },
  {
    "name": "metricNames",
    "newName": "metricIdentifiers"
  },
  {
    "name": "metricValidators",
    "newName": "metricValidations"
  },
  {
    "name": "ProfileMetrics",
    "newName": "PerformanceMetrics"
  },
  {
    "name": "parseCustomMetrics",
    "newName": "interpretCustomMetrics"
  },
  {
    "name": "calculateMetricValue",
    "newName": "computeMetricValue"
  },
  {
    "name": "CustomMetric",
    "newName": "AdCustomMetric"
  },
  {
    "name": "yearResetter",
    "newName": "YearResetter"
  },
  {
    "name": "ata",
    "newName": "adData"
  },
  {
    "name": "profileData",
    "newName": "adProfileData"
  },
  {
    "name": "rejectFunction",
    "newName": "adConfig"
  },
  {
    "name": "user",
    "newName": "adUser"
  },
  {
    "name": "iterateEntries",
    "newName": "timeDifference"
  },
  {
    "name": "generatorWrapper",
    "newName": "context"
  },
  {
    "name": "value",
    "newName": "urlParams"
  },
  {
    "name": "CustomMap",
    "newName": "versionMatch"
  },
  {
    "name": "findEntry",
    "newName": "adEntry"
  },
  {
    "name": "resolveFunction",
    "newName": "resolveAdFunction"
  },
  {
    "name": "emptyString",
    "newName": "emptyUrlString"
  },
  {
    "name": "isBooleanFlag",
    "newName": "isAdUtilityAvailable"
  },
  {
    "name": "generateUrlParams",
    "newName": "generateAdUrlParams"
  },
  {
    "name": "extractVersion",
    "newName": "extractSdkVersion"
  },
  {
    "name": "determineSdkType",
    "newName": "getSdkType"
  },
  {
    "name": "sdkType",
    "newName": "sdkIdentifier"
  },
  {
    "name": "sdkVersion",
    "newName": "sdkReleaseVersion"
  },
  {
    "name": "generateErrorObject",
    "newName": "generateAdErrorObject"
  },
  {
    "name": "isCustomMetricViewable",
    "newName": "isCustomMetricVisible"
  },
  {
    "name": "getMetricType",
    "newName": "getAdMetricType"
  },
  {
    "name": "metricNames",
    "newName": "adMetricNames"
  },
  {
    "name": "metricValidators",
    "newName": "adMetricValidators"
  },
  {
    "name": "ProfileMetrics",
    "newName": "AdProfileMetrics"
  },
  {
    "name": "parseCustomMetrics",
    "newName": "parseAdCustomMetrics"
  },
  {
    "name": "calculateMetricValue",
    "newName": "calculateAdMetricValue"
  },
  {
    "name": "CustomMetric",
    "newName": "AdCustomMetric"
  },
  {
    "name": "AdDataParser",
    "newName": "AdParser"
  },
  {
    "name": "ViewabilityMeasurement",
    "newName": "AdViewabilityMeasurement"
  },
  {
    "name": "MeasurementStrategy",
    "newName": "AdMeasurementStrategy"
  },
  {
    "name": "ViewableImpressionMeasurement",
    "newName": "ViewableAdImpressionMeasurement"
  },
  {
    "name": "MeasurableImpressionMeasurement",
    "newName": "MeasurableAdImpressionMeasurement"
  },
  {
    "name": "StrategyFactory",
    "newName": "AdStrategyFactory"
  },
  {
    "name": "ViewabilityQuery",
    "newName": "AdViewabilityQuery"
  },
  {
    "name": "ViewabilityService",
    "newName": "AdViewabilityService"
  },
  {
    "name": "NativeViewabilityQuery",
    "newName": "NativeAdViewabilityQuery"
  },
  {
    "name": "NativeViewabilityService",
    "newName": "NativeAdViewabilityService"
  },
  {
    "name": "adService",
    "newName": "AdService"
  },
  {
    "name": "addMraidEventListener",
    "newName": "addMraidAdEventListener"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeMraidAd"
  },
  {
    "name": "setupMraid",
    "newName": "setupMraidAd"
  },
  {
    "name": "checkMraidFeatures",
    "newName": "checkMraidAdFeatures"
  },
  {
    "name": "startMraidMeasurement",
    "newName": "startMraidAdMeasurement"
  },
  {
    "name": "configureMraidExperiments",
    "newName": "configureMraidAdExperiments"
  },
  {
    "name": "removeMraidEventListener",
    "newName": "removeMraidAdEventListener"
  },
  {
    "name": "onMraidReady",
    "newName": "onMraidAdReady"
  },
  {
    "name": "initializeAdDisplayContainer",
    "newName": "initializeAdContainer"
  },
  {
    "name": "enableManualVideoAdBreaks",
    "newName": "enableManualAdBreaks"
  },
  {
    "name": "FeatureToggle",
    "newName": "AdFeatureToggle"
  },
  {
    "name": "AdEventReporter",
    "newName": "AdReporter"
  },
  {
    "name": "Et",
    "newName": "createAdEvent"
  },
  {
    "name": "processAdTrackingInfo",
    "newName": "processAdTrackingData"
  },
  {
    "name": "getDefaultAdProviders",
    "newName": "getAdProviders"
  },
  {
    "name": "initializeAdReporting",
    "newName": "initializeAdReportingService"
  },
  {
    "name": "finalizeAdReporting",
    "newName": "finalizeAdReportingService"
  },
  {
    "name": "getAdReportingMode",
    "newName": "getAdReportingMode"
  },
  {
    "name": "reportAdEvent",
    "newName": "sendAdEvent"
  },
  {
    "name": "resetAdProviders",
    "newName": "resetAdProviders"
  },
  {
    "name": "reportAdStart",
    "newName": "sendAdStartEvent"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adEventReporterPrototype"
  },
  {
    "name": "trackAdEventByType",
    "newName": "trackAdEvent"
  },
  {
    "name": "initializeAdSdk",
    "newName": "initializeAdSdkService"
  },
  {
    "name": "createAdElement",
    "newName": "createAdElementInstance"
  },
  {
    "name": "validateAdProperties",
    "newName": "validateAdProperties"
  },
  {
    "name": "AudioAudibleEvent",
    "newName": "AudibleAdEvent"
  },
  {
    "name": "AudioMeasurableEvent",
    "newName": "MeasurableAdEvent"
  },
  {
    "name": "AudioEventProcessor",
    "newName": "AdAudioEventProcessor"
  },
  {
    "name": "AdEventValidator",
    "newName": "AdEventValidator"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adEventReporterPrototype"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventData"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adEventCustomMap"
  },
  {
    "name": "trackAdEventByType",
    "newName": "handleAdEventByType"
  },
  {
    "name": "validateAdProperties",
    "newName": "checkAdProperties"
  },
  {
    "name": "convertAdPropertiesToMillis",
    "newName": "convertAdPropertiesToMilliseconds"
  },
  {
    "name": "initializeAdSdk",
    "newName": "initializeAdSdkInfo"
  },
  {
    "name": "createAdElement",
    "newName": "createAdContainer"
  },
  {
    "name": "AdEventReporter",
    "newName": "AdEventLogger"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerClass"
  },
  {
    "name": "AudioAudibleEvent",
    "newName": "AudibleAudioEvent"
  },
  {
    "name": "AudioMeasurableEvent",
    "newName": "MeasurableAudioEvent"
  },
  {
    "name": "AudioEventProcessor",
    "newName": "AudioEventHandler"
  },
  {
    "name": "AdEventValidator",
    "newName": "AdEventVerifier"
  },
  {
    "name": "sendVastAdEvent",
    "newName": "sendVastAdHandler"
  },
  {
    "name": "publicSendVastEvent",
    "newName": "sendPublicVastEvent"
  },
  {
    "name": "generatorWrapper",
    "newName": "event"
  },
  {
    "name": "pointerTypeMap",
    "newName": "pointerTypeMapping"
  },
  {
    "name": "TouchEventProcessor",
    "newName": "CustomTouchEvent"
  },
  {
    "name": "isListenableKey",
    "newName": "listenableKey"
  },
  {
    "name": "isListenable",
    "newName": "checkIsListenable"
  },
  {
    "name": "listenerUniqueId",
    "newName": "uniqueListenerId"
  },
  {
    "name": "Listener",
    "newName": "EventListener"
  },
  {
    "name": "clearListener",
    "newName": "resetListener"
  },
  {
    "name": "EventTarget",
    "newName": "CustomEventTarget"
  },
  {
    "name": "addParameter",
    "newName": "addListener"
  },
  {
    "name": "removeElement",
    "newName": "removeListener"
  },
  {
    "name": "Cu",
    "newName": "removeListenerFromTarget"
  },
  {
    "name": "Bu",
    "newName": "findListenerIndex"
  },
  {
    "name": "Du",
    "newName": "closureListenerMapKey"
  },
  {
    "name": "Eu",
    "newName": "eventMap"
  },
  {
    "name": "Fu",
    "newName": "globalListenerCount"
  },
  {
    "name": "addPageHideListener",
    "newName": "addEventListeners"
  },
  {
    "name": "Ju",
    "newName": "addSingleEventListener"
  },
  {
    "name": "Lu",
    "newName": "createEventWrapper"
  },
  {
    "name": "Gu",
    "newName": "addOnceEventListener"
  },
  {
    "name": "Ou",
    "newName": "removeEventListeners"
  },
  {
    "name": "Pu",
    "newName": "removeEventListenerFromElement"
  },
  {
    "name": "Mu",
    "newName": "getPrefixedEventName"
  },
  {
    "name": "Nu",
    "newName": "handleEvent"
  },
  {
    "name": "Ku",
    "newName": "getEventTarget"
  },
  {
    "name": "Qu",
    "newName": "closureEventFunctionKey"
  },
  {
    "name": "Iu",
    "newName": "getEventHandler"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvironment"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adEnvironmentPrototype"
  },
  {
    "name": "getAdEnvironment",
    "newName": "resetEnvironment"
  },
  {
    "name": "ObjectPool",
    "newName": "CustomObjectPool"
  },
  {
    "name": "releaseObject",
    "newName": "releasePooledObject"
  },
  {
    "name": "Uu",
    "newName": "messageChannel"
  },
  {
    "name": "getMessageChannelMethod",
    "newName": "createMessageChannel"
  },
  {
    "name": "TaskQueue",
    "newName": "AsyncTaskQueue"
  },
  {
    "name": "taskQueuePool",
    "newName": "taskNodePool"
  },
  {
    "name": "TaskQueueNode",
    "newName": "AsyncTaskNode"
  },
  {
    "name": "executeTasksMethod",
    "newName": "scheduleTaskExecution"
  },
  {
    "name": "tasksExecuted",
    "newName": "tasksScheduled"
  },
  {
    "name": "globalTaskQueue",
    "newName": "mainTaskQueue"
  },
  {
    "name": "enqueueTask",
    "newName": "addTaskToQueue"
  },
  {
    "name": "setupExecuteTasksMethod",
    "newName": "initializeTaskScheduler"
  },
  {
    "name": "executeQueuedTasks",
    "newName": "runQueuedTasks"
  },
  {
    "name": "isThenable",
    "newName": "checkIsThenable"
  },
  {
    "name": "PromisePolyfill",
    "newName": "CustomPromise"
  },
  {
    "name": "PromiseChainNode",
    "newName": "PromiseNode"
  },
  {
    "name": "promiseChainNodePool",
    "newName": "promiseNodePool"
  },
  {
    "name": "createPromiseChainNode",
    "newName": "createPromiseNode"
  },
  {
    "name": "thenHelper",
    "newName": "createThenHandler"
  },
  {
    "name": "resolveOrReject",
    "newName": "resolveOrRejectPromise"
  },
  {
    "name": "handleThenable",
    "newName": "processThenable"
  },
  {
    "name": "finalizePromise",
    "newName": "completePromise"
  },
  {
    "name": "networkVersion",
    "newName": "dequeuePromiseNode"
  },
  {
    "name": "rejectPromiseChainNode",
    "newName": "processPromiseNode"
  },
  {
    "name": "callHandler",
    "newName": "invokeHandler"
  },
  {
    "name": "reportUnhandledRejection",
    "newName": "logUnhandledRejection"
  },
  {
    "name": "logError",
    "newName": "deferError"
  },
  {
    "name": "CancellationError",
    "newName": "CancelError"
  },
  {
    "name": "Timer",
    "newName": "CustomTimer"
  },
  {
    "name": "setAsyncTimeout",
    "newName": "scheduleAsyncTimeout"
  },
  {
    "name": "createTimerPromise",
    "newName": "createTimeoutPromise"
  },
  {
    "name": "getCurrentTimestamp",
    "newName": "getUnixTimestamp"
  },
  {
    "name": "SimpleStore",
    "newName": "KeyValueStore"
  },
  {
    "name": "setBitFlag",
    "newName": "setFlag"
  },
  {
    "name": "globalStore",
    "newName": "singletonStore"
  },
  {
    "name": "GlobalStoreConstructor",
    "newName": "GlobalStore"
  },
  {
    "name": "getGlobalStore",
    "newName": "retrieveGlobalStore"
  },
  {
    "name": "registerGlobalValue",
    "newName": "registerGlobalVariable"
  },
  {
    "name": "GlobalValue",
    "newName": "GlobalVariable"
  },
  {
    "name": "BooleanGlobalValue",
    "newName": "BooleanGlobalVariable"
  },
  {
    "name": "RectGlobalValue",
    "newName": "RectGlobalVariable"
  },
  {
    "name": "parseRectFromString",
    "newName": "convertStringToRect"
  },
  {
    "name": "calculateBoundingRect",
    "newName": "computeBoundingRect"
  },
  {
    "name": "getElementRectangle",
    "newName": "getElementBoundingRect"
  },
  {
    "name": "apper",
    "newName": "errorHandler"
  },
  {
    "name": "logError",
    "newName": "logErrorFunction"
  },
  {
    "name": "CancellationError",
    "newName": "CancellationErrorClass"
  },
  {
    "name": "Timer",
    "newName": "TimerClass"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timerPrototype"
  },
  {
    "name": "setAsyncTimeout",
    "newName": "asyncTimeoutFunction"
  },
  {
    "name": "createTimerPromise",
    "newName": "createTimerPromiseFunction"
  },
  {
    "name": "getCurrentTimestamp",
    "newName": "getCurrentTimestampFunction"
  },
  {
    "name": "SimpleStore",
    "newName": "SimpleStoreClass"
  },
  {
    "name": "setBitFlag",
    "newName": "setBitFlagFunction"
  },
  {
    "name": "globalStore",
    "newName": "globalStoreInstance"
  },
  {
    "name": "GlobalStoreConstructor",
    "newName": "GlobalStoreClass"
  },
  {
    "name": "getGlobalStore",
    "newName": "getGlobalStoreFunction"
  },
  {
    "name": "registerGlobalValue",
    "newName": "registerGlobalValueFunction"
  },
  {
    "name": "GlobalValue",
    "newName": "GlobalValueClass"
  },
  {
    "name": "BooleanGlobalValue",
    "newName": "BooleanGlobalValueClass"
  },
  {
    "name": "RectGlobalValue",
    "newName": "RectGlobalValueClass"
  },
  {
    "name": "parseRectFromString",
    "newName": "parseRectFromStringFunction"
  },
  {
    "name": "calculateBoundingRect",
    "newName": "calculateBoundingRectFunction"
  },
  {
    "name": "getElementRectangle",
    "newName": "getElementRectangleFunction"
  },
  {
    "name": "calculateVisibilityMetrics",
    "newName": "calculateVisibilityMetricsFunction"
  },
  {
    "name": "VisibilityMetricsCollector",
    "newName": "VisibilityMetricsCollectorClass"
  },
  {
    "name": "collectAndSerializeVisibilityMetrics",
    "newName": "collectAndSerializeVisibilityMetricsFunction"
  },
  {
    "name": "AdSlot",
    "newName": "AdSlotClass"
  },
  {
    "name": "AdSize",
    "newName": "AdSizeClass"
  },
  {
    "name": "AdParameters",
    "newName": "AdParametersClass"
  },
  {
    "name": "Ad",
    "newName": "AdClass"
  },
  {
    "name": "AdEvent",
    "newName": "AdEventClass"
  },
  {
    "name": "setAdEventType",
    "newName": "setAdEventTypeFunction"
  },
  {
    "name": "setAdEventTimeStamp",
    "newName": "setAdEventTimeStampFunction"
  },
  {
    "name": "setAdEventAdData",
    "newName": "setAdEventAdDataFunction"
  },
  {
    "name": "AdRequest",
    "newName": "AdRequestClass"
  },
  {
    "name": "setAdRequestType",
    "newName": "setAdRequestTypeFunction"
  },
  {
    "name": "addAdToAdRequest",
    "newName": "addAdToAdRequestFunction"
  },
  {
    "name": "setAdRequestAdUnitPath",
    "newName": "setAdRequestAdUnitPathFunction"
  },
  {
    "name": "AdResponse",
    "newName": "AdResponseClass"
  },
  {
    "name": "AdBreak",
    "newName": "AdBreakClass"
  },
  {
    "name": "addAdRequestToAdBreak",
    "newName": "addAdRequestToAdBreakFunction"
  },
  {
    "name": "setAdBreakFillType",
    "newName": "setAdBreakFillTypeFunction"
  },
  {
    "name": "setAdBreakId",
    "newName": "setAdBreakIdFunction"
  },
  {
    "name": "AdSchedule",
    "newName": "AdScheduleClass"
  },
  {
    "name": "addAdBreakToAdSchedule",
    "newName": "addAdBreakToAdScheduleFunction"
  },
  {
    "name": "AdRule",
    "newName": "AdRuleClass"
  },
  {
    "name": "AdRuleParameters",
    "newName": "AdRuleParametersClass"
  },
  {
    "name": "AdBreakTemplate",
    "newName": "AdBreakTemplateClass"
  },
  {
    "name": "AdSpot",
    "newName": "AdSpotClass"
  },
  {
    "name": "getAdSpot",
    "newName": "getAdSpotFunction"
  },
  {
    "name": "AdError",
    "newName": "AdErrorClass"
  },
  {
    "name": "createAdError",
    "newName": "createAdErrorFunction"
  },
  {
    "name": "AdErrorResponse",
    "newName": "AdErrorResponseClass"
  },
  {
    "name": "createAdErrorResponse",
    "newName": "createAdErrorResponseFunction"
  },
  {
    "name": "setAdErrorResponseTimeStamp",
    "newName": "setAdErrorResponseTimeStampFunction"
  },
  {
    "name": "AdRequestConfiguration",
    "newName": "AdRequestConfigurationClass"
  },
  {
    "name": "RandomGenerator",
    "newName": "RandomGeneratorClass"
  },
  {
    "name": "initializeRandomGenerator",
    "newName": "initializeRandomGeneratorFunction"
  },
  {
    "name": "sendAdEvent",
    "newName": "sendAdEventFunction"
  },
  {
    "name": "AdExtension",
    "newName": "AdExtensionClass"
  },
  {
    "name": "AdExtensionParameters",
    "newName": "AdExtensionParametersClass"
  },
  {
    "name": "setAdExtensionParam",
    "newName": "setAdExtensionParamFunction"
  },
  {
    "name": "setAdExtensionValue",
    "newName": "setAdExtensionValueFunction"
  },
  {
    "name": "setAdExtensionOption",
    "newName": "setAdExtensionOptionFunction"
  },
  {
    "name": "finalizeAdExtension",
    "newName": "finalizeAdExtensionFunction"
  },
  {
    "name": "AdManifest",
    "newName": "AdManifestClass"
  },
  {
    "name": "AdManifestVersion",
    "newName": "AdManifestVersionClass"
  },
  {
    "name": "setAdManifestVersion",
    "newName": "setAdManifestVersionFunction"
  },
  {
    "name": "addAdManifestExtension",
    "newName": "addAdManifestExtensionFunction"
  },
  {
    "name": "addAdManifestTemplate",
    "newName": "addAdManifestTemplateFunction"
  },
  {
    "name": "setAdManifestId",
    "newName": "setAdManifestIdFunction"
  },
  {
    "name": "setAdManifestSequence",
    "newName": "setAdManifestSequenceFunction"
  },
  {
    "name": "setAdManifestAdBreakId",
    "newName": "setAdManifestAdBreakIdFunction"
  },
  {
    "name": "setAdManifestFallbackIndex",
    "newName": "setAdManifestFallbackIndexFunction"
  },
  {
    "name": "setAdManifestAdPolicy",
    "newName": "setAdManifestAdPolicyFunction"
  },
  {
    "name": "setAdManifestDuration",
    "newName": "setAdManifestDurationFunction"
  },
  {
    "name": "enableAdManifestSkippable",
    "newName": "enableAdManifestSkippableFunction"
  },
  {
    "name": "enableAdManifestVPAID",
    "newName": "enableAdManifestVPAIDFunction"
  },
  {
    "name": "setAdManifestCreativeType",
    "newName": "setAdManifestCreativeTypeFunction"
  },
  {
    "name": "setAdManifestWrapper",
    "newName": "setAdManifestWrapperFunction"
  },
  {
    "name": "setAdManifestLinear",
    "newName": "setAdManifestLinearFunction"
  },
  {
    "name": "setAdRequestParameter15",
    "newName": "setAdRequestParameter15Function"
  },
  {
    "name": "setAdRequestParameter16",
    "newName": "setAdRequestParameter16Function"
  },
  {
    "name": "setAdRequestParameter17",
    "newName": "setAdRequestParameter17Function"
  },
  {
    "name": "setAdRequestParameter18",
    "newName": "setAdRequestParameter18Function"
  },
  {
    "name": "setAdRequestParameter19",
    "newName": "setAdRequestParameter19Function"
  },
  {
    "name": "AdResponse",
    "newName": "AdResponseClass"
  },
  {
    "name": "BitStringReader",
    "newName": "BitStringReaderClass"
  },
  {
    "name": "decodePurposeRestrictions",
    "newName": "decodePurposeRestrictionsFunction"
  },
  {
    "name": "decodeVendor",
    "newName": "decodeVendorFunction"
  },
  {
    "name": "decodeVendorList",
    "newName": "decodeVendorListFunction"
  },
  {
    "name": "decodeVendorConsent",
    "newName": "decodeVendorConsentFunction"
  },
  {
    "name": "decodeRange",
    "newName": "decodeRangeFunction"
  },
  {
    "name": "decodeSingleVendor",
    "newName": "decodeSingleVendorFunction"
  },
  {
    "name": "readBits",
    "newName": "readBitsFunction"
  },
  {
    "name": "decodeAdBreak",
    "newName": "decodeAdBreakFunction"
  },
  {
    "name": "decodeAdRequest",
    "newName": "decodeAdRequestFunction"
  },
  {
    "name": "decodeAdResponse",
    "newName": "decodeAdResponseFunction"
  },
  {
    "name": "getAdResponseType",
    "newName": "getAdResponseTypeFunction"
  },
  {
    "name": "generateAdResponseMap",
    "newName": "generateAdResponseMapFunction"
  },
  {
    "name": "DefaultValueContainer",
    "newName": "DefaultValueContainerClass"
  },
  {
    "name": "ance",
    "newName": "onFulfilled"
  },
  {
    "name": "inheritPrototype",
    "newName": "extendPrototype"
  },
  {
    "name": "AdResponse",
    "newName": "AdResponseClass"
  },
  {
    "name": "AdElement",
    "newName": "BaseAdElement"
  },
  {
    "name": "baseCharCode",
    "newName": "baseCharacterCode"
  },
  {
    "name": "vendorIds",
    "newName": "vendorIdentifiers"
  },
  {
    "name": "valuesOfObject",
    "newName": "getObjectValues"
  },
  {
    "name": "purposeIds",
    "newName": "purposeIdentifiers"
  },
  {
    "name": "BitStringReader",
    "newName": "BitStringReaderClass"
  },
  {
    "name": "decodePurposeRestrictions",
    "newName": "decodePurposeRestrictionsFunction"
  },
  {
    "name": "readBits",
    "newName": "readBitsFunction"
  },
  {
    "name": "AdManifest",
    "newName": "AdManifestClass"
  },
  {
    "name": "setAdPropertyFromString",
    "newName": "setAdPropertyFromStringFunction"
  },
  {
    "name": "modifyAdProperty",
    "newName": "modifyAdPropertyFunction"
  },
  {
    "name": "decodeVendor",
    "newName": "decodeVendorFunction"
  },
  {
    "name": "decodeVendorList",
    "newName": "decodeVendorListFunction"
  },
  {
    "name": "decodeRange",
    "newName": "decodeRangeFunction"
  },
  {
    "name": "decodeSingleVendor",
    "newName": "decodeSingleVendorFunction"
  },
  {
    "name": "decodeVendorConsent",
    "newName": "decodeVendorConsentFunction"
  },
  {
    "name": "parseNullableIntEnum",
    "newName": "parseNullableIntEnumFunction"
  },
  {
    "name": "transformAndReplaceArray",
    "newName": "transformAndReplaceArrayFunction"
  },
  {
    "name": "parseInt32",
    "newName": "parseInt32Function"
  },
  {
    "name": "AdExtension",
    "newName": "AdExtensionClass"
  },
  {
    "name": "updateOrRemoveElement",
    "newName": "updateOrRemoveElementFunction"
  },
  {
    "name": "decodeAdBreak",
    "newName": "decodeAdBreakFunction"
  },
  {
    "name": "getBase64EncodedArray",
    "newName": "getBase64EncodedArrayFunction"
  },
  {
    "name": "setAdExtensionValue",
    "newName": "setAdExtensionValueFunction"
  },
  {
    "name": "setAdExtensionParam",
    "newName": "setAdExtensionParamFunction"
  },
  {
    "name": "AdExtensionParameters",
    "newName": "AdExtensionParametersClass"
  },
  {
    "name": "finalizeAdExtension",
    "newName": "finalizeAdExtensionFunction"
  },
  {
    "name": "setAdExtensionOption",
    "newName": "setAdExtensionOptionFunction"
  },
  {
    "name": "decodeAdRequest",
    "newName": "decodeAdRequestFunction"
  },
  {
    "name": "setAdRequestParameter19",
    "newName": "setAdRequestParameter19Function"
  },
  {
    "name": "setAdRequestParameter18",
    "newName": "setAdRequestParameter18Function"
  },
  {
    "name": "setAdRequestParameter17",
    "newName": "setAdRequestParameter17Function"
  },
  {
    "name": "setAdRequestParameter16",
    "newName": "setAdRequestParameter16Function"
  },
  {
    "name": "setAdRequestParameter15",
    "newName": "setAdRequestParameter15Function"
  },
  {
    "name": "setAdManifestLinear",
    "newName": "setAdManifestLinearFunction"
  },
  {
    "name": "setAdManifestWrapper",
    "newName": "setAdManifestWrapperFunction"
  },
  {
    "name": "setAdManifestCreativeType",
    "newName": "setAdManifestCreativeTypeFunction"
  },
  {
    "name": "enableAdManifestVPAID",
    "newName": "enableAdManifestVPAIDFunction"
  },
  {
    "name": "enableAdManifestSkippable",
    "newName": "enableAdManifestSkippableFunction"
  },
  {
    "name": "setAdManifestDuration",
    "newName": "setAdManifestDurationFunction"
  },
  {
    "name": "setAdManifestAdPolicy",
    "newName": "setAdManifestAdPolicyFunction"
  },
  {
    "name": "setAdManifestFallbackIndex",
    "newName": "setAdManifestFallbackIndexFunction"
  },
  {
    "name": "setAdManifestAdBreakId",
    "newName": "setAdManifestAdBreakIdFunction"
  },
  {
    "name": "setAdManifestSequence",
    "newName": "setAdManifestSequenceFunction"
  },
  {
    "name": "setAdManifestId",
    "newName": "setAdManifestIdFunction"
  },
  {
    "name": "addAdManifestTemplate",
    "newName": "addAdManifestTemplateFunction"
  },
  {
    "name": "addAdManifestExtension",
    "newName": "addAdManifestExtensionFunction"
  },
  {
    "name": "setAdManifestVersion",
    "newName": "setAdManifestVersionFunction"
  },
  {
    "name": "AdManifestVersion",
    "newName": "AdManifestVersionClass"
  },
  {
    "name": "decodeAdResponse",
    "newName": "decodeAdResponseFunction"
  },
  {
    "name": "getAdResponseType",
    "newName": "getAdResponseTypeFunction"
  },
  {
    "name": "generateAdResponseMap",
    "newName": "generateAdResponseMapFunction"
  },
  {
    "name": "DefaultValueContainer",
    "newName": "DefaultValueContainerClass"
  },
  {
    "name": "CustomClass",
    "newName": "CustomClassInstance"
  },
  {
    "name": "replaceArrayIfNotArray",
    "newName": "replaceArrayIfNotArrayFunction"
  },
  {
    "name": "onFulfilled",
    "newName": "onFulfilledFunction"
  },
  {
    "name": "urlSchemeRegex",
    "newName": "urlSchemeRegexPattern"
  },
  {
    "name": "adAttributesList",
    "newName": "adAttributesListArray"
  },
  {
    "name": "AdDimensions",
    "newName": "AdDimensionsClass"
  },
  {
    "name": "ExtendedAdDimensions",
    "newName": "ExtendedAdDimensionsClass"
  },
  {
    "name": "MediaAdDimensions",
    "newName": "MediaAdDimensionsClass"
  },
  {
    "name": "createInstanceWithArguments",
    "newName": "createInstanceWithArgumentsFunction"
  },
  {
    "name": "MessageHandler",
    "newName": "MessageHandlerClass"
  },
  {
    "name": "tryCall",
    "newName": "tryCallFunction"
  },
  {
    "name": "getAdEnvironment",
    "newName": "getAdEnvironmentFunction"
  },
  {
    "name": "removeEventListenerWithNormalization",
    "newName": "removeEventListenerWithNormalizationFunction"
  },
  {
    "name": "findFrameByName",
    "newName": "findFrameByNameFunction"
  },
  {
    "name": "invokeCallerMethod",
    "newName": "invokeCallerMethodFunction"
  },
  {
    "name": "setupMessageListener",
    "newName": "setupMessageListenerFunction"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addEventListenerWithNormalizationFunction"
  },
  {
    "name": "addEventListenerWrapper",
    "newName": "addEventListenerWrapperFunction"
  },
  {
    "name": "removeEventListenerWrapper",
    "newName": "removeEventListenerWrapperFunction"
  },
  {
    "name": "getDataWithCallbackWrapper",
    "newName": "getDataWithCallbackWrapperFunction"
  },
  {
    "name": "addEventListenerCommand",
    "newName": "addEventListenerCommandObject"
  },
  {
    "name": "removeEventListenerCommand",
    "newName": "removeEventListenerCommandObject"
  },
  {
    "name": "getDataWithCallbackCommand",
    "newName": "getDataWithCallbackCommandObject"
  },
  {
    "name": "parseMessagePayload",
    "newName": "parseMessagePayloadFunction"
  },
  {
    "name": "SignalStatusManager",
    "newName": "SignalStatusManagerClass"
  },
  {
    "name": "clearFunction",
    "newName": "clearFunctionFunction"
  },
  {
    "name": "signalStatusReadyErrorListenerTimeout",
    "newName": "signalStatusReadyErrorListenerTimeoutObject"
  },
  {
    "name": "invokeCallerMethod",
    "newName": "invokeCallerMethodFunction"
  },
  {
    "name": "signalStatusReadyErrorUnavailable",
    "newName": "signalStatusReadyErrorUnavailableObject"
  },
  {
    "name": "signalStatusReadyErrorRemoveListener",
    "newName": "signalStatusReadyErrorRemoveListenerObject"
  },
  {
    "name": "validateSignalData",
    "newName": "validateSignalDataFunction"
  },
  {
    "name": "ConsentStatusManager",
    "newName": "ConsentStatusManagerClass"
  },
  {
    "name": "isTcfApiFunctionAvailable",
    "newName": "isTcfApiFunctionAvailableFunction"
  },
  {
    "name": "waitForConsentWithTimeout",
    "newName": "waitForConsentWithTimeoutFunction"
  },
  {
    "name": "invokeTcfApi",
    "newName": "invokeTcfApiFunction"
  },
  {
    "name": "checkPublisherRestrictions",
    "newName": "checkPublisherRestrictionsFunction"
  },
  {
    "name": "checkConsentFor",
    "newName": "checkConsentForFunction"
  },
  {
    "name": "createElementWithAttributes",
    "newName": "createElementWithAttributesFunction"
  },
  {
    "name": "setupMessageEventListener",
    "newName": "setupMessageEventListenerFunction"
  },
  {
    "name": "isGdprConsentGiven",
    "newName": "isGdprConsentGivenFunction"
  },
  {
    "name": "checkSpecialFeatureConsents",
    "newName": "checkSpecialFeatureConsentsFunction"
  },
  {
    "name": "createCustomClassInstance",
    "newName": "createCustomClassInstanceFunction"
  },
  {
    "name": "table",
    "newName": "tableClass"
  },
  {
    "name": "urlRegex",
    "newName": "urlRegexPattern"
  },
  {
    "name": "setScheme",
    "newName": "setSchemeFunction"
  },
  {
    "name": "setPort",
    "newName": "setPortFunction"
  },
  {
    "name": "my",
    "newName": "myFunction"
  },
  {
    "name": "setQueryParameters",
    "newName": "setQueryParametersFunction"
  },
  {
    "name": "URLParameters",
    "newName": "URLParametersClass"
  },
  {
    "name": "setCaseSensitivity",
    "newName": "setCaseSensitivityFunction"
  },
  {
    "name": "setParameter",
    "newName": "setParameterFunction"
  },
  {
    "name": "decodeURIConditionally",
    "newName": "decodeURIConditionallyFunction"
  },
  {
    "name": "encodeURIConditionally",
    "newName": "encodeURIConditionallyFunction"
  },
  {
    "name": "Consents",
    "newName": "checkConsents"
  },
  {
    "name": "generatorWrapper",
    "newName": "context"
  },
  {
    "name": "value",
    "newName": "consentValues"
  },
  {
    "name": "CustomMap",
    "newName": "consentValue"
  },
  {
    "name": "table",
    "newName": "URLHandler"
  },
  {
    "name": "tasks",
    "newName": "hostname"
  },
  {
    "name": "isDone",
    "newName": "username"
  },
  {
    "name": "createDeferred",
    "newName": "scheme"
  },
  {
    "name": "settlePromise",
    "newName": "port"
  },
  {
    "name": "executeCallbacks",
    "newName": "fragment"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "pathname"
  },
  {
    "name": "handleAsync",
    "newName": "isAsync"
  },
  {
    "name": "setScheme",
    "newName": "setScheme"
  },
  {
    "name": "setPort",
    "newName": "setPort"
  },
  {
    "name": "setQueryParameters",
    "newName": "setQueryParameters"
  },
  {
    "name": "my",
    "newName": "copyURLParameters"
  },
  {
    "name": "entryIdCounter",
    "newName": "queryParameters"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "getFragment"
  },
  {
    "name": "decodeURIConditionally",
    "newName": "decodeURIConditionally"
  },
  {
    "name": "encodeURIConditionally",
    "newName": "encodeURIConditionally"
  },
  {
    "name": "regexForHashSlashQuestionAt",
    "newName": "regexForHashSlashQuestionAt"
  },
  {
    "name": "regexForHashColonQuestion",
    "newName": "regexForHashColonQuestion"
  },
  {
    "name": "regexForHashQuestion",
    "newName": "regexForHashQuestion"
  },
  {
    "name": "regexForHashQuestionAt",
    "newName": "regexForHashQuestionAt"
  },
  {
    "name": "regexForHash",
    "newName": "regexForHash"
  },
  {
    "name": "URLParameters",
    "newName": "URLParameters"
  },
  {
    "name": "initializeURLParametersMap",
    "newName": "initializeURLParametersMap"
  },
  {
    "name": "setParameter",
    "newName": "setParameter"
  },
  {
    "name": "createOrProcessURL",
    "newName": "createOrProcessURL"
  },
  {
    "name": "includesString",
    "newName": "includesString"
  },
  {
    "name": "normalizeParameterKey",
    "newName": "normalizeParameterKey"
  },
  {
    "name": "setCaseSensitivity",
    "newName": "setCaseSensitivity"
  },
  {
    "name": "trustedDomainsList",
    "newName": "trustedDomainsList"
  },
  {
    "name": "matchesTrustedDomains",
    "newName": "matchesTrustedDomains"
  },
  {
    "name": "convertToHttpsIfApplicable",
    "newName": "convertToHttpsIfApplicable"
  },
  {
    "name": "isGCacheURL",
    "newName": "isGCacheURL"
  },
  {
    "name": "getGCacheURL",
    "newName": "getGCacheURL"
  },
  {
    "name": "openURLInNewWindow",
    "newName": "openURLInNewWindow"
  },
  {
    "name": "iterateAndExecute",
    "newName": "iterateAndExecute"
  },
  {
    "name": "IteratorWithCallback",
    "newName": "IteratorWithCallback"
  },
  {
    "name": "createTransformIterator",
    "newName": "createTransformIterator"
  },
  {
    "name": "unionSets",
    "newName": "unionSets"
  },
  {
    "name": "resizeObserversMap",
    "newName": "resizeObserversMap"
  },
  {
    "name": "ResizeObserverWrapper",
    "newName": "ResizeObserverWrapper"
  },
  {
    "name": "observeElementResizeWithTimeout",
    "newName": "observeElementResizeWithTimeout"
  },
  {
    "name": "observeElementResize",
    "newName": "observeElementResize"
  },
  {
    "name": "waitForElementResize",
    "newName": "waitForElementResize"
  },
  {
    "name": "disconnectResizeObservers",
    "newName": "disconnectResizeObservers"
  },
  {
    "name": "cleanupResizeObserver",
    "newName": "cleanupResizeObserver"
  },
  {
    "name": "ensureObjectProperty",
    "newName": "ensureObjectProperty"
  },
  {
    "name": "exportToGlobal",
    "newName": "exportToGlobal"
  },
  {
    "name": "verificationVendorsRegexMap",
    "newName": "verificationVendorsRegexMap"
  },
  {
    "name": "iOSVersionRegex",
    "newName": "iOSVersionRegex"
  },
  {
    "name": "androidVersionRegex",
    "newName": "androidVersionRegex"
  },
  {
    "name": "matchesUserAgentVersion",
    "newName": "matchesUserAgentVersion"
  },
  {
    "name": "isTouchEnabledDevice",
    "newName": "isTouchEnabledDevice"
  },
  {
    "name": "isIOSVersionAtLeast",
    "newName": "isIOSVersionAtLeast"
  },
  {
    "name": "hasPlaysInlineAttribute",
    "newName": "hasPlaysInlineAttribute"
  },
  {
    "name": "VideoPlaybackMonitor",
    "newName": "VideoPlaybackMonitor"
  },
  {
    "name": "getCurrentVideoTime",
    "newName": "getCurrentVideoTime"
  },
  {
    "name": "handleVideoPlaying",
    "newName": "handleVideoPlaying"
  },
  {
    "name": "trustedDomainsList",
    "newName": "trustedDomainsList"
  },
  {
    "name": "ocrRegex",
    "newName": "ocrRegex"
  },
  {
    "name": "isTrustedDomain",
    "newName": "isTrustedDomain"
  },
  {
    "name": "matchesRegex",
    "newName": "matchesRegex"
  },
  {
    "name": "parseQueryString",
    "newName": "parseQueryString"
  },
  {
    "name": "normalizeLanguageCode",
    "newName": "normalizeLanguageCode"
  },
  {
    "name": "Timer",
    "newName": "Timer"
  },
  {
    "name": "getRemainingTime",
    "newName": "getRemainingTime"
  },
  {
    "name": "UrlRequest",
    "newName": "UrlRequest"
  },
  {
    "name": "getErrorDescription",
    "newName": "getErrorDescription"
  },
  {
    "name": "CustomError",
    "newName": "CustomError"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventDispatcher"
  },
  {
    "name": "singleElementArray",
    "newName": "singleElementArray"
  },
  {
    "name": "addListener",
    "newName": "addListener"
  },
  {
    "name": "removeListener",
    "newName": "removeListener"
  },
  {
    "name": "removeAllListeners",
    "newName": "removeAllListeners"
  },
  {
    "name": "CustomMap",
    "newName": "currentTimeMs"
  },
  {
    "name": "value",
    "newName": "threshold"
  },
  {
    "name": "generatorWrapper",
    "newName": "inputString"
  },
  {
    "name": "isEmptyOrWhitespace",
    "newName": "isStringEmptyOrWhitespace"
  },
  {
    "name": "stringifyNullable",
    "newName": "convertToString"
  },
  {
    "name": "isIE",
    "newName": "isInternetExplorer"
  },
  {
    "name": "table",
    "newName": "URLParser"
  },
  {
    "name": "ocrRegex",
    "newName": "ocrPattern"
  },
  {
    "name": "trustedDomainsList",
    "newName": "trustedDomains"
  },
  {
    "name": "handleAsync",
    "newName": "isPlaybackStalled"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "lastCheckedTime"
  },
  {
    "name": "onFulfilled",
    "newName": "callback"
  },
  {
    "name": "findEntry",
    "newName": "keyValuePair"
  },
  {
    "name": "trimString",
    "newName": "trim"
  },
  {
    "name": "parseQueryString",
    "newName": "parseCommaSeparatedKeyValuePairs"
  },
  {
    "name": "normalizeLanguageCode",
    "newName": "normalizeLocale"
  },
  {
    "name": "Timer",
    "newName": "Timestamp"
  },
  {
    "name": "resetAdStateController",
    "newName": "resetTimestamp"
  },
  {
    "name": "getRemainingTime",
    "newName": "getTimeRemaining"
  },
  {
    "name": "UrlRequest",
    "newName": "HttpRequest"
  },
  {
    "name": "getErrorDescription",
    "newName": "getErrorMessage"
  },
  {
    "name": "CustomError",
    "newName": "ApplicationError"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventManager"
  },
  {
    "name": "addListener",
    "newName": "registerEventListener"
  },
  {
    "name": "removeListener",
    "newName": "unregisterEventListener"
  },
  {
    "name": "removeAllListeners",
    "newName": "clearAllEventListeners"
  },
  {
    "name": "compareValues",
    "newName": "compareEventListeners"
  },
  {
    "name": "tryCall",
    "newName": "BaseClass"
  },
  {
    "name": "singleElementArray",
    "newName": "tempArray"
  },
  {
    "name": "addPageHideListener",
    "newName": "addEventListener"
  },
  {
    "name": "Gu",
    "newName": "getEventListener"
  },
  {
    "name": "Iu",
    "newName": "normalizeEventListener"
  },
  {
    "name": "isObjectOrFunction",
    "newName": "isFunctionOrObject"
  },
  {
    "name": "isListenable",
    "newName": "isEventTarget"
  },
  {
    "name": "Pu",
    "newName": "cleanupEventListener"
  },
  {
    "name": "forEachInObject",
    "newName": "iterateObjectProperties"
  },
  {
    "name": "Singleton",
    "newName": "SingletonClass"
  },
  {
    "name": "getSingletonInstance",
    "newName": "getInstance"
  },
  {
    "name": "singletonInstance",
    "newName": "singleton"
  },
  {
    "name": "SingletonBase",
    "newName": "SingletonBaseClass"
  },
  {
    "name": "HttpRequest",
    "newName": "HttpClient"
  },
  {
    "name": "httpRegex",
    "newName": "httpPattern"
  },
  {
    "name": "contentTypesWithPayload",
    "newName": "methodsWithPayload"
  },
  {
    "name": "sendRequest",
    "newName": "sendHttpRequest"
  },
  {
    "name": "bindOrWrapFunction",
    "newName": "bindFunction"
  },
  {
    "name": "clearTimeoutIfSet",
    "newName": "clearTimeoutIfExists"
  },
  {
    "name": "definePropertyPolyfill",
    "newName": "handleTimeout"
  },
  {
    "name": "handleRequestError",
    "newName": "handleHttpRequestError"
  },
  {
    "name": "dispatchErrorEvents",
    "newName": "triggerErrorEvents"
  },
  {
    "name": "cleanupRequest",
    "newName": "cleanupHttpRequest"
  },
  {
    "name": "checkRequestStatus",
    "newName": "checkHttpRequestStatus"
  },
  {
    "name": "parseResponse",
    "newName": "parseJsonResponse"
  },
  {
    "name": "GetRequest",
    "newName": "HttpGetRequest"
  },
  {
    "name": "makeGetRequest",
    "newName": "executeHttpGetRequest"
  },
  {
    "name": "makeRequest",
    "newName": "executeHttpRequest"
  },
  {
    "name": "fetchWithRetry",
    "newName": "fetchWithRetries"
  },
  {
    "name": "createFetchRequestOptions",
    "newName": "getFetchRequestOptions"
  },
  {
    "name": "loadImage",
    "newName": "loadTrackingImage"
  },
  {
    "name": "sendGetRequest",
    "newName": "sendHttpGetRequest"
  },
  {
    "name": "EventTypes",
    "newName": "MediaEventTypes"
  },
  {
    "name": "MediaElement",
    "newName": "MediaElementBase"
  },
  {
    "name": "itagResolutionMap",
    "newName": "itagResolutionMapping"
  },
  {
    "name": "itagSupportsAutoplayMap",
    "newName": "itagAutoplaySupportMapping"
  },
  {
    "name": "itagFormatMap",
    "newName": "itagFormatMapping"
  },
  {
    "name": "itagCodecMap",
    "newName": "itagCodecMapping"
  },
  {
    "name": "videoFormatMappings",
    "newName": "videoFormatMapping"
  },
  {
    "name": "itagContainerMap",
    "newName": "itagContainerMapping"
  },
  {
    "name": "codecMappings",
    "newName": "codecMapping"
  },
  {
    "name": "codecMappingsInitialized",
    "newName": "initializedCodecMapping"
  },
  {
    "name": "itagRegex",
    "newName": "itagPattern"
  },
  {
    "name": "getItagValue",
    "newName": "extractItagFromUrl"
  },
  {
    "name": "getMediaSourceString",
    "newName": "getMediaSourceType"
  },
  {
    "name": "createCustomEvent",
    "newName": "createEvent"
  },
  {
    "name": "MediaSourceLoader",
    "newName": "MediaSourceManager"
  },
  {
    "name": "checkAndHandleMediaSourceState",
    "newName": "checkMediaSourceState"
  },
  {
    "name": "fetchMediaSegments",
    "newName": "fetchMediaSourceSegments"
  },
  {
    "name": "handleMediaSourceBuffer",
    "newName": "processMediaSourceBuffer"
  },
  {
    "name": "fetchAndProcessMedia",
    "newName": "fetchAndProcessMediaSegments"
  },
  {
    "name": "finalizeMediaBuffer",
    "newName": "finalizeMediaSourceBuffer"
  },
  {
    "name": "dispatchMediaProgressEvent",
    "newName": "triggerMediaProgressEvent"
  },
  {
    "name": "UriParameterManager",
    "newName": "UriParamsManager"
  },
  {
    "name": "parseUriParameters",
    "newName": "parseUriParams"
  },
  {
    "name": "getRangeStart",
    "newName": "getUriRangeStart"
  },
  {
    "name": "getParameterById",
    "newName": "getUriParamById"
  },
  {
    "name": "EmptyFunction",
    "newName": "Noop"
  },
  {
    "name": "trustedDomains",
    "newName": "defaultTrustedDomains"
  },
  {
    "name": "isSupportedEnvironment",
    "newName": "checkSupportedEnvironment"
  },
  {
    "name": "ErrorBase",
    "newName": "BaseError"
  },
  {
    "name": "ErrorCodes",
    "newName": "ApplicationErrorCodes"
  },
  {
    "name": "UnknownErrorCode",
    "newName": "UnknownError"
  },
  {
    "name": "NotFoundErrorCode",
    "newName": "NotFoundError"
  },
  {
    "name": "ConstraintErrorCode",
    "newName": "ConstraintError"
  },
  {
    "name": "DataErrorCode",
    "newName": "DataError"
  },
  {
    "name": "TransactionInactiveErrorCode",
    "newName": "TransactionInactiveError"
  },
  {
    "name": "AbortErrorCode",
    "newName": "AbortError"
  },
  {
    "name": "ReadOnlyErrorCode",
    "newName": "ReadOnlyError"
  },
  {
    "name": "TimeoutErrorCode",
    "newName": "TimeoutError"
  },
  {
    "name": "QuotaExceededErrorCode",
    "newName": "QuotaExceededError"
  },
  {
    "name": "InvalidAccessErrorCode",
    "newName": "InvalidAccessError"
  },
  {
    "name": "InvalidStateErrorCode",
    "newName": "InvalidStateError"
  },
  {
    "name": "getErrorFromName",
    "newName": "getErrorCodeByName"
  },
  {
    "name": "settlePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "adPromiseResolver"
  },
  {
    "name": "getAdInstance",
    "newName": "getAdInstanceFromResolver"
  },
  {
    "name": "findEntry",
    "newName": "adResponse"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGeneratorWrapper"
  },
  {
    "name": "value",
    "newName": "adValue"
  },
  {
    "name": "iterateEntries",
    "newName": "adBody"
  },
  {
    "name": "createCircularNode",
    "newName": "adReader"
  },
  {
    "name": "logError",
    "newName": "logAdError"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntries"
  },
  {
    "name": "key",
    "newName": "processAdEntries"
  },
  {
    "name": "entry",
    "newName": "adEntry"
  },
  {
    "name": "currentEntry",
    "newName": "isAdEntryDone"
  },
  {
    "name": "foundEntry",
    "newName": "currentAdEntry"
  },
  {
    "name": "resolveFunction",
    "newName": "shouldResolvePromise"
  },
  {
    "name": "rejectFunction",
    "newName": "currentAdEntryValue"
  },
  {
    "name": "user",
    "newName": "adUserBuffer"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapAdGeneratorToPromise"
  },
  {
    "name": "profileData",
    "newName": "adProfileData"
  },
  {
    "name": "generatorYield",
    "newName": "adGeneratorYield"
  },
  {
    "name": "tasks",
    "newName": "adTasks"
  },
  {
    "name": "CustomMap",
    "newName": "isCustomMap"
  },
  {
    "name": "finalizeMediaBuffer",
    "newName": "finalizeAdBuffer"
  },
  {
    "name": "dispatchMediaProgressEvent",
    "newName": "dispatchAdProgressEvent"
  },
  {
    "name": "MediaSourceLoader",
    "newName": "AdMediaSourceLoader"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "closeCache",
    "newName": "closeAdCache"
  },
  {
    "name": "UriParameterManager",
    "newName": "AdUriParameterManager"
  },
  {
    "name": "parseUriParameters",
    "newName": "parseAdUriParameters"
  },
  {
    "name": "getAdId",
    "newName": "fetchAdId"
  },
  {
    "name": "getRangeStart",
    "newName": "fetchAdRangeStart"
  },
  {
    "name": "getParameterById",
    "newName": "fetchAdParameterById"
  },
  {
    "name": "EmptyFunction",
    "newName": "NoOpFunction"
  },
  {
    "name": "trustedDomains",
    "newName": "adTrustedDomains"
  },
  {
    "name": "isSupportedEnvironment",
    "newName": "isAdEnvironmentSupported"
  },
  {
    "name": "isIphone",
    "newName": "isIphoneDevice"
  },
  {
    "name": "handleAsync",
    "newName": "checkAsync"
  },
  {
    "name": "isAndroid",
    "newName": "isAndroidDevice"
  },
  {
    "name": "trustedDomainsListCache",
    "newName": "adTrustedDomainsCache"
  },
  {
    "name": "userAgentStringCache",
    "newName": "adUserAgentStringCache"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGeneratorWrapper"
  },
  {
    "name": "isAppleDevice",
    "newName": "isAppleDeviceDetected"
  },
  {
    "name": "includesString",
    "newName": "stringIncludes"
  },
  {
    "name": "getUserAgentString",
    "newName": "fetchUserAgentString"
  },
  {
    "name": "table",
    "newName": "adTable"
  },
  {
    "name": "hasPlatform",
    "newName": "hasUserAgentPlatform"
  },
  {
    "name": "userAgentData",
    "newName": "userAgentDataObject"
  },
  {
    "name": "handleThenable",
    "newName": "isThenableObject"
  },
  {
    "name": "vm",
    "newName": "vmObject"
  },
  {
    "name": "tm",
    "newName": "tmObject"
  },
  {
    "name": "um",
    "newName": "umObject"
  },
  {
    "name": "isChromiumBased",
    "newName": "isChromiumBrowser"
  },
  {
    "name": "isTrustedDomain",
    "newName": "isAdTrustedDomain"
  },
  {
    "name": "value",
    "newName": "adValue"
  },
  {
    "name": "CustomMap",
    "newName": "adDomain"
  },
  {
    "name": "ErrorBase",
    "newName": "AdErrorBase"
  },
  {
    "name": "CustomError",
    "newName": "AdCustomError"
  },
  {
    "name": "getNameFromError",
    "newName": "fetchAdErrorName"
  },
  {
    "name": "getErrorFromName",
    "newName": "fetchAdErrorCode"
  },
  {
    "name": "code",
    "newName": "adErrorCode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adErrorDetails"
  },
  {
    "name": "ErrorCodes",
    "newName": "AdErrorCodes"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "fetchAdPropertyNumericValue"
  },
  {
    "name": "isMobile",
    "newName": "isMobileDevice"
  },
  {
    "name": "NOT_FOUND_ERR",
    "newName": "AD_NOT_FOUND_ERR"
  },
  {
    "name": "rf",
    "newName": "AD_CONSTRAINT_ERR"
  },
  {
    "name": "uf",
    "newName": "AD_DATA_ERR"
  },
  {
    "name": "extractBaseUrl",
    "newName": "extractAdBaseUrl"
  },
  {
    "name": "getNumericAdProperty",
    "newName": "fetchNumericAdProperty"
  },
  {
    "name": "ABORT_ERR",
    "newName": "AD_ABORT_ERR"
  },
  {
    "name": "getAdPropertyValue",
    "newName": "fetchAdPropertyValue"
  },
  {
    "name": "createHtmlElement",
    "newName": "createAdHtmlElement"
  },
  {
    "name": "TIMEOUT_ERR",
    "newName": "AD_TIMEOUT_ERR"
  },
  {
    "name": "getAdProperty",
    "newName": "fetchAdProperty"
  },
  {
    "name": "INVALID_ACCESS_ERR",
    "newName": "AD_INVALID_ACCESS_ERR"
  },
  {
    "name": "INVALID_STATE_ERR",
    "newName": "AD_INVALID_STATE_ERR"
  },
  {
    "name": "UnknownErrorCode",
    "newName": "AD_UNKNOWN_ERR_CODE"
  },
  {
    "name": "NotFoundErrorCode",
    "newName": "AD_NOT_FOUND_ERR_CODE"
  },
  {
    "name": "ConstraintErrorCode",
    "newName": "AD_CONSTRAINT_ERR_CODE"
  },
  {
    "name": "DataErrorCode",
    "newName": "AD_DATA_ERR_CODE"
  },
  {
    "name": "TransactionInactiveErrorCode",
    "newName": "AD_TRANSACTION_INACTIVE_ERR_CODE"
  },
  {
    "name": "AbortErrorCode",
    "newName": "AD_ABORT_ERR_CODE"
  },
  {
    "name": "ReadOnlyErrorCode",
    "newName": "AD_READ_ONLY_ERR_CODE"
  },
  {
    "name": "TimeoutErrorCode",
    "newName": "AD_TIMEOUT_ERR_CODE"
  },
  {
    "name": "QuotaExceededErrorCode",
    "newName": "AD_QUOTA_EXCEEDED_ERR_CODE"
  },
  {
    "name": "InvalidAccessErrorCode",
    "newName": "AD_INVALID_ACCESS_ERR_CODE"
  },
  {
    "name": "InvalidStateErrorCode",
    "newName": "AD_INVALID_STATE_ERR_CODE"
  },
  {
    "name": "createErrorFromRequest",
    "newName": "createAdErrorFromRequest"
  },
  {
    "name": "createErrorFromException",
    "newName": "createAdErrorFromException"
  },
  {
    "name": "KeyRangeWrapper",
    "newName": "AdKeyRangeWrapper"
  },
  {
    "name": "IndexedDBKeyRange",
    "newName": "AdIndexedDBKeyRange"
  },
  {
    "name": "PromiseBase",
    "newName": "AdPromiseBase"
  },
  {
    "name": "Deferred",
    "newName": "AdDeferred"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandlers"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "createDeferred",
    "newName": "isDeferredCreated"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutHandler"
  },
  {
    "name": "tasks",
    "newName": "adTasks"
  },
  {
    "name": "executeCallbacks",
    "newName": "executeAdCallbacks"
  },
  {
    "name": "logError",
    "newName": "logAdError"
  },
  {
    "name": "onFulfilled",
    "newName": "isFulfilled"
  },
  {
    "name": "isDone",
    "newName": "isAdDone"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryCounter"
  },
  {
    "name": "settlePromise",
    "newName": "settleAdPromise"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritAdPrototype"
  },
  {
    "name": "cancel",
    "newName": "cancelAd"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetAdGeneratorState"
  },
  {
    "name": "rejectPromise",
    "newName": "rejectAdPromise"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchAdUnhandledRejection"
  },
  {
    "name": "executeCallbacks",
    "newName": "executeAdCallbacks"
  },
  {
    "name": "assertNotFired",
    "newName": "assertAdNotFired"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetAdGeneratorState"
  },
  {
    "name": "rejectPromise",
    "newName": "rejectAdPromise"
  },
  {
    "name": "addToCallbackQueueWithoutContext",
    "newName": "addToAdCallbackQueueWithoutContext"
  },
  {
    "name": "addToCallbackQueue",
    "newName": "addToAdCallbackQueue"
  },
  {
    "name": "then",
    "newName": "thenAd"
  },
  {
    "name": "hasCallbacks",
    "newName": "hasAdCallbacks"
  },
  {
    "name": "callbackMarker",
    "newName": "adCallbackMarker"
  },
  {
    "name": "processCallbackQueue",
    "newName": "processAdCallbackQueue"
  },
  {
    "name": "AlreadyCalledError",
    "newName": "AdAlreadyCalledError"
  },
  {
    "name": "CanceledError",
    "newName": "AdCanceledError"
  },
  {
    "name": "TimeoutError",
    "newName": "AdTimeoutError"
  },
  {
    "name": "timeoutRegistry",
    "newName": "adTimeoutRegistry"
  },
  {
    "name": "CursorRequest",
    "newName": "AdCursorRequest"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvironmentConfig"
  },
  {
    "name": "next",
    "newName": "nextAd"
  },
  {
    "name": "removeElement",
    "newName": "removeAdElement"
  },
  {
    "name": "getAdStateValue",
    "newName": "fetchAdStateValue"
  },
  {
    "name": "openCursor",
    "newName": "openAdCursor"
  },
  {
    "name": "IndexRequest",
    "newName": "AdIndexRequest"
  },
  {
    "name": "getAdName",
    "newName": "fetchAdName"
  },
  {
    "name": "getIndex",
    "newName": "fetchAdIndex"
  },
  {
    "name": "openIndexCursor",
    "newName": "openAdIndexCursor"
  },
  {
    "name": "ObjectStoreRequest",
    "newName": "AdObjectStoreRequest"
  },
  {
    "name": "executeStoreRequest",
    "newName": "executeAdStoreRequest"
  },
  {
    "name": "putValue",
    "newName": "putAdValue"
  },
  {
    "name": "addParameter",
    "newName": "addAdParameter"
  },
  {
    "name": "removeElement",
    "newName": "removeAdElement"
  },
  {
    "name": "get",
    "newName": "fetchAd"
  },
  {
    "name": "clearAll",
    "newName": "clearAllAds"
  },
  {
    "name": "getIndexTimestamp",
    "newName": "fetchAdIndexTimestamp"
  },
  {
    "name": "TransactionRequest",
    "newName": "AdTransactionRequest"
  },
  {
    "name": "fetchData",
    "newName": "fetchAdData"
  },
  {
    "name": "commit",
    "newName": "commitAdTransaction"
  },
  {
    "name": "wait",
    "newName": "waitForAdTransaction"
  },
  {
    "name": "abort",
    "newName": "abortAdTransaction"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "DatabaseRequest",
    "newName": "AdDatabaseRequest"
  },
  {
    "name": "undefinedVariable1",
    "newName": "isAdCacheOpen"
  },
  {
    "name": "xf",
    "newName": "handleAdError"
  },
  {
    "name": "filterAdProperties",
    "newName": "filterAdProperties"
  },
  {
    "name": "closeCache",
    "newName": "closeAdCache"
  },
  {
    "name": "getUniqueId",
    "newName": "fetchAdUniqueId"
  },
  {
    "name": "getAdName",
    "newName": "fetchAdName"
  },
  {
    "name": "getAdManifestVersion",
    "newName": "fetchAdManifestVersion"
  },
  {
    "name": "AB",
    "newName": "createAdTransaction"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "zB",
    "newName": "AdVersionChangeEvent"
  },
  {
    "name": "BB",
    "newName": "openAdDatabase"
  },
  {
    "name": "CB",
    "newName": "AdCacheManager"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeAdCache"
  },
  {
    "name": "getUniqueId",
    "newName": "fetchAdUniqueId"
  },
  {
    "name": "closeCache",
    "newName": "closeAdCache"
  },
  {
    "name": "EB",
    "newName": "estimateAdStorageUsage"
  },
  {
    "name": "containsElement",
    "newName": "containsAdElement"
  },
  {
    "name": "isIpod",
    "newName": "storeAdInCache"
  },
  {
    "name": "tasks",
    "newName": "setupAdObjectStore"
  },
  {
    "name": "DB",
    "newName": "clearOldAds"
  },
  {
    "name": "FB",
    "newName": "parseAdUri"
  },
  {
    "name": "HB",
    "newName": "generateAdCacheKey"
  },
  {
    "name": "GB",
    "newName": "fetchAdFromCache"
  },
  {
    "name": "deleteVideoChunk",
    "newName": "deleteAdVideoChunk"
  },
  {
    "name": "VideoChunkLoader",
    "newName": "AdVideoChunkLoader"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchAdUnhandledRejection"
  },
  {
    "name": "onFulfilled",
    "newName": "isAdFulfilled"
  },
  {
    "name": "handleThenable",
    "newName": "handleAdThenable"
  },
  {
    "name": "checkAndHandleLoadingState",
    "newName": "checkAdLoadingState"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapAdGeneratorToPromise"
  },
  {
    "name": "generatorYield",
    "newName": "adGeneratorYield"
  },
  {
    "name": "loadVideoChunk",
    "newName": "loadAdVideoChunk"
  },
  {
    "name": "loadVideoChunkFromCache",
    "newName": "loadAdVideoChunkFromCache"
  },
  {
    "name": "processVideoChunkData",
    "newName": "processAdVideoChunkData"
  },
  {
    "name": "handleFallbackAndIncrementRetry",
    "newName": "handleAdFallbackAndRetry"
  },
  {
    "name": "setParameter",
    "newName": "setAdUriParameter"
  },
  {
    "name": "deleteVideoChunk",
    "newName": "deleteAdVideoChunk"
  },
  {
    "name": "dispatchEvent",
    "newName": "dispatchAdEvent"
  },
  {
    "name": "createCustomEvent",
    "newName": "createAdCustomEvent"
  },
  {
    "name": "getGeneratorException",
    "newName": "getAdGeneratorException"
  },
  {
    "name": "handleThenable",
    "newName": "isThenableObject"
  },
  {
    "name": "Lm",
    "newName": "isAdLm"
  },
  {
    "name": "Pu",
    "newName": "clearAdTimeout"
  },
  {
    "name": "Gu",
    "newName": "adEventListener"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "createCircularNode",
    "newName": "isCircularNode"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryIdList"
  },
  {
    "name": "settlePromise",
    "newName": "settleAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGeneratorWrapper"
  },
  {
    "name": "value",
    "newName": "currentValue"
  },
  {
    "name": "findEntry",
    "newName": "entryFinder"
  },
  {
    "name": "iterateEntries",
    "newName": "entryIterator"
  },
  {
    "name": "getBase64EncodedArray",
    "newName": "getEncodedArray"
  },
  {
    "name": "getTrustedTypesPolicy",
    "newName": "getTypesPolicy"
  },
  {
    "name": "includesBrand",
    "newName": "includesBrandName"
  },
  {
    "name": "source",
    "newName": "sourceType"
  },
  {
    "name": "startIndex",
    "newName": "startIndexValue"
  },
  {
    "name": "videoId",
    "newName": "videoIdentifier"
  },
  {
    "name": "HB",
    "newName": "generateHash"
  },
  {
    "name": "GB",
    "newName": "getAdEntry"
  },
  {
    "name": "AB",
    "newName": "getAdDatabase"
  },
  {
    "name": "deleteVideoChunk",
    "newName": "removeVideoChunk"
  },
  {
    "name": "VideoChunkLoader",
    "newName": "AdVideoChunkLoader"
  },
  {
    "name": "MediaElement",
    "newName": "AdMediaElement"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandler"
  },
  {
    "name": "logError",
    "newName": "errorHandler"
  },
  {
    "name": "uri",
    "newName": "resourceUri"
  },
  {
    "name": "isDone",
    "newName": "isLoadComplete"
  },
  {
    "name": "CB",
    "newName": "createCacheInstance"
  },
  {
    "name": "executeOrDelayUntilDisposed",
    "newName": "executeOrDelay"
  },
  {
    "name": "markAsCompletedWrapper",
    "newName": "markAsCompleted"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeAdMraid"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritAdPrototype"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchRejection"
  },
  {
    "name": "onFulfilled",
    "newName": "isFulfilled"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "checkAndHandleLoadingState",
    "newName": "checkAndHandleState"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapToPromise"
  },
  {
    "name": "generatorYield",
    "newName": "yieldGenerator"
  },
  {
    "name": "loadVideoChunk",
    "newName": "loadAdVideoChunk"
  },
  {
    "name": "Math.imul",
    "newName": "mathMultiply"
  },
  {
    "name": "loadVideoChunkFromCache",
    "newName": "loadFromCache"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetState"
  },
  {
    "name": "getGeneratorException",
    "newName": "getException"
  },
  {
    "name": "handleFallbackAndIncrementRetry",
    "newName": "handleRetry"
  },
  {
    "name": "UriParameterManager",
    "newName": "uriManager"
  },
  {
    "name": "setParameter",
    "newName": "setUriParameter"
  },
  {
    "name": "getParameterById",
    "newName": "getUriParameter"
  },
  {
    "name": "processVideoChunkData",
    "newName": "processAdVideoData"
  },
  {
    "name": "getAdEnvironment",
    "newName": "getAdEnv"
  },
  {
    "name": "loadingThresholds",
    "newName": "adLoadingThresholds"
  },
  {
    "name": "isMediaSourceSupported",
    "newName": "checkMediaSourceSupport"
  },
  {
    "name": "isSupportedVideoType",
    "newName": "checkVideoSupport"
  },
  {
    "name": "itagCodecMap",
    "newName": "codecMap"
  },
  {
    "name": "getMediaSourceString",
    "newName": "getMediaSourceType"
  },
  {
    "name": "LoadingStrategy",
    "newName": "AdLoadingStrategy"
  },
  {
    "name": "parsedIntegerTransformation",
    "newName": "transformInteger"
  },
  {
    "name": "SourceBufferManager",
    "newName": "BufferManager"
  },
  {
    "name": "executeBufferAppend",
    "newName": "appendBuffer"
  },
  {
    "name": "CacheVideoChunkStorage",
    "newName": "VideoChunkCache"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeCache"
  },
  {
    "name": "getUniqueId",
    "newName": "cacheHasUniqueId"
  },
  {
    "name": "closeCache",
    "newName": "closeCacheStorage"
  },
  {
    "name": "containsElement",
    "newName": "cacheContainsElement"
  },
  {
    "name": "isIpod",
    "newName": "cacheIpod"
  },
  {
    "name": "generateCacheKey",
    "newName": "createCacheKey"
  },
  {
    "name": "MediaSourceManager",
    "newName": "AdMediaSourceManager"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvConfig"
  },
  {
    "name": "setupSourceBuffers",
    "newName": "initializeSourceBuffers"
  },
  {
    "name": "initializeSegmentTrackers",
    "newName": "initSegmentTrackers"
  },
  {
    "name": "endAllSourceBuffers",
    "newName": "endSourceBuffers"
  },
  {
    "name": "updateSegmentTrackers",
    "newName": "updateSegmentTrackers"
  },
  {
    "name": "generateObjectURL",
    "newName": "createObjectURL"
  },
  {
    "name": "ByteArray",
    "newName": "updateByteArray"
  },
  {
    "name": "adRequestUrlPattern",
    "newName": "adRequestPattern"
  },
  {
    "name": "outstreamScriptPattern",
    "newName": "outstreamScriptRegex"
  },
  {
    "name": "outstreamStylePattern",
    "newName": "outstreamStyleRegex"
  },
  {
    "name": "fontRequestPattern",
    "newName": "fontRequestRegex"
  },
  {
    "name": "videoPlaybackUrlPattern",
    "newName": "videoPlaybackRegex"
  },
  {
    "name": "customElementsScriptPattern",
    "newName": "customElementsRegex"
  },
  {
    "name": "calculateAndReportResourceTiming",
    "newName": "reportResourceTiming"
  },
  {
    "name": "MediaSourceConfig",
    "newName": "AdMediaSourceConfig"
  },
  {
    "name": "reportVideoPlaybackQuality",
    "newName": "reportPlaybackQuality"
  },
  {
    "name": "EventName",
    "newName": "AdEventName"
  },
  {
    "name": "videoMuteEvent",
    "newName": "muteEvent"
  },
  {
    "name": "videoCaptionVisibilityEvent",
    "newName": "captionVisibilityEvent"
  },
  {
    "name": "EventDispatcher",
    "newName": "AdEventDispatcher"
  },
  {
    "name": "registerEvent",
    "newName": "registerAdEvent"
  },
  {
    "name": "unregisterEvent",
    "newName": "unregisterAdEvent"
  },
  {
    "name": "invokeEventCallback",
    "newName": "executeEventCallback"
  },
  {
    "name": "clearAll",
    "newName": "clearAllEvents"
  },
  {
    "name": "getAdEnvironment",
    "newName": "getAdEnv"
  },
  {
    "name": "EventDispatcherWrapper",
    "newName": "AdEventDispatcherWrapper"
  },
  {
    "name": "BaseComponent",
    "newName": "AdBaseComponent"
  },
  {
    "name": "bindComponentEvent",
    "newName": "bindAdComponentEvent"
  },
  {
    "name": "CaptionVisibilityComponent",
    "newName": "AdCaptionVisibilityComponent"
  },
  {
    "name": "BaseSDKComponent",
    "newName": "AdSDKComponent"
  },
  {
    "name": "placeholderForFutureFunction",
    "newName": "setupAdPlaceholder"
  },
  {
    "name": "setupCueChangeHandler",
    "newName": "setupCueHandler"
  },
  {
    "name": "endsWith",
    "newName": "hideCaptions"
  },
  {
    "name": "setupReportingObserver",
    "newName": "setupObserver"
  },
  {
    "name": "handleHeavyAdIntervention",
    "newName": "handleHeavyAdIntervention"
  },
  {
    "name": "videoAttributes",
    "newName": "videoAttrs"
  },
  {
    "name": "videoMethods",
    "newName": "videoMethods"
  },
  {
    "name": "mutationObserverConfig",
    "newName": "observerConfig"
  },
  {
    "name": "supportsClassFields",
    "newName": "checkClassFields"
  },
  {
    "name": "CustomHTMLElement",
    "newName": "CustomHTMLComponent"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "findEntry",
    "newName": "entryArray"
  },
  {
    "name": "iterateEntries",
    "newName": "entryIndex"
  },
  {
    "name": "createCircularNode",
    "newName": "argumentLength"
  },
  {
    "name": "entryIdCounter",
    "newName": "entryId"
  },
  {
    "name": "invokeEventCallback",
    "newName": "invokeCallback"
  },
  {
    "name": "generatorWrapper",
    "newName": "context"
  },
  {
    "name": "value",
    "newName": "task"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventDispatcher"
  },
  {
    "name": "tryCall",
    "newName": "BaseClass"
  },
  {
    "name": "registerDisposable",
    "newName": "registerDisposable"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototype"
  },
  {
    "name": "enqueueTask",
    "newName": "enqueueTask"
  },
  {
    "name": "setupVolumeChangeListener",
    "newName": "setupVolumeChangeListener"
  },
  {
    "name": "setupCueChangeHandler",
    "newName": "setupCueChangeHandler"
  },
  {
    "name": "createElementWithOptionalClassesAndAttributes",
    "newName": "createElementWithAttributes"
  },
  {
    "name": "resolvePromise",
    "newName": "resolvePromise"
  },
  {
    "name": "settlePromise",
    "newName": "settlePromise"
  },
  {
    "name": "videoMuteEvent",
    "newName": "videoMuteEvent"
  },
  {
    "name": "videoCaptionVisibilityEvent",
    "newName": "videoCaptionVisibilityEvent"
  },
  {
    "name": "initializeVideoElement",
    "newName": "initializeVideoElement"
  },
  {
    "name": "initializeCustomVideoElement",
    "newName": "initializeCustomVideoElement"
  },
  {
    "name": "processSrcAttribute",
    "newName": "processSrcAttribute"
  },
  {
    "name": "updateSrcAttribute",
    "newName": "updateSrcAttribute"
  },
  {
    "name": "updateDemuxedSources",
    "newName": "updateDemuxedSources"
  },
  {
    "name": "syncAttributeWithVideoElement",
    "newName": "syncAttributeWithVideoElement"
  },
  {
    "name": "removeTimeUpdateListener",
    "newName": "removeTimeUpdateListener"
  },
  {
    "name": "dispatchMediaError",
    "newName": "dispatchMediaError"
  },
  {
    "name": "proxyVideoProperties",
    "newName": "proxyVideoProperties"
  },
  {
    "name": "defineErrorProperty",
    "newName": "defineErrorProperty"
  },
  {
    "name": "resetVideoSize",
    "newName": "resetVideoSize"
  },
  {
    "name": "disconnectResizeObservers",
    "newName": "disconnectResizeObservers"
  },
  {
    "name": "loadVideoElement",
    "newName": "loadVideoElement"
  },
  {
    "name": "findTrackElement",
    "newName": "findTrackElement"
  },
  {
    "name": "setupMutationObserver",
    "newName": "setupMutationObserver"
  },
  {
    "name": "createCustomEvent",
    "newName": "createCustomEvent"
  },
  {
    "name": "addPageHideListener",
    "newName": "addPageHideListener"
  },
  {
    "name": "calculateAndReportResourceTiming",
    "newName": "calculateAndReportResourceTiming"
  },
  {
    "name": "reportVideoPlaybackQuality",
    "newName": "reportVideoPlaybackQuality"
  },
  {
    "name": "VideoPlaybackMonitor",
    "newName": "VideoPlaybackMonitor"
  },
  {
    "name": "applyStyleOrRemove",
    "newName": "applyStyleOrRemove"
  },
  {
    "name": "waitForElementResize",
    "newName": "waitForElementResize"
  },
  {
    "name": "createInstanceWithArguments",
    "newName": "createInstanceWithArguments"
  },
  {
    "name": "generateObjectURL",
    "newName": "generateObjectURL"
  },
  {
    "name": "isGCacheURL",
    "newName": "isGCacheURL"
  },
  {
    "name": "getGCacheURL",
    "newName": "getGCacheURL"
  },
  {
    "name": "getItagValue",
    "newName": "getItagValue"
  },
  {
    "name": "isSupportedVideoType",
    "newName": "isSupportedVideoType"
  },
  {
    "name": "getMediaSourceString",
    "newName": "getMediaSourceString"
  },
  {
    "name": "MediaSourceConfig",
    "newName": "MediaSourceConfig"
  },
  {
    "name": "MediaSourceManager",
    "newName": "MediaSourceManager"
  },
  {
    "name": "updateSegmentTrackers",
    "newName": "updateSegmentTrackers"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeMraid"
  },
  {
    "name": "CB",
    "newName": "CB"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvironmentConfig"
  },
  {
    "name": "setupReportingObserver",
    "newName": "setupReportingObserver"
  },
  {
    "name": "handleHeavyAdIntervention",
    "newName": "handleHeavyAdIntervention"
  },
  {
    "name": "MediaErrorWrapper",
    "newName": "MediaErrorWrapper"
  },
  {
    "name": "MediaSrcNotSupportedError",
    "newName": "MediaSrcNotSupportedError"
  },
  {
    "name": "CustomVideoElement",
    "newName": "CustomVideoElement"
  },
  {
    "name": "loadVideoElement",
    "newName": "loadVideoElement"
  },
  {
    "name": "initializeVideoComponent",
    "newName": "initializeVideoComponent"
  },
  {
    "name": "AdLoader",
    "newName": "AdLoader"
  },
  {
    "name": "dispatchMediaSourceError",
    "newName": "dispatchMediaSourceError"
  },
  {
    "name": "handleChunkLoadError",
    "newName": "handleChunkLoadError"
  },
  {
    "name": "setupChunkLoaderEvents",
    "newName": "setupChunkLoaderEvents"
  },
  {
    "name": "handleAdRequestFailure",
    "newName": "handleAdRequestFailure"
  },
  {
    "name": "handleChunkLoadResponse",
    "newName": "handleChunkLoadResponse"
  },
  {
    "name": "processVideoAd",
    "newName": "processVideoAd"
  },
  {
    "name": "createBufferFromArrayResponse",
    "newName": "createBufferFromArrayResponse"
  },
  {
    "name": "processSourceBuffer",
    "newName": "processSourceBuffer"
  },
  {
    "name": "createAdRequestUrl",
    "newName": "createAdRequestUrl"
  },
  {
    "name": "processAdRequest",
    "newName": "processAdRequest"
  },
  {
    "name": "initializeMediaSource",
    "newName": "initializeMediaSource"
  },
  {
    "name": "uuidCharacters",
    "newName": "uuidCharacters"
  },
  {
    "name": "generateUUID",
    "newName": "generateUUID"
  },
  {
    "name": "CustomUri",
    "newName": "CustomUri"
  },
  {
    "name": "parseUriParameters",
    "newName": "parseUriParameters"
  },
  {
    "name": "getOrdParameter",
    "newName": "getOrdParameter"
  },
  {
    "name": "setOrdParameter",
    "newName": "setOrdParameter"
  },
  {
    "name": "buildUriString",
    "newName": "buildUriString"
  },
  {
    "name": "getUriParameters",
    "newName": "getUriParameters"
  },
  {
    "name": "decodeUriComponentWithSpace",
    "newName": "decodeUriComponentWithSpace"
  },
  {
    "name": "stringifyNullable",
    "newName": "stringifyNullable"
  },
  {
    "name": "isEmptyOrWhitespace",
    "newName": "isEmptyOrWhitespace"
  },
  {
    "name": "identityFunction",
    "newName": "identityFunction"
  },
  {
    "name": "createSafeHtmlFromTemplate",
    "newName": "createSafeHtmlFromTemplate"
  },
  {
    "name": "isDoubleClickAd",
    "newName": "isDoubleClickAd"
  },
  {
    "name": "isBidRequest",
    "newName": "isBidRequest"
  },
  {
    "name": "isGoogleAdsRequest",
    "newName": "isGoogleAdsRequest"
  },
  {
    "name": "isGampadRequest",
    "newName": "isGampadRequest"
  },
  {
    "name": "isAdvRequest",
    "newName": "isAdvRequest"
  },
  {
    "name": "updateMaxSize",
    "newName": "updateMaxSize"
  },
  {
    "name": "AdError",
    "newName": "AdError"
  },
  {
    "name": "carJsUrl",
    "newName": "carJsUrl"
  },
  {
    "name": "identifyAdServer",
    "newName": "identifyAdServer"
  },
  {
    "name": "generatorWrapper",
    "newName": "iterator"
  },
  {
    "name": "value",
    "newName": "currentValue"
  },
  {
    "name": "CustomMap",
    "newName": "randomValue"
  },
  {
    "name": "findEntry",
    "newName": "index"
  },
  {
    "name": "table",
    "newName": "BaseClass"
  },
  {
    "name": "tryCall",
    "newName": "AdEnvironment"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "tasks",
    "newName": "objectUrl"
  },
  {
    "name": "entryIdCounter",
    "newName": "eventListener"
  },
  {
    "name": "onFulfilled",
    "newName": "sourceOpenHandler"
  },
  {
    "name": "uuidCharacters",
    "newName": "uuidCharset"
  },
  {
    "name": "generateUUID",
    "newName": "generateUuid"
  },
  {
    "name": "CustomUri",
    "newName": "CustomUrl"
  },
  {
    "name": "parseUriParameters",
    "newName": "parseUrlParams"
  },
  {
    "name": "getOrdParameter",
    "newName": "getOrdParam"
  },
  {
    "name": "setOrdParameter",
    "newName": "setOrdParam"
  },
  {
    "name": "buildUriString",
    "newName": "buildUrlString"
  },
  {
    "name": "getUriParameters",
    "newName": "getUrlParams"
  },
  {
    "name": "isDoubleClickAd",
    "newName": "isDoubleClickAdRequest"
  },
  {
    "name": "isBidRequest",
    "newName": "isBidAdRequest"
  },
  {
    "name": "isGoogleAdsRequest",
    "newName": "isGoogleAdsAdRequest"
  },
  {
    "name": "isGampadRequest",
    "newName": "isGampadAdRequest"
  },
  {
    "name": "isAdvRequest",
    "newName": "isAdvAdRequest"
  },
  {
    "name": "updateMaxSize",
    "newName": "VastErrorCodes"
  },
  {
    "name": "AdError",
    "newName": "AdErrorClass"
  },
  {
    "name": "carJsUrl",
    "newName": "carJsUrlList"
  },
  {
    "name": "identifyAdServer",
    "newName": "identifyAdServerType"
  },
  {
    "name": "extractPublisherId",
    "newName": "getPublisherId"
  },
  {
    "name": "extractSlotNameOrIdFromUrl",
    "newName": "getSlotNameOrId"
  },
  {
    "name": "PrivacySettings",
    "newName": "PrivacySettingsClass"
  },
  {
    "name": "ConfigSettings",
    "newName": "ConfigSettingsClass"
  },
  {
    "name": "isBooleanConfigEnabled",
    "newName": "isConfigEnabled"
  },
  {
    "name": "getVideoElementFakeDuration",
    "newName": "getFakeVideoDuration"
  },
  {
    "name": "getForcedExperimentIds",
    "newName": "getForcedExperiments"
  },
  {
    "name": "adType",
    "newName": "AdType"
  },
  {
    "name": "sanitizePlayerTypeOrVersion",
    "newName": "sanitizePlayerInfo"
  },
  {
    "name": "getConfigSettingsInstance",
    "newName": "getConfigSettings"
  },
  {
    "name": "generateAdDisplayRequestConfig",
    "newName": "generateAdDisplayConfig"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "AdRequestBuilder",
    "newName": "AdRequestBuilderClass"
  },
  {
    "name": "parseUrlParameters",
    "newName": "parseUrlParamsToObject"
  },
  {
    "name": "AdRequest",
    "newName": "AdRequestClass"
  },
  {
    "name": "generateAdRequest",
    "newName": "generateAdRequestInstance"
  },
  {
    "name": "processGdprConsent",
    "newName": "processGdprConsentData"
  },
  {
    "name": "getPropertyValue",
    "newName": "getObjectPropertyValue"
  },
  {
    "name": "isLimitedAdsMode",
    "newName": "isLimitedAdsModeEnabled"
  },
  {
    "name": "isLimitedAdsModeEnabled",
    "newName": "isLimitedAdsModeActive"
  },
  {
    "name": "isGdprApplicable",
    "newName": "isGdprConsentApplicable"
  },
  {
    "name": "buildAdRequest",
    "newName": "buildAdRequestInstance"
  },
  {
    "name": "UserAgentData",
    "newName": "UserAgentDataClass"
  },
  {
    "name": "HighEntropyValues",
    "newName": "HighEntropyValuesClass"
  },
  {
    "name": "setArchitecture",
    "newName": "setAdArchitecture"
  },
  {
    "name": "setBitness",
    "newName": "setAdBitness"
  },
  {
    "name": "setIsMobile",
    "newName": "setAdIsMobile"
  },
  {
    "name": "setModel",
    "newName": "setAdModel"
  },
  {
    "name": "setPlatform",
    "newName": "setAdPlatform"
  },
  {
    "name": "setPlatformVersion",
    "newName": "setAdPlatformVersion"
  },
  {
    "name": "setUaFullVersion",
    "newName": "setAdUaFullVersion"
  },
  {
    "name": "setFullVersionList",
    "newName": "setAdFullVersionList"
  },
  {
    "name": "setWow64",
    "newName": "setAdWow64"
  },
  {
    "name": "highEntropyKeys",
    "newName": "highEntropyAdKeys"
  },
  {
    "name": "getGoogleTagData",
    "newName": "getGoogleAdTagData"
  },
  {
    "name": "supportsUserAgentData",
    "newName": "supportsUserAgentAdData"
  },
  {
    "name": "getHighEntropyValues",
    "newName": "getHighEntropyAdValues"
  },
  {
    "name": "buildUserAgentData",
    "newName": "buildUserAgentAdData"
  },
  {
    "name": "fetchAndProcessUACH",
    "newName": "fetchAndProcessUserAgentData"
  },
  {
    "name": "AppSignals",
    "newName": "AppSignalsClass"
  },
  {
    "name": "getSDKVersion",
    "newName": "getSdkVersion"
  },
  {
    "name": "fetchProcessedUACH",
    "newName": "fetchProcessedUserAgentData"
  },
  {
    "name": "shouldUseCustomPlayback",
    "newName": "shouldEnableCustomPlayback"
  },
  {
    "name": "isCustomPlaybackAllowed",
    "newName": "isCustomPlaybackEnabled"
  },
  {
    "name": "isOnScreenDetectionEnabled",
    "newName": "isScreenDetectionEnabled"
  },
  {
    "name": "isTVOSOrAndroidTV",
    "newName": "isTvOsOrAndroidTv"
  },
  {
    "name": "getDeviceType",
    "newName": "getAdDeviceType"
  },
  {
    "name": "stripUrlPrefix",
    "newName": "stripUrlPrefixFromString"
  },
  {
    "name": "getEffectiveUrl",
    "newName": "getEffectiveAdUrl"
  },
  {
    "name": "isAmpPage",
    "newName": "isAmpAdPage"
  },
  {
    "name": "getAncestorOrigins",
    "newName": "getAncestorAdOrigins"
  },
  {
    "name": "getParentPageUrl",
    "newName": "getParentAdPageUrl"
  },
  {
    "name": "truncateUrl",
    "newName": "truncateAdUrl"
  },
  {
    "name": "totalAdBufferingTime",
    "newName": "adBufferingTime"
  },
  {
    "name": "defineAdEventTypes",
    "newName": "defineAdEvents"
  },
  {
    "name": "entryIdCounter",
    "newName": "charCode"
  },
  {
    "name": "CustomMap",
    "newName": "customBase64Map"
  },
  {
    "name": "createCircularNode",
    "newName": "charIndex"
  },
  {
    "name": "findEntry",
    "newName": "byteArray"
  },
  {
    "name": "iterateEntries",
    "newName": "byteArrayIndex"
  },
  {
    "name": "generatorWrapper",
    "newName": "adsManager"
  },
  {
    "name": "AppSignals",
    "newName": "appSignals"
  },
  {
    "name": "getAdInstance",
    "newName": "getAdManagerInstance"
  },
  {
    "name": "shouldUseCustomPlayback",
    "newName": "checkCustomPlayback"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkSingleton"
  },
  {
    "name": "isBooleanConfigEnabled",
    "newName": "checkBooleanConfig"
  },
  {
    "name": "isTouchEnabledDevice",
    "newName": "checkTouchDevice"
  },
  {
    "name": "isIOSVersionAtLeast",
    "newName": "checkIOSVersion"
  },
  {
    "name": "isIphone",
    "newName": "checkIphone"
  },
  {
    "name": "isIpod",
    "newName": "checkIpod"
  },
  {
    "name": "isAndroid",
    "newName": "checkAndroid"
  },
  {
    "name": "matchesUserAgentVersion",
    "newName": "checkUserAgentVersion"
  },
  {
    "name": "androidVersionRegex",
    "newName": "androidVersionPattern"
  },
  {
    "name": "isTVOSOrAndroidTV",
    "newName": "checkTVOSOrAndroidTV"
  },
  {
    "name": "getDeviceType",
    "newName": "fetchDeviceType"
  },
  {
    "name": "stripUrlPrefix",
    "newName": "removeUrlPrefix"
  },
  {
    "name": "getEffectiveUrl",
    "newName": "fetchEffectiveUrl"
  },
  {
    "name": "computeReferrerUrl",
    "newName": "getReferrerUrl"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "getAncestorOrigins",
    "newName": "fetchAncestorOrigins"
  },
  {
    "name": "getParentPageUrl",
    "newName": "fetchParentPageUrl"
  },
  {
    "name": "truncateUrl",
    "newName": "shortenUrl"
  },
  {
    "name": "totalAdBufferingTime",
    "newName": "adEventTypes"
  },
  {
    "name": "defineAdEventTypes",
    "newName": "initializeAdEventTypes"
  },
  {
    "name": "NetworkManager",
    "newName": "networkManager"
  },
  {
    "name": "sendRequest",
    "newName": "sendNetworkRequest"
  },
  {
    "name": "markAsCompleted",
    "newName": "adReporter"
  },
  {
    "name": "buildErrorReportParams",
    "newName": "constructErrorReportParams"
  },
  {
    "name": "fetchNewToken",
    "newName": "retrieveNewToken"
  },
  {
    "name": "TokenManager",
    "newName": "tokenManager"
  },
  {
    "name": "KE",
    "newName": "initializeTokenManager"
  },
  {
    "name": "Token",
    "newName": "AdToken"
  },
  {
    "name": "EmptyToken",
    "newName": "EmptyAdToken"
  },
  {
    "name": "Message",
    "newName": "AdMessage"
  },
  {
    "name": "MessageQueue",
    "newName": "adMessageQueue"
  },
  {
    "name": "enqueueMessage",
    "newName": "queueAdMessage"
  },
  {
    "name": "CustomEvent",
    "newName": "AdCustomEvent"
  },
  {
    "name": "CreativeType",
    "newName": "AdCreativeType"
  },
  {
    "name": "ResourceType",
    "newName": "AdResourceType"
  },
  {
    "name": "SizeCriteria",
    "newName": "AdSizeCriteria"
  },
  {
    "name": "CompanionAdSelectionSettings",
    "newName": "AdSelectionSettings"
  },
  {
    "name": "CompanionAdSelector",
    "newName": "AdSelector"
  },
  {
    "name": "filterCompanionAds",
    "newName": "filterAds"
  },
  {
    "name": "isAdEligible",
    "newName": "checkAdEligibility"
  },
  {
    "name": "findEligibleAdVariant",
    "newName": "findAdVariant"
  },
  {
    "name": "isValidEnumValue",
    "newName": "validateEnumValue"
  },
  {
    "name": "AdError",
    "newName": "AdPlaybackError"
  },
  {
    "name": "errorType",
    "newName": "initializationError"
  },
  {
    "name": "aF",
    "newName": "invalidInfoError"
  },
  {
    "name": "createAdPlayError",
    "newName": "generateAdPlayError"
  },
  {
    "name": "debugFlags",
    "newName": "debugSettings"
  },
  {
    "name": "SingletonBase",
    "newName": "Singleton"
  },
  {
    "name": "RandomExperimentManager",
    "newName": "experimentManager"
  },
  {
    "name": "logErrorEvent",
    "newName": "recordErrorEvent"
  },
  {
    "name": "waitForWindowLoad",
    "newName": "waitForPageLoad"
  },
  {
    "name": "CacheManager",
    "newName": "cacheManager"
  },
  {
    "name": "getCacheManagerInstance",
    "newName": "getCacheInstance"
  },
  {
    "name": "clearCacheManager",
    "newName": "resetCacheManager"
  },
  {
    "name": "evaluateCacheItemState",
    "newName": "checkCacheItemState"
  },
  {
    "name": "loadCacheItems",
    "newName": "initializeCacheItems"
  },
  {
    "name": "isDataPresent",
    "newName": "checkDataPresence"
  },
  {
    "name": "Deferred",
    "newName": "AsyncDeferred"
  },
  {
    "name": "InputError",
    "newName": "InputValidationError"
  },
  {
    "name": "BasePromise",
    "newName": "BaseAsyncPromise"
  },
  {
    "name": "DeferredWithResult",
    "newName": "DeferredAsyncResult"
  },
  {
    "name": "notifyListeners",
    "newName": "triggerListeners"
  },
  {
    "name": "Result",
    "newName": "AsyncResult"
  },
  {
    "name": "resolveResult",
    "newName": "resolveAsyncResult"
  },
  {
    "name": "resolveWithAnotherPromise",
    "newName": "resolveWithPromise"
  },
  {
    "name": "BaseResult",
    "newName": "BaseAsyncResult"
  },
  {
    "name": "SuccessResult",
    "newName": "SuccessfulAsyncResult"
  },
  {
    "name": "NullableSuccessResult",
    "newName": "NullableAsyncResult"
  },
  {
    "name": "Notification",
    "newName": "AsyncNotification"
  },
  {
    "name": "TaskManager",
    "newName": "asyncTaskManager"
  },
  {
    "name": "addTask",
    "newName": "queueTask"
  },
  {
    "name": "waitForTasks",
    "newName": "waitForAllTasks"
  },
  {
    "name": "orEvent",
    "newName": "triggerEvent"
  },
  {
    "name": "generatorWrapper",
    "newName": "adRequest"
  },
  {
    "name": "CustomMap",
    "newName": "cacheItem"
  },
  {
    "name": "findEntry",
    "newName": "regexPattern"
  },
  {
    "name": "cacheManagerInstance",
    "newName": "cacheInstance"
  },
  {
    "name": "loadCacheItems",
    "newName": "loadAdCache"
  },
  {
    "name": "value",
    "newName": "adRequestConfig"
  },
  {
    "name": "AdRequestConfiguration",
    "newName": "AdRequestConfig"
  },
  {
    "name": "iterateEntries",
    "newName": "i"
  },
  {
    "name": "createCircularNode",
    "newName": "cacheKey"
  },
  {
    "name": "getIterator",
    "newName": "getIterator"
  },
  {
    "name": "removeElementAtIndex",
    "newName": "cacheKey"
  },
  {
    "name": "getCacheManagerInstance",
    "newName": "getCacheInstance"
  },
  {
    "name": "isDataPresent",
    "newName": "isAdDataPresent"
  },
  {
    "name": "evaluateCacheItemState",
    "newName": "getCacheItemState"
  },
  {
    "name": "setAdProperty",
    "newName": "setAdProperty"
  },
  {
    "name": "getAdPropertyValue",
    "newName": "getAdProperty"
  },
  {
    "name": "entryIdCounter",
    "newName": "logData"
  },
  {
    "name": "logErrorEvent",
    "newName": "logError"
  },
  {
    "name": "createFunctionWithArguments",
    "newName": "createAdErrorFunction"
  },
  {
    "name": "updateElement",
    "newName": "updateAdElement"
  },
  {
    "name": "addElementToAd",
    "newName": "addAdElement"
  },
  {
    "name": "AdErrorResponse",
    "newName": "AdError"
  },
  {
    "name": "parseData",
    "newName": "parseAdData"
  },
  {
    "name": "base64Encode",
    "newName": "encodeBase64"
  },
  {
    "name": "Deferred",
    "newName": "DeferredPromise"
  },
  {
    "name": "InputError",
    "newName": "AdInputError"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototype"
  },
  {
    "name": "BasePromise",
    "newName": "BasePromise"
  },
  {
    "name": "DeferredWithResult",
    "newName": "DeferredPromiseWithResult"
  },
  {
    "name": "notifyListeners",
    "newName": "notifyListeners"
  },
  {
    "name": "globalObject",
    "newName": "globalObject"
  },
  {
    "name": "Result",
    "newName": "PromiseResult"
  },
  {
    "name": "resolveResult",
    "newName": "resolvePromise"
  },
  {
    "name": "resolveWithAnotherPromise",
    "newName": "resolveWithAnotherPromise"
  },
  {
    "name": "BaseResult",
    "newName": "BaseResult"
  },
  {
    "name": "SuccessResult",
    "newName": "SuccessResult"
  },
  {
    "name": "NullableSuccessResult",
    "newName": "NullableSuccessResult"
  },
  {
    "name": "Notification",
    "newName": "Notification"
  },
  {
    "name": "TaskManager",
    "newName": "TaskManager"
  },
  {
    "name": "addTask",
    "newName": "addTask"
  },
  {
    "name": "waitForTasks",
    "newName": "waitForTasks"
  },
  {
    "name": "Task",
    "newName": "Task"
  },
  {
    "name": "startTimer",
    "newName": "startTimer"
  },
  {
    "name": "handleThenable",
    "newName": "timeoutDuration"
  },
  {
    "name": "handleIteratorResult",
    "newName": "handleIteratorResult"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetGeneratorState"
  },
  {
    "name": "getGeneratorException",
    "newName": "getGeneratorException"
  },
  {
    "name": "registerDisposable",
    "newName": "registerDisposable"
  },
  {
    "name": "tryCall",
    "newName": "tryCall"
  },
  {
    "name": "createResult",
    "newName": "createPromiseResult"
  },
  {
    "name": "createNotification",
    "newName": "createNotificationPromise"
  },
  {
    "name": "addSuccessResult",
    "newName": "addSuccessResultPromise"
  },
  {
    "name": "addNullableSuccessResult",
    "newName": "addNullableSuccessResultPromise"
  },
  {
    "name": "TaskGroup",
    "newName": "TaskGroup"
  },
  {
    "name": "addTaskToGroup",
    "newName": "addTaskToGroup"
  },
  {
    "name": "addAllTasksToGroup",
    "newName": "addAllTasksToGroup"
  },
  {
    "name": "startTaskGroup",
    "newName": "startTaskGroup"
  },
  {
    "name": "ParameterizedTask",
    "newName": "ParameterizedTask"
  },
  {
    "name": "NotificationTask",
    "newName": "NotificationTask"
  },
  {
    "name": "DataProcessingTask",
    "newName": "DataProcessingTask"
  },
  {
    "name": "StorageTask",
    "newName": "StorageTask"
  },
  {
    "name": "OutputTask",
    "newName": "OutputTask"
  },
  {
    "name": "FunctionCollectorTask",
    "newName": "FunctionCollectorTask"
  },
  {
    "name": "ValidationTask",
    "newName": "ValidationTask"
  },
  {
    "name": "StringLengthValidationTask",
    "newName": "StringLengthValidationTask"
  },
  {
    "name": "AdOutputManager",
    "newName": "AdOutputManager"
  },
  {
    "name": "waitForWindowLoad",
    "newName": "waitForWindowLoad"
  },
  {
    "name": "initializeAdComponents",
    "newName": "initializeAdComponents"
  },
  {
    "name": "AdCollector",
    "newName": "AdCollector"
  },
  {
    "name": "AdCollectorValidator",
    "newName": "AdCollectorValidator"
  },
  {
    "name": "reportError",
    "newName": "reportError"
  },
  {
    "name": "AdSignalManager",
    "newName": "AdSignalManager"
  },
  {
    "name": "AdSignalManagerProxy",
    "newName": "AdSignalManagerProxy"
  },
  {
    "name": "processAdSignals",
    "newName": "processAdSignals"
  },
  {
    "name": "isSignalProviderArray",
    "newName": "isSignalProviderArray"
  },
  {
    "name": "initializeSignalProviders",
    "newName": "initializeSignalProviders"
  },
  {
    "name": "collectAdData",
    "newName": "collectAdData"
  },
  {
    "name": "collectAdDataAsync",
    "newName": "collectAdDataAsync"
  },
  {
    "name": "getGoogleTag",
    "newName": "getGoogleTag"
  },
  {
    "name": "getLocalStorageSafe",
    "newName": "getLocalStorageSafe"
  },
  {
    "name": "collectLocalStorageAdData",
    "newName": "collectLocalStorageAdData"
  },
  {
    "name": "collectAdDataFromProviders",
    "newName": "collectAdDataFromProviders"
  },
  {
    "name": "emptyFunction",
    "newName": "emptyFunction"
  },
  {
    "name": "resolveSignalForWindow",
    "newName": "resolveSignalForWindow"
  },
  {
    "name": "resolveGmaQuerySignal",
    "newName": "resolveGmaQuerySignal"
  },
  {
    "name": "isGmaAvailable",
    "newName": "isGmaAvailable"
  },
  {
    "name": "getGmaSdk",
    "newName": "getGmaSdk"
  },
  {
    "name": "getGmaMessageHandlers",
    "newName": "getGmaMessageHandlers"
  },
  {
    "name": "CustomMap",
    "newName": "customMap"
  },
  {
    "name": "logErrorEvent",
    "newName": "logError"
  },
  {
    "name": "value",
    "newName": "url"
  },
  {
    "name": "findEntry",
    "newName": "taskGroup"
  },
  {
    "name": "TaskGroup",
    "newName": "TaskGroup"
  },
  {
    "name": "NotificationTask",
    "newName": "NotificationTask"
  },
  {
    "name": "this.entryIdCounter",
    "newName": "this.entryIdCounter"
  },
  {
    "name": "iterateEntries",
    "newName": "iterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "createCircularNode"
  },
  {
    "name": "invokeErrorHandlers",
    "newName": "invokeErrorHandlers"
  },
  {
    "name": "generatorWrapper",
    "newName": "generatorWrapper"
  },
  {
    "name": "addTaskToGroup",
    "newName": "addTaskToGroup"
  },
  {
    "name": "startTaskGroup",
    "newName": "startTaskGroup"
  },
  {
    "name": "setTimeout",
    "newName": "setTimeout"
  },
  {
    "name": "getDefaultConfiguration",
    "newName": "getDefaultConfiguration"
  },
  {
    "name": "getIterator",
    "newName": "getIterator"
  },
  {
    "name": "AdSignalManagerProxy",
    "newName": "AdSignalManagerProxy"
  },
  {
    "name": "processAdSignals",
    "newName": "processAdSignals"
  },
  {
    "name": "debugFlags",
    "newName": "debugFlags"
  },
  {
    "name": "getTopMostAccessibleWindow",
    "newName": "getTopMostAccessibleWindow"
  },
  {
    "name": "getTopFrame",
    "newName": "getTopFrame"
  },
  {
    "name": "isSignalProviderArray",
    "newName": "isSignalProviderArray"
  },
  {
    "name": "initializeSignalProviders",
    "newName": "initializeSignalProviders"
  },
  {
    "name": "collectAdData",
    "newName": "collectAdData"
  },
  {
    "name": "Result",
    "newName": "Result"
  },
  {
    "name": "notifyListeners",
    "newName": "notifyListeners"
  },
  {
    "name": "collectAdDataAsync",
    "newName": "collectAdDataAsync"
  },
  {
    "name": "emptyFunction",
    "newName": "emptyFunction"
  },
  {
    "name": "Map",
    "newName": "Map"
  },
  {
    "name": "getGoogleTag",
    "newName": "getGoogleTag"
  },
  {
    "name": "globalScope",
    "newName": "globalScope"
  },
  {
    "name": "getLocalStorageSafe",
    "newName": "getLocalStorageSafe"
  },
  {
    "name": "isLimitedAdsMode",
    "newName": "isLimitedAdsMode"
  },
  {
    "name": "collectLocalStorageAdData",
    "newName": "collectLocalStorageAdData"
  },
  {
    "name": "collectAdDataFromProviders",
    "newName": "collectAdDataFromProviders"
  },
  {
    "name": "resolveSignalForWindow",
    "newName": "resolveSignalForWindow"
  },
  {
    "name": "Deferred",
    "newName": "Deferred"
  },
  {
    "name": "removeEventListenerWithNormalization",
    "newName": "removeEventListenerWithNormalization"
  },
  {
    "name": "getGmaSdk",
    "newName": "getGmaSdk"
  },
  {
    "name": "addEventListenerWithNormalization",
    "newName": "addEventListenerWithNormalization"
  },
  {
    "name": "getGmaMessageHandlers",
    "newName": "getGmaMessageHandlers"
  },
  {
    "name": "String",
    "newName": "String"
  },
  {
    "name": "Math",
    "newName": "Math"
  },
  {
    "name": "secureRandom",
    "newName": "secureRandom"
  },
  {
    "name": "resolveGmaQuerySignal",
    "newName": "resolveGmaQuerySignal"
  },
  {
    "name": "isGmaAvailable",
    "newName": "isGmaAvailable"
  },
  {
    "name": "SignalResolver",
    "newName": "SignalResolver"
  },
  {
    "name": "resolveSignal",
    "newName": "resolveSignal"
  },
  {
    "name": "handleThenable",
    "newName": "handleThenable"
  },
  {
    "name": "Promise",
    "newName": "Promise"
  },
  {
    "name": "resolveOrRefreshSignal",
    "newName": "resolveOrRefreshSignal"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapGeneratorToPromise"
  },
  {
    "name": "generatorYield",
    "newName": "generatorYield"
  },
  {
    "name": "attemptSignalResolution",
    "newName": "attemptSignalResolution"
  },
  {
    "name": "createTimerPromise",
    "newName": "createTimerPromise"
  },
  {
    "name": "Ik",
    "newName": "Ik"
  },
  {
    "name": "decodeRegexpFromJSON",
    "newName": "decodeRegexpFromJSON"
  },
  {
    "name": "MessageHandler",
    "newName": "MessageHandler"
  },
  {
    "name": "MessageQueue",
    "newName": "MessageQueue"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventDispatcher"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototype"
  },
  {
    "name": "parseImaMessage",
    "newName": "parseImaMessage"
  },
  {
    "name": "sendMessage",
    "newName": "sendMessage"
  },
  {
    "name": "markAsCompleted",
    "newName": "markAsCompleted"
  },
  {
    "name": "markAsCompletedWrapper",
    "newName": "markAsCompletedWrapper"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchUnhandledRejection"
  },
  {
    "name": "isValidImaMessage",
    "newName": "isValidImaMessage"
  },
  {
    "name": "EventController",
    "newName": "EventController"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvironmentConfig"
  },
  {
    "name": "initializeEventController",
    "newName": "initializeEventController"
  },
  {
    "name": "resetEventController",
    "newName": "resetEventController"
  },
  {
    "name": "setupEventListeners",
    "newName": "setupEventListeners"
  },
  {
    "name": "cleanupEventListeners",
    "newName": "cleanupEventListeners"
  },
  {
    "name": "handleTouchEnd",
    "newName": "handleTouchEnd"
  },
  {
    "name": "forEachInObject",
    "newName": "forEachInObject"
  },
  {
    "name": "isIOSVersionAtLeast",
    "newName": "isIOSVersionAtLeast"
  },
  {
    "name": "isIphoneIpadIpod",
    "newName": "isIphoneIpadIpod"
  },
  {
    "name": "isTouchIdentifierPresent",
    "newName": "isTouchIdentifierPresent"
  },
  {
    "name": "triggerClickEvent",
    "newName": "triggerClickEvent"
  },
  {
    "name": "AdEvent",
    "newName": "AdEvent"
  },
  {
    "name": "ConfigLoader",
    "newName": "ConfigLoader"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapGeneratorToPromise"
  },
  {
    "name": "generatorYield",
    "newName": "generatorYield"
  },
  {
    "name": "loadConfig",
    "newName": "loadConfig"
  },
  {
    "name": "configLoaderInstance",
    "newName": "configLoaderInstance"
  },
  {
    "name": "configLoaderUrl",
    "newName": "configLoaderUrl"
  },
  {
    "name": "handleConfigLoadError",
    "newName": "handleConfigLoadError"
  },
  {
    "name": "getAdSpot",
    "newName": "getAdSpot"
  },
  {
    "name": "configLoaderSingleton",
    "newName": "configLoaderSingleton"
  },
  {
    "name": "constructConfigUrl",
    "newName": "constructConfigUrl"
  },
  {
    "name": "configUrlParams",
    "newName": "configUrlParams"
  },
  {
    "name": "reportAdInteraction",
    "newName": "reportAdInteraction"
  },
  {
    "name": "fetchData",
    "newName": "fetchData"
  },
  {
    "name": "AdBreakTemplate",
    "newName": "AdBreakTemplate"
  },
  {
    "name": "parseData",
    "newName": "parseData"
  },
  {
    "name": "AdRuleParameters",
    "newName": "AdRuleParameters"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchUnhandledRejection"
  },
  {
    "name": "extractPublisherId",
    "newName": "extractPublisherId"
  },
  {
    "name": "identifyAdServer",
    "newName": "identifyAdServer"
  },
  {
    "name": "AdEventObserver",
    "newName": "AdEventObserver"
  },
  {
    "name": "tryCall",
    "newName": "tryCall"
  },
  {
    "name": "executeOrDelayUntilDisposed",
    "newName": "executeOrDelayUntilDisposed"
  },
  {
    "name": "mediaEventTypes",
    "newName": "mediaEventTypes"
  },
  {
    "name": "AdSignalListener",
    "newName": "AdSignalListener"
  },
  {
    "name": "fetchAdSignalData",
    "newName": "fetchAdSignalData"
  },
  {
    "name": "getEffectiveMessageTarget",
    "newName": "getEffectiveMessageTarget"
  },
  {
    "name": "AdSignalData",
    "newName": "AdSignalData"
  },
  {
    "name": "Deferred",
    "newName": "Deferred"
  },
  {
    "name": "liveOmsdkUrl",
    "newName": "liveOmsdkUrl"
  },
  {
    "name": "identityFunction",
    "newName": "identityFunction"
  },
  {
    "name": "controlOmsdkUrl",
    "newName": "controlOmsdkUrl"
  },
  {
    "name": "canaryOmsdkUrl",
    "newName": "canaryOmsdkUrl"
  },
  {
    "name": "experimentalOmsdkUrl",
    "newName": "experimentalOmsdkUrl"
  },
  {
    "name": "liveOmsdkScriptUrl",
    "newName": "liveOmsdkScriptUrl"
  },
  {
    "name": "createSafeHtmlFromTemplate",
    "newName": "createSafeHtmlFromTemplate"
  },
  {
    "name": "controlOmsdkScriptUrl",
    "newName": "controlOmsdkScriptUrl"
  },
  {
    "name": "canaryOmsdkScriptUrl",
    "newName": "canaryOmsdkScriptUrl"
  },
  {
    "name": "experimentalOmsdkScriptUrl",
    "newName": "experimentalOmsdkScriptUrl"
  },
  {
    "name": "getOmidSessionInterface",
    "newName": "getOmidSessionInterface"
  },
  {
    "name": "getContentWindow",
    "newName": "getContentWindow"
  },
  {
    "name": "loadOmsdkScript",
    "newName": "loadOmsdkScript"
  },
  {
    "name": "createElementWithOptionalClassesAndAttributes",
    "newName": "createElementWithOptionalClassesAndAttributes"
  },
  {
    "name": "setElementSrcFromTrustedUrl",
    "newName": "setElementSrcFromTrustedUrl"
  },
  {
    "name": "OmsdkSessionHandler",
    "newName": "OmsdkSessionHandler"
  },
  {
    "name": "registerSessionObservers",
    "newName": "registerSessionObservers"
  },
  {
    "name": "registerVideoElement",
    "newName": "registerVideoElement"
  },
  {
    "name": "CustomVideoElement",
    "newName": "CustomVideoElement"
  },
  {
    "name": "setSessionClient",
    "newName": "setSessionClient"
  },
  {
    "name": "AdPodInfo",
    "newName": "AdPodInfo"
  },
  {
    "name": "CompanionAd",
    "newName": "CompanionAd"
  },
  {
    "name": "getBackupCompanions",
    "newName": "getBackupCompanions"
  },
  {
    "name": "UniversalAdId",
    "newName": "UniversalAdId"
  },
  {
    "name": "year",
    "newName": "year"
  },
  {
    "name": "getAdQueryId",
    "newName": "getAdQueryId"
  },
  {
    "name": "CuePoints",
    "newName": "CuePoints"
  },
  {
    "name": "AdDisplayOptions",
    "newName": "AdDisplayOptions"
  },
  {
    "name": "createAdDisplayOptionsWithClickThroughDisabled",
    "newName": "createAdDisplayOptionsWithClickThroughDisabled"
  },
  {
    "name": "defineNamespace",
    "newName": "defineNamespace"
  },
  {
    "name": "module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_rendering_settings",
    "newName": "adsRenderingSettings"
  },
  {
    "name": "AdRequest",
    "newName": "AdRequest"
  },
  {
    "name": "onFulfilled",
    "newName": "onFulfilled"
  },
  {
    "name": "AdElement",
    "newName": "AdElement"
  },
  {
    "name": "AdResponse",
    "newName": "AdResponse"
  },
  {
    "name": "AdSlot",
    "newName": "AdSlot"
  },
  {
    "name": "AdSignal",
    "newName": "AdSignal"
  },
  {
    "name": "AdDimensions",
    "newName": "AdDimensions"
  },
  {
    "name": "getAdDimensions",
    "newName": "getAdDimensions"
  },
  {
    "name": "vf",
    "newName": "vf"
  },
  {
    "name": "QueryWrapper",
    "newName": "QueryWrapper"
  },
  {
    "name": "getNumericAdProperty",
    "newName": "getNumericAdProperty"
  },
  {
    "name": "AdDimensionsRegistry",
    "newName": "AdDimensionsRegistry"
  },
  {
    "name": "parseAndValidateArray",
    "newName": "parseAndValidateArray"
  },
  {
    "name": "transformAndAddElement",
    "newName": "transformAndAddElement"
  },
  {
    "name": "getElementAtIndex",
    "newName": "getElementAtIndex"
  },
  {
    "name": "getTransformedElement",
    "newName": "getTransformedElement"
  },
  {
    "name": "parseNullableUInt32",
    "newName": "parseNullableUInt32"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getBooleanAdProperty",
    "newName": "getBooleanAdProperty"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getRawBitFlags"
  },
  {
    "name": "transformWithFlags",
    "newName": "transformWithFlags"
  },
  {
    "name": "createInstanceWithTemporaryData",
    "newName": "createInstanceWithTemporaryData"
  },
  {
    "name": "QueryPayload",
    "newName": "QueryPayload"
  },
  {
    "name": "transformArrayElements",
    "newName": "transformArrayElements"
  },
  {
    "name": "stringOrNull",
    "newName": "stringOrNull"
  },
  {
    "name": "getIterator",
    "newName": "getIterator"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "ed",
    "newName": "createAdDisplayOptions"
  },
  {
    "name": "generatorWrapper",
    "newName": "adConfig"
  },
  {
    "name": "value",
    "newName": "isAutoAlign"
  },
  {
    "name": "CustomMap",
    "newName": "adDisplayOptions"
  },
  {
    "name": "AdDisplayOptions",
    "newName": "AdRenderingSettings"
  },
  {
    "name": "append",
    "newName": "updateSettings"
  },
  {
    "name": "shouldAutoAlign",
    "newName": "autoAlign"
  },
  {
    "name": "preferredBitrate",
    "newName": "bitrate"
  },
  {
    "name": "disableClickThrough",
    "newName": "disableClickThrough"
  },
  {
    "name": "disableUi",
    "newName": "disableUi"
  },
  {
    "name": "shouldEnablePreloading",
    "newName": "enablePreloading"
  },
  {
    "name": "supportedMimeTypes",
    "newName": "mimeTypes"
  },
  {
    "name": "startAdsAfterTime",
    "newName": "adsStartTime"
  },
  {
    "name": "shouldRestorePlaybackStateAfterAdBreak",
    "newName": "restorePlaybackState"
  },
  {
    "name": "videoLoadTimeout",
    "newName": "videoTimeout"
  },
  {
    "name": "customUiElements",
    "newName": "uiElements"
  },
  {
    "name": "shouldUseLearnMoreButton",
    "newName": "learnMoreButton"
  },
  {
    "name": "shouldStyleLinearAds",
    "newName": "styleLinearAds"
  },
  {
    "name": "shouldStyleNonLinearAds",
    "newName": "styleNonLinearAds"
  },
  {
    "name": "shouldUseDefaultVideoAdUi",
    "newName": "defaultVideoAdUi"
  },
  {
    "name": "defineNamespace",
    "newName": "defineNamespace"
  },
  {
    "name": "AdRequest",
    "newName": "AdRequest"
  },
  {
    "name": "getSingletonInstance",
    "newName": "getInstance"
  },
  {
    "name": "onFulfilled",
    "newName": "initializeInstance"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototype"
  },
  {
    "name": "AdResponse",
    "newName": "AdResponse"
  },
  {
    "name": "AdSlot",
    "newName": "AdSlot"
  },
  {
    "name": "AdSignal",
    "newName": "AdSignal"
  },
  {
    "name": "AdDimensions",
    "newName": "AdDimensions"
  },
  {
    "name": "getAdDimensions",
    "newName": "getAdAttributes"
  },
  {
    "name": "vf",
    "newName": "validateAd"
  },
  {
    "name": "QueryWrapper",
    "newName": "QueryWrapper"
  },
  {
    "name": "getRectangleWidth",
    "newName": "getAdWidth"
  },
  {
    "name": "getRectangleHeight",
    "newName": "getAdHeight"
  },
  {
    "name": "getNumericAdProperty",
    "newName": "getAdPropertyNumeric"
  },
  {
    "name": "AdDimensionsRegistry",
    "newName": "AdDimensionsRegistry"
  },
  {
    "name": "parseAndValidateArray",
    "newName": "parseAndValidateArray"
  },
  {
    "name": "findGlobalObject",
    "newName": "findGlobalObject"
  },
  {
    "name": "processAdResponse",
    "newName": "processAdResponse"
  },
  {
    "name": "isEmptyObject",
    "newName": "isEmptyObject"
  },
  {
    "name": "performanceApi",
    "newName": "performanceApi"
  },
  {
    "name": "bj",
    "newName": "bj"
  },
  {
    "name": "auctionNonce",
    "newName": "auctionNonce"
  },
  {
    "name": "getAdPropertyNumeric",
    "newName": "getAdPropertyNumeric"
  },
  {
    "name": "cj",
    "newName": "cj"
  },
  {
    "name": "getDeobfuscationId",
    "newName": "getDeobfuscationId"
  },
  {
    "name": "getBooleanAdProperty",
    "newName": "getBooleanAdProperty"
  },
  {
    "name": "parseData",
    "newName": "parseData"
  },
  {
    "name": "getIterator",
    "newName": "getIterator"
  },
  {
    "name": "resolveFunction",
    "newName": "resolveFunction"
  },
  {
    "name": "rejectFunction",
    "newName": "rejectFunction"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchUnhandledRejection"
  },
  {
    "name": "secureRandom",
    "newName": "secureRandom"
  },
  {
    "name": "fetchData",
    "newName": "fetchData"
  },
  {
    "name": "QueryPayload",
    "newName": "QueryPayload"
  },
  {
    "name": "entry",
    "newName": "entry"
  },
  {
    "name": "getTransformedElement",
    "newName": "getTransformedElement"
  },
  {
    "name": "parseNullableUInt32",
    "newName": "parseNullableUInt32"
  },
  {
    "name": "getAdPropertyNumericValue",
    "newName": "getAdPropertyNumericValue"
  },
  {
    "name": "getRawBitFlags",
    "newName": "getRawBitFlags"
  },
  {
    "name": "transformAndAddElement",
    "newName": "transformAndAddElement"
  },
  {
    "name": "getElementAtIndex",
    "newName": "getElementAtIndex"
  },
  {
    "name": "QueryHeader",
    "newName": "QueryHeader"
  },
  {
    "name": "createInstanceWithTemporaryData",
    "newName": "createInstanceWithTemporaryData"
  },
  {
    "name": "transformWithFlags",
    "newName": "transformWithFlags"
  },
  {
    "name": "updateElement",
    "newName": "updateElement"
  },
  {
    "name": "transformArrayElements",
    "newName": "transformArrayElements"
  },
  {
    "name": "stringOrNull",
    "newName": "stringOrNull"
  },
  {
    "name": "valuesOfObject",
    "newName": "valuesOfObject"
  },
  {
    "name": "parseNullableIntEnum",
    "newName": "parseNullableIntEnum"
  },
  {
    "name": "optionalString",
    "newName": "optionalString"
  },
  {
    "name": "parseNullableBoolean",
    "newName": "parseNullableBoolean"
  },
  {
    "name": "setAdPropertyFromString",
    "newName": "setAdPropertyFromString"
  },
  {
    "name": "serializeData",
    "newName": "serializeData"
  },
  {
    "name": "updateOrRemoveElement",
    "newName": "updateOrRemoveElement"
  },
  {
    "name": "convertToInt64",
    "newName": "convertToInt64"
  },
  {
    "name": "finalizeAdAttributes",
    "newName": "finalizeAdAttributes"
  },
  {
    "name": "uf",
    "newName": "uf"
  },
  {
    "name": "getAdPropertyStringFallback",
    "newName": "getAdPropertyStringFallback"
  },
  {
    "name": "getAdDimensions",
    "newName": "getAdDimensions"
  },
  {
    "name": "getBooleanAdProperty",
    "newName": "getBooleanAdProperty"
  },
  {
    "name": "transformElementAtIndex",
    "newName": "transformElementAtIndex"
  },
  {
    "name": "getStringOrEmpty",
    "newName": "getStringOrEmpty"
  },
  {
    "name": "isInterestGroupBuyerValid",
    "newName": "isInterestGroupBuyerValid"
  },
  {
    "name": "mapBuyerToBigInt",
    "newName": "mapBuyerToBigInt"
  },
  {
    "name": "AdAuctionManager",
    "newName": "AdAuctionManager"
  },
  {
    "name": "tryCall",
    "newName": "tryCall"
  },
  {
    "name": "initializeAdManager",
    "newName": "initializeAdManager"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "setTimeoutWrapper"
  },
  {
    "name": "runAdAuctionWithTimeout",
    "newName": "runAdAuctionWithTimeout"
  },
  {
    "name": "createTimerPromise",
    "newName": "createTimerPromise"
  },
  {
    "name": "AdEventObserver",
    "newName": "AdEventObserver"
  },
  {
    "name": "registerDisposable",
    "newName": "registerDisposable"
  },
  {
    "name": "loadOmsdkScript",
    "newName": "loadOmsdkScript"
  },
  {
    "name": "setupAdManagerWithConfig",
    "newName": "setupAdManagerWithConfig"
  },
  {
    "name": "handleAdManagerError",
    "newName": "handleAdManagerError"
  },
  {
    "name": "getContentWindow",
    "newName": "getContentWindow"
  },
  {
    "name": "markAsCompleted",
    "newName": "markAsCompleted"
  },
  {
    "name": "OmsdkSessionHandler",
    "newName": "OmsdkSessionHandler"
  },
  {
    "name": "registerSessionObservers",
    "newName": "registerSessionObservers"
  },
  {
    "name": "setSessionClient",
    "newName": "setSessionClient"
  },
  {
    "name": "enqueueMessage",
    "newName": "enqueueMessage"
  },
  {
    "name": "removeElement",
    "newName": "removeElement"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventDispatcher"
  },
  {
    "name": "setAdManagerListener",
    "newName": "setAdManagerListener"
  },
  {
    "name": "initializeEventController",
    "newName": "initializeEventController"
  },
  {
    "name": "handleAutoPlay",
    "newName": "handleAutoPlay"
  },
  {
    "name": "resetPlaybackState",
    "newName": "resetPlaybackState"
  },
  {
    "name": "ExtendedAdDimensions",
    "newName": "ExtendedAdDimensions"
  },
  {
    "name": "MediaAdDimensions",
    "newName": "MediaAdDimensions"
  },
  {
    "name": "RectangleDimensions",
    "newName": "RectangleDimensions"
  },
  {
    "name": "resetVideoTracking",
    "newName": "resetVideoTracking"
  },
  {
    "name": "EventController",
    "newName": "EventController"
  },
  {
    "name": "Timer",
    "newName": "Timer"
  },
  {
    "name": "initializeAdManager",
    "newName": "initializeAdManager"
  },
  {
    "name": "AdManagerInitializer",
    "newName": "AdManagerInitializer"
  },
  {
    "name": "createIframeElement",
    "newName": "createIframeElement"
  },
  {
    "name": "getCompanionAdsService",
    "newName": "getCompanionAdsService"
  },
  {
    "name": "getWindowForDocument",
    "newName": "getWindowForDocument"
  },
  {
    "name": "extractSlotInfo",
    "newName": "extractSlotInfo"
  },
  {
    "name": "renderCompanionAds",
    "newName": "renderCompanionAds"
  },
  {
    "name": "getElementByIdOrDirect",
    "newName": "getElementByIdOrDirect"
  },
  {
    "name": "calculateInnerSize",
    "newName": "calculateInnerSize"
  },
  {
    "name": "writeSafeHtmlToDocument",
    "newName": "writeSafeHtmlToDocument"
  },
  {
    "name": "sanitizeInput",
    "newName": "sanitizeInput"
  },
  {
    "name": "setElementSafeHtml",
    "newName": "setElementSafeHtml"
  },
  {
    "name": "CustomEvent",
    "newName": "CustomEvent"
  },
  {
    "name": "MessagingHandler",
    "newName": "MessagingHandler"
  },
  {
    "name": "dispatchCustomEvent",
    "newName": "dispatchCustomEvent"
  },
  {
    "name": "setupMessagingChannel",
    "newName": "setupMessagingChannel"
  },
  {
    "name": "parseImaMessage",
    "newName": "parseImaMessage"
  },
  {
    "name": "markAsCompletedWrapper",
    "newName": "markAsCompletedWrapper"
  },
  {
    "name": "isGptPresent",
    "newName": "isGptPresent"
  },
  {
    "name": "getGoogleTagConsole",
    "newName": "getGoogleTagConsole"
  },
  {
    "name": "CrossDomainMessagingManager",
    "newName": "CrossDomainMessagingManager"
  },
  {
    "name": "urlRegex",
    "newName": "urlRegex"
  },
  {
    "name": "removeMessagingChannel",
    "newName": "removeMessagingChannel"
  },
  {
    "name": "formatString",
    "newName": "formatString"
  },
  {
    "name": "formatFunctions",
    "newName": "formatFunctions"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEvent"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "CustomMap",
    "newName": "adMap"
  },
  {
    "name": "findEntry",
    "newName": "adEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterator"
  },
  {
    "name": "createCircularNode",
    "newName": "adNode"
  },
  {
    "name": "CustomEvent",
    "newName": "AdCustomEvent"
  },
  {
    "name": "MessagingHandler",
    "newName": "AdMessagingHandler"
  },
  {
    "name": "dispatchCustomEvent",
    "newName": "triggerCustomEvent"
  },
  {
    "name": "setupMessagingChannel",
    "newName": "initializeMessagingChannel"
  },
  {
    "name": "isGptPresent",
    "newName": "checkGptPresence"
  },
  {
    "name": "getGoogleTagConsole",
    "newName": "fetchGoogleTagConsole"
  },
  {
    "name": "CrossDomainMessagingManager",
    "newName": "AdCrossDomainMessagingManager"
  },
  {
    "name": "removeMessagingChannel",
    "newName": "deleteMessagingChannel"
  },
  {
    "name": "formatString",
    "newName": "formatAdString"
  },
  {
    "name": "formatFunctions",
    "newName": "adFormatFunctions"
  },
  {
    "name": "getAllowedFeatures",
    "newName": "fetchAllowedFeatures"
  },
  {
    "name": "AdLoader",
    "newName": "AdContentLoader"
  },
  {
    "name": "getConnectionInstance",
    "newName": "fetchConnectionInstance"
  },
  {
    "name": "isIpad",
    "newName": "checkIpadDevice"
  },
  {
    "name": "createIterator",
    "newName": "initializeIterator"
  },
  {
    "name": "createTouchList",
    "newName": "generateTouchList"
  },
  {
    "name": "definePropertyPolyfill",
    "newName": "applyPropertyPolyfill"
  },
  {
    "name": "totalAdBufferingTime",
    "newName": "calculateAdBufferingTime"
  },
  {
    "name": "assignPolyfill",
    "newName": "applyPolyfill"
  },
  {
    "name": "toArray",
    "newName": "convertToArray"
  },
  {
    "name": "clientJsUrl",
    "newName": "clientScriptUrl"
  },
  {
    "name": "instance",
    "newName": "singletonInstance"
  },
  {
    "name": "AdManager",
    "newName": "AdvertisementManager"
  },
  {
    "name": "getInstance",
    "newName": "fetchSingletonInstance"
  },
  {
    "name": "sendViewabilityMeasurement",
    "newName": "transmitViewabilityMeasurement"
  },
  {
    "name": "destroy",
    "newName": "terminateAdManager"
  },
  {
    "name": "initialize",
    "newName": "initializeAdManager"
  },
  {
    "name": "isFullscreen",
    "newName": "checkFullscreenMode"
  },
  {
    "name": "getElementPosition",
    "newName": "fetchElementPosition"
  },
  {
    "name": "calculateViewabilityData",
    "newName": "computeViewabilityMetrics"
  },
  {
    "name": "isInitialized",
    "newName": "verifyInitialization"
  },
  {
    "name": "registerElement",
    "newName": "logElement"
  },
  {
    "name": "unregisterElement",
    "newName": "removeElementLog"
  },
  {
    "name": "getOverlayAdMetadata",
    "newName": "fetchOverlayAdMetadata"
  },
  {
    "name": "sendPageSignals",
    "newName": "transmitPageSignals"
  },
  {
    "name": "generateEngagementString",
    "newName": "createEngagementString"
  },
  {
    "name": "MediaStateManager",
    "newName": "AdMediaStateManager"
  },
  {
    "name": "setupMediaState",
    "newName": "initializeMediaState"
  },
  {
    "name": "attemptMediaPlayback",
    "newName": "tryMediaPlayback"
  },
  {
    "name": "resetMediaState",
    "newName": "clearMediaState"
  },
  {
    "name": "defaultSize",
    "newName": "defaultAdSize"
  },
  {
    "name": "VideoPlayer",
    "newName": "AdVideoPlayer"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutWrapper"
  },
  {
    "name": "ensureString",
    "newName": "validateString"
  },
  {
    "name": "isIphone",
    "newName": "checkIphoneDevice"
  },
  {
    "name": "load",
    "newName": "loadAdContent"
  },
  {
    "name": "setVolume",
    "newName": "adjustVolume"
  },
  {
    "name": "throwIncidentError",
    "newName": "applyElementStyle"
  },
  {
    "name": "createWarningError",
    "newName": "applyDefaultStyle"
  },
  {
    "name": "getVolume",
    "newName": "fetchVolumeLevel"
  },
  {
    "name": "handleAutoPlay",
    "newName": "manageAutoPlay"
  },
  {
    "name": "pause",
    "newName": "pauseAdContent"
  },
  {
    "name": "getCurrentTime",
    "newName": "fetchCurrentTime"
  },
  {
    "name": "getDuration",
    "newName": "fetchAdDuration"
  },
  {
    "name": "getRectangleSize",
    "newName": "fetchRectangleSize"
  },
  {
    "name": "getAdEnvironment",
    "newName": "fetchAdEnvironment"
  },
  {
    "name": "resetVideoTracking",
    "newName": "clearVideoTracking"
  },
  {
    "name": "resetPlaybackState",
    "newName": "clearPlaybackState"
  },
  {
    "name": "isArrayLike",
    "newName": "triggerEvent"
  },
  {
    "name": "handleFullscreenStart",
    "newName": "initiateFullscreenMode"
  },
  {
    "name": "parseAndValidateArray",
    "newName": "parseAndValidateData"
  },
  {
    "name": "serializeTransformations",
    "newName": "serializeAdTransformations"
  },
  {
    "name": "cloneIfNotFrozen",
    "newName": "cloneAdIfNotFrozen"
  },
  {
    "name": "isValidError",
    "newName": "validateError"
  },
  {
    "name": "once",
    "newName": "triggerVolumeChange"
  },
  {
    "name": "ErrorDetails",
    "newName": "processErrorDetails"
  },
  {
    "name": "arrayOfIntegersTransformationInstance",
    "newName": "handleAdCompletion"
  },
  {
    "name": "AdErrorEvent",
    "newName": "triggerAdErrorEvent"
  },
  {
    "name": "year",
    "newName": "triggerAdError"
  },
  {
    "name": "sliceArguments",
    "newName": "monitorAdSize"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapIteratorToPromise"
  },
  {
    "name": "calculateBufferedAheadTime",
    "newName": "computeBufferedTime"
  },
  {
    "name": "isObjectOrFunction",
    "newName": "reportAdStart"
  },
  {
    "name": "de",
    "newName": "getVastErrorCode"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "generatorWrapper",
    "newName": "adEventGenerator"
  },
  {
    "name": "value",
    "newName": "adEventValue"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomData"
  },
  {
    "name": "findEntry",
    "newName": "adFindEntry"
  },
  {
    "name": "iterateEntries",
    "newName": "adIterateEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "adCreateNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adEntryIdCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "videoPlayerInstance"
  },
  {
    "name": "generatorWrapper",
    "newName": "videoPlayerWrapper"
  },
  {
    "name": "entryIdCounter",
    "newName": "videoElement"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "cloneIfNotFrozen",
    "newName": "playIfNotFrozen"
  },
  {
    "name": "year",
    "newName": "handleError"
  },
  {
    "name": "logError",
    "newName": "errorOccurred"
  },
  {
    "name": "createIterator",
    "newName": "isIteratorCreated"
  },
  {
    "name": "getCurrentTime",
    "newName": "getCurrentPlaybackTime"
  },
  {
    "name": "getDuration",
    "newName": "getVideoDuration"
  },
  {
    "name": "getRectangleSize",
    "newName": "getVideoSize"
  },
  {
    "name": "getAdEnvironment",
    "newName": "initializeAdEnvironment"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandler"
  },
  {
    "name": "tasks",
    "newName": "taskList"
  },
  {
    "name": "loaded",
    "newName": "isLoaded"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "isUnhandledRejection"
  },
  {
    "name": "resolvePromise",
    "newName": "isPromiseResolved"
  },
  {
    "name": "onFulfilled",
    "newName": "fulfilledTime"
  },
  {
    "name": "isDone",
    "newName": "isCompleted"
  },
  {
    "name": "markAsCompletedWrapper",
    "newName": "markAsCompleted"
  },
  {
    "name": "isArrayLike",
    "newName": "dispatchEvent"
  },
  {
    "name": "handleFullscreenStart",
    "newName": "startFullscreen"
  },
  {
    "name": "handleAutoPlay",
    "newName": "autoPlayHandler"
  },
  {
    "name": "parseAndValidateArray",
    "newName": "validateArray"
  },
  {
    "name": "serializeTransformations",
    "newName": "serializeState"
  },
  {
    "name": "isValidError",
    "newName": "validateError"
  },
  {
    "name": "once",
    "newName": "dispatchVolumeChange"
  },
  {
    "name": "ErrorDetails",
    "newName": "handleErrorDetails"
  },
  {
    "name": "arrayOfIntegersTransformationInstance",
    "newName": "handleArrayTransformation"
  },
  {
    "name": "AdErrorEvent",
    "newName": "triggerAdErrorEvent"
  },
  {
    "name": "toArray",
    "newName": "endFullscreen"
  },
  {
    "name": "assignPolyfill",
    "newName": "triggerClickEvent"
  },
  {
    "name": "reportVideoSize",
    "newName": "logVideoSize"
  },
  {
    "name": "sliceArguments",
    "newName": "handleFullscreenToggle"
  },
  {
    "name": "wrapGeneratorToPromise",
    "newName": "wrapPlaybackToPromise"
  },
  {
    "name": "calculateBufferedAheadTime",
    "newName": "calculateBufferedTime"
  },
  {
    "name": "isObjectOrFunction",
    "newName": "reportAdError"
  },
  {
    "name": "convertToIterator",
    "newName": "convertToIteratorWrapper"
  },
  {
    "name": "IteratorWrapper",
    "newName": "IteratorWrapperClass"
  },
  {
    "name": "IteratorResultWrapper",
    "newName": "IteratorResultWrapperClass"
  },
  {
    "name": "IteratorResult",
    "newName": "IteratorResultClass"
  },
  {
    "name": "CustomMap",
    "newName": "CustomMapClass"
  },
  {
    "name": "syncInternalStateWithArray",
    "newName": "syncStateWithArray"
  },
  {
    "name": "getConfigSettingsInstance",
    "newName": "getConfigInstance"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "getVideoElementFakeDuration",
    "newName": "getFakeVideoDuration"
  },
  {
    "name": "createFakeVideoElement",
    "newName": "createFakeVideoElementInstance"
  },
  {
    "name": "createElementWithOptionalClassesAndAttributes",
    "newName": "createElementWithAttributes"
  },
  {
    "name": "handleHeavyAdIntervention",
    "newName": "handleAdIntervention"
  },
  {
    "name": "shouldUseLimaVideo",
    "newName": "shouldUseCustomVideo"
  },
  {
    "name": "CustomVideoElement",
    "newName": "LimaVideoElement"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerClass"
  },
  {
    "name": "tryCall",
    "newName": "CallHandler"
  },
  {
    "name": "createAdPlayError",
    "newName": "createAdError"
  },
  {
    "name": "isCustomPlaybackAllowed",
    "newName": "isPlaybackAllowed"
  },
  {
    "name": "isCustomElementSupported",
    "newName": "isCustomElementEnabled"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandler"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "logError",
    "newName": "errorOccurred"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "isUnhandledRejection"
  },
  {
    "name": "resolvePromise",
    "newName": "isPromiseResolved"
  },
  {
    "name": "Signed64",
    "newName": "containerElement"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "settlePromise",
    "newName": "isInlinePlaybackAllowed"
  },
  {
    "name": "createDeferred",
    "newName": "deferredElement"
  },
  {
    "name": "identityFunction",
    "newName": "primaryVideoPlayer"
  },
  {
    "name": "getGeneratorException",
    "newName": "secondaryVideoPlayer"
  },
  {
    "name": "size",
    "newName": "videoSize"
  },
  {
    "name": "executeCallbacks",
    "newName": "videoSource"
  },
  {
    "name": "convertStringToInt64",
    "newName": "videoPlayerMap"
  },
  {
    "name": "isMediaElementInvalid",
    "newName": "isInvalidMediaElement"
  },
  {
    "name": "hasPlaysInlineAttribute",
    "newName": "hasInlinePlayback"
  },
  {
    "name": "throwIncidentError",
    "newName": "triggerIncidentError"
  },
  {
    "name": "createWarningError",
    "newName": "triggerWarningError"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeMraidAd"
  },
  {
    "name": "destroy",
    "newName": "destroyAdManager"
  },
  {
    "name": "writeVarint",
    "newName": "showVideoElement"
  },
  {
    "name": "isIpad",
    "newName": "switchVideoPlayers"
  },
  {
    "name": "endsWith",
    "newName": "hideVideoElement"
  },
  {
    "name": "findLastElement",
    "newName": "getLastElement"
  },
  {
    "name": "initializeMraid",
    "newName": "initializeMraidAd"
  },
  {
    "name": "destroy",
    "newName": "destroyAdManager"
  },
  {
    "name": "AdErrorType",
    "newName": "AdErrorTypes"
  },
  {
    "name": "AdError",
    "newName": "AdErrorClass"
  },
  {
    "name": "AdEvent",
    "newName": "AdEventClass"
  },
  {
    "name": "AdMetadataEvent",
    "newName": "AdMetadataEventClass"
  },
  {
    "name": "AdBreakData",
    "newName": "AdBreakDataClass"
  },
  {
    "name": "ContentTimeUpdateTimer",
    "newName": "ContentTimeUpdateTimerClass"
  },
  {
    "name": "notifyContentTimeUpdate",
    "newName": "notifyTimeUpdate"
  },
  {
    "name": "supportsSrcdoc",
    "newName": "isSrcdocSupported"
  },
  {
    "name": "writeDocument",
    "newName": "writeToDocument"
  },
  {
    "name": "allowedCssFunctions",
    "newName": "allowedCssProperties"
  },
  {
    "name": "sanitizeCssValue",
    "newName": "sanitizeCssInput"
  },
  {
    "name": "getPrototypeDescriptor",
    "newName": "getPropertyDescriptor"
  },
  {
    "name": "getStyleDescriptor",
    "newName": "getCssPropertyDescriptor"
  },
  {
    "name": "t",
    "newName": "eventType"
  },
  {
    "name": "GJ",
    "newName": "handleAdCompletion"
  },
  {
    "name": "EJ",
    "newName": "handleAsyncPlayback"
  },
  {
    "name": "CJ",
    "newName": "invokeCallback"
  },
  {
    "name": "markAsCompleted",
    "newName": "adInstanceManager"
  },
  {
    "name": "generatorWrapper",
    "newName": "adManager"
  },
  {
    "name": "value",
    "newName": "callback"
  },
  {
    "name": "CustomMap",
    "newName": "adConfig"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "adManagerPrototype"
  },
  {
    "name": "zone",
    "newName": "AdManager"
  },
  {
    "name": "JJ",
    "newName": "createAdDisplayOptions"
  },
  {
    "name": "findEntry",
    "newName": "adElement"
  },
  {
    "name": "iterateEntries",
    "newName": "adTasks"
  },
  {
    "name": "createCircularNode",
    "newName": "adNode"
  },
  {
    "name": "entryIdCounter",
    "newName": "adTaskCounter"
  },
  {
    "name": "isIphone",
    "newName": "playOnIphone"
  },
  {
    "name": "identityFunction",
    "newName": "adIdentity"
  },
  {
    "name": "logError",
    "newName": "errorLogger"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandler"
  },
  {
    "name": "isDone",
    "newName": "adCompletionTimer"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "handleRejection"
  },
  {
    "name": "currentTime",
    "newName": "currentAdTime"
  },
  {
    "name": "shouldRestorePlaybackStateAfterAdBreak",
    "newName": "restorePlaybackState"
  },
  {
    "name": "tasks",
    "newName": "adTasks"
  },
  {
    "name": "configureAdsManager",
    "newName": "setupAdsManager"
  },
  {
    "name": "initialize",
    "newName": "initializeAdManager"
  },
  {
    "name": "isEmpty",
    "newName": "isTaskQueueEmpty"
  },
  {
    "name": "settlePromise",
    "newName": "settleAdPromise"
  },
  {
    "name": "resolvePromise",
    "newName": "resolveAdPromise"
  },
  {
    "name": "createDeferred",
    "newName": "createAdDeferred"
  },
  {
    "name": "tryCall",
    "newName": "tryAdCall"
  },
  {
    "name": "getGeneratorException",
    "newName": "getAdException"
  },
  {
    "name": "onFulfilled",
    "newName": "adFulfilled"
  },
  {
    "name": "totalAdBufferingTime",
    "newName": "adBufferingTime"
  },
  {
    "name": "resize",
    "newName": "resizeAd"
  },
  {
    "name": "adTagUrl",
    "newName": "adTagUrl"
  },
  {
    "name": "adInstanceManager",
    "newName": "adInstanceManager"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "getVolume",
    "newName": "getAdVolume"
  },
  {
    "name": "setVolume",
    "newName": "setAdVolume"
  },
  {
    "name": "volume",
    "newName": "adVolume"
  },
  {
    "name": "paused",
    "newName": "pauseAd"
  },
  {
    "name": "resume",
    "newName": "resumeAd"
  },
  {
    "name": "destroy",
    "newName": "destroyAd"
  },
  {
    "name": "getCuePoints",
    "newName": "getAdCuePoints"
  },
  {
    "name": "initializeTransformations",
    "newName": "initializeAdTransformations"
  },
  {
    "name": "getAdEnvironment",
    "newName": "getAdEnvironment"
  },
  {
    "name": "setAdPropertyFromString",
    "newName": "setAdPropertyFromString"
  },
  {
    "name": "focus",
    "newName": "focusAd"
  },
  {
    "name": "HJ",
    "newName": "handleGfpCookie"
  },
  {
    "name": "supportsHtml5",
    "newName": "supportsHtml5"
  },
  {
    "name": "isAndroidNonChrome",
    "newName": "isAndroidNonChrome"
  },
  {
    "name": "resetGeneratorState",
    "newName": "resetAdState"
  },
  {
    "name": "AdConfiguration",
    "newName": "AdConfiguration"
  },
  {
    "name": "setAdPropertyFromObject",
    "newName": "setAdPropertyFromObject"
  },
  {
    "name": "updateElement",
    "newName": "updateElement"
  },
  {
    "name": "convertToInt64",
    "newName": "convertToInt64"
  },
  {
    "name": "AdCookieManager",
    "newName": "AdCookieManager"
  },
  {
    "name": "buildAdRequest",
    "newName": "buildAdRequest"
  },
  {
    "name": "setAdCookie",
    "newName": "setAdCookie"
  },
  {
    "name": "processAdCookie",
    "newName": "processAdCookie"
  },
  {
    "name": "clicked",
    "newName": "adClicked"
  },
  {
    "name": "getCurrentAd",
    "newName": "getCurrentAd"
  },
  {
    "name": "getCuePoints",
    "newName": "getAdCuePoints"
  },
  {
    "name": "destroy",
    "newName": "destroyAd"
  },
  {
    "name": "resume",
    "newName": "resumeAd"
  },
  {
    "name": "pause",
    "newName": "pauseAd"
  },
  {
    "name": "setVolume",
    "newName": "setAdVolume"
  },
  {
    "name": "getVolume",
    "newName": "getAdVolume"
  },
  {
    "name": "collapse",
    "newName": "collapseAd"
  },
  {
    "name": "expandRectangle",
    "newName": "expandAdRectangle"
  },
  {
    "name": "stopTimer",
    "newName": "stopAdTimer"
  },
  {
    "name": "resize",
    "newName": "resizeAd"
  },
  {
    "name": "startTimer",
    "newName": "startAdTimer"
  },
  {
    "name": "skip",
    "newName": "skipAd"
  },
  {
    "name": "updateAdsRenderingSettings",
    "newName": "updateAdsRenderingSettings"
  },
  {
    "name": "discardAdBreak",
    "newName": "discardAdBreak"
  },
  {
    "name": "getAdSkippableState",
    "newName": "getAdSkippableState"
  },
  {
    "name": "getRemainingTime",
    "newName": "getRemainingAdTime"
  },
  {
    "name": "isCustomClickTrackingUsed",
    "newName": "isCustomClickTrackingUsed"
  },
  {
    "name": "isCustomPlaybackUsed",
    "newName": "isCustomPlaybackUsed"
  },
  {
    "name": "initialize",
    "newName": "initializeAdManager"
  },
  {
    "name": "AdsManagerLoadedEventType",
    "newName": "AdsManagerLoadedEventType"
  },
  {
    "name": "AdsManagerLoadedEvent",
    "newName": "AdsManagerLoadedEvent"
  },
  {
    "name": "AdEvent",
    "newName": "AdEvent"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritPrototype"
  },
  {
    "name": "getAdsManager",
    "newName": "getAdsManager"
  },
  {
    "name": "getUserRequestContext",
    "newName": "getUserRequestContext"
  },
  {
    "name": "defineNamespace",
    "newName": "defineNamespace"
  },
  {
    "name": "module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_manager_loaded_event",
    "newName": "AdsManagerLoadedEventNamespace"
  },
  {
    "name": "getUSPData",
    "newName": "getUSPData"
  },
  {
    "name": "USPDataHandler",
    "newName": "USPDataHandler"
  },
  {
    "name": "supportsBigInt",
    "newName": "supportsBigInt"
  },
  {
    "name": "defaultSort",
    "newName": "defaultSort"
  },
  {
    "name": "forEachElement",
    "newName": "forEachElement"
  },
  {
    "name": "parseMessageData",
    "newName": "parseMessageData"
  },
  {
    "name": "initializeUSPApiCaller",
    "newName": "initializeUSPApiCaller"
  },
  {
    "name": "tryCall",
    "newName": "tryCall"
  },
  {
    "name": "fetchUSPData",
    "newName": "fetchUSPData"
  },
  {
    "name": "WindowWrapper",
    "newName": "WindowWrapper"
  },
  {
    "name": "findPrebidJs",
    "newName": "findPrebidJs"
  },
  {
    "name": "getAdDataOrZero",
    "newName": "getAdDataOrZero"
  },
  {
    "name": "versionRegex",
    "newName": "versionRegex"
  },
  {
    "name": "globalMap",
    "newName": "globalMap"
  },
  {
    "name": "processBidResponses",
    "newName": "processBidResponses"
  },
  {
    "name": "updateAliasRegistry",
    "newName": "updateAliasRegistry"
  },
  {
    "name": "updateAdUnitCode",
    "newName": "updateAdUnitCode"
  },
  {
    "name": "updateBidRequest",
    "newName": "updateBidRequest"
  },
  {
    "name": "createBidResponseObject",
    "newName": "createBidResponseObject"
  },
  {
    "name": "createMapFunction",
    "newName": "createMapFunction"
  },
  {
    "name": "processAuctionEndEvents",
    "newName": "processAuctionEndEvents"
  },
  {
    "name": "findEntry",
    "newName": "auctionEntry"
  },
  {
    "name": "processAuctionEndEvents",
    "newName": "handleAuctionEndEvents"
  },
  {
    "name": "generatorWrapper",
    "newName": "adGenerator"
  },
  {
    "name": "value",
    "newName": "adData"
  },
  {
    "name": "CustomMap",
    "newName": "adCustomMap"
  },
  {
    "name": "iterateEntries",
    "newName": "hasIteratedEntries"
  },
  {
    "name": "createCircularNode",
    "newName": "circularNodeMap"
  },
  {
    "name": "entryIdCounter",
    "newName": "adResponseCounter"
  },
  {
    "name": "key",
    "newName": "adKey"
  },
  {
    "name": "rejectFunction",
    "newName": "rejectCallback"
  },
  {
    "name": "user",
    "newName": "adUser"
  },
  {
    "name": "profileData",
    "newName": "adProfileData"
  },
  {
    "name": "stream",
    "newName": "adStream"
  },
  {
    "name": "entry",
    "newName": "adEvents"
  },
  {
    "name": "currentEntry",
    "newName": "currentAdEntries"
  },
  {
    "name": "checkIntersectionObserverSupport",
    "newName": "bidRequestArgs"
  },
  {
    "name": "foundEntry",
    "newName": "adSchedule"
  },
  {
    "name": "resolveFunction",
    "newName": "resolveCallback"
  },
  {
    "name": "isDone",
    "newName": "isAdProcessingDone"
  },
  {
    "name": "keyArray",
    "newName": "adKeyArray"
  },
  {
    "name": "getAdManager",
    "newName": "adManagerId"
  },
  {
    "name": "entryNode",
    "newName": "adEntryNode"
  },
  {
    "name": "lastNode",
    "newName": "lastAdNode"
  },
  {
    "name": "adServerCatIdWrapper",
    "newName": "adServerConfig"
  },
  {
    "name": "getIterator",
    "newName": "adIterator"
  },
  {
    "name": "Nb",
    "newName": "adTimeout"
  },
  {
    "name": "keyTransformFunction",
    "newName": "transformKey"
  },
  {
    "name": "errorHandler",
    "newName": "adErrorHandler"
  },
  {
    "name": "Uh",
    "newName": "adProfileExt"
  },
  {
    "name": "Vh",
    "newName": "adProfileGpid"
  },
  {
    "name": "Uh",
    "newName": "adProfileExt"
  },
  {
    "name": "Vh",
    "newName": "adProfileGpid"
  },
  {
    "name": "Uh",
    "newName": "adProfileExt"
  },
  {
    "name": "Vh",
    "newName": "adProfileGpid"
  },
  {
    "name": "Uh",
    "newName": "adProfileExt"
  },
  {
    "name": "Vh",
    "newName": "adProfileGpid"
  },
  {
    "name": "addAdBreakToAdSchedule",
    "newName": "insertAdBreak"
  },
  {
    "name": "setAdPropertyFromObject",
    "newName": "assignAdProperty"
  },
  {
    "name": "setAdBreakId",
    "newName": "assignAdBreakId"
  },
  {
    "name": "finalizeAdAttributes",
    "newName": "completeAdAttributes"
  },
  {
    "name": "once",
    "newName": "executeOnce"
  },
  {
    "name": "createMapFunction",
    "newName": "generateMapFunction"
  },
  {
    "name": "updateAdUnitCode",
    "newName": "modifyAdUnitCode"
  },
  {
    "name": "getAdPropertyValue",
    "newName": "fetchAdPropertyValue"
  },
  {
    "name": "parseNullableInt32",
    "newName": "parseNullableInteger"
  },
  {
    "name": "getTransformedElement",
    "newName": "fetchTransformedElement"
  },
  {
    "name": "updateAdProperty",
    "newName": "modifyAdProperty"
  },
  {
    "name": "addAdRequestToAdBreak",
    "newName": "insertAdRequestToBreak"
  },
  {
    "name": "setAdRequestType",
    "newName": "assignAdRequestType"
  },
  {
    "name": "updateAliasRegistry",
    "newName": "refreshAliasRegistry"
  },
  {
    "name": "clearAdProperty",
    "newName": "resetAdProperty"
  },
  {
    "name": "updateBidRequest",
    "newName": "refreshBidRequest"
  },
  {
    "name": "setAdRequestAdUnitPath",
    "newName": "assignAdRequestUnitPath"
  },
  {
    "name": "updateElement",
    "newName": "refreshElement"
  },
  {
    "name": "convertToInt64",
    "newName": "convertToInt64Format"
  },
  {
    "name": "Math.roundRectangle",
    "newName": "roundRectangle"
  },
  {
    "name": "createBidResponseObject",
    "newName": "generateBidResponse"
  },
  {
    "name": "addAdToAdRequest",
    "newName": "appendAdToRequest"
  },
  {
    "name": "parseNullableInt",
    "newName": "parsedNullableInt"
  },
  {
    "name": "parseNullableUInt32",
    "newName": "parsedNullableUInt32"
  },
  {
    "name": "getBitFlags",
    "newName": "bitFlags"
  },
  {
    "name": "initializeAdLoader",
    "newName": "initAdLoader"
  },
  {
    "name": "AdEnvironmentConfig",
    "newName": "AdEnvConfig"
  },
  {
    "name": "getForcedExperimentIds",
    "newName": "fetchForcedExperimentIds"
  },
  {
    "name": "getConfigSettingsInstance",
    "newName": "fetchConfigSettings"
  },
  {
    "name": "adManagerInstance",
    "newName": "adManager"
  },
  {
    "name": "InitializeAdLogging",
    "newName": "initAdLogging"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerInstance"
  },
  {
    "name": "AdCookieManager",
    "newName": "AdCookieHandler"
  },
  {
    "name": "tasks",
    "newName": "adTasks"
  },
  {
    "name": "handleThenable",
    "newName": "thenableHandler"
  },
  {
    "name": "handleAsync",
    "newName": "asyncHandler"
  },
  {
    "name": "logError",
    "newName": "errorLogger"
  },
  {
    "name": "EventDispatcher",
    "newName": "EventHandler"
  },
  {
    "name": "registerDisposable",
    "newName": "registerDisposableHandler"
  },
  {
    "name": "updateMaxSize",
    "newName": "maxSizeUpdater"
  },
  {
    "name": "ConsentStatusManager",
    "newName": "ConsentManager"
  },
  {
    "name": "initializeUSPApiCaller",
    "newName": "initUSPApiCaller"
  },
  {
    "name": "SignalResolver",
    "newName": "SignalHandler"
  },
  {
    "name": "resolveOrRefreshSignal",
    "newName": "refreshSignal"
  },
  {
    "name": "SignalStatusManager",
    "newName": "SignalStatusHandler"
  },
  {
    "name": "tryCall",
    "newName": "adSignalListener"
  },
  {
    "name": "AdSignalListener",
    "newName": "AdSignalHandler"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "setTimeoutWrapper",
    "newName": "timeoutHandler"
  },
  {
    "name": "getInstance",
    "newName": "fetchInstance"
  },
  {
    "name": "isOnScreenDetectionEnabled",
    "newName": "isScreenDetectionEnabled"
  },
  {
    "name": "getConnectionInstance",
    "newName": "fetchConnectionInstance"
  },
  {
    "name": "registerElement",
    "newName": "registerAdElement"
  },
  {
    "name": "executeOrDelayUntilDisposed",
    "newName": "executeOrDelay"
  },
  {
    "name": "inheritPrototype",
    "newName": "inheritProto"
  },
  {
    "name": "destroy",
    "newName": "destroyLoader"
  },
  {
    "name": "getAdManifestVersion",
    "newName": "fetchAdManifestVersion"
  },
  {
    "name": "requestAds",
    "newName": "requestAdBids"
  },
  {
    "name": "isTcfApiFunctionAvailable",
    "newName": "isTcfApiAvailable"
  },
  {
    "name": "waitForConsentWithTimeout",
    "newName": "fetchConsentWithTimeout"
  },
  {
    "name": "fetchUSPData",
    "newName": "fetchUSPDataHandler"
  },
  {
    "name": "fetchAdSignalData",
    "newName": "fetchAdSignal"
  },
  {
    "name": "executeAdRequest",
    "newName": "initiateAdRequest"
  },
  {
    "name": "adTagUrl",
    "newName": "adTagUrl"
  },
  {
    "name": "randomInt",
    "newName": "randomInteger"
  },
  {
    "name": "generatePrivacySettingsObject",
    "newName": "generatePrivacySettings"
  },
  {
    "name": "generateAdRequest",
    "newName": "generateAdRequestUrl"
  },
  {
    "name": "collectLocalStorageAdData",
    "newName": "fetchLocalStorageAdData"
  },
  {
    "name": "refreshEspSignals",
    "newName": "updateEspSignals"
  },
  {
    "name": "handleThenable",
    "newName": "handleThenableFunction"
  },
  {
    "name": "Dm",
    "newName": "AdLoaderConfig"
  },
  {
    "name": "createTimerPromise",
    "newName": "initTimerPromise"
  },
  {
    "name": "Im",
    "newName": "isImEnabled"
  },
  {
    "name": "Jm",
    "newName": "isJmEnabled"
  },
  {
    "name": "Km",
    "newName": "isKmEnabled"
  },
  {
    "name": "isEoidCookieEnabled",
    "newName": "isEoidCookieEnabled"
  },
  {
    "name": "configLoaderSingleton",
    "newName": "configLoader"
  },
  {
    "name": "configLoaderSingleton",
    "newName": "configLoader"
  },
  {
    "name": "constructConfigUrl",
    "newName": "buildConfigUrl"
  },
  {
    "name": "loadConfig",
    "newName": "loadAdConfig"
  },
  {
    "name": "handleConfigLoadError",
    "newName": "processConfigLoadError"
  },
  {
    "name": "getEffectiveMessageTarget",
    "newName": "fetchEffectiveMessageTarget"
  },
  {
    "name": "getEffectiveUrl",
    "newName": "fetchEffectiveUrl"
  },
  {
    "name": "initializeAdRequest",
    "newName": "initAdRequest"
  },
  {
    "name": "getIdentityId",
    "newName": "fetchIdentityId"
  },
  {
    "name": "delayForCustomParams",
    "newName": "delayForParams"
  },
  {
    "name": "isChromiumBased",
    "newName": "isChromium"
  },
  {
    "name": "hasCookieDeprecationLabel",
    "newName": "hasCookieLabel"
  },
  {
    "name": "isCookieDeprecationForced",
    "newName": "isCookieLabelForced"
  },
  {
    "name": "getCookieDeprecationLabel",
    "newName": "fetchCookieLabel"
  },
  {
    "name": "getAdDataSingleton",
    "newName": "adDataSingleton"
  },
  {
    "name": "serializeData",
    "newName": "serializeAdData"
  },
  {
    "name": "generateAdDisplayRequestConfig",
    "newName": "generateAdDisplayConfig"
  },
  {
    "name": "isInitialized",
    "newName": "isAdInitialized"
  },
  {
    "name": "generatePageViewId",
    "newName": "generatePageId"
  },
  {
    "name": "cloneIfNotFrozen",
    "newName": "cloneAdData"
  },
  {
    "name": "getActiveAdIds",
    "newName": "fetchActiveAdIds"
  },
  {
    "name": "generateVideoAdKeyObject",
    "newName": "generateVideoAdKey"
  },
  {
    "name": "isAdAuctionRunnable",
    "newName": "isAdAuctionEnabled"
  },
  {
    "name": "extractAdsRequestSettings",
    "newName": "fetchAdsRequestSettings"
  },
  {
    "name": "checkAdCookie",
    "newName": "validateAdCookie"
  },
  {
    "name": "evaluateCondition",
    "newName": "evaluateAdCondition"
  },
  {
    "name": "checkAdDisplayConditions",
    "newName": "validateAdDisplay"
  },
  {
    "name": "getEndOfInsertionCookie",
    "newName": "fetchInsertionCookie"
  },
  {
    "name": "AdRequestBuilder",
    "newName": "AdRequestGenerator"
  },
  {
    "name": "setAdProperty",
    "newName": "assignAdProperty"
  },
  {
    "name": "setAdCookie",
    "newName": "assignAdCookie"
  },
  {
    "name": "AdsManagerLoaderViewModeChangedEvent",
    "newName": "AdManagerViewModeEvent"
  },
  {
    "name": "WindowWrapper",
    "newName": "WindowHandler"
  },
  {
    "name": "getAdPropertyFallbackNumeric",
    "newName": "fetchAdPropertyFallback"
  },
  {
    "name": "dispatchUnhandledRejection",
    "newName": "dispatchRejection"
  },
  {
    "name": "setCookieValue",
    "newName": "assignCookieValue"
  },
  {
    "name": "processEncryptedSignalBidderIds",
    "newName": "handleEncryptedBidderIds"
  },
  {
    "name": "collectAdDataFromProviders",
    "newName": "fetchAdDataFromProviders"
  },
  {
    "name": "loadCacheItems",
    "newName": "fetchCacheItems"
  },
  {
    "name": "getLocalStorageSafe",
    "newName": "fetchLocalStorage"
  },
  {
    "name": "retrieveAndDeleteStoredValue",
    "newName": "fetchAndDeleteStoredValue"
  },
  {
    "name": "buildAdRequest",
    "newName": "generateAdRequestData"
  },
  {
    "name": "getBooleanAdProperty",
    "newName": "fetchBooleanAdProperty"
  },
  {
    "name": "checkCookiesEnabled",
    "newName": "validateCookiesEnabled"
  },
  {
    "name": "markAsCompleted",
    "newName": "completeAdProcess"
  },
  {
    "name": "getAdInstance",
    "newName": "fetchAdInstance"
  },
  {
    "name": "reportAdInteraction",
    "newName": "logAdInteraction"
  },
  {
    "name": "AdRule",
    "newName": "AdRuleInstance"
  },
  {
    "name": "getValidatedDataOrUndefined",
    "newName": "fetchValidatedData"
  },
  {
    "name": "transformElementAtIndex",
    "newName": "transformElement"
  },
  {
    "name": "extractPublisherId",
    "newName": "fetchPublisherId"
  },
  {
    "name": "isLimitedAdsModeEnabled",
    "newName": "isLimitedAdsEnabled"
  },
  {
    "name": "isLimitedAdsMode",
    "newName": "isLimitedAdsMode"
  },
  {
    "name": "findPrebidJs",
    "newName": "fetchPrebidJs"
  },
  {
    "name": "extractSlotNameOrIdFromUrl",
    "newName": "fetchSlotNameOrId"
  },
  {
    "name": "base64Encode",
    "newName": "encodeBase64"
  },
  {
    "name": "AdErrorType",
    "newName": "AdErrorTypes"
  },
  {
    "name": "AdErrorEventType",
    "newName": "AdErrorEvents"
  },
  {
    "name": "AdEventTypes",
    "newName": "AdEvents"
  },
  {
    "name": "AdsManagerLoadedEventType",
    "newName": "AdsManagerEvents"
  },
  {
    "name": "CompanionAdSelectionSettings",
    "newName": "CompanionAdSettings"
  },
  {
    "name": "CreativeType",
    "newName": "AdCreativeTypes"
  },
  {
    "name": "ResourceType",
    "newName": "AdResourceTypes"
  },
  {
    "name": "SizeCriteria",
    "newName": "AdSizeCriteria"
  },
  {
    "name": "AdManager",
    "newName": "AdManagerHandler"
  },
  {
    "name": "updateMaxSize",
    "newName": "maxSizeUpdater"
  },
  {
    "name": "AdDisplayOptions",
    "newName": "AdRenderOptions"
  },
  {
    "name": "adType",
    "newName": "AdType"
  },
  {
    "name": "imaSdkInstanceSingleton",
    "newName": "imaSdkInstance"
  },
  {
    "name": "clearCacheManager",
    "newName": "clearCache"
  },
  {
    "name": "RegexPatternBuilder",
    "newName": "PatternBuilder"
  },
  {
    "name": "checkUrlAgainstPatterns",
    "newName": "validateUrlPattern"
  },
  {
    "name": "findFirstMatchingScript",
    "newName": "fetchFirstMatchingScript"
  },
  {
    "name": "googleApiDomainPattern",
    "newName": "apiDomainPattern"
  },
  {
    "name": "googleSyndicationDomainPattern",
    "newName": "syndicationDomainPattern"
  },
  {
    "name": "googleApisPrereleaseDomainPattern",
    "newName": "prereleaseDomainPattern"
  },
  {
    "name": "imaJsFilenames",
    "newName": "imaScriptFilenames"
  },
  {
    "name": "bridgeJsFilenames",
    "newName": "bridgeScriptFilenames"
  },
  {
    "name": "outstreamJsFilenames",
    "newName": "outstreamScriptFilenames"
  },
  {
    "name": "googleApiDomainRegexBuilder",
    "newName": "apiDomainRegexBuilder"
  },
  {
    "name": "googleSyndicationDomainRegexBuilder",
    "newName": "syndicationDomainRegexBuilder"
  },
  {
    "name": "googleApisPrereleaseDomainRegexBuilder",
    "newName": "prereleaseDomainRegexBuilder"
  },
  {
    "name": "googleSyndicationAdsDomainRegexBuilder",
    "newName": "syndicationAdsRegexBuilder"
  },
  {
    "name": "googleApiOutstreamRegexBuilder",
    "newName": "apiOutstreamRegexBuilder"
  },
  {
    "name": "googleApiOutstreamDebugRegexBuilder",
    "newName": "apiOutstreamDebugRegexBuilder"
  },
  {
    "name": "Om",
    "newName": "isOmEnabled"
  },
  {
    "name": "profileData",
    "newName": "adProfileData"
  },
  {
    "name": "profileData",
    "newName": "adProfileData"
  }
]