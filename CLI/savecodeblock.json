[
  "(function () {\n  var setTimeoutWrapper;\n  var createIterator = function (generatorWrapper) {\n    var value = 0;\n    return function () {\n      if (value < generatorWrapper.length) {\n        return {\n          done: false,\n          value: generatorWrapper[value++]\n        };\n      } else {\n        return {\n          done: true\n        };\n      }\n    };\n  };\n  var definePropertyPolyfill = typeof Object.defineProperties == \"function\" ? Object.defineProperty : function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper == Array.prototype || generatorWrapper == Object.prototype) {\n      return generatorWrapper;\n    }\n    generatorWrapper[value] = CustomMap.value;\n    return generatorWrapper;\n  };\n  var findGlobalObject = function (generatorWrapper) {\n    generatorWrapper = [typeof globalThis == \"object\" && globalThis, generatorWrapper, typeof window == \"object\" && window, typeof self == \"object\" && self, typeof global == \"object\" && global];\n    for (var value = 0; value < generatorWrapper.length; ++value) {\n      var CustomMap = generatorWrapper[value];\n      if (CustomMap && CustomMap.Math == Math) {\n        return CustomMap;\n      }\n    }\n    throw Error(\"Cannot find global object\");\n  };\n  var globalObject = findGlobalObject(this);\n  var definePolyfill = function (generatorWrapper, value) {\n    if (value) {\n      generatorWrapper: {\n        var CustomMap = globalObject;\n        generatorWrapper = generatorWrapper.split(\".\");\n        for (var findEntry = 0; findEntry < generatorWrapper.length - 1; findEntry++) {\n          var iterateEntries = generatorWrapper[findEntry];\n          if (!(iterateEntries in CustomMap)) {\n            break generatorWrapper;\n          }\n          CustomMap = CustomMap[iterateEntries];\n        }\n        generatorWrapper = generatorWrapper[generatorWrapper.length - 1];\n        findEntry = CustomMap[generatorWrapper];\n        value = value(findEntry);\n        if (value != findEntry && value != null) {\n          definePropertyPolyfill(CustomMap, generatorWrapper, {\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      }\n    }\n  };\n  definePolyfill(\"Symbol\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    }\n    var value = function (createCircularNode, entryIdCounter) {\n      this.entryIdCounter = createCircularNode;\n      definePropertyPolyfill(this, \"description\", {\n        configurable: true,\n        writable: true,\n        value: entryIdCounter\n      });\n    };\n    value.prototype.toString = function () {\n      return this.entryIdCounter;\n    };\n    var CustomMap = \"jscomp_symbol_\" + (1000000000 * Math.random() >>> 0) + \"_\";\n    var findEntry = 0;\n    var iterateEntries = function (createCircularNode) {\n      if (this instanceof iterateEntries) {\n        throw new TypeError(\"Symbol is not a constructor\");\n      }\n      return new value(CustomMap + (createCircularNode || \"\") + \"_\" + findEntry++, createCircularNode);\n    };\n    return iterateEntries;\n  });\n  definePolyfill(\"Symbol.iterator\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    }\n    generatorWrapper = Symbol(\"Symbol.iterator\");\n    for (var value = \"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"), CustomMap = 0; CustomMap < value.length; CustomMap++) {\n      var findEntry = globalObject[value[CustomMap]];\n      if (typeof findEntry === \"function\" && typeof findEntry.prototype[generatorWrapper] != \"function\") {\n        definePropertyPolyfill(findEntry.prototype, generatorWrapper, {\n          configurable: true,\n          writable: true,\n          value() {\n            return createIterator(createIterator(this));\n          }\n        });\n      }\n    }\n    return generatorWrapper;\n  });\n  var createIterator = function (generatorWrapper) {\n    generatorWrapper = {\n      next: generatorWrapper\n    };\n    generatorWrapper[Symbol.iterator] = function () {\n      return this;\n    };\n    return generatorWrapper;\n  };\n  var identityFunction = function (generatorWrapper) {\n    return generatorWrapper.raw = generatorWrapper;\n  };\n  var getIterator = function (generatorWrapper) {\n    var value = typeof Symbol != \"undefined\" && Symbol.iterator && generatorWrapper[Symbol.iterator];\n    if (value) {\n      return value.call(generatorWrapper);\n    }\n    if (typeof generatorWrapper.length == \"number\") {\n      return {\n        next: createIterator(generatorWrapper)\n      };\n    }\n    throw Error(String(generatorWrapper) + \" is not an iterable or ArrayLike\");\n  };\n  var toArray = function (generatorWrapper) {\n    if (!(generatorWrapper instanceof Array)) {\n      generatorWrapper = getIterator(generatorWrapper);\n      for (var value, CustomMap = []; !(value = generatorWrapper.next()).done;) {\n        CustomMap.push(value.value);\n      }\n      generatorWrapper = CustomMap;\n    }\n    return generatorWrapper;\n  };\n  var hasOwnPropertySafe = function (generatorWrapper, value) {\n    return Object.prototype.hasOwnProperty.call(generatorWrapper, value);\n  };\n  var assignPolyfill = typeof Object.assign == \"function\" ? Object.assign : function (generatorWrapper, value) {\n    for (var CustomMap = 1; CustomMap < arguments.length; CustomMap++) {\n      var findEntry = arguments[CustomMap];\n      if (findEntry) {\n        for (var iterateEntries in findEntry) if (hasOwnPropertySafe(findEntry, iterateEntries)) {\n          generatorWrapper[iterateEntries] = findEntry[iterateEntries];\n        }\n      }\n    }\n    return generatorWrapper;\n  };\n  definePolyfill(\"Object.assign\", function (generatorWrapper) {\n    return generatorWrapper || assignPolyfill;\n  });\n  var setPrototypeOfPolyfill;\n  var createObjectPolyfill = typeof Object.create == \"function\" ? Object.create : function (generatorWrapper) {\n    var value = function () {};\n    value.prototype = generatorWrapper;\n    return new value();\n  };\n  var constructReflect = function () {\n    function generatorWrapper() {\n      function CustomMap() {}\n      new CustomMap();\n      Reflect.construct(CustomMap, [], function () {});\n      return new CustomMap() instanceof CustomMap;\n    }\n    if (typeof Reflect != \"undefined\" && Reflect.construct) {\n      if (generatorWrapper()) {\n        return Reflect.construct;\n      }\n      var value = Reflect.construct;\n      return function (CustomMap, findEntry, iterateEntries) {\n        CustomMap = value(CustomMap, findEntry);\n        if (iterateEntries) {\n          Reflect.setPrototypeOf(CustomMap, iterateEntries.prototype);\n        }\n        return CustomMap;\n      };\n    }\n    return function (CustomMap, findEntry, iterateEntries) {\n      if (undefined === iterateEntries) {\n        iterateEntries = CustomMap;\n      }\n      iterateEntries = createObjectPolyfill(iterateEntries.prototype || Object.prototype);\n      return Function.prototype.apply.call(CustomMap, iterateEntries, findEntry) || iterateEntries;\n    };\n  }();\n  if (typeof Object.setPrototypeOf == \"function\") {\n    setPrototypeOfPolyfill = Object.setPrototypeOf;\n  } else {\n    var adData;\n    generatorWrapper: {\n      var sa = {\n        generatorWrapper: true\n      };\n      var ta = {};\n      try {\n        ta.__proto__ = sa;\n        adData = ta.generatorWrapper;\n        break generatorWrapper;\n      } catch (generatorWrapper) {}\n      adData = false;\n    }\n    if (adData) {\n      setPrototypeOfPolyfill = function (generatorWrapper, value) {\n        generatorWrapper.__proto__ = value;\n        if (generatorWrapper.__proto__ !== value) {\n          throw new TypeError(generatorWrapper + \" is not extensible\");\n        }\n        return generatorWrapper;\n      };\n    } else {\n      setPrototypeOfPolyfill = null;\n    }\n  }\n  var setPrototypeOfPolyfill = setPrototypeOfPolyfill;\n  var inheritPrototype = function (generatorWrapper, value) {\n    generatorWrapper.prototype = createObjectPolyfill(value.prototype);\n    generatorWrapper.prototype.constructor = generatorWrapper;\n    if (setPrototypeOfPolyfill) {\n      setPrototypeOfPolyfill(generatorWrapper, value);\n    } else {\n      for (var CustomMap in value) if (CustomMap != \"prototype\") {\n        if (Object.defineProperties) {\n          var findEntry = Object.getOwnPropertyDescriptor(value, CustomMap);\n          if (findEntry) {\n            Object.defineProperty(generatorWrapper, CustomMap, findEntry);\n          }\n        } else {\n          generatorWrapper[CustomMap] = value[CustomMap];\n        }\n      }\n    }\n    generatorWrapper.executeGeneratorAsPromise = value.prototype;\n  };\n  var Generator = function () {\n    this.isDone = false;\n    this.createDeferred = null;\n    this.tasks = undefined;\n    this.entryIdCounter = 1;\n    this.settlePromise = this.setTimeoutWrapper = 0;\n    this.handleAsync = null;\n  };\n  var resetGeneratorState = function (generatorWrapper) {\n    if (generatorWrapper.isDone) {\n      throw new TypeError(\"Generator is already running\");\n    }\n    generatorWrapper.isDone = true;\n  };\n  Generator.prototype.onFulfilled = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  var handleGeneratorError = function (generatorWrapper, value) {\n    generatorWrapper.handleAsync = {\n      polyfillCheckCache: value,\n      stringOrNumberTransformation2: true\n    };\n    generatorWrapper.entryIdCounter = generatorWrapper.setTimeoutWrapper || generatorWrapper.settlePromise;\n  };\n  Generator.prototype.return = function (generatorWrapper) {\n    this.handleAsync = {\n      return: generatorWrapper\n    };\n    this.entryIdCounter = this.settlePromise;\n  };\n  var generatorYield = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.entryIdCounter = CustomMap;\n    return {\n      value: value\n    };\n  };\n  var resetGeneratorState = function (generatorWrapper) {\n    generatorWrapper.entryIdCounter = 0;\n    generatorWrapper.setTimeoutWrapper = 0;\n  };\n  var getGeneratorException = function (generatorWrapper) {\n    generatorWrapper.setTimeoutWrapper = 0;\n    var value = generatorWrapper.handleAsync.polyfillCheckCache;\n    generatorWrapper.handleAsync = null;\n    return value;\n  };\n  var GeneratorFunctionConstructor = function (generatorWrapper) {\n    this.entryIdCounter = new Generator();\n    this.tasks = generatorWrapper;\n  };\n  var generatorReturn = function (generatorWrapper, value) {\n    resetGeneratorState(generatorWrapper.entryIdCounter);\n    var CustomMap = generatorWrapper.entryIdCounter.createDeferred;\n    if (CustomMap) {\n      return handleIteratorResult(generatorWrapper, \"return\" in CustomMap ? CustomMap[\"return\"] : function (findEntry) {\n        return {\n          value: findEntry,\n          done: true\n        };\n      }, value, generatorWrapper.entryIdCounter.return);\n    }\n    generatorWrapper.entryIdCounter.return(value);\n    return finalizeGenerator(generatorWrapper);\n  };\n  var handleIteratorResult = function (generatorWrapper, value, CustomMap, findEntry) {\n    try {\n      var iterateEntries = value.call(generatorWrapper.entryIdCounter.createDeferred, CustomMap);\n      if (!(iterateEntries instanceof Object)) {\n        throw new TypeError(\"Iterator result \" + iterateEntries + \" is not an object\");\n      }\n      if (!iterateEntries.done) {\n        generatorWrapper.entryIdCounter.isDone = false;\n        return iterateEntries;\n      }\n      var createCircularNode = iterateEntries.value;\n    } catch (entryIdCounter) {\n      generatorWrapper.entryIdCounter.createDeferred = null;\n      handleGeneratorError(generatorWrapper.entryIdCounter, entryIdCounter);\n      return finalizeGenerator(generatorWrapper);\n    }\n    generatorWrapper.entryIdCounter.createDeferred = null;\n    findEntry.call(generatorWrapper.entryIdCounter, createCircularNode);\n    return finalizeGenerator(generatorWrapper);\n  };\n  var finalizeGenerator = function (generatorWrapper) {\n    for (; generatorWrapper.entryIdCounter.entryIdCounter;) {\n      try {\n        var value = generatorWrapper.tasks(generatorWrapper.entryIdCounter);\n        if (value) {\n          generatorWrapper.entryIdCounter.isDone = false;\n          return {\n            value: value.value,\n            done: false\n          };\n        }\n      } catch (CustomMap) {\n        generatorWrapper.entryIdCounter.tasks = undefined;\n        handleGeneratorError(generatorWrapper.entryIdCounter, CustomMap);\n      }\n    }\n    generatorWrapper.entryIdCounter.isDone = false;\n    if (generatorWrapper.entryIdCounter.handleAsync) {\n      value = generatorWrapper.entryIdCounter.handleAsync;\n      generatorWrapper.entryIdCounter.handleAsync = null;\n      if (value.stringOrNumberTransformation2) {\n        throw value.polyfillCheckCache;\n      }\n      return {\n        value: value.return,\n        done: true\n      };\n    }\n    return {\n      value: undefined,\n      done: true\n    };\n  };\n  var GeneratorExecutor = function (generatorWrapper) {\n    this.next = function (value) {\n      resetGeneratorState(generatorWrapper.entryIdCounter);\n      if (generatorWrapper.entryIdCounter.createDeferred) {\n        value = handleIteratorResult(generatorWrapper, generatorWrapper.entryIdCounter.createDeferred.next, value, generatorWrapper.entryIdCounter.onFulfilled);\n      } else {\n        generatorWrapper.entryIdCounter.onFulfilled(value);\n        value = finalizeGenerator(generatorWrapper);\n      }\n      return value;\n    };\n    this.throw = function (value) {\n      resetGeneratorState(generatorWrapper.entryIdCounter);\n      if (generatorWrapper.entryIdCounter.createDeferred) {\n        value = handleIteratorResult(generatorWrapper, generatorWrapper.entryIdCounter.createDeferred[\"throw\"], value, generatorWrapper.entryIdCounter.onFulfilled);\n      } else {\n        handleGeneratorError(generatorWrapper.entryIdCounter, value);\n        value = finalizeGenerator(generatorWrapper);\n      }\n      return value;\n    };\n    this.return = function (value) {\n      return generatorReturn(generatorWrapper, value);\n    };\n    this[Symbol.iterator] = function () {\n      return this;\n    };\n  };\n  var executeGeneratorAsPromise = function (generatorWrapper) {\n    function value(findEntry) {\n      return generatorWrapper.next(findEntry);\n    }\n    function CustomMap(findEntry) {\n      return generatorWrapper.throw(findEntry);\n    }\n    return new Promise(function (findEntry, iterateEntries) {\n      function createCircularNode(entryIdCounter) {\n        if (entryIdCounter.done) {\n          findEntry(entryIdCounter.value);\n        } else {\n          Promise.resolve(entryIdCounter.value).then(value, CustomMap).then(createCircularNode, iterateEntries);\n        }\n      }\n      createCircularNode(generatorWrapper.next());\n    });\n  };\n  var wrapGeneratorToPromise = function (generatorWrapper) {\n    return executeGeneratorAsPromise(new GeneratorExecutor(new GeneratorFunctionConstructor(generatorWrapper)));\n  };\n  var sliceArguments = function () {\n    for (var generatorWrapper = Number(this), value = [], CustomMap = generatorWrapper; CustomMap < arguments.length; CustomMap++) {\n      value[CustomMap - generatorWrapper] = arguments[CustomMap];\n    }\n    return value;\n  };\n  definePolyfill(\"Reflect\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return {};\n    }\n  });\n  definePolyfill(\"Reflect.construct\", function () {\n    return constructReflect;\n  });\n  definePolyfill(\"Reflect.setPrototypeOf\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      if (setPrototypeOfPolyfill) {\n        return function (value, CustomMap) {\n          try {\n            setPrototypeOfPolyfill(value, CustomMap);\n            return true;\n          } catch (findEntry) {\n            return false;\n          }\n        };\n      } else {\n        return null;\n      }\n    }\n  });\n  definePolyfill(\"Promise\", function (generatorWrapper) {\n    function value() {\n      this.entryIdCounter = null;\n    }\n    function CustomMap(entryIdCounter) {\n      if (entryIdCounter instanceof iterateEntries) {\n        return entryIdCounter;\n      } else {\n        return new iterateEntries(function (key) {\n          key(entryIdCounter);\n        });\n      }\n    }\n    if (generatorWrapper) {\n      return generatorWrapper;\n    }\n    value.prototype.tasks = function (entryIdCounter) {\n      if (this.entryIdCounter == null) {\n        this.entryIdCounter = [];\n        var key = this;\n        this.setTimeoutWrapper(function () {\n          key.handleAsync();\n        });\n      }\n      this.entryIdCounter.push(entryIdCounter);\n    };\n    var findEntry = globalObject.setTimeout;\n    value.prototype.setTimeoutWrapper = function (entryIdCounter) {\n      findEntry(entryIdCounter, 0);\n    };\n    value.prototype.handleAsync = function () {\n      for (; this.entryIdCounter && this.entryIdCounter.length;) {\n        var entryIdCounter = this.entryIdCounter;\n        this.entryIdCounter = [];\n        for (var key = 0; key < entryIdCounter.length; ++key) {\n          var value = entryIdCounter[key];\n          entryIdCounter[key] = null;\n          try {\n            value();\n          } catch (entry) {\n            this.createDeferred(entry);\n          }\n        }\n      }\n      this.entryIdCounter = null;\n    };\n    value.prototype.createDeferred = function (entryIdCounter) {\n      this.setTimeoutWrapper(function () {\n        throw entryIdCounter;\n      });\n    };\n    var iterateEntries = function (entryIdCounter) {\n      this.entryIdCounter = 0;\n      this.setTimeoutWrapper = undefined;\n      this.tasks = [];\n      this.onFulfilled = false;\n      var key = this.createDeferred();\n      try {\n        entryIdCounter(key.resolve, key.reject);\n      } catch (value) {\n        key.reject(value);\n      }\n    };\n    iterateEntries.prototype.createDeferred = function () {\n      function entryIdCounter(entry) {\n        return function (currentEntry) {\n          if (!value) {\n            value = true;\n            entry.call(key, currentEntry);\n          }\n        };\n      }\n      var key = this;\n      var value = false;\n      return {\n        resolve: entryIdCounter(this.resolvePromise),\n        reject: entryIdCounter(this.handleAsync)\n      };\n    };\n    iterateEntries.prototype.resolvePromise = function (entryIdCounter) {\n      if (entryIdCounter === this) {\n        this.handleAsync(new TypeError(\"A Promise cannot resolve to itself\"));\n      } else if (entryIdCounter instanceof iterateEntries) {\n        this.handleThenable(entryIdCounter);\n      } else {\n        generatorWrapper: switch (typeof entryIdCounter) {\n          case \"object\":\n            var key = entryIdCounter != null;\n            break generatorWrapper;\n          case \"function\":\n            key = true;\n            break generatorWrapper;\n          default:\n            key = false;\n        }\n        if (key) {\n          this.handleThenable(entryIdCounter);\n        } else {\n          this.isDone(entryIdCounter);\n        }\n      }\n    };\n    iterateEntries.prototype.handleThenable = function (entryIdCounter) {\n      var key = undefined;\n      try {\n        key = entryIdCounter.then;\n      } catch (value) {\n        this.handleAsync(value);\n        return;\n      }\n      if (typeof key == \"function\") {\n        this.tryCall(key, entryIdCounter);\n      } else {\n        this.isDone(entryIdCounter);\n      }\n    };\n    iterateEntries.prototype.handleAsync = function (entryIdCounter) {\n      this.settlePromise(2, entryIdCounter);\n    };\n    iterateEntries.prototype.isDone = function (entryIdCounter) {\n      this.settlePromise(1, entryIdCounter);\n    };\n    iterateEntries.prototype.settlePromise = function (entryIdCounter, key) {\n      if (this.entryIdCounter != 0) {\n        throw Error(\"Cannot settle(\" + entryIdCounter + \", \" + key + \"): Promise already settled in state\" + this.entryIdCounter);\n      }\n      this.entryIdCounter = entryIdCounter;\n      this.setTimeoutWrapper = key;\n      if (this.entryIdCounter === 2) {\n        this.logError();\n      }\n      this.executeCallbacks();\n    };\n    iterateEntries.prototype.logError = function () {\n      var entryIdCounter = this;\n      findEntry(function () {\n        if (entryIdCounter.dispatchUnhandledRejection()) {\n          var key = globalObject.console;\n          if (typeof key !== \"undefined\") {\n            key.hasError(entryIdCounter.setTimeoutWrapper);\n          }\n        }\n      }, 1);\n    };\n    iterateEntries.prototype.dispatchUnhandledRejection = function () {\n      if (this.onFulfilled) {\n        return false;\n      }\n      var entryIdCounter = globalObject.CustomEvent;\n      var key = globalObject.Event;\n      var value = globalObject.dispatchEvent;\n      if (typeof value === \"undefined\") {\n        return true;\n      }\n      if (typeof entryIdCounter === \"function\") {\n        entryIdCounter = new entryIdCounter(\"unhandledrejection\", {\n          cancelable: true\n        });\n      } else if (typeof key === \"function\") {\n        entryIdCounter = new key(\"unhandledrejection\", {\n          cancelable: true\n        });\n      } else {\n        entryIdCounter = globalObject.document.createEvent(\"CustomEvent\");\n        entryIdCounter.initCustomEvent(\"unhandledrejection\", false, true, entryIdCounter);\n      }\n      entryIdCounter.promise = this;\n      entryIdCounter.reason = this.setTimeoutWrapper;\n      return value(entryIdCounter);\n    };\n    iterateEntries.prototype.executeCallbacks = function () {\n      if (this.tasks != null) {\n        for (var entryIdCounter = 0; entryIdCounter < this.tasks.length; ++entryIdCounter) {\n          createCircularNode.tasks(this.tasks[entryIdCounter]);\n        }\n        this.tasks = null;\n      }\n    };\n    var createCircularNode = new value();\n    iterateEntries.prototype.handleThenable = function (entryIdCounter) {\n      var key = this.createDeferred();\n      entryIdCounter.executeCallbacks(key.resolve, key.reject);\n    };\n    iterateEntries.prototype.tryCall = function (entryIdCounter, key) {\n      var value = this.createDeferred();\n      try {\n        entryIdCounter.call(key, value.resolve, value.reject);\n      } catch (entry) {\n        value.reject(entry);\n      }\n    };\n    iterateEntries.prototype.then = function (entryIdCounter, key) {\n      function value(resolveFunction, rejectFunction) {\n        if (typeof resolveFunction == \"function\") {\n          return function (user) {\n            try {\n              entry(resolveFunction(user));\n            } catch (profileData) {\n              currentEntry(profileData);\n            }\n          };\n        } else {\n          return rejectFunction;\n        }\n      }\n      var entry,\n        currentEntry,\n        foundEntry = new iterateEntries(function (resolveFunction, rejectFunction) {\n          entry = resolveFunction;\n          currentEntry = rejectFunction;\n        });\n      this.executeCallbacks(value(entryIdCounter, entry), value(key, currentEntry));\n      return foundEntry;\n    };\n    iterateEntries.prototype.catch = function (entryIdCounter) {\n      return this.then(undefined, entryIdCounter);\n    };\n    iterateEntries.prototype.executeCallbacks = function (entryIdCounter, key) {\n      function value() {\n        switch (entry.entryIdCounter) {\n          case 1:\n            entryIdCounter(entry.setTimeoutWrapper);\n            break;\n          case 2:\n            key(entry.setTimeoutWrapper);\n            break;\n          default:\n            throw Error(\"Unexpected state: \" + entry.entryIdCounter);\n        }\n      }\n      var entry = this;\n      if (this.tasks == null) {\n        createCircularNode.tasks(value);\n      } else {\n        this.tasks.push(value);\n      }\n      this.onFulfilled = true;\n    };\n    iterateEntries.resolve = CustomMap;\n    iterateEntries.reject = function (entryIdCounter) {\n      return new iterateEntries(function (key, value) {\n        value(entryIdCounter);\n      });\n    };\n    iterateEntries.race = function (entryIdCounter) {\n      return new iterateEntries(function (key, value) {\n        for (var entry = getIterator(entryIdCounter), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n          CustomMap(currentEntry.value).executeCallbacks(key, value);\n        }\n      });\n    };\n    iterateEntries.all = function (entryIdCounter) {\n      var key = getIterator(entryIdCounter);\n      var value = key.next();\n      if (value.done) {\n        return CustomMap([]);\n      } else {\n        return new iterateEntries(function (entry, currentEntry) {\n          function foundEntry(user) {\n            return function (profileData) {\n              resolveFunction[user] = profileData;\n              rejectFunction--;\n              if (rejectFunction == 0) {\n                entry(resolveFunction);\n              }\n            };\n          }\n          var resolveFunction = [];\n          var rejectFunction = 0;\n          do {\n            resolveFunction.push(undefined);\n            rejectFunction++;\n            CustomMap(value.value).executeCallbacks(foundEntry(resolveFunction.length - 1), currentEntry);\n            value = key.next();\n          } while (!value.done);\n        });\n      }\n    };\n    return iterateEntries;\n  });\n  definePolyfill(\"Object.setPrototypeOf\", function (generatorWrapper) {\n    return generatorWrapper || setPrototypeOfPolyfill;\n  });\n  definePolyfill(\"Array.prototype.find\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        generatorWrapper: {\n          var findEntry = this;\n          if (findEntry instanceof String) {\n            findEntry = String(findEntry);\n          }\n          for (var iterateEntries = findEntry.length, createCircularNode = 0; createCircularNode < iterateEntries; createCircularNode++) {\n            var entryIdCounter = findEntry[createCircularNode];\n            if (value.call(CustomMap, entryIdCounter, createCircularNode, findEntry)) {\n              value = entryIdCounter;\n              break generatorWrapper;\n            }\n          }\n          value = undefined;\n        }\n        return value;\n      };\n    }\n  });\n  definePolyfill(\"WeakMap\", function (generatorWrapper) {\n    function value() {}\n    function CustomMap(value) {\n      var entry = typeof value;\n      return entry === \"object\" && value !== null || entry === \"function\";\n    }\n    function findEntry(value) {\n      if (!hasOwnPropertySafe(value, createCircularNode)) {\n        var entry = new value();\n        definePropertyPolyfill(value, createCircularNode, {\n          value: entry\n        });\n      }\n    }\n    function iterateEntries(value) {\n      var entry = Object[value];\n      if (entry) {\n        Object[value] = function (currentEntry) {\n          if (currentEntry instanceof value) {\n            return currentEntry;\n          }\n          if (Object.isExtensible(currentEntry)) {\n            findEntry(currentEntry);\n          }\n          return entry(currentEntry);\n        };\n      }\n    }\n    if (function () {\n      if (!generatorWrapper || !Object.seal) {\n        return false;\n      }\n      try {\n        var value = Object.seal({});\n        var entry = Object.seal({});\n        var currentEntry = new generatorWrapper([[value, 2], [entry, 3]]);\n        if (currentEntry.get(value) != 2 || currentEntry.get(entry) != 3) {\n          return false;\n        }\n        currentEntry.delete(value);\n        currentEntry.set(entry, 4);\n        return !currentEntry.has(value) && currentEntry.get(entry) == 4;\n      } catch (foundEntry) {\n        return false;\n      }\n    }()) {\n      return generatorWrapper;\n    }\n    var createCircularNode = \"$jscomp_hidden_\" + Math.random();\n    iterateEntries(\"freeze\");\n    iterateEntries(\"preventExtensions\");\n    iterateEntries(\"seal\");\n    var entryIdCounter = 0;\n    var key = function (value) {\n      this.entryIdCounter = (entryIdCounter += Math.random() + 1).toString();\n      if (value) {\n        value = getIterator(value);\n        for (var entry; !(entry = value.next()).done;) {\n          entry = entry.value;\n          this.set(entry[0], entry[1]);\n        }\n      }\n    };\n    key.prototype.set = function (value, entry) {\n      if (!CustomMap(value)) {\n        throw Error(\"Invalid WeakMap key\");\n      }\n      findEntry(value);\n      if (!hasOwnPropertySafe(value, createCircularNode)) {\n        throw Error(\"WeakMap key fail: \" + value);\n      }\n      value[createCircularNode][this.entryIdCounter] = entry;\n      return this;\n    };\n    key.prototype.get = function (value) {\n      if (CustomMap(value) && hasOwnPropertySafe(value, createCircularNode)) {\n        return value[createCircularNode][this.entryIdCounter];\n      } else {\n        return undefined;\n      }\n    };\n    key.prototype.has = function (value) {\n      return CustomMap(value) && hasOwnPropertySafe(value, createCircularNode) && hasOwnPropertySafe(value[createCircularNode], this.entryIdCounter);\n    };\n    key.prototype.delete = function (value) {\n      if (CustomMap(value) && hasOwnPropertySafe(value, createCircularNode) && hasOwnPropertySafe(value[createCircularNode], this.entryIdCounter)) {\n        return delete value[createCircularNode][this.entryIdCounter];\n      } else {\n        return false;\n      }\n    };\n    return key;\n  });\n  definePolyfill(\"Map\", function (generatorWrapper) {\n    if (function () {\n      if (!generatorWrapper || typeof generatorWrapper != \"function\" || !generatorWrapper.prototype.entries || typeof Object.seal != \"function\") {\n        return false;\n      }\n      try {\n        var key = Object.seal({\n          inheritPrototype: 4\n        });\n        var value = new generatorWrapper(getIterator([[key, \"s\"]]));\n        if (value.get(key) != \"s\" || value.size != 1 || value.get({\n          inheritPrototype: 4\n        }) || value.set({\n          inheritPrototype: 4\n        }, \"t\") != value || value.size != 2) {\n          return false;\n        }\n        var entry = value.entries();\n        var currentEntry = entry.next();\n        if (currentEntry.done || currentEntry.value[0] != key || currentEntry.value[1] != \"s\") {\n          return false;\n        }\n        currentEntry = entry.next();\n        if (currentEntry.done || currentEntry.value[0].inheritPrototype != 4 || currentEntry.value[1] != \"t\" || !entry.next().done) {\n          return false;\n        } else {\n          return true;\n        }\n      } catch (foundEntry) {\n        return false;\n      }\n    }()) {\n      return generatorWrapper;\n    }\n    var value = new WeakMap();\n    var CustomMap = function (key) {\n      this[0] = {};\n      this[1] = createCircularNode();\n      this.size = 0;\n      if (key) {\n        key = getIterator(key);\n        for (var value; !(value = key.next()).done;) {\n          value = value.value;\n          this.set(value[0], value[1]);\n        }\n      }\n    };\n    CustomMap.prototype.set = function (key, value) {\n      if (key === 0) {\n        key = 0;\n      } else {\n        key = key;\n      }\n      var entry = findEntry(this, key);\n      if (!entry.list) {\n        entry.list = this[0][entry.writeBytes] = [];\n      }\n      if (entry.entryNode) {\n        entry.entryNode.value = value;\n      } else {\n        entry.entryNode = {\n          next: this[1],\n          lastNode: this[1].lastNode,\n          head: this[1],\n          key: key,\n          value: value\n        };\n        entry.list.push(entry.entryNode);\n        this[1].lastNode.next = entry.entryNode;\n        this[1].lastNode = entry.entryNode;\n        this.size++;\n      }\n      return this;\n    };\n    CustomMap.prototype.delete = function (key) {\n      key = findEntry(this, key);\n      if (key.entryNode && key.list) {\n        key.list.splice(key.index, 1);\n        if (!key.list.length) {\n          delete this[0][key.writeBytes];\n        }\n        key.entryNode.lastNode.next = key.entryNode.next;\n        key.entryNode.next.lastNode = key.entryNode.lastNode;\n        key.entryNode.head = null;\n        this.size--;\n        return true;\n      } else {\n        return false;\n      }\n    };\n    CustomMap.prototype.clearAll = function () {\n      this[0] = {};\n      this[1] = this[1].lastNode = createCircularNode();\n      this.size = 0;\n    };\n    CustomMap.prototype.has = function (key) {\n      return !!findEntry(this, key).entryNode;\n    };\n    CustomMap.prototype.get = function (key) {\n      return (key = findEntry(this, key).entryNode) && key.value;\n    };\n    CustomMap.prototype.entries = function () {\n      return iterateEntries(this, function (key) {\n        return [key.key, key.value];\n      });\n    };\n    CustomMap.prototype.keys = function () {\n      return iterateEntries(this, function (key) {\n        return key.key;\n      });\n    };\n    CustomMap.prototype.values = function () {\n      return iterateEntries(this, function (key) {\n        return key.value;\n      });\n    };\n    CustomMap.prototype.forEach = function (key, value) {\n      for (var entry = this.entries(), currentEntry; !(currentEntry = entry.next()).done;) {\n        currentEntry = currentEntry.value;\n        key.call(value, currentEntry[1], currentEntry[0], this);\n      }\n    };\n    CustomMap.prototype[Symbol.iterator] = CustomMap.prototype.entries;\n    var findEntry = function (key, value) {\n      var entry = value && typeof value;\n      if (entry == \"object\" || entry == \"function\") {\n        if (value.has(value)) {\n          entry = value.get(value);\n        } else {\n          entry = \"\" + ++entryIdCounter;\n          value.set(value, entry);\n        }\n      } else {\n        entry = \"p_\" + value;\n      }\n      var currentEntry = key[0][entry];\n      if (currentEntry && hasOwnPropertySafe(key[0], entry)) {\n        for (key = 0; key < currentEntry.length; key++) {\n          var foundEntry = currentEntry[key];\n          if (value !== value && foundEntry.key !== foundEntry.key || value === foundEntry.key) {\n            return {\n              writeBytes: entry,\n              list: currentEntry,\n              index: key,\n              entryNode: foundEntry\n            };\n          }\n        }\n      }\n      return {\n        writeBytes: entry,\n        list: currentEntry,\n        index: -1,\n        entryNode: undefined\n      };\n    };\n    var iterateEntries = function (key, value) {\n      var entry = key[1];\n      return createIterator(function () {\n        if (entry) {\n          for (; entry.head != key[1];) {\n            entry = entry.lastNode;\n          }\n          for (; entry.next != entry.head;) {\n            entry = entry.next;\n            return {\n              done: false,\n              value: value(entry)\n            };\n          }\n          entry = null;\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      });\n    };\n    var createCircularNode = function () {\n      var key = {};\n      return key.lastNode = key.next = key.head = key;\n    };\n    var entryIdCounter = 0;\n    return CustomMap;\n  });\n  definePolyfill(\"Number.MAX_SAFE_INTEGER\", function () {\n    return 9007199254740991;\n  });\n  definePolyfill(\"Number.isFinite\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        if (typeof value !== \"number\") {\n          return false;\n        } else {\n          return !isNaN(value) && Infinity !== value && -Infinity !== value;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Number.isInteger\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        if (Number.isFinite(value)) {\n          return value === Math.floorRectangle(value);\n        } else {\n          return false;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Number.isSafeInteger\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        return Number.isInteger(value) && Math.abs(value) <= Number.MAX_SAFE_INTEGER;\n      };\n    }\n  });\n  definePolyfill(\"Math.trunc\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        value = Number(value);\n        if (isNaN(value) || Infinity === value || -Infinity === value || value === 0) {\n          return value;\n        }\n        var CustomMap = Math.floorRectangle(Math.abs(value));\n        if (value < 0) {\n          return -CustomMap;\n        } else {\n          return CustomMap;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Object.values\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        var CustomMap = [],\n          findEntry;\n        for (findEntry in value) if (hasOwnPropertySafe(value, findEntry)) {\n          CustomMap.push(value[findEntry]);\n        }\n        return CustomMap;\n      };\n    }\n  });\n  definePolyfill(\"Object.is\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        if (value === CustomMap) {\n          return value !== 0 || 1 / value === 1 / CustomMap;\n        } else {\n          return value !== value && CustomMap !== CustomMap;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Array.prototype.includes\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        var findEntry = this;\n        if (findEntry instanceof String) {\n          findEntry = String(findEntry);\n        }\n        var iterateEntries = findEntry.length;\n        CustomMap = CustomMap || 0;\n        for (CustomMap < 0 && (CustomMap = Math.max(CustomMap + iterateEntries, 0)); CustomMap < iterateEntries; CustomMap++) {\n          var createCircularNode = findEntry[CustomMap];\n          if (createCircularNode === value || Object.screenDimensions(createCircularNode, value)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n  });\n  var validateStringPrototypeMethod = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper == null) {\n      throw new TypeError(\"The 'this' value for String.prototype.\" + CustomMap + \" must not be null or undefined\");\n    }\n    if (value instanceof RegExp) {\n      throw new TypeError(\"First argument to String.prototype.\" + CustomMap + \" must not be a regular expression\");\n    }\n    return generatorWrapper + \"\";\n  };\n  definePolyfill(\"String.prototype.includes\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        return -1 !== validateStringPr",
  "var entry = findEntry(this, key);\n      if (!entry.list) {\n        entry.list = this[0][entry.writeBytes] = [];\n      }\n      if (entry.entryNode) {\n        entry.entryNode.value = value;\n      } else {\n        entry.entryNode = {\n          next: this[1],\n          lastNode: this[1].lastNode,\n          head: this[1],\n          key: key,\n          value: value\n        };\n        entry.list.push(entry.entryNode);\n        this[1].lastNode.next = entry.entryNode;\n        this[1].lastNode = entry.entryNode;\n        this.size++;\n      }\n      return this;\n    };\n    CustomMap.prototype.delete = function (key) {\n      key = findEntry(this, key);\n      if (key.entryNode && key.list) {\n        key.list.splice(key.index, 1);\n        if (!key.list.length) {\n          delete this[0][key.writeBytes];\n        }\n        key.entryNode.lastNode.next = key.entryNode.next;\n        key.entryNode.next.lastNode = key.entryNode.lastNode;\n        key.entryNode.head = null;\n        this.size--;\n        return true;\n      } else {\n        return false;\n      }\n    };\n    CustomMap.prototype.clearAll = function () {\n      this[0] = {};\n      this[1] = this[1].lastNode = createCircularNode();\n      this.size = 0;\n    };\n    CustomMap.prototype.has = function (key) {\n      return !!findEntry(this, key).entryNode;\n    };\n    CustomMap.prototype.get = function (key) {\n      return (key = findEntry(this, key).entryNode) && key.value;\n    };\n    CustomMap.prototype.entries = function () {\n      return iterateEntries(this, function (key) {\n        return [key.key, key.value];\n      });\n    };\n    CustomMap.prototype.keys = function () {\n      return iterateEntries(this, function (key) {\n        return key.key;\n      });\n    };\n    CustomMap.prototype.values = function () {\n      return iterateEntries(this, function (key) {\n        return key.value;\n      });\n    };\n    CustomMap.prototype.forEach = function (key, value) {\n      for (var entry = this.entries(), currentEntry; !(currentEntry = entry.next()).done;) {\n        currentEntry = currentEntry.value;\n        key.call(value, currentEntry[1], currentEntry[0], this);\n      }\n    };\n    CustomMap.prototype[Symbol.iterator] = CustomMap.prototype.entries;\n    var findEntry = function (key, value) {\n      var entry = value && typeof value;\n      if (entry == \"object\" || entry == \"function\") {\n        if (value.has(value)) {\n          entry = value.get(value);\n        } else {\n          entry = \"\" + ++entryIdCounter;\n          value.set(value, entry);\n        }\n      } else {\n        entry = \"p_\" + value;\n      }\n      var currentEntry = key[0][entry];\n      if (currentEntry && hasOwnPropertySafe(key[0], entry)) {\n        for (key = 0; key < currentEntry.length; key++) {\n          var foundEntry = currentEntry[key];\n          if (value !== value && foundEntry.key !== foundEntry.key || value === foundEntry.key) {\n            return {\n              writeBytes: entry,\n              list: currentEntry,\n              index: key,\n              entryNode: foundEntry\n            };\n          }\n        }\n      }\n      return {\n        writeBytes: entry,\n        list: currentEntry,\n        index: -1,\n        entryNode: undefined\n      };\n    };\n    var iterateEntries = function (key, value) {\n      var entry = key[1];\n      return createIterator(function () {\n        if (entry) {\n          for (; entry.head != key[1];) {\n            entry = entry.lastNode;\n          }\n          for (; entry.next != entry.head;) {\n            entry = entry.next;\n            return {\n              done: false,\n              value: value(entry)\n            };\n          }\n          entry = null;\n        }\n        return {\n          done: true,\n          value: undefined\n        };\n      });\n    };\n    var createCircularNode = function () {\n      var key = {};\n      return key.lastNode = key.next = key.head = key;\n    };\n    var entryIdCounter = 0;\n    return CustomMap;\n  });\n  definePolyfill(\"Number.MAX_SAFE_INTEGER\", function () {\n    return 9007199254740991;\n  });\n  definePolyfill(\"Number.isFinite\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        if (typeof value !== \"number\") {\n          return false;\n        } else {\n          return !isNaN(value) && Infinity !== value && -Infinity !== value;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Number.isInteger\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        if (Number.isFinite(value)) {\n          return value === Math.floorRectangle(value);\n        } else {\n          return false;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Number.isSafeInteger\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        return Number.isInteger(value) && Math.abs(value) <= Number.MAX_SAFE_INTEGER;\n      };\n    }\n  });\n  definePolyfill(\"Math.trunc\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        value = Number(value);\n        if (isNaN(value) || Infinity === value || -Infinity === value || value === 0) {\n          return value;\n        }\n        var CustomMap = Math.floorRectangle(Math.abs(value));\n        if (value < 0) {\n          return -CustomMap;\n        } else {\n          return CustomMap;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Object.values\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        var CustomMap = [],\n          findEntry;\n        for (findEntry in value) if (hasOwnPropertySafe(value, findEntry)) {\n          CustomMap.push(value[findEntry]);\n        }\n        return CustomMap;\n      };\n    }\n  });\n  definePolyfill(\"Object.is\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        if (value === CustomMap) {\n          return value !== 0 || 1 / value === 1 / CustomMap;\n        } else {\n          return value !== value && CustomMap !== CustomMap;\n        }\n      };\n    }\n  });\n  definePolyfill(\"Array.prototype.includes\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        var findEntry = this;\n        if (findEntry instanceof String) {\n          findEntry = String(findEntry);\n        }\n        var iterateEntries = findEntry.length;\n        CustomMap = CustomMap || 0;\n        for (CustomMap < 0 && (CustomMap = Math.max(CustomMap + iterateEntries, 0)); CustomMap < iterateEntries; CustomMap++) {\n          var createCircularNode = findEntry[CustomMap];\n          if (createCircularNode === value || Object.screenDimensions(createCircularNode, value)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n  });\n  var validateStringPrototypeMethod = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper == null) {\n      throw new TypeError(\"The 'this' value for String.prototype.\" + CustomMap + \" must not be null or undefined\");\n    }\n    if (value instanceof RegExp) {\n      throw new TypeError(\"First argument to String.prototype.\" + CustomMap + \" must not be a regular expression\");\n    }\n    return generatorWrapper + \"\";\n  };\n  definePolyfill(\"String.prototype.includes\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        return -1 !== validateStringPrototypeMethod(this, value, \"includes\").indexOf(value, CustomMap || 0);\n      };\n    }\n  });\n  definePolyfill(\"Number.isNaN\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        return typeof value === \"number\" && isNaN(value);\n      };\n    }\n  });\n  var createArrayIterator = function (generatorWrapper, value) {\n    if (generatorWrapper instanceof String) {\n      generatorWrapper += \"\";\n    }\n    var CustomMap = 0;\n    var findEntry = false;\n    var iterateEntries = {\n      next() {\n        if (!findEntry && CustomMap < generatorWrapper.length) {\n          var createCircularNode = CustomMap++;\n          return {\n            value: value(createCircularNode, generatorWrapper[createCircularNode]),\n            done: false\n          };\n        }\n        findEntry = true;\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    };\n    iterateEntries[Symbol.iterator] = function () {\n      return iterateEntries;\n    };\n    return iterateEntries;\n  };\n  definePolyfill(\"Array.prototype.entries\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function () {\n        return createArrayIterator(this, function (value, CustomMap) {\n          return [value, CustomMap];\n        });\n      };\n    }\n  });\n  definePolyfill(\"Array.prototype.keys\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function () {\n        return createArrayIterator(this, function (value) {\n          return value;\n        });\n      };\n    }\n  });\n  definePolyfill(\"Array.prototype.values\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function () {\n        return createArrayIterator(this, function (value, CustomMap) {\n          return CustomMap;\n        });\n      };\n    }\n  });\n  definePolyfill(\"Array.from\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap, findEntry) {\n        if (CustomMap != null) {\n          CustomMap = CustomMap;\n        } else {\n          CustomMap = function (key) {\n            return key;\n          };\n        }\n        var iterateEntries = [];\n        var createCircularNode = typeof Symbol != \"undefined\" && Symbol.iterator && value[Symbol.iterator];\n        if (typeof createCircularNode == \"function\") {\n          value = createCircularNode.call(value);\n          for (var entryIdCounter = 0; !(createCircularNode = value.next()).done;) {\n            iterateEntries.push(CustomMap.call(findEntry, createCircularNode.value, entryIdCounter++));\n          }\n        } else {\n          createCircularNode = value.length;\n          for (entryIdCounter = 0; entryIdCounter < createCircularNode; entryIdCounter++) {\n            iterateEntries.push(CustomMap.call(findEntry, value[entryIdCounter], entryIdCounter));\n          }\n        }\n        return iterateEntries;\n      };\n    }\n  });\n  definePolyfill(\"Set\", function (generatorWrapper) {\n    if (function () {\n      if (!generatorWrapper || typeof generatorWrapper != \"function\" || !generatorWrapper.prototype.entries || typeof Object.seal != \"function\") {\n        return false;\n      }\n      try {\n        var CustomMap = Object.seal({\n          inheritPrototype: 4\n        });\n        var findEntry = new generatorWrapper(getIterator([CustomMap]));\n        if (!findEntry.has(CustomMap) || findEntry.size != 1 || findEntry.addParameter(CustomMap) != findEntry || findEntry.size != 1 || findEntry.addParameter({\n          inheritPrototype: 4\n        }) != findEntry || findEntry.size != 2) {\n          return false;\n        }\n        var iterateEntries = findEntry.entries();\n        var createCircularNode = iterateEntries.next();\n        if (createCircularNode.done || createCircularNode.value[0] != CustomMap || createCircularNode.value[1] != CustomMap) {\n          return false;\n        }\n        createCircularNode = iterateEntries.next();\n        if (createCircularNode.done || createCircularNode.value[0] == CustomMap || createCircularNode.value[0].inheritPrototype != 4 || createCircularNode.value[1] != createCircularNode.value[0]) {\n          return false;\n        } else {\n          return iterateEntries.next().done;\n        }\n      } catch (entryIdCounter) {\n        return false;\n      }\n    }()) {\n      return generatorWrapper;\n    }\n    var value = function (CustomMap) {\n      this.entryIdCounter = new Map();\n      if (CustomMap) {\n        CustomMap = getIterator(CustomMap);\n        for (var findEntry; !(findEntry = CustomMap.next()).done;) {\n          this.addParameter(findEntry.value);\n        }\n      }\n      this.size = this.entryIdCounter.size;\n    };\n    value.prototype.addParameter = function (CustomMap) {\n      if (CustomMap === 0) {\n        CustomMap = 0;\n      } else {\n        CustomMap = CustomMap;\n      }\n      this.entryIdCounter.set(CustomMap, CustomMap);\n      this.size = this.entryIdCounter.size;\n      return this;\n    };\n    value.prototype.delete = function (CustomMap) {\n      CustomMap = this.entryIdCounter.delete(CustomMap);\n      this.size = this.entryIdCounter.size;\n      return CustomMap;\n    };\n    value.prototype.clearAll = function () {\n      this.entryIdCounter.clearAll();\n      this.size = 0;\n    };\n    value.prototype.has = function (CustomMap) {\n      return this.entryIdCounter.has(CustomMap);\n    };\n    value.prototype.entries = function () {\n      return this.entryIdCounter.entries();\n    };\n    value.prototype.values = function () {\n      return this.entryIdCounter.values();\n    };\n    value.prototype.keys = value.prototype.values;\n    value.prototype[Symbol.iterator] = value.prototype.values;\n    value.prototype.forEach = function (CustomMap, findEntry) {\n      var iterateEntries = this;\n      this.entryIdCounter.forEach(function (createCircularNode) {\n        return CustomMap.call(findEntry, createCircularNode, createCircularNode, iterateEntries);\n      });\n    };\n    return value;\n  });\n  definePolyfill(\"Object.entries\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        var CustomMap = [],\n          findEntry;\n        for (findEntry in value) if (hasOwnPropertySafe(value, findEntry)) {\n          CustomMap.push([findEntry, value[findEntry]]);\n        }\n        return CustomMap;\n      };\n    }\n  });\n  definePolyfill(\"String.prototype.startsWith\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        var findEntry = validateStringPrototypeMethod(this, value, \"startsWith\");\n        value += \"\";\n        var iterateEntries = findEntry.length;\n        var createCircularNode = value.length;\n        CustomMap = Math.max(0, Math.min(CustomMap | 0, findEntry.length));\n        for (var entryIdCounter = 0; entryIdCounter < createCircularNode && CustomMap < iterateEntries;) {\n          if (findEntry[CustomMap++] != value[entryIdCounter++]) {\n            return false;\n          }\n        }\n        return entryIdCounter >= createCircularNode;\n      };\n    }\n  });\n  definePolyfill(\"String.prototype.repeat\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        var CustomMap = validateStringPrototypeMethod(this, null, \"repeat\");\n        if (value < 0 || value > 1342177279) {\n          throw new RangeError(\"Invalid count value\");\n        }\n        value |= 0;\n        for (var findEntry = \"\"; value;) {\n          if (value & 1) {\n            findEntry += CustomMap;\n          }\n          if (value >>>= 1) {\n            CustomMap += CustomMap;\n          }\n        }\n        return findEntry;\n      };\n    }\n  });\n  definePolyfill(\"globalThis\", function (generatorWrapper) {\n    return generatorWrapper || globalObject;\n  });\n  definePolyfill(\"String.prototype.padStart\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        var findEntry = validateStringPrototypeMethod(this, null, \"padStart\");\n        value -= findEntry.length;\n        if (undefined !== CustomMap) {\n          CustomMap = String(CustomMap);\n        } else {\n          CustomMap = \" \";\n        }\n        return (value > 0 && CustomMap ? CustomMap.repeat(Math.ceilRectangle(value / CustomMap.length)).substring(0, value) : \"\") + findEntry;\n      };\n    }\n  });\n  definePolyfill(\"Math.imul\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value, CustomMap) {\n        value = Number(value);\n        CustomMap = Number(CustomMap);\n        var findEntry = value & 65535;\n        var iterateEntries = CustomMap & 65535;\n        return findEntry * iterateEntries + ((value >>> 16 & 65535) * iterateEntries + findEntry * (CustomMap >>> 16 & 65535) << 16 >>> 0) | 0;\n      };\n    }\n  });\n  definePolyfill(\"Object.fromEntries\", function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return function (value) {\n        var CustomMap = {};\n        if (!(Symbol.iterator in value)) {\n          throw new TypeError(\"\" + value + \" is not iterable\");\n        }\n        value = value[Symbol.iterator].call(value);\n        for (var findEntry = value.next(); !findEntry.done; findEntry = value.next()) {\n          findEntry = findEntry.value;\n          if (Object(findEntry) !== findEntry) {\n            throw new TypeError(\"iterable for fromEntries should yield objects\");\n          }\n          CustomMap[findEntry[0]] = findEntry[1];\n        }\n        return CustomMap;\n      };\n    }\n  });\n  var closureLibraryBase = closureLibraryBase || {};\n  var globalScope = this || self;\n  var defineNamespace = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.split(\".\");\n    CustomMap = CustomMap || globalScope;\n    if (!(generatorWrapper[0] in CustomMap || typeof CustomMap.execScript == \"undefined\")) {\n      CustomMap.execScript(\"var \" + generatorWrapper[0]);\n    }\n    for (var findEntry; generatorWrapper.length && (findEntry = generatorWrapper.shift());) {\n      if (generatorWrapper.length || undefined === value) {\n        if (CustomMap[findEntry] && CustomMap[findEntry] !== Object.prototype[findEntry]) {\n          CustomMap = CustomMap[findEntry];\n        } else {\n          CustomMap = CustomMap[findEntry] = {};\n        }\n      } else {\n        CustomMap[findEntry] = value;\n      }\n    }\n  };\n  var getClosureFlagValue = function (generatorWrapper) {\n    var value = getFromGlobalScope(\"CLOSURE_FLAGS\");\n    generatorWrapper = value && value[generatorWrapper];\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return false;\n    }\n  };\n  var getFromGlobalScope = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.split(\".\");\n    value = value || globalScope;\n    for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n      value = value[generatorWrapper[CustomMap]];\n      if (value == null) {\n        return null;\n      }\n    }\n    return value;\n  };\n  var getType = function (generatorWrapper) {\n    var value = typeof generatorWrapper;\n    if (value != \"object\") {\n      return value;\n    } else {\n      if (generatorWrapper) {\n        if (Array.isArray(generatorWrapper)) {\n          return \"array\";\n        } else {\n          return value;\n        }\n      } else {\n        return \"null\";\n      }\n    }\n  };\n  var isArrayLike = function (generatorWrapper) {\n    var value = getType(generatorWrapper);\n    return value == \"array\" || value == \"object\" && typeof generatorWrapper.length == \"number\";\n  };\n  var isObjectOrFunction = function (generatorWrapper) {\n    var value = typeof generatorWrapper;\n    return value == \"object\" && generatorWrapper != null || value == \"function\";\n  };\n  var getUniqueId = function (generatorWrapper) {\n    return Object.prototype.hasOwnProperty.call(generatorWrapper, uniqueIdProperty) && generatorWrapper[uniqueIdProperty] || (generatorWrapper[uniqueIdProperty] = ++uniqueIdCounter);\n  };\n  var removeUniqueId = function (generatorWrapper) {\n    if (generatorWrapper !== null && \"removeAttribute\" in generatorWrapper) {\n      generatorWrapper.removeAttribute(uniqueIdProperty);\n    }\n    try {\n      delete generatorWrapper[uniqueIdProperty];\n    } catch (value) {}\n  };\n  var uniqueIdProperty = \"closure_uid_\" + (1000000000 * Math.random() >>> 0);\n  var uniqueIdCounter = 0;\n  var boundFunctionCall = function (generatorWrapper, value, CustomMap) {\n    return generatorWrapper.call.apply(generatorWrapper.bind, arguments);\n  };\n  var partialFunctionApplication = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper) {\n      throw Error();\n    }\n    if (arguments.length > 2) {\n      var findEntry = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var iterateEntries = Array.prototype.slice.call(arguments);\n        Array.prototype.unshift.apply(iterateEntries, findEntry);\n        return generatorWrapper.apply(value, iterateEntries);\n      };\n    }\n    return function () {\n      return generatorWrapper.apply(value, arguments);\n    };\n  };\n  var bindOrWrapFunction = function (generatorWrapper, value, CustomMap) {\n    if (Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\")) {\n      bindOrWrapFunction = boundFunctionCall;\n    } else {\n      bindOrWrapFunction = partialFunctionApplication;\n    }\n    return bindOrWrapFunction.apply(null, arguments);\n  };\n  var createFunctionWithArguments = function (generatorWrapper, value) {\n    var CustomMap = Array.prototype.slice.call(arguments, 1);\n    return function () {\n      var findEntry = CustomMap.slice();\n      findEntry.push.apply(findEntry, arguments);\n      return generatorWrapper.apply(this, findEntry);\n    };\n  };\n  var inheritPrototype = function (generatorWrapper, value) {\n    function CustomMap() {}\n    CustomMap.prototype = value.prototype;\n    generatorWrapper.executeGeneratorAsPromise = value.prototype;\n    generatorWrapper.prototype = new CustomMap();\n    generatorWrapper.prototype.constructor = generatorWrapper;\n    generatorWrapper.getPerformanceTimingAttribute = function (findEntry, iterateEntries, createCircularNode) {\n      for (var entryIdCounter = Array(arguments.length - 2), key = 2; key < arguments.length; key++) {\n        entryIdCounter[key - 2] = arguments[key];\n      }\n      return value.prototype[iterateEntries].apply(findEntry, entryIdCounter);\n    };\n  };\n  var identityFunction = function (generatorWrapper) {\n    return generatorWrapper;\n  };\n  function CustomError(generatorWrapper, value) {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CustomError);\n    } else {\n      var CustomMap = Error().stack;\n      if (CustomMap) {\n        this.stack = CustomMap;\n      }\n    }\n    if (generatorWrapper) {\n      this.message = String(generatorWrapper);\n    }\n    if (undefined !== value) {\n      this.cause = value;\n    }\n  }\n  inheritPrototype(CustomError, Error);\n  CustomError.prototype.name = \"CustomError\";\n  var cb;\n  var db;\n  var hasStringPrototypeNormalize = typeof String.prototype.booleanTransformation2 === \"function\";\n  var hasTextEncoder = typeof TextEncoder !== \"undefined\";\n  function encodeString(generatorWrapper) {\n    var value = false;\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    if (hasTextEncoder) {\n      if (value && (hasStringPrototypeNormalize ? !generatorWrapper.booleanTransformation2() : /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/.test(generatorWrapper))) {\n        throw Error(\"Found an unpaired surrogate\");\n      }\n      generatorWrapper = (db || (db = new TextEncoder())).encode(generatorWrapper);\n    } else {\n      for (var CustomMap = 0, findEntry = new Uint8Array(3 * generatorWrapper.length), iterateEntries = 0; iterateEntries < generatorWrapper.length; iterateEntries++) {\n        var createCircularNode = generatorWrapper.charCodeAt(iterateEntries);\n        if (createCircularNode < 128) {\n          findEntry[CustomMap++] = createCircularNode;\n        } else {\n          if (createCircularNode < 2048) {\n            findEntry[CustomMap++] = createCircularNode >> 6 | 192;\n          } else {\n            if (createCircularNode >= 55296 && createCircularNode <= 57343) {\n              if (createCircularNode <= 56319 && iterateEntries < generatorWrapper.length) {\n                var entryIdCounter = generatorWrapper.charCodeAt(++iterateEntries);\n                if (entryIdCounter >= 56320 && entryIdCounter <= 57343) {\n                  createCircularNode = 1024 * (createCircularNode - 55296) + entryIdCounter - 56320 + 65536;\n                  findEntry[CustomMap++] = createCircularNode >> 18 | 240;\n                  findEntry[CustomMap++] = createCircularNode >> 12 & 63 | 128;\n                  findEntry[CustomMap++] = createCircularNode >> 6 & 63 | 128;\n                  findEntry[CustomMap++] = createCircularNode & 63 | 128;\n                  continue;\n                } else {\n                  iterateEntries--;\n                }\n              }\n              if (value) {\n                throw Error(\"Found an unpaired surrogate\");\n              }\n              createCircularNode = 65533;\n            }\n            findEntry[CustomMap++] = createCircularNode >> 12 | 224;\n            findEntry[CustomMap++] = createCircularNode >> 6 & 63 | 128;\n          }\n          findEntry[CustomMap++] = createCircularNode & 63 | 128;\n        }\n      }\n      if (CustomMap === findEntry.length) {\n        generatorWrapper = findEntry;\n      } else {\n        generatorWrapper = findEntry.subarray(0, CustomMap);\n      }\n    }\n    return generatorWrapper;\n  }\n  function deferError(generatorWrapper) {\n    globalScope.setTimeout(function () {\n      throw generatorWrapper;\n    }, 0);\n  }\n  var endsWith = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.length - value.length;\n    return CustomMap >= 0 && generatorWrapper.indexOf(value, CustomMap) == CustomMap;\n  };\n  var isEmptyOrWhitespace = function (generatorWrapper) {\n    return /^[\\s\\xa0]*$/.test(generatorWrapper);\n  };\n  var trimString = String.prototype.trim ? function (generatorWrapper) {\n    return generatorWrapper.trim();\n  } : function (generatorWrapper) {\n    return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(generatorWrapper)[1];\n  };\n  var includesString = function (generatorWrapper, value) {\n    return -1 != generatorWrapper.indexOf(value);\n  };\n  var includesIgnoreCase = function (generatorWrapper, value) {\n    return includesString(generatorWrapper.toLowerCase(), value.toLowerCase());\n  };\n  var compareVersions = function (generatorWrapper, value) {\n    var CustomMap = 0;\n    generatorWrapper = trimString(String(generatorWrapper)).split(\".\");\n    value = trimString(String(value)).split(\".\");\n    for (var findEntry = Math.max(generatorWrapper.length, value.length), iterateEntries = 0; CustomMap == 0 && iterateEntries < findEntry; iterateEntries++) {\n      var createCircularNode = generatorWrapper[iterateEntries] || \"\";\n      var entryIdCounter = value[iterateEntries] || \"\";\n      do {\n        createCircularNode = /(\\d*)(\\D*)(.*)/.exec(createCircularNode) || [\"\", \"\", \"\", \"\"];\n        entryIdCounter = /(\\d*)(\\D*)(.*)/.exec(entryIdCounter) || [\"\", \"\", \"\", \"\"];\n        if (createCircularNode[0].length == 0 && entryIdCounter[0].length == 0) {\n          break;\n        }\n        CustomMap = compareValues(createCircularNode[1].length == 0 ? 0 : parseInt(createCircularNode[1], 10), entryIdCounter[1].length == 0 ? 0 : parseInt(entryIdCounter[1], 10)) || compareValues(createCircularNode[2].length == 0, entryIdCounter[2].length == 0) || compareValues(createCircularNode[2], entryIdCounter[2]);\n        createCircularNode = createCircularNode[3];\n        entryIdCounter = entryIdCounter[3];\n      } while (CustomMap == 0);\n    }\n    return CustomMap;\n  };\n  var compareValues = function (generatorWrapper, value) {\n    if (generatorWrapper < value) {\n      return -1;\n    } else {\n      if (generatorWrapper > value) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  };\n  var hasNavigatorUserAgentData = getClosureFlagValue(610401301);\n  var unknownVariable = getClosureFlagValue(188588736);\n  function getUserAgent() {\n    var generatorWrapper = globalScope.navigator;\n    if (generatorWrapper && (generatorWrapper = generatorWrapper.userAgent)) {\n      return generatorWrapper;\n    } else {\n      return \"\";\n    }\n  }\n  var userAgentData,\n    navigatorReference = globalScope.navigator;\n  if (navigatorReference) {\n    userAgentData = navigatorReference.userAgentData || null;\n  } else {\n    userAgentData = null;\n  }\n  function includesBrand(generatorWrapper) {\n    if (hasNavigatorUserAgentData) {\n      if (userAgentData) {\n        return userAgentData.brands.some(function (value) {\n          return (value = value.brand) && includesString(value, generatorWrapper);\n        });\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n  function handleAsync(generatorWrapper) {\n    return includesString(getUserAgent(), generatorWrapper);\n  }\n  function hasBrands() {\n    if (hasNavigatorUserAgentData) {\n      return !!userAgentData && userAgentData.brands.length > 0;\n    } else {\n      return false;\n    }\n  }\n  function isOperaBrowser() {\n    if (hasBrands()) {\n      return false;\n    } else {\n      return handleAsync(\"Opera\");\n    }\n  }\n  function isInternetExplorer() {\n    if (hasBrands()) {\n      return false;\n    } else {\n      return handleAsync(\"Trident\") || handleAsync(\"MSIE\");\n    }\n  }\n  function isFirefox() {\n    return handleAsync(\"Firefox\") || handleAsync(\"FxiOS\");\n  }\n  function isSafari() {\n    return handleAsync(\"Safari\") && !(isChromiumBased() || (hasBrands() ? 0 : handleAsync(\"Coast\")) || isOperaBrowser() || (hasBrands() ? 0 : handleAsync(\"Edge\")) || (hasBrands() ? includesBrand(\"Microsoft Edge\") : handleAsync(\"Edg/\")) || (hasBrands() ? includesBrand(\"Opera\") : handleAsync(\"OPR\")) || isFirefox() || handleAsync(\"Silk\") || handleAsync(\"Android\"));\n  }\n  function isChromiumBased() {\n    if (hasBrands()) {\n      return includesBrand(\"Chromium\");\n    } else {\n      return (handleAsync(\"Chrome\") || handleAsync(\"CriOS\")) && !(hasBrands() ? 0 : handleAsync(\"Edge\")) || handleAsync(\"Silk\");\n    }\n  }\n  function hasPlatform() {\n    if (hasNavigatorUserAgentData) {\n      return !!userAgentData && !!userAgentData.platform;\n    } else {\n      return false;\n    }\n  }\n  function isAndroid() {\n    if (hasPlatform()) {\n      return userAgentData.platform === \"Android\";\n    } else {\n      return handleAsync(\"Android\");\n    }\n  }\n  function isIphone() {\n    return handleAsync(\"iPhone\") && !handleAsync(\"iPod\") && !handleAsync(\"iPad\");\n  }\n  function isMacOS() {\n    if (hasPlatform()) {\n      return userAgentData.platform === \"macOS\";\n    } else {\n      return handleAsync(\"Macintosh\");\n    }\n  }\n  var indexOfChar = function (generatorWrapper, value) {\n    if (typeof generatorWrapper === \"string\") {\n      if (typeof value !== \"string\" || value.length != 1) {\n        return -1;\n      } else {\n        return generatorWrapper.indexOf(value, 0);\n      }\n    }\n    for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n      if (CustomMap in generatorWrapper && generatorWrapper[CustomMap] === value) {\n        return CustomMap;\n      }\n    }\n    return -1;\n  };\n  var forEachElement = function (generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, iterateEntries = 0; iterateEntries < CustomMap; iterateEntries++) {\n      if (iterateEntries in findEntry) {\n        value.call(undefined, findEntry[iterateEntries], iterateEntries, generatorWrapper);\n      }\n    }\n  };\n  function forEachElementReverse(generatorWrapper, value) {\n    for (var CustomMap = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, findEntry = generatorWrapper.length - 1; findEntry >= 0; --findEntry) {\n      if (findEntry in CustomMap) {\n        value.call(undefined, CustomMap[findEntry], findEntry, generatorWrapper);\n      }\n    }\n  }\n  var filterElements = function (generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = [], iterateEntries = 0, createCircularNode = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, entryIdCounter = 0; entryIdCounter < CustomMap; entryIdCounter++) {\n      if (entryIdCounter in createCircularNode) {\n        var key = createCircularNode[entryIdCounter];\n        if (value.call(undefined, key, entryIdCounter, generatorWrapper)) {\n          findEntry[iterateEntries++] = key;\n        }\n      }\n    }\n    return findEntry;\n  };\n  var mapElements = function (generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = Array(CustomMap), iterateEntries = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, createCircularNode = 0; createCircularNode < CustomMap; createCircularNode++) {\n      if (createCircularNode in iterateEntries) {\n        findEntry[createCircularNode] = value.call(undefined, iterateEntries[createCircularNode], createCircularNode, generatorWrapper);\n      }\n    }\n    return findEntry;\n  };\n  var reduceElements = function (generatorWrapper, value, CustomMap) {\n    var findEntry = CustomMap;\n    forEachElement(generatorWrapper, function (iterateEntries, createCircularNode) {\n      findEntry = value.call(undefined, findEntry, iterateEntries, createCircularNode, generatorWrapper);\n    });\n    return findEntry;\n  };\n  var someElement = function (generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, iterateEntries = 0; iterateEntries < CustomMap; iterateEntries++) {\n      if (iterateEntries in findEntry && value.call(undefined, findEntry[iterateEntries], iterateEntries, generatorWrapper)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function findElement(generatorWrapper, value) {\n    value = findElementIndex(generatorWrapper, value);\n    if (value < 0) {\n      return null;\n    } else {\n      if (typeof generatorWrapper === \"string\") {\n        return generatorWrapper.charAt(value);\n      } else {\n        return generatorWrapper[value];\n      }\n    }\n  }\n  function findElementIndex(generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, iterateEntries = 0; iterateEntries < CustomMap; iterateEntries++) {\n      if (iterateEntries in findEntry && value.call(undefined, findEntry[iterateEntries], iterateEntries, generatorWrapper)) {\n        return iterateEntries;\n      }\n    }\n    return -1;\n  }\n  function findLastElement(generatorWrapper, value) {\n    value = findLastElementIndex(generatorWrapper, value);\n    if (value < 0) {\n      return null;\n    } else {\n      if (typeof generatorWrapper === \"string\") {\n        return generatorWrapper.charAt(value);\n      } else {\n        return generatorWrapper[value];\n      }\n    }\n  }\n  function findLastElementIndex(generatorWrapper, value) {\n    for (var CustomMap = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, findEntry = generatorWrapper.length - 1; findEntry >= 0; findEntry--) {\n      if (findEntry in CustomMap && value.call(undefined, CustomMap[findEntry], findEntry, generatorWrapper)) {\n        return findEntry;\n      }\n    }\n    return -1;\n  }\n  function containsElement(generatorWrapper, value) {\n    return indexOfChar(generatorWrapper, value) >= 0;\n  }\n  function removeElement(generatorWrapper, value) {\n    value = indexOfChar(generatorWrapper, value);\n    var CustomMap;\n    if (CustomMap = value >= 0) {\n      removeElementAtIndex(generatorWrapper, value);\n    }\n    return CustomMap;\n  }\n  function removeElementAtIndex(generatorWrapper, value) {\n    return Array.prototype.splice.call(generatorWrapper, value, 1).length == 1;\n  }\n  function removeElementsByCondition(generatorWrapper, value) {\n    var CustomMap = 0;\n    forEachElementReverse(generatorWrapper, function (findEntry, iterateEntries) {\n      if (value.call(undefined, findEntry, iterateEntries, generatorWrapper) && removeElementAtIndex(generatorWrapper, iterateEntries)) {\n        CustomMap++;\n      }\n    });\n  }\n  function concatArrays(generatorWrapper) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  function copyArray(generatorWrapper) {\n    var value = generatorWrapper.length;\n    if (value > 0) {\n      for (var CustomMap = Array(value), findEntry = 0; findEntry < value; findEntry++) {\n        CustomMap[findEntry] = generatorWrapper[findEntry];\n      }\n      return CustomMap;\n    }\n    return [];\n  }\n  function uniqueElements(generatorWrapper) {\n    for (var value = 0, CustomMap = 0, findEntry = {}; CustomMap < generatorWrapper.length;) {\n      var iterateEntries = generatorWrapper[CustomMap++];\n      var createCircularNode = isObjectOrFunction(iterateEntries) ? \"o\" + getUniqueId(iterateEntries) : (typeof iterateEntries).charAt(0) + iterateEntries;\n      if (!Object.prototype.hasOwnProperty.call(findEntry, createCircularNode)) {\n        findEntry[createCircularNode] = true;\n        generatorWrapper[value++] = iterateEntries;\n      }\n    }\n    generatorWrapper.length = value;\n  }\n  function sortArray(generatorWrapper, value) {\n    generatorWrapper.sort(value || defaultSort);\n  }\n  function defaultSort(generatorWrapper, value) {\n    if (generatorWrapper > value) {\n      return 1;\n    } else {\n      if (generatorWrapper < value) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n  }\n  function createEmptyStringsArray(generatorWrapper) {\n    for (var value = [], CustomMap = 0; CustomMap < generatorWrapper; CustomMap++) {\n      value[CustomMap] = \"\";\n    }\n    return value;\n  }\n  var noopFunction = function (generatorWrapper) {\n    noopFunction[\" \"](generatorWrapper);\n    return generatorWrapper;\n  };\n  noopFunction[\" \"] = function () {};\n  var tryNoopFunction = function (generatorWrapper, value) {\n    try {\n      noopFunction(generatorWrapper[value]);\n      return true;\n    } catch (CustomMap) {}\n    return false;\n  };\n  var getCachedValue = function (generatorWrapper) {\n    var value = browserFeatures;\n    if (Object.prototype.hasOwnProperty.call(value, 8)) {\n      return value[8];\n    } else {\n      return value[8] = generatorWrapper(8);\n    }\n  };\n  var userAgentVersion;\n  var isOpera = isOperaBrowser();\n  var isIE = isInternetExplorer();\n  var isEdge = handleAsync(\"Edge\");\n  var isGecko = handleAsync(\"Gecko\") && !(includesIgnoreCase(getUserAgent(), \"WebKit\") && !handleAsync(\"Edge\")) && !(handleAsync(\"Trident\") || handleAsync(\"MSIE\")) && !handleAsync(\"Edge\");\n  var isWebKit = includesIgnoreCase(getUserAgent(), \"WebKit\") && !handleAsync(\"Edge\");\n  var isMacOS = isMacOS();\n  var isAndroid = isAndroid();\n  var isIphone = isIphone();\n  var isIpad = handleAsync(\"iPad\");\n  var isIpod = handleAsync(\"iPod\");\n  var isIphoneIpadIpod = isIphone() || handleAsync(\"iPad\") || handleAsync(\"iPod\");\n  generatorWrapper: {\n    var browserVersion = \"\";\n    var executeCallbacks = function () {\n      var generatorWrapper = getUserAgent();\n      if (isGecko) {\n        return /rv:([^\\);]+)(\\)|;)/.exec(generatorWrapper);\n      }\n      if (isEdge) {\n        return /Edge\\/([\\d\\.]+)/.exec(generatorWrapper);\n      }\n      if (isIE) {\n        return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(generatorWrapper);\n      }\n      if (isWebKit) {\n        return /WebKit\\/(\\S+)/.exec(generatorWrapper);\n      }\n      if (isOpera) {\n        return /(?:Version)[ \\/]?(\\S+)/.exec(generatorWrapper);\n      }\n    }();\n    if (executeCallbacks) {\n      if (executeCallbacks) {\n        browserVersion = executeCallbacks[1];\n      } else {\n        browserVersion = \"\";\n      }\n    }\n    if (isIE) {\n      var documentMode,\n        currentDocument = globalScope.document;\n      if (currentDocument) {\n        documentMode = currentDocument.documentMode;\n      } else {\n        documentMode = undefined;\n      }\n      if (documentMode != null && documentMode > parseFloat(browserVersion)) {\n        userAgentVersion = String(documentMode);\n        break generatorWrapper;\n      }\n    }\n    userAgentVersion = browserVersion;\n  }\n  var finalBrowserVersion = userAgentVersion;\n  var browserFeatures = {};\n  var supportsHtml5 = function () {\n    return getCachedValue(function () {\n      return compareVersions(finalBrowserVersion, 8) >= 0;\n    });\n  };\n  var isAndroidBrowser = isFirefox();\n  var isAndroidNonChrome = handleAsync(\"Android\") && !(isChromiumBased() || isFirefox() || isOperaBrowser() || handleAsync(\"Silk\"));\n  var isIos = isChromiumBased();\n  isSafari();\n  var base64AlphabetVariants = {};\n  var base64AlphabetIndex = null;\n  var base64Encode = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = 0;\n    }\n    initializeBase64Encoding();\n    value = base64AlphabetVariants[value];\n    for (var CustomMap = Array(Math.floorRectangle(generatorWrapper.length / 3)), findEntry = value[64] || \"\", iterateEntries = 0, createCircularNode = 0; iterateEntries < generatorWrapper.length - 2; iterateEntries += 3) {\n      var entryIdCounter = generatorWrapper[iterateEntries];\n      var key = generatorWrapper[iterateEntries + 1];\n      var value = generatorWrapper[iterateEntries + 2];\n      var entry = value[entryIdCounter >> 2];\n      entryIdCounter = value[(entryIdCounter & 3) << 4 | key >> 4];\n      key = value[(key & 15) << 2 | value >> 6];\n      value = value[value & 63];\n      CustomMap[createCircularNode++] = \"\" + entry + entryIdCounter + key + value;\n    }\n    entry = 0;\n    value = findEntry;\n    switch (generatorWrapper.length - iterateEntries) {\n      case 2:\n        entry = generatorWrapper[iterateEntries + 1];\n        value = value[(entry & 15) << 2] || findEntry;\n      case 1:\n        generatorWrapper = generatorWrapper[iterateEntries];\n        CustomMap[createCircularNode] = \"\" + value[generatorWrapper >> 2] + value[(generatorWr",
  "atorWrapper.length, findEntry = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, iterateEntries = 0; iterateEntries < CustomMap; iterateEntries++) {\n      if (iterateEntries in findEntry && value.call(undefined, findEntry[iterateEntries], iterateEntries, generatorWrapper)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  function findElement(generatorWrapper, value) {\n    value = findElementIndex(generatorWrapper, value);\n    if (value < 0) {\n      return null;\n    } else {\n      if (typeof generatorWrapper === \"string\") {\n        return generatorWrapper.charAt(value);\n      } else {\n        return generatorWrapper[value];\n      }\n    }\n  }\n  function findElementIndex(generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper.length, findEntry = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, iterateEntries = 0; iterateEntries < CustomMap; iterateEntries++) {\n      if (iterateEntries in findEntry && value.call(undefined, findEntry[iterateEntries], iterateEntries, generatorWrapper)) {\n        return iterateEntries;\n      }\n    }\n    return -1;\n  }\n  function findLastElement(generatorWrapper, value) {\n    value = findLastElementIndex(generatorWrapper, value);\n    if (value < 0) {\n      return null;\n    } else {\n      if (typeof generatorWrapper === \"string\") {\n        return generatorWrapper.charAt(value);\n      } else {\n        return generatorWrapper[value];\n      }\n    }\n  }\n  function findLastElementIndex(generatorWrapper, value) {\n    for (var CustomMap = typeof generatorWrapper === \"string\" ? generatorWrapper.split(\"\") : generatorWrapper, findEntry = generatorWrapper.length - 1; findEntry >= 0; findEntry--) {\n      if (findEntry in CustomMap && value.call(undefined, CustomMap[findEntry], findEntry, generatorWrapper)) {\n        return findEntry;\n      }\n    }\n    return -1;\n  }\n  function containsElement(generatorWrapper, value) {\n    return indexOfChar(generatorWrapper, value) >= 0;\n  }\n  function removeElement(generatorWrapper, value) {\n    value = indexOfChar(generatorWrapper, value);\n    var CustomMap;\n    if (CustomMap = value >= 0) {\n      removeElementAtIndex(generatorWrapper, value);\n    }\n    return CustomMap;\n  }\n  function removeElementAtIndex(generatorWrapper, value) {\n    return Array.prototype.splice.call(generatorWrapper, value, 1).length == 1;\n  }\n  function removeElementsByCondition(generatorWrapper, value) {\n    var CustomMap = 0;\n    forEachElementReverse(generatorWrapper, function (findEntry, iterateEntries) {\n      if (value.call(undefined, findEntry, iterateEntries, generatorWrapper) && removeElementAtIndex(generatorWrapper, iterateEntries)) {\n        CustomMap++;\n      }\n    });\n  }\n  function concatArrays(generatorWrapper) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  function copyArray(generatorWrapper) {\n    var value = generatorWrapper.length;\n    if (value > 0) {\n      for (var CustomMap = Array(value), findEntry = 0; findEntry < value; findEntry++) {\n        CustomMap[findEntry] = generatorWrapper[findEntry];\n      }\n      return CustomMap;\n    }\n    return [];\n  }\n  function uniqueElements(generatorWrapper) {\n    for (var value = 0, CustomMap = 0, findEntry = {}; CustomMap < generatorWrapper.length;) {\n      var iterateEntries = generatorWrapper[CustomMap++];\n      var createCircularNode = isObjectOrFunction(iterateEntries) ? \"o\" + getUniqueId(iterateEntries) : (typeof iterateEntries).charAt(0) + iterateEntries;\n      if (!Object.prototype.hasOwnProperty.call(findEntry, createCircularNode)) {\n        findEntry[createCircularNode] = true;\n        generatorWrapper[value++] = iterateEntries;\n      }\n    }\n    generatorWrapper.length = value;\n  }\n  function sortArray(generatorWrapper, value) {\n    generatorWrapper.sort(value || defaultSort);\n  }\n  function defaultSort(generatorWrapper, value) {\n    if (generatorWrapper > value) {\n      return 1;\n    } else {\n      if (generatorWrapper < value) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n  }\n  function createEmptyStringsArray(generatorWrapper) {\n    for (var value = [], CustomMap = 0; CustomMap < generatorWrapper; CustomMap++) {\n      value[CustomMap] = \"\";\n    }\n    return value;\n  }\n  var noopFunction = function (generatorWrapper) {\n    noopFunction[\" \"](generatorWrapper);\n    return generatorWrapper;\n  };\n  noopFunction[\" \"] = function () {};\n  var tryNoopFunction = function (generatorWrapper, value) {\n    try {\n      noopFunction(generatorWrapper[value]);\n      return true;\n    } catch (CustomMap) {}\n    return false;\n  };\n  var getCachedValue = function (generatorWrapper) {\n    var value = browserFeatures;\n    if (Object.prototype.hasOwnProperty.call(value, 8)) {\n      return value[8];\n    } else {\n      return value[8] = generatorWrapper(8);\n    }\n  };\n  var userAgentVersion;\n  var isOpera = isOperaBrowser();\n  var isIE = isInternetExplorer();\n  var isEdge = handleAsync(\"Edge\");\n  var isGecko = handleAsync(\"Gecko\") && !(includesIgnoreCase(getUserAgent(), \"WebKit\") && !handleAsync(\"Edge\")) && !(handleAsync(\"Trident\") || handleAsync(\"MSIE\")) && !handleAsync(\"Edge\");\n  var isWebKit = includesIgnoreCase(getUserAgent(), \"WebKit\") && !handleAsync(\"Edge\");\n  var isMacOS = isMacOS();\n  var isAndroid = isAndroid();\n  var isIphone = isIphone();\n  var isIpad = handleAsync(\"iPad\");\n  var isIpod = handleAsync(\"iPod\");\n  var isIphoneIpadIpod = isIphone() || handleAsync(\"iPad\") || handleAsync(\"iPod\");\n  generatorWrapper: {\n    var browserVersion = \"\";\n    var executeCallbacks = function () {\n      var generatorWrapper = getUserAgent();\n      if (isGecko) {\n        return /rv:([^\\);]+)(\\)|;)/.exec(generatorWrapper);\n      }\n      if (isEdge) {\n        return /Edge\\/([\\d\\.]+)/.exec(generatorWrapper);\n      }\n      if (isIE) {\n        return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(generatorWrapper);\n      }\n      if (isWebKit) {\n        return /WebKit\\/(\\S+)/.exec(generatorWrapper);\n      }\n      if (isOpera) {\n        return /(?:Version)[ \\/]?(\\S+)/.exec(generatorWrapper);\n      }\n    }();\n    if (executeCallbacks) {\n      if (executeCallbacks) {\n        browserVersion = executeCallbacks[1];\n      } else {\n        browserVersion = \"\";\n      }\n    }\n    if (isIE) {\n      var documentMode,\n        currentDocument = globalScope.document;\n      if (currentDocument) {\n        documentMode = currentDocument.documentMode;\n      } else {\n        documentMode = undefined;\n      }\n      if (documentMode != null && documentMode > parseFloat(browserVersion)) {\n        userAgentVersion = String(documentMode);\n        break generatorWrapper;\n      }\n    }\n    userAgentVersion = browserVersion;\n  }\n  var finalBrowserVersion = userAgentVersion;\n  var browserFeatures = {};\n  var supportsHtml5 = function () {\n    return getCachedValue(function () {\n      return compareVersions(finalBrowserVersion, 8) >= 0;\n    });\n  };\n  var isAndroidBrowser = isFirefox();\n  var isAndroidNonChrome = handleAsync(\"Android\") && !(isChromiumBased() || isFirefox() || isOperaBrowser() || handleAsync(\"Silk\"));\n  var isIos = isChromiumBased();\n  isSafari();\n  var base64AlphabetVariants = {};\n  var base64AlphabetIndex = null;\n  var base64Encode = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = 0;\n    }\n    initializeBase64Encoding();\n    value = base64AlphabetVariants[value];\n    for (var CustomMap = Array(Math.floorRectangle(generatorWrapper.length / 3)), findEntry = value[64] || \"\", iterateEntries = 0, createCircularNode = 0; iterateEntries < generatorWrapper.length - 2; iterateEntries += 3) {\n      var entryIdCounter = generatorWrapper[iterateEntries];\n      var key = generatorWrapper[iterateEntries + 1];\n      var value = generatorWrapper[iterateEntries + 2];\n      var entry = value[entryIdCounter >> 2];\n      entryIdCounter = value[(entryIdCounter & 3) << 4 | key >> 4];\n      key = value[(key & 15) << 2 | value >> 6];\n      value = value[value & 63];\n      CustomMap[createCircularNode++] = \"\" + entry + entryIdCounter + key + value;\n    }\n    entry = 0;\n    value = findEntry;\n    switch (generatorWrapper.length - iterateEntries) {\n      case 2:\n        entry = generatorWrapper[iterateEntries + 1];\n        value = value[(entry & 15) << 2] || findEntry;\n      case 1:\n        generatorWrapper = generatorWrapper[iterateEntries];\n        CustomMap[createCircularNode] = \"\" + value[generatorWrapper >> 2] + value[(generatorWrapper & 3) << 4 | entry >> 4] + value + findEntry;\n    }\n    return CustomMap.join(\"\");\n  };\n  var getBase64EncodedArray = function (generatorWrapper) {\n    var value = [];\n    decodeBase64(generatorWrapper, function (CustomMap) {\n      value.push(CustomMap);\n    });\n    return value;\n  };\n  var decodeBase64 = function (generatorWrapper, value) {\n    function CustomMap(value) {\n      for (; findEntry < generatorWrapper.length;) {\n        var entry = generatorWrapper.charAt(findEntry++);\n        var currentEntry = base64AlphabetIndex[entry];\n        if (currentEntry != null) {\n          return currentEntry;\n        }\n        if (!isEmptyOrWhitespace(entry)) {\n          throw Error(\"Unknown base64 encoding at char: \" + entry);\n        }\n      }\n      return value;\n    }\n    initializeBase64Encoding();\n    for (var findEntry = 0;;) {\n      var iterateEntries = CustomMap(-1);\n      var createCircularNode = CustomMap(0);\n      var entryIdCounter = CustomMap(64);\n      var key = CustomMap(64);\n      if (key === 64 && -1 === iterateEntries) {\n        break;\n      }\n      value(iterateEntries << 2 | createCircularNode >> 4);\n      if (entryIdCounter != 64) {\n        value(createCircularNode << 4 & 240 | entryIdCounter >> 2);\n        if (key != 64) {\n          value(entryIdCounter << 6 & 192 | key);\n        }\n      }\n    }\n  };\n  var initializeBase64Encoding = function () {\n    if (!base64AlphabetIndex) {\n      base64AlphabetIndex = {};\n      for (var generatorWrapper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"), value = [\"+/=\", \"+/\", \"-_=\", \"-_.\", \"-_\"], CustomMap = 0; CustomMap < 5; CustomMap++) {\n        var findEntry = generatorWrapper.concat(value[CustomMap].split(\"\"));\n        base64AlphabetVariants[CustomMap] = findEntry;\n        for (var iterateEntries = 0; iterateEntries < findEntry.length; iterateEntries++) {\n          var createCircularNode = findEntry[iterateEntries];\n          if (undefined === base64AlphabetIndex[createCircularNode]) {\n            base64AlphabetIndex[createCircularNode] = iterateEntries;\n          }\n        }\n      }\n    }\n  };\n  var supportsUint8Array = typeof Uint8Array !== \"undefined\";\n  var supportsBtoa = !isIE && typeof btoa === \"function\";\n  function supportsBigInt() {\n    return typeof BigInt === \"function\";\n  }\n  var unusedVar1;\n  var lowOrderInteger = 0;\n  var highOrderInteger = 0;\n  function calculateIntegers(generatorWrapper) {\n    var value = generatorWrapper < 0;\n    generatorWrapper = Math.abs(generatorWrapper);\n    var CustomMap = generatorWrapper >>> 0;\n    generatorWrapper = Math.floorRectangle((generatorWrapper - CustomMap) / 4294967296);\n    if (value) {\n      CustomMap = getIterator(invertAndIncrement(CustomMap, generatorWrapper));\n      value = CustomMap.next().value;\n      generatorWrapper = CustomMap.next().value;\n      CustomMap = value;\n    }\n    lowOrderInteger = CustomMap >>> 0;\n    highOrderInteger = generatorWrapper >>> 0;\n  }\n  function formatLongNumber(generatorWrapper, value) {\n    value >>>= 0;\n    generatorWrapper >>>= 0;\n    if (value <= 2097151) {\n      var CustomMap = \"\" + (4294967296 * value + generatorWrapper);\n    } else if (supportsBigInt()) {\n      CustomMap = \"\" + (BigInt(value) << BigInt(32) | BigInt(generatorWrapper));\n    } else {\n      CustomMap = (generatorWrapper >>> 24 | value << 8) & 16777215;\n      value = value >> 16 & 65535;\n      generatorWrapper = (generatorWrapper & 16777215) + 6777216 * CustomMap + 6710656 * value;\n      CustomMap += 8147497 * value;\n      value *= 2;\n      if (generatorWrapper >= 10000000) {\n        CustomMap += Math.floorRectangle(generatorWrapper / 10000000);\n        generatorWrapper %= 10000000;\n      }\n      if (CustomMap >= 10000000) {\n        value += Math.floorRectangle(CustomMap / 10000000);\n        CustomMap %= 10000000;\n      }\n      CustomMap = value + padNumber(CustomMap) + padNumber(generatorWrapper);\n    }\n    return CustomMap;\n  }\n  function padNumber(generatorWrapper) {\n    generatorWrapper = String(generatorWrapper);\n    return \"0000000\".slice(generatorWrapper.length) + generatorWrapper;\n  }\n  function getFormattedNumber() {\n    var generatorWrapper = lowOrderInteger;\n    var value = highOrderInteger;\n    if (value & 2147483648) {\n      if (supportsBigInt()) {\n        generatorWrapper = \"\" + (BigInt(value | 0) << BigInt(32) | BigInt(generatorWrapper >>> 0));\n      } else {\n        value = getIterator(invertAndIncrement(generatorWrapper, value));\n        generatorWrapper = value.next().value;\n        value = value.next().value;\n        generatorWrapper = \"-\" + formatLongNumber(generatorWrapper, value);\n      }\n    } else {\n      generatorWrapper = formatLongNumber(generatorWrapper, value);\n    }\n    return generatorWrapper;\n  }\n  function parseAndSetBigIntegers(generatorWrapper) {\n    if (generatorWrapper.length < 16) {\n      calculateIntegers(Number(generatorWrapper));\n    } else if (supportsBigInt()) {\n      generatorWrapper = BigInt(generatorWrapper);\n      lowOrderInteger = Number(generatorWrapper & BigInt(4294967295)) >>> 0;\n      highOrderInteger = Number(generatorWrapper >> BigInt(32) & BigInt(4294967295));\n    } else {\n      var value = +(generatorWrapper[0] === \"-\");\n      highOrderInteger = lowOrderInteger = 0;\n      findEntry = iterateEntries;\n      for (var CustomMap = generatorWrapper.length, findEntry = 0 + value, iterateEntries = (CustomMap - value) % 6 + value; iterateEntries <= CustomMap; iterateEntries += 6) {\n        findEntry = Number(generatorWrapper.slice(findEntry, iterateEntries));\n        highOrderInteger *= 1000000;\n        lowOrderInteger = 1000000 * lowOrderInteger + findEntry;\n        if (lowOrderInteger >= 4294967296) {\n          highOrderInteger += Math.trunc(lowOrderInteger / 4294967296);\n          highOrderInteger >>>= 0;\n          lowOrderInteger >>>= 0;\n        }\n      }\n      if (value) {\n        value = getIterator(invertAndIncrement(lowOrderInteger, highOrderInteger));\n        generatorWrapper = value.next().value;\n        value = value.next().value;\n        lowOrderInteger = generatorWrapper;\n        highOrderInteger = value;\n      }\n    }\n  }\n  function invertAndIncrement(generatorWrapper, value) {\n    value = ~value;\n    if (generatorWrapper) {\n      generatorWrapper = ~generatorWrapper + 1;\n    } else {\n      value += 1;\n    }\n    return [generatorWrapper, value];\n  }\n  var defaultUnsigned64, defaultSigned64;\n  var Unsigned64 = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper >>> 0;\n    this.entryIdCounter = value >>> 0;\n  };\n  var createUnsigned64 = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return defaultUnsigned64 || (defaultUnsigned64 = new Unsigned64(0, 0));\n    }\n    if (!/^\\d+$/.test(generatorWrapper)) {\n      return null;\n    }\n    parseAndSetBigIntegers(generatorWrapper);\n    return new Unsigned64(lowOrderInteger, highOrderInteger);\n  };\n  var Signed64 = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper >>> 0;\n    this.entryIdCounter = value >>> 0;\n  };\n  var createSigned64 = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return defaultSigned64 || (defaultSigned64 = new Signed64(0, 0));\n    }\n    if (!/^-?\\d+$/.test(generatorWrapper)) {\n      return null;\n    }\n    parseAndSetBigIntegers(generatorWrapper);\n    return new Signed64(lowOrderInteger, highOrderInteger);\n  };\n  var ByteArray = function () {\n    this.entryIdCounter = [];\n  };\n  ByteArray.prototype.length = function () {\n    return this.entryIdCounter.length;\n  };\n  ByteArray.prototype.end = function () {\n    var generatorWrapper = this.entryIdCounter;\n    this.entryIdCounter = [];\n    return generatorWrapper;\n  };\n  var writeVarint32 = function (generatorWrapper, value, CustomMap) {\n    for (; CustomMap > 0 || value > 127;) {\n      generatorWrapper.entryIdCounter.push(value & 127 | 128);\n      value = (value >>> 7 | CustomMap << 25) >>> 0;\n      CustomMap >>>= 7;\n    }\n    generatorWrapper.entryIdCounter.push(value);\n  };\n  var writeVarint = function (generatorWrapper, value) {\n    for (; value > 127;) {\n      generatorWrapper.entryIdCounter.push(value & 127 | 128);\n      value >>>= 7;\n    }\n    generatorWrapper.entryIdCounter.push(value);\n  };\n  var writeVarint64 = function (generatorWrapper, value) {\n    if (value >= 0) {\n      writeVarint(generatorWrapper, value);\n    } else {\n      for (var CustomMap = 0; CustomMap < 9; CustomMap++) {\n        generatorWrapper.entryIdCounter.push(value & 127 | 128);\n        value >>= 7;\n      }\n      generatorWrapper.entryIdCounter.push(1);\n    }\n  };\n  var writeBytes = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter.push(value >>> 0 & 255);\n    generatorWrapper.entryIdCounter.push(value >>> 8 & 255);\n    generatorWrapper.entryIdCounter.push(value >>> 16 & 255);\n    generatorWrapper.entryIdCounter.push(value >>> 24 & 255);\n  };\n  var ProtobufWriter = function () {\n    this.setTimeoutWrapper = [];\n    this.tasks = 0;\n    this.entryIdCounter = new ByteArray();\n  };\n  var appendBuffer = function (generatorWrapper, value) {\n    if (value.length !== 0) {\n      generatorWrapper.setTimeoutWrapper.push(value);\n      generatorWrapper.tasks += value.length;\n    }\n  };\n  var finalizeAndAppendBuffer = function (generatorWrapper, value) {\n    writeFieldHeader(generatorWrapper, value, 2);\n    value = generatorWrapper.entryIdCounter.end();\n    appendBuffer(generatorWrapper, value);\n    value.push(generatorWrapper.tasks);\n    return value;\n  };\n  var updateLengthPrefix = function (generatorWrapper, value) {\n    var CustomMap = value.pop();\n    for (CustomMap = generatorWrapper.tasks + generatorWrapper.entryIdCounter.length() - CustomMap; CustomMap > 127;) {\n      value.push(CustomMap & 127 | 128);\n      CustomMap >>>= 7;\n      generatorWrapper.tasks++;\n    }\n    value.push(CustomMap);\n    generatorWrapper.tasks++;\n  };\n  var writeFieldHeader = function (generatorWrapper, value, CustomMap) {\n    writeVarint(generatorWrapper.entryIdCounter, 8 * value + CustomMap);\n  };\n  var writeBytesField = function (generatorWrapper, value, CustomMap) {\n    writeFieldHeader(generatorWrapper, value, 2);\n    writeVarint(generatorWrapper.entryIdCounter, CustomMap.length);\n    appendBuffer(generatorWrapper, generatorWrapper.entryIdCounter.end());\n    appendBuffer(generatorWrapper, CustomMap);\n  };\n  var CustomError = function (generatorWrapper, value) {\n    this.entryIdCounter = generatorWrapper;\n    this.checkIfFrozen = value;\n  };\n  function toArray(generatorWrapper) {\n    return Array.prototype.slice.call(generatorWrapper);\n  }\n  function generateSymbol(generatorWrapper) {\n    if (typeof Symbol === \"function\" && typeof Symbol() === \"symbol\") {\n      return Symbol();\n    } else {\n      return generatorWrapper;\n    }\n  }\n  var uniqueSymbol = generateSymbol();\n  var customProperty1 = generateSymbol(\"0di\");\n  var customProperty2 = generateSymbol(\"2ex\");\n  var customProperty3 = generateSymbol(\"0dg\");\n  var setCustomProperty = uniqueSymbol ? function (generatorWrapper, value) {\n    generatorWrapper[uniqueSymbol] |= value;\n  } : function (generatorWrapper, value) {\n    if (undefined !== generatorWrapper.GeneratorFunctionConstructor) {\n      generatorWrapper.GeneratorFunctionConstructor |= value;\n    } else {\n      Object.defineProperties(generatorWrapper, {\n        GeneratorFunctionConstructor: {\n          value: value,\n          configurable: true,\n          writable: true,\n          enumerable: false\n        }\n      });\n    }\n  };\n  var clearBitFlag = uniqueSymbol ? function (generatorWrapper, value) {\n    generatorWrapper[uniqueSymbol] &= ~value;\n  } : function (generatorWrapper, value) {\n    if (undefined !== generatorWrapper.GeneratorFunctionConstructor) {\n      generatorWrapper.GeneratorFunctionConstructor &= ~value;\n    }\n  };\n  function toggleBitFlag(generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      return generatorWrapper | value;\n    } else {\n      return generatorWrapper & ~value;\n    }\n  }\n  var getBitFlags = uniqueSymbol ? function (generatorWrapper) {\n    return generatorWrapper[uniqueSymbol] | 0;\n  } : function (generatorWrapper) {\n    return generatorWrapper.GeneratorFunctionConstructor | 0;\n  };\n  var getRawBitFlags = uniqueSymbol ? function (generatorWrapper) {\n    return generatorWrapper[uniqueSymbol];\n  } : function (generatorWrapper) {\n    return generatorWrapper.GeneratorFunctionConstructor;\n  };\n  var setRawBitFlags = uniqueSymbol ? function (generatorWrapper, value) {\n    generatorWrapper[uniqueSymbol] = value;\n    return generatorWrapper;\n  } : function (generatorWrapper, value) {\n    if (undefined !== generatorWrapper.GeneratorFunctionConstructor) {\n      generatorWrapper.GeneratorFunctionConstructor = value;\n    } else {\n      Object.defineProperties(generatorWrapper, {\n        GeneratorFunctionConstructor: {\n          value: value,\n          configurable: true,\n          writable: true,\n          enumerable: false\n        }\n      });\n    }\n    return generatorWrapper;\n  };\n  function setFlag34(generatorWrapper) {\n    setCustomProperty(generatorWrapper, 34);\n    return generatorWrapper;\n  }\n  function setFlag32(generatorWrapper) {\n    setCustomProperty(generatorWrapper, 32);\n    return generatorWrapper;\n  }\n  function clear14591Flag(generatorWrapper, value) {\n    setRawBitFlags(value, (generatorWrapper | 0) & -14591);\n  }\n  function set34Clear14557Flag(generatorWrapper, value) {\n    setRawBitFlags(value, (generatorWrapper | 34) & -14557);\n  }\n  function get1023Shifted(generatorWrapper) {\n    generatorWrapper = generatorWrapper >> 14 & 1023;\n    if (generatorWrapper === 0) {\n      return 536870912;\n    } else {\n      return generatorWrapper;\n    }\n  }\n  var emptyObject1 = {};\n  var emptyObject2 = {};\n  function isObjectWithId(generatorWrapper) {\n    return !(!generatorWrapper || typeof generatorWrapper !== \"object\" || generatorWrapper.booleanFlagTransformation !== emptyObject2);\n  }\n  function isPlainObject(generatorWrapper) {\n    return generatorWrapper !== null && typeof generatorWrapper === \"object\" && !Array.isArray(generatorWrapper) && generatorWrapper.constructor === Object;\n  }\n  var undefinedVariable1;\n  function undefinedFunction1(generatorWrapper, value, CustomMap) {\n    if (!Array.isArray(generatorWrapper) || generatorWrapper.length) {\n      return false;\n    }\n    var findEntry = getBitFlags(generatorWrapper);\n    if (findEntry & 1) {\n      return true;\n    }\n    if (!(value && (Array.isArray(value) ? value.includes(CustomMap) : value.has(CustomMap)))) {\n      return false;\n    }\n    setRawBitFlags(generatorWrapper, findEntry | 1);\n    return true;\n  }\n  var frozenArray,\n    emptyArray = [];\n  setRawBitFlags(emptyArray, 55);\n  frozenArray = Object.freeze(emptyArray);\n  function throwIfFlag2(generatorWrapper) {\n    if (generatorWrapper & 2) {\n      throw Error();\n    }\n  }\n  var IteratorWithTransform = function (generatorWrapper, value, CustomMap) {\n    this.setTimeoutWrapper = 0;\n    this.entryIdCounter = generatorWrapper;\n    this.tasks = value;\n    this.createDeferred = CustomMap;\n  };\n  IteratorWithTransform.prototype.next = function () {\n    if (this.setTimeoutWrapper < this.entryIdCounter.length) {\n      var generatorWrapper = this.entryIdCounter[this.setTimeoutWrapper++];\n      return {\n        done: false,\n        value: this.tasks ? this.tasks.call(this.createDeferred, generatorWrapper) : generatorWrapper\n      };\n    }\n    return {\n      done: true,\n      value: undefined\n    };\n  };\n  IteratorWithTransform.prototype[Symbol.iterator] = function () {\n    return new IteratorWithTransform(this.entryIdCounter, this.tasks, this.createDeferred);\n  };\n  Object.freeze(new function () {}());\n  Object.freeze(new function () {}());\n  var setErrorContext = function (generatorWrapper, value) {\n    if (!generatorWrapper.__closure__error__context__984382) {\n      generatorWrapper.__closure__error__context__984382 = {};\n    }\n    generatorWrapper.__closure__error__context__984382.severity = value;\n  };\n  var undefinedVariable2;\n  function throwIncidentError() {\n    var generatorWrapper = Error();\n    setErrorContext(generatorWrapper, \"incident\");\n    deferError(generatorWrapper);\n  }\n  function createWarningError(generatorWrapper) {\n    generatorWrapper = Error(generatorWrapper);\n    setErrorContext(generatorWrapper, \"warning\");\n    return generatorWrapper;\n  }\n  function parseNumericValue(generatorWrapper) {\n    if (generatorWrapper == null || typeof generatorWrapper === \"number\") {\n      return generatorWrapper;\n    }\n    if (generatorWrapper === \"NaN\" || generatorWrapper === \"Infinity\" || generatorWrapper === \"-Infinity\") {\n      return Number(generatorWrapper);\n    }\n  }\n  function assertBoolean(generatorWrapper) {\n    if (typeof generatorWrapper !== \"boolean\") {\n      throw Error(\"Expected boolean but got \" + getType(generatorWrapper) + \": \" + generatorWrapper);\n    }\n    return generatorWrapper;\n  }\n  function parseNullableBoolean(generatorWrapper) {\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    } else {\n      return assertBoolean(generatorWrapper);\n    }\n  }\n  function parseBooleanOrNumber(generatorWrapper) {\n    if (generatorWrapper == null || typeof generatorWrapper === \"boolean\") {\n      return generatorWrapper;\n    }\n    if (typeof generatorWrapper === \"number\") {\n      return !!generatorWrapper;\n    }\n  }\n  var numericStringRegex = /^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/;\n  function isNumericString(generatorWrapper) {\n    var value = typeof generatorWrapper;\n    if (value === \"number\") {\n      return Number.isFinite(generatorWrapper);\n    } else {\n      if (value !== \"string\") {\n        return false;\n      } else {\n        return numericStringRegex.test(generatorWrapper);\n      }\n    }\n  }\n  function parseIntEnum(generatorWrapper) {\n    if (!Number.isFinite(generatorWrapper)) {\n      throw createWarningError(\"enum\");\n    }\n    return generatorWrapper | 0;\n  }\n  function parseNullableIntEnum(generatorWrapper) {\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    } else {\n      return parseIntEnum(generatorWrapper);\n    }\n  }\n  function parseNullableInt(generatorWrapper) {\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    } else {\n      if (Number.isFinite(generatorWrapper)) {\n        return generatorWrapper | 0;\n      } else {\n        return undefined;\n      }\n    }\n  }\n  function parseInt32(generatorWrapper) {\n    if (typeof generatorWrapper !== \"number\") {\n      throw createWarningError(\"int32\");\n    }\n    if (!Number.isFinite(generatorWrapper)) {\n      throw createWarningError(\"int32\");\n    }\n    return generatorWrapper | 0;\n  }\n  function parseNullableInt32(generatorWrapper) {\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    }\n    if (typeof generatorWrapper === \"string\") {\n      if (!generatorWrapper) {\n        return;\n      }\n      generatorWrapper = +generatorWrapper;\n    }\n    if (typeof generatorWrapper === \"number\") {\n      if (Number.isFinite(generatorWrapper)) {\n        return generatorWrapper | 0;\n      } else {\n        return undefined;\n      }\n    }\n  }\n  function parseNullableUInt32(generatorWrapper) {\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    }\n    if (typeof generatorWrapper === \"string\") {\n      if (!generatorWrapper) {\n        return;\n      }\n      generatorWrapper = +generatorWrapper;\n    }\n    if (typeof generatorWrapper === \"number\") {\n      if (Number.isFinite(generatorWrapper)) {\n        return generatorWrapper >>> 0;\n      } else {\n        return undefined;\n      }\n    }\n  }\n  function convertToInt64(generatorWrapper) {\n    if (generatorWrapper != null) {\n      var value = !!value;\n      if (!isNumericString(generatorWrapper)) {\n        throw createWarningError(\"int64\");\n      }\n      if (typeof generatorWrapper === \"string\") {\n        generatorWrapper = convertStringToInt64(generatorWrapper);\n      } else if (value) {\n        generatorWrapper = convertNumberToString(generatorWrapper);\n      } else {\n        generatorWrapper = convertSafeInteger(generatorWrapper);\n      }\n    }\n    return generatorWrapper;\n  }\n  function isPositiveInt64(generatorWrapper) {\n    if (generatorWrapper[0] === \"-\") {\n      return false;\n    } else {\n      if (generatorWrapper.length < 20) {\n        return true;\n      } else {\n        return generatorWrapper.length === 20 && Number(generatorWrapper.substring(0, 6)) < 184467;\n      }\n    }\n  }\n  function isValidInt64Range(generatorWrapper) {\n    if (generatorWrapper[0] === \"-\") {\n      if (generatorWrapper.length < 20) {\n        return true;\n      } else {\n        return generatorWrapper.length === 20 && -922337 < Number(generatorWrapper.substring(0, 7));\n      }\n    } else {\n      if (generatorWrapper.length < 19) {\n        return true;\n      } else {\n        return generatorWrapper.length === 19 && Number(generatorWrapper.substring(0, 6)) < 922337;\n      }\n    }\n  }\n  function normalizeNumber(generatorWrapper) {\n    if (generatorWrapper < 0) {\n      calculateIntegers(generatorWrapper);\n      var value = formatLongNumber(lowOrderInteger, highOrderInteger);\n      generatorWrapper = Number(value);\n      if (Number.isSafeInteger(generatorWrapper)) {\n        return generatorWrapper;\n      } else {\n        return value;\n      }\n    }\n    if (isPositiveInt64(String(generatorWrapper))) {\n      return generatorWrapper;\n    }\n    calculateIntegers(generatorWrapper);\n    return 4294967296 * highOrderInteger + (lowOrderInteger >>> 0);\n  }\n  function convertSafeInteger(generatorWrapper) {\n    generatorWrapper = Math.trunc(generatorWrapper);\n    if (!Number.isSafeInteger(generatorWrapper)) {\n      calculateIntegers(generatorWrapper);\n      var value = lowOrderInteger;\n      var CustomMap = highOrderInteger;\n      if (generatorWrapper = CustomMap & 2147483648) {\n        value = ~value + 1 >>> 0;\n        CustomMap = ~CustomMap >>> 0;\n        if (value == 0) {\n          CustomMap = CustomMap + 1 >>> 0;\n        }\n      }\n      value = 4294967296 * CustomMap + (value >>> 0);\n      if (generatorWrapper) {\n        generatorWrapper = -value;\n      } else {\n        generatorWrapper = value;\n      }\n    }\n    return generatorWrapper;\n  }\n  function convertNumberToString(generatorWrapper) {\n    generatorWrapper = Math.trunc(generatorWrapper);\n    if (Number.isSafeInteger(generatorWrapper)) {\n      generatorWrapper = String(generatorWrapper);\n    } else {\n      var value = String(generatorWrapper);\n      if (isValidInt64Range(value)) {\n        generatorWrapper = value;\n      } else {\n        calculateIntegers(generatorWrapper);\n        generatorWrapper = getFormattedNumber();\n      }\n    }\n    return generatorWrapper;\n  }\n  function convertStringToInt64(generatorWrapper) {\n    var value = Math.trunc(Number(generatorWrapper));\n    if (Number.isSafeInteger(value)) {\n      return String(value);\n    }\n    value = generatorWrapper.indexOf(\".\");\n    if (-1 !== value) {\n      generatorWrapper = generatorWrapper.substring(0, value);\n    }\n    if (!isValidInt64Range(generatorWrapper)) {\n      parseAndSetBigIntegers(generatorWrapper);\n      generatorWrapper = getFormattedNumber();\n    }\n    return generatorWrapper;\n  }\n  function ensureString(generatorWrapper) {\n    if (typeof generatorWrapper !== \"string\") {\n      throw Error();\n    }\n    return generatorWrapper;\n  }\n  function optionalString(generatorWrapper) {\n    if (generatorWrapper != null && typeof generatorWrapper !== \"string\") {\n      throw Error();\n    }\n    return generatorWrapper;\n  }\n  function stringOrNull(generatorWrapper) {\n    if (generatorWrapper == null || typeof generatorWrapper === \"string\") {\n      return generatorWrapper;\n    } else {\n      return undefined;\n    }\n  }\n  function createObjectOrUndefined(generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper != null && typeof generatorWrapper === \"object\" && generatorWrapper.emptyObject2 === emptyObject1) {\n      return generatorWrapper;\n    }\n    if (!Array.isArray(generatorWrapper)) {\n      if (CustomMap) {\n        if (findEntry & 2) {\n          return getSingletonInstance(value);\n        } else {\n          return new value();\n        }\n      } else {\n        return undefined;\n      }\n    }\n    var iterateEntries = CustomMap = getBitFlags(generatorWrapper);\n    if (iterateEntries === 0) {\n      iterateEntries |= findEntry & 32;\n    }\n    iterateEntries |= findEntry & 2;\n    if (iterateEntries !== CustomMap) {\n      setRawBitFlags(generatorWrapper, iterateEntries);\n    }\n    return new value(generatorWrapper);\n  }\n  function getSingletonInstance(generatorWrapper) {\n    var value = generatorWrapper[customProperty1];\n    if (value) {\n      return value;\n    }\n    value = new generatorWrapper();\n    setFlag34(value.getSingletonInstance);\n    return generatorWrapper[customProperty1] = value;\n  }\n  function getValidatedDataOrUndefined(generatorWrapper, value, CustomMap) {\n    if (value) {\n      return assertBoolean(generatorWrapper);\n    }\n    var findEntry;\n    if ((findEntry = parseBooleanOrNumber(generatorWrapper)) != null) {\n      return findEntry;\n    } else {\n      if (CustomMap) {\n        return false;\n      } else {\n        return undefined;\n      }\n    }\n  }\n  function getStringOrEmpty(generatorWrapper, value, CustomMap) {\n    if (value) {\n      return ensureString(generatorWrapper);\n    }\n    var findEntry;\n    if ((findEntry = stringOrNull(generatorWrapper)) != null) {\n      return findEntry;\n    } else {\n      if (CustomMap) {\n        return \"\";\n      } else {\n        return undefined;\n      }\n    }\n  }\n  var temporaryData;\n  function createInstanceWithTemporaryData(generatorWrapper, value) {\n    temporaryData = value;\n    generatorWrapper = new generatorWrapper(value);\n    temporaryData = undefined;\n    return generatorWrapper;\n  }\n  var booleanArrayCache, zeroValueArrayCache;\n  function convertToTuple(generatorWrapper) {\n    switch (typeof generatorWrapper) {\n      case \"boolean\":\n        return booleanArrayCache || (booleanArrayCache = [0, undefined, true]);\n      case \"number\":\n        if (generatorWrapper > 0) {\n          return undefined;\n        } else {\n          if (generatorWrapper === 0) {\n            return zeroValueArrayCache || (zeroValueArrayCache = [0, undefined]);\n          } else {\n            return [-generatorWrapper, undefined];\n          }\n        }\n      case \"string\":\n        return [0, generatorWrapper];\n      case \"object\":\n        return generatorWrapper;\n    }\n  }\n  function onFulfilled(generatorWrapper, value, CustomMap) {\n    if (generatorWrapper == null) {\n      generatorWrapper = temporaryData;\n    }\n    temporaryData = undefined;\n    if (generatorWrapper == null) {\n      var findEntry = 96;\n      if (CustomMap) {\n        generatorWrapper = [CustomMap];\n        findEntry |= 512;\n      } else {\n        generatorWrapper = [];\n      }\n      if (value) {\n        findEntry = findEntry & -16760833 | (value & 1023) << 14;\n      }\n    } else {\n      if (!Array.isArray(generatorWrapper)) {\n        throw Error(\"narr\");\n      }\n      findEntry = getBitFlags(generatorWrapper);\n      if (findEntry & 2048) {\n        throw Error(\"farr\");\n      }\n      if (findEntry & 64) {\n        return generatorWrapper;\n      }\n      findEntry |= 64;\n      if (CustomMap && (findEntry |= 512, CustomMap !== generatorWrapper[0])) {\n        throw Error(\"mid\");\n      }\n      generatorWrapper: {\n        CustomMap = generatorWrapper;\n        var iterateEntries = CustomMap.length;\n        if (iterateEntries) {\n          var createCircularNode = iterateEntries - 1;\n          if (isPlainObject(CustomMap[createCircularNode])) {\n            findEntry |= 256;\n            value = createCircularNode - (+!!(findEntry & 512) - 1);\n            if (value >= 1024) {\n              throw Error(\"pvtlmt\");\n            }\n            findEntry = findEntry & -16760833 | (value & 1023) << 14;\n            break generatorWrapper;\n          }\n        }\n        if (value) {\n          value = Math.max(value, iterateEntries - (+!!(findEntry & 512) - 1));\n          if (value > 1024) {\n            throw Error(\"spvt\");\n          }\n          findEntry = findEntry & -16760833 | (value & 1023) << 14;\n        }\n      }\n    }\n    setRawBitFlags(generatorWrapper, findEntry);\n    return generatorWrapper;\n  }\n  var polyfillCheckCache = {};\n  var requiresPolyfill = function () {\n    try {\n      var generatorWrapper = function () {\n        return constructReflect(Map, [], this.constructor);\n      };\n      inheritPrototype(generatorWrapper, Map);\n      noopFunction(new generatorWrapper());\n      return false;\n    } catch (value) {\n      return true;\n    }\n  }();\n  var CustomMap = function () {\n    this.entryIdCounter = new Map();\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.get = function (generatorWrapper) {\n    return this.entryIdCounter.get(generatorWrapper);\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    this.entryIdCounter.set(generatorWrapper, value);\n    this.size = this.entryIdCounter.size;\n    return this;\n  };\n  setTimeoutWrapper.delete = function (generatorWrapper) {\n    generatorWrapper = this.entryIdCounter.delete(generatorWrapper);\n    this.size = this.entryIdCounter.size;\n    return generatorWrapper;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.entryIdCounter.clearAll();\n    this.size = this.entryIdCounter.size;\n  };\n  setTimeoutWrapper.has = function (generatorWrapper) {\n    return this.entryIdCounter.has(generatorWrapper);\n  };\n  setTimeoutWrapper.entries = function () {\n    return this.entryIdCounter.entries();\n  };\n  setTimeoutWrapper.keys = function () {\n    return this.entryIdCounter.keys();\n  };\n  setTimeoutWrapper.values = function () {\n    return this.entryIdCounter.values();\n  };\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    return this.entryIdCounter.forEach(generatorWrapper, value);\n  };\n  CustomMap.prototype[Symbol.iterator] = function () {\n    return this.entries();\n  };\n  var PolyfilledMap = function () {\n    if (requiresPolyfill) {\n      Object.setPrototypeOf(CustomMap.prototype, Map.prototype);\n      Object.defineProperties(CustomMap.prototype, {\n        size: {\n          value: 0,\n          configurable: true,\n          enumerable: true,\n          writable: true\n        }\n      });\n      return CustomMap;\n    }\n    var generatorWrapper = function () {\n      return constructReflect(Map, [], this.constructor);\n    };\n    inheritPrototype(generatorWrapper, Map);\n    return generatorWrapper;\n  }();\n  function identityFunction(generatorWrapper) {\n    return generatorWrapper;\n  }\n  var EnhancedMap = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = identityFunction;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = identityFunction;\n    } else {\n      findEntry = findEntry;\n    }\n    var iterateEntries = PolyfilledMap.call(this) || this;\n    var createCircularNode = getBitFlags(generatorWrapper);\n    createCircularNode |= 64;\n    setRawBitFlags(generatorWrapper, createCircularNode);\n    iterateEntries.mapElements = createCircularNode;\n    iterateEntries.ProtobufWriter = value;\n    iterateEntries.keyTransformFunction = CustomMap;\n    if (iterateEntries.ProtobufWriter) {\n      iterateEntries.convertToInt64 = TransformValue;\n    } else {\n      iterateEntries.convertToInt64 = findEntry;\n    }\n    for (var entryIdCounter = 0; entryIdCounter < generatorWrapper.length; entryIdCounter++) {\n      var key = generatorWrapper[entryIdCounter];\n      var value = CustomMap(key[0], false, true);\n      var entry = key[1];\n      if (value) {\n        if (undefined === entry) {\n          entry = null;\n        }\n      } else {\n        entry = findEntry(key[1], false, true, undefined, undefined, createCircularNode);\n      }\n      PolyfilledMap.prototype.set.call(iterateEntries, value, entry);\n    }\n    return iterateEntries;\n  };\n  inheritPrototype(EnhancedMap, PolyfilledMap);\n  var EnsureMutable = function (generatorWrapper) {\n    if (generatorWrapper.mapElements & 2) {\n      throw Error(\"Cannot mutate an immutable Map\");\n    }\n  };\n  var TransformMapEntries = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = IdentityTransform;\n    } else {\n      value = value;\n    }\n    if (generatorWrapper.size !== 0) {\n      return TransformEntries(generatorWrapper, value);\n    }\n  };\n  var TransformEntries = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = IdentityTransform;\n    } else {\n      value = value;\n    }\n    var CustomMap = [];\n    generatorWrapper = PolyfilledMap.prototype.entr",
  "Flags(generatorWrapper, iterateEntries);\n    }\n    return new value(generatorWrapper);\n  }\n  function getSingletonInstance(generatorWrapper) {\n    var value = generatorWrapper[customProperty1];\n    if (value) {\n      return value;\n    }\n    value = new generatorWrapper();\n    setFlag34(value.getSingletonInstance);\n    return generatorWrapper[customProperty1] = value;\n  }\n  function getValidatedDataOrUndefined(generatorWrapper, value, CustomMap) {\n    if (value) {\n      return assertBoolean(generatorWrapper);\n    }\n    var findEntry;\n    if ((findEntry = parseBooleanOrNumber(generatorWrapper)) != null) {\n      return findEntry;\n    } else {\n      if (CustomMap) {\n        return false;\n      } else {\n        return undefined;\n      }\n    }\n  }\n  function getStringOrEmpty(generatorWrapper, value, CustomMap) {\n    if (value) {\n      return ensureString(generatorWrapper);\n    }\n    var findEntry;\n    if ((findEntry = stringOrNull(generatorWrapper)) != null) {\n      return findEntry;\n    } else {\n      if (CustomMap) {\n        return \"\";\n      } else {\n        return undefined;\n      }\n    }\n  }\n  var temporaryData;\n  function createInstanceWithTemporaryData(generatorWrapper, value) {\n    temporaryData = value;\n    generatorWrapper = new generatorWrapper(value);\n    temporaryData = undefined;\n    return generatorWrapper;\n  }\n  var booleanArrayCache, zeroValueArrayCache;\n  function convertToTuple(generatorWrapper) {\n    switch (typeof generatorWrapper) {\n      case \"boolean\":\n        return booleanArrayCache || (booleanArrayCache = [0, undefined, true]);\n      case \"number\":\n        if (generatorWrapper > 0) {\n          return undefined;\n        } else {\n          if (generatorWrapper === 0) {\n            return zeroValueArrayCache || (zeroValueArrayCache = [0, undefined]);\n          } else {\n            return [-generatorWrapper, undefined];\n          }\n        }\n      case \"string\":\n        return [0, generatorWrapper];\n      case \"object\":\n        return generatorWrapper;\n    }\n  }\n  function onFulfilled(generatorWrapper, value, CustomMap) {\n    if (generatorWrapper == null) {\n      generatorWrapper = temporaryData;\n    }\n    temporaryData = undefined;\n    if (generatorWrapper == null) {\n      var findEntry = 96;\n      if (CustomMap) {\n        generatorWrapper = [CustomMap];\n        findEntry |= 512;\n      } else {\n        generatorWrapper = [];\n      }\n      if (value) {\n        findEntry = findEntry & -16760833 | (value & 1023) << 14;\n      }\n    } else {\n      if (!Array.isArray(generatorWrapper)) {\n        throw Error(\"narr\");\n      }\n      findEntry = getBitFlags(generatorWrapper);\n      if (findEntry & 2048) {\n        throw Error(\"farr\");\n      }\n      if (findEntry & 64) {\n        return generatorWrapper;\n      }\n      findEntry |= 64;\n      if (CustomMap && (findEntry |= 512, CustomMap !== generatorWrapper[0])) {\n        throw Error(\"mid\");\n      }\n      generatorWrapper: {\n        CustomMap = generatorWrapper;\n        var iterateEntries = CustomMap.length;\n        if (iterateEntries) {\n          var createCircularNode = iterateEntries - 1;\n          if (isPlainObject(CustomMap[createCircularNode])) {\n            findEntry |= 256;\n            value = createCircularNode - (+!!(findEntry & 512) - 1);\n            if (value >= 1024) {\n              throw Error(\"pvtlmt\");\n            }\n            findEntry = findEntry & -16760833 | (value & 1023) << 14;\n            break generatorWrapper;\n          }\n        }\n        if (value) {\n          value = Math.max(value, iterateEntries - (+!!(findEntry & 512) - 1));\n          if (value > 1024) {\n            throw Error(\"spvt\");\n          }\n          findEntry = findEntry & -16760833 | (value & 1023) << 14;\n        }\n      }\n    }\n    setRawBitFlags(generatorWrapper, findEntry);\n    return generatorWrapper;\n  }\n  var polyfillCheckCache = {};\n  var requiresPolyfill = function () {\n    try {\n      var generatorWrapper = function () {\n        return constructReflect(Map, [], this.constructor);\n      };\n      inheritPrototype(generatorWrapper, Map);\n      noopFunction(new generatorWrapper());\n      return false;\n    } catch (value) {\n      return true;\n    }\n  }();\n  var CustomMap = function () {\n    this.entryIdCounter = new Map();\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.get = function (generatorWrapper) {\n    return this.entryIdCounter.get(generatorWrapper);\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    this.entryIdCounter.set(generatorWrapper, value);\n    this.size = this.entryIdCounter.size;\n    return this;\n  };\n  setTimeoutWrapper.delete = function (generatorWrapper) {\n    generatorWrapper = this.entryIdCounter.delete(generatorWrapper);\n    this.size = this.entryIdCounter.size;\n    return generatorWrapper;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.entryIdCounter.clearAll();\n    this.size = this.entryIdCounter.size;\n  };\n  setTimeoutWrapper.has = function (generatorWrapper) {\n    return this.entryIdCounter.has(generatorWrapper);\n  };\n  setTimeoutWrapper.entries = function () {\n    return this.entryIdCounter.entries();\n  };\n  setTimeoutWrapper.keys = function () {\n    return this.entryIdCounter.keys();\n  };\n  setTimeoutWrapper.values = function () {\n    return this.entryIdCounter.values();\n  };\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    return this.entryIdCounter.forEach(generatorWrapper, value);\n  };\n  CustomMap.prototype[Symbol.iterator] = function () {\n    return this.entries();\n  };\n  var PolyfilledMap = function () {\n    if (requiresPolyfill) {\n      Object.setPrototypeOf(CustomMap.prototype, Map.prototype);\n      Object.defineProperties(CustomMap.prototype, {\n        size: {\n          value: 0,\n          configurable: true,\n          enumerable: true,\n          writable: true\n        }\n      });\n      return CustomMap;\n    }\n    var generatorWrapper = function () {\n      return constructReflect(Map, [], this.constructor);\n    };\n    inheritPrototype(generatorWrapper, Map);\n    return generatorWrapper;\n  }();\n  function identityFunction(generatorWrapper) {\n    return generatorWrapper;\n  }\n  var EnhancedMap = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = identityFunction;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = identityFunction;\n    } else {\n      findEntry = findEntry;\n    }\n    var iterateEntries = PolyfilledMap.call(this) || this;\n    var createCircularNode = getBitFlags(generatorWrapper);\n    createCircularNode |= 64;\n    setRawBitFlags(generatorWrapper, createCircularNode);\n    iterateEntries.mapElements = createCircularNode;\n    iterateEntries.ProtobufWriter = value;\n    iterateEntries.keyTransformFunction = CustomMap;\n    if (iterateEntries.ProtobufWriter) {\n      iterateEntries.convertToInt64 = TransformValue;\n    } else {\n      iterateEntries.convertToInt64 = findEntry;\n    }\n    for (var entryIdCounter = 0; entryIdCounter < generatorWrapper.length; entryIdCounter++) {\n      var key = generatorWrapper[entryIdCounter];\n      var value = CustomMap(key[0], false, true);\n      var entry = key[1];\n      if (value) {\n        if (undefined === entry) {\n          entry = null;\n        }\n      } else {\n        entry = findEntry(key[1], false, true, undefined, undefined, createCircularNode);\n      }\n      PolyfilledMap.prototype.set.call(iterateEntries, value, entry);\n    }\n    return iterateEntries;\n  };\n  inheritPrototype(EnhancedMap, PolyfilledMap);\n  var EnsureMutable = function (generatorWrapper) {\n    if (generatorWrapper.mapElements & 2) {\n      throw Error(\"Cannot mutate an immutable Map\");\n    }\n  };\n  var TransformMapEntries = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = IdentityTransform;\n    } else {\n      value = value;\n    }\n    if (generatorWrapper.size !== 0) {\n      return TransformEntries(generatorWrapper, value);\n    }\n  };\n  var TransformEntries = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = IdentityTransform;\n    } else {\n      value = value;\n    }\n    var CustomMap = [];\n    generatorWrapper = PolyfilledMap.prototype.entries.call(generatorWrapper);\n    for (var findEntry; !(findEntry = generatorWrapper.next()).done;) {\n      findEntry = findEntry.value;\n      findEntry[0] = value(findEntry[0]);\n      findEntry[1] = value(findEntry[1]);\n      CustomMap.push(findEntry);\n    }\n    return CustomMap;\n  };\n  setTimeoutWrapper = EnhancedMap.prototype;\n  setTimeoutWrapper.clearAll = function () {\n    EnsureMutable(this);\n    PolyfilledMap.prototype.clearAll.call(this);\n  };\n  setTimeoutWrapper.delete = function (generatorWrapper) {\n    EnsureMutable(this);\n    return PolyfilledMap.prototype.delete.call(this, this.keyTransformFunction(generatorWrapper, true, false));\n  };\n  setTimeoutWrapper.entries = function () {\n    var generatorWrapper = Array.from(PolyfilledMap.prototype.keys.call(this));\n    return new IteratorWithTransform(generatorWrapper, CreateKeyValuePair, this);\n  };\n  setTimeoutWrapper.keys = function () {\n    return PolyfilledMap.prototype.keys.call(this);\n  };\n  setTimeoutWrapper.values = function () {\n    var generatorWrapper = Array.from(PolyfilledMap.prototype.keys.call(this));\n    return new IteratorWithTransform(generatorWrapper, EnhancedMap.prototype.get, this);\n  };\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    var CustomMap = this;\n    PolyfilledMap.prototype.forEach.call(this, function (findEntry, iterateEntries) {\n      generatorWrapper.call(value, CustomMap.get(iterateEntries), iterateEntries, CustomMap);\n    });\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    EnsureMutable(this);\n    generatorWrapper = this.keyTransformFunction(generatorWrapper, true, false);\n    if (generatorWrapper == null) {\n      return this;\n    } else {\n      if (value == null) {\n        PolyfilledMap.prototype.delete.call(this, generatorWrapper);\n        return this;\n      } else {\n        return PolyfilledMap.prototype.set.call(this, generatorWrapper, this.convertToInt64(value, true, true, this.ProtobufWriter, false, this.mapElements));\n      }\n    }\n  };\n  setTimeoutWrapper.has = function (generatorWrapper) {\n    return PolyfilledMap.prototype.has.call(this, this.keyTransformFunction(generatorWrapper, false, false));\n  };\n  setTimeoutWrapper.get = function (generatorWrapper) {\n    generatorWrapper = this.keyTransformFunction(generatorWrapper, false, false);\n    var value = PolyfilledMap.prototype.get.call(this, generatorWrapper);\n    if (undefined !== value) {\n      var CustomMap = this.ProtobufWriter;\n      if (CustomMap) {\n        CustomMap = this.convertToInt64(value, false, true, CustomMap, this.modifyAdProperty, this.mapElements);\n        if (CustomMap !== value) {\n          PolyfilledMap.prototype.set.call(this, generatorWrapper, CustomMap);\n        }\n        return CustomMap;\n      } else {\n        return value;\n      }\n    }\n  };\n  EnhancedMap.prototype[Symbol.iterator] = function () {\n    return this.entries();\n  };\n  EnhancedMap.prototype.toJSON = undefined;\n  EnhancedMap.prototype.booleanFlagTransformation = emptyObject2;\n  function TransformValue(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    generatorWrapper = createObjectOrUndefined(generatorWrapper, findEntry, CustomMap, createCircularNode);\n    if (iterateEntries) {\n      generatorWrapper = cloneIfNotFrozen(generatorWrapper);\n    }\n    return generatorWrapper;\n  }\n  function IdentityTransform(generatorWrapper) {\n    return generatorWrapper;\n  }\n  function CreateKeyValuePair(generatorWrapper) {\n    return [generatorWrapper, this.get(generatorWrapper)];\n  }\n  var singletonInstance;\n  function getSingletonInstance() {\n    return singletonInstance || (singletonInstance = new EnhancedMap(setFlag34([]), undefined, undefined, undefined, polyfillCheckCache));\n  }\n  function transformKeyOrValue(generatorWrapper, value) {\n    return SerializeValue(value);\n  }\n  function SerializeValue(generatorWrapper) {\n    switch (typeof generatorWrapper) {\n      case \"number\":\n        if (isFinite(generatorWrapper)) {\n          return generatorWrapper;\n        } else {\n          return String(generatorWrapper);\n        }\n      case \"boolean\":\n        if (generatorWrapper) {\n          return 1;\n        } else {\n          return 0;\n        }\n      case \"object\":\n        if (generatorWrapper) {\n          if (Array.isArray(generatorWrapper)) {\n            if (undefinedFunction1(generatorWrapper, undefined, 0)) {\n              return;\n            }\n          } else {\n            if (supportsUint8Array && generatorWrapper != null && generatorWrapper instanceof Uint8Array) {\n              if (supportsBtoa) {\n                for (var value = \"\", CustomMap = 0, findEntry = generatorWrapper.length - 10240; CustomMap < findEntry;) {\n                  value += String.fromCharCode.apply(null, generatorWrapper.subarray(CustomMap, CustomMap += 10240));\n                }\n                value += String.fromCharCode.apply(null, CustomMap ? generatorWrapper.subarray(CustomMap) : generatorWrapper);\n                generatorWrapper = btoa(value);\n              } else {\n                generatorWrapper = base64Encode(generatorWrapper);\n              }\n              return generatorWrapper;\n            }\n            if (generatorWrapper instanceof EnhancedMap) {\n              return TransformMapEntries(generatorWrapper);\n            }\n          }\n        }\n    }\n    return generatorWrapper;\n  }\n  function TransformArguments(generatorWrapper, value, CustomMap) {\n    generatorWrapper = toArray(generatorWrapper);\n    var findEntry = generatorWrapper.length;\n    var iterateEntries = value & 256 ? generatorWrapper[findEntry - 1] : undefined;\n    if (iterateEntries) {\n      findEntry += -1;\n    } else {\n      findEntry += 0;\n    }\n    for (value = value & 512 ? 1 : 0; value < findEntry; value++) {\n      generatorWrapper[value] = CustomMap(generatorWrapper[value]);\n    }\n    if (iterateEntries) {\n      value = generatorWrapper[value] = {};\n      for (var createCircularNode in iterateEntries) value[createCircularNode] = CustomMap(iterateEntries[createCircularNode]);\n    }\n    return generatorWrapper;\n  }\n  function DeepTransform(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper != null) {\n      if (Array.isArray(generatorWrapper)) {\n        if (undefinedFunction1(generatorWrapper, undefined, 0)) {\n          generatorWrapper = undefined;\n        } else if (iterateEntries && getBitFlags(generatorWrapper) & 2) {\n          generatorWrapper = generatorWrapper;\n        } else {\n          generatorWrapper = processElements(generatorWrapper, value, CustomMap, undefined !== findEntry, iterateEntries);\n        }\n      } else if (isPlainObject(generatorWrapper)) {\n        var createCircularNode = {},\n          entryIdCounter;\n        for (entryIdCounter in generatorWrapper) createCircularNode[entryIdCounter] = DeepTransform(generatorWrapper[entryIdCounter], value, CustomMap, findEntry, iterateEntries);\n        generatorWrapper = createCircularNode;\n      } else {\n        generatorWrapper = value(generatorWrapper, findEntry);\n      }\n      return generatorWrapper;\n    }\n  }\n  function processElements(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = findEntry || CustomMap ? getBitFlags(generatorWrapper) : 0;\n    if (findEntry) {\n      findEntry = !!(createCircularNode & 32);\n    } else {\n      findEntry = undefined;\n    }\n    generatorWrapper = toArray(generatorWrapper);\n    for (var entryIdCounter = 0; entryIdCounter < generatorWrapper.length; entryIdCounter++) {\n      generatorWrapper[entryIdCounter] = DeepTransform(generatorWrapper[entryIdCounter], value, CustomMap, findEntry, iterateEntries);\n    }\n    if (CustomMap) {\n      CustomMap(createCircularNode, generatorWrapper);\n    }\n    return generatorWrapper;\n  }\n  function transformElement(generatorWrapper) {\n    return DeepTransform(generatorWrapper, transformElementContent, undefined, undefined, false);\n  }\n  function transformElementContent(generatorWrapper) {\n    if (generatorWrapper.emptyObject2 === emptyObject1) {\n      return generatorWrapper.toJSON();\n    } else {\n      if (generatorWrapper instanceof EnhancedMap) {\n        return TransformMapEntries(generatorWrapper, transformElement);\n      } else {\n        return SerializeValue(generatorWrapper);\n      }\n    }\n  }\n  function cloneOrTransform(generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = set34Clear14557Flag;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (generatorWrapper != null) {\n      if (supportsUint8Array && generatorWrapper instanceof Uint8Array) {\n        if (value) {\n          return generatorWrapper;\n        } else {\n          return new Uint8Array(generatorWrapper);\n        }\n      }\n      if (Array.isArray(generatorWrapper)) {\n        var findEntry = getBitFlags(generatorWrapper);\n        if (!(findEntry & 2)) {\n          if (value) {\n            value = findEntry === 0 || !!(findEntry & 32) && !(findEntry & 64 || !(findEntry & 16));\n          }\n          if (value) {\n            generatorWrapper = setRawBitFlags(generatorWrapper, (findEntry | 34) & -12293);\n          } else {\n            generatorWrapper = processElements(generatorWrapper, cloneOrTransform, findEntry & 4 ? set34Clear14557Flag : CustomMap, true, true);\n          }\n        }\n        return generatorWrapper;\n      }\n      if (generatorWrapper.emptyObject2 === emptyObject1) {\n        CustomMap = generatorWrapper.getSingletonInstance;\n        findEntry = getRawBitFlags(CustomMap);\n        if (findEntry & 2) {\n          generatorWrapper = generatorWrapper;\n        } else {\n          generatorWrapper = createInstanceWithTemporaryData(generatorWrapper.constructor, transformWithFlags(CustomMap, findEntry, true));\n        }\n      } else if (generatorWrapper instanceof EnhancedMap && !(generatorWrapper.mapElements & 2)) {\n        CustomMap = setFlag34(TransformEntries(generatorWrapper, cloneOrTransform));\n        generatorWrapper = new EnhancedMap(CustomMap, generatorWrapper.ProtobufWriter, generatorWrapper.keyTransformFunction, generatorWrapper.convertToInt64);\n      }\n      return generatorWrapper;\n    }\n  }\n  function transformWithFlags(generatorWrapper, value, CustomMap) {\n    var findEntry = CustomMap || value & 2 ? set34Clear14557Flag : clear14591Flag;\n    var iterateEntries = !!(value & 32);\n    generatorWrapper = TransformArguments(generatorWrapper, value, function (createCircularNode) {\n      return cloneOrTransform(createCircularNode, iterateEntries, findEntry);\n    });\n    setCustomProperty(generatorWrapper, 32 | (CustomMap ? 2 : 0));\n    return generatorWrapper;\n  }\n  function cloneIfNotFrozen(generatorWrapper) {\n    var value = generatorWrapper.getSingletonInstance;\n    var CustomMap = getRawBitFlags(value);\n    if (CustomMap & 2) {\n      return createInstanceWithTemporaryData(generatorWrapper.constructor, transformWithFlags(value, CustomMap, false));\n    } else {\n      return generatorWrapper;\n    }\n  }\n  function checkFlags(generatorWrapper, value, CustomMap, findEntry) {\n    if (!(4 & value)) {\n      return true;\n    }\n    if (CustomMap == null) {\n      return false;\n    }\n    if (!findEntry && CustomMap === 0 && (4096 & value || 8192 & value) && (generatorWrapper.constructor[customProperty3] = (generatorWrapper.constructor[customProperty3] | 0) + 1) < 5) {\n      throwIncidentError();\n    }\n    if (CustomMap === 0) {\n      return false;\n    } else {\n      return !(CustomMap & value);\n    }\n  }\n  var getTransformedElement = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    return getElementAtIndex(generatorWrapper, getRawBitFlags(generatorWrapper), value);\n  };\n  function getElementAtIndexWithDefault(generatorWrapper, value, CustomMap, findEntry) {\n    value = findEntry + (+!!(value & 512) - 1);\n    if (!(value < 0 || value >= generatorWrapper.length || value >= CustomMap)) {\n      return generatorWrapper[value];\n    }\n  }\n  var getElementAtIndex = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (-1 === CustomMap) {\n      return null;\n    }\n    var iterateEntries = get1023Shifted(value);\n    if (CustomMap >= iterateEntries) {\n      if (value & 256) {\n        return generatorWrapper[generatorWrapper.length - 1][CustomMap];\n      }\n    } else {\n      var createCircularNode = generatorWrapper.length;\n      if (findEntry && value & 256 && (findEntry = generatorWrapper[createCircularNode - 1][CustomMap], findEntry != null)) {\n        if (getElementAtIndexWithDefault(generatorWrapper, value, iterateEntries, CustomMap) && customProperty2 != null) {\n          var entryIdCounter;\n          if ((entryIdCounter = undefinedVariable2) != null) {\n            generatorWrapper = entryIdCounter;\n          } else {\n            generatorWrapper = undefinedVariable2 = {};\n          }\n          entryIdCounter = generatorWrapper[customProperty2] || 0;\n          if (!(entryIdCounter >= 4)) {\n            generatorWrapper[customProperty2] = entryIdCounter + 1;\n            throwIncidentError();\n          }\n        }\n        return findEntry;\n      }\n      return getElementAtIndexWithDefault(generatorWrapper, value, iterateEntries, CustomMap);\n    }\n  };\n  var updateElement = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(findEntry);\n    throwIfFlag2(iterateEntries);\n    updateElementAtIndex(findEntry, iterateEntries, value, CustomMap);\n    return generatorWrapper;\n  };\n  function updateElementAtIndex(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = get1023Shifted(value);\n    if (CustomMap >= createCircularNode || iterateEntries) {\n      var entryIdCounter = value;\n      if (value & 256) {\n        iterateEntries = generatorWrapper[generatorWrapper.length - 1];\n      } else {\n        if (findEntry == null) {\n          return entryIdCounter;\n        }\n        iterateEntries = generatorWrapper[createCircularNode + (+!!(value & 512) - 1)] = {};\n        entryIdCounter |= 256;\n      }\n      iterateEntries[CustomMap] = findEntry;\n      if (CustomMap < createCircularNode) {\n        generatorWrapper[CustomMap + (+!!(value & 512) - 1)] = undefined;\n      }\n      if (entryIdCounter !== value) {\n        setRawBitFlags(generatorWrapper, entryIdCounter);\n      }\n      return entryIdCounter;\n    }\n    generatorWrapper[CustomMap + (+!!(value & 512) - 1)] = findEntry;\n    if (value & 256) {\n      generatorWrapper = generatorWrapper[generatorWrapper.length - 1];\n      if (CustomMap in generatorWrapper) {\n        delete generatorWrapper[CustomMap];\n      }\n    }\n    return value;\n  }\n  function transformArrayElements(generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(findEntry);\n    var createCircularNode = 2 & iterateEntries ? 1 : 2;\n    var entryIdCounter = getArrayOrEmpty(findEntry, iterateEntries, value);\n    var key = getBitFlags(entryIdCounter);\n    if (checkFlags(generatorWrapper, key, undefined, false)) {\n      if (4 & key || Object.isFrozen(entryIdCounter)) {\n        entryIdCounter = toArray(entryIdCounter);\n        key = updateFlagsForFrozenObjects(key, iterateEntries);\n        iterateEntries = updateElementAtIndex(findEntry, iterateEntries, value, entryIdCounter);\n      }\n      for (var value = generatorWrapper = 0; generatorWrapper < entryIdCounter.length; generatorWrapper++) {\n        var entry = CustomMap(entryIdCounter[generatorWrapper]);\n        if (entry != null) {\n          entryIdCounter[value++] = entry;\n        }\n      }\n      if (value < generatorWrapper) {\n        entryIdCounter.length = value;\n      }\n      key = updateFlags(key, iterateEntries);\n      key = toggleBitFlag(key, 20, true);\n      key = toggleBitFlag(key, 4096, false);\n      key = toggleBitFlag(key, 8192, false);\n      setRawBitFlags(entryIdCounter, key);\n      if (2 & key) {\n        Object.freeze(entryIdCounter);\n      }\n    }\n    if (!checkIfFrozen(key)) {\n      CustomMap = key;\n      if (generatorWrapper = createCircularNode === 1 || createCircularNode === 4 && !!(32 & key)) {\n        key = toggleBitFlag(key, 2, true);\n      } else {\n        key = finalizeFlagsUpdate(key, iterateEntries, false);\n      }\n      if (key !== CustomMap) {\n        setRawBitFlags(entryIdCounter, key);\n      }\n      if (generatorWrapper) {\n        Object.freeze(entryIdCounter);\n      }\n    }\n    if (createCircularNode === 2 && checkIfFrozen(key)) {\n      entryIdCounter = toArray(entryIdCounter);\n      key = updateFlagsForFrozenObjects(key, iterateEntries);\n      key = finalizeFlagsUpdate(key, iterateEntries, false);\n      setRawBitFlags(entryIdCounter, key);\n      updateElementAtIndex(findEntry, iterateEntries, value, entryIdCounter);\n    }\n    return entryIdCounter;\n  }\n  function getArrayOrEmpty(generatorWrapper, value, CustomMap) {\n    generatorWrapper = getElementAtIndex(generatorWrapper, value, CustomMap);\n    if (Array.isArray(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return frozenArray;\n    }\n  }\n  function updateFlags(generatorWrapper, value) {\n    if (generatorWrapper === 0) {\n      generatorWrapper = updateFlagsForFrozenObjects(generatorWrapper, value);\n    }\n    return generatorWrapper = toggleBitFlag(generatorWrapper, 1, true);\n  }\n  function checkIfFrozen(generatorWrapper) {\n    return !!(2 & generatorWrapper) && !!(4 & generatorWrapper) || !!(2048 & generatorWrapper);\n  }\n  function transformAndAddElement(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    var entryIdCounter = value & 2;\n    generatorWrapper: {\n      var key = CustomMap;\n      var value = value & 2;\n      CustomMap = false;\n      if (key == null) {\n        if (value) {\n          generatorWrapper = getSingletonInstance();\n          break generatorWrapper;\n        }\n        key = [];\n      } else if (key.constructor === EnhancedMap) {\n        if ((key.mapElements & 2) == 0 || value) {\n          generatorWrapper = key;\n          break generatorWrapper;\n        }\n        key = TransformEntries(key);\n      } else if (Array.isArray(key)) {\n        CustomMap = !!(getBitFlags(key) & 2);\n      } else {\n        key = [];\n      }\n      if (value) {\n        if (!key.length) {\n          generatorWrapper = getSingletonInstance();\n          break generatorWrapper;\n        }\n        if (!CustomMap) {\n          CustomMap = true;\n          setFlag34(key);\n        }\n      } else if (CustomMap) {\n        CustomMap = false;\n        value = toArray(key);\n        for (key = 0; key < value.length; key++) {\n          var entry = value[key] = toArray(value[key]);\n          if (Array.isArray(entry[1])) {\n            entry[1] = setFlag34(entry[1]);\n          }\n        }\n        key = value;\n      }\n      if (!CustomMap) {\n        if (getBitFlags(key) & 64) {\n          clearBitFlag(key, 32);\n        } else if (32 & value) {\n          setFlag32(key);\n        }\n      }\n      createCircularNode = new EnhancedMap(key, iterateEntries, getStringOrEmpty, createCircularNode);\n      updateElementAtIndex(generatorWrapper, value, findEntry, createCircularNode, false);\n      generatorWrapper = createCircularNode;\n    }\n    if (generatorWrapper == null) {\n      return generatorWrapper;\n    }\n    if (!entryIdCounter && iterateEntries) {\n      generatorWrapper.modifyAdProperty = true;\n    }\n    return generatorWrapper;\n  }\n  function transformElementAtIndex(generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var findEntry = getRawBitFlags(generatorWrapper);\n    return transformAndAddElement(generatorWrapper, findEntry, getElementAtIndex(generatorWrapper, findEntry, value), value, undefined, CustomMap);\n  }\n  function transformAndReplaceArray(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = generatorWrapper.getSingletonInstance;\n    var createCircularNode = getRawBitFlags(iterateEntries);\n    throwIfFlag2(createCircularNode);\n    if (CustomMap == null) {\n      updateElementAtIndex(iterateEntries, createCircularNode, value);\n      return generatorWrapper;\n    }\n    var entryIdCounter = getBitFlags(CustomMap);\n    var key = entryIdCounter;\n    var value = !!(2 & entryIdCounter) || Object.isFrozen(CustomMap);\n    var entry = !value && false;\n    if (checkFlags(generatorWrapper, entryIdCounter)) {\n      entryIdCounter = 21;\n      if (value) {\n        CustomMap = toArray(CustomMap);\n        key = 0;\n        entryIdCounter = updateFlagsForFrozenObjects(entryIdCounter, createCircularNode);\n        entryIdCounter = finalizeFlagsUpdate(entryIdCounter, createCircularNode, true);\n      }\n      for (value = 0; value < CustomMap.length; value++) {\n        CustomMap[value] = findEntry(CustomMap[value]);\n      }\n    }\n    if (entry) {\n      CustomMap = toArray(CustomMap);\n      key = 0;\n      entryIdCounter = updateFlagsForFrozenObjects(entryIdCounter, createCircularNode);\n      entryIdCounter = finalizeFlagsUpdate(entryIdCounter, createCircularNode, true);\n    }\n    if (entryIdCounter !== key) {\n      setRawBitFlags(CustomMap, entryIdCounter);\n    }\n    updateElementAtIndex(iterateEntries, createCircularNode, value, CustomMap);\n    return generatorWrapper;\n  }\n  function updateOrRemoveElement(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = generatorWrapper.getSingletonInstance;\n    var createCircularNode = getRawBitFlags(iterateEntries);\n    throwIfFlag2(createCircularNode);\n    updateElementAtIndex(iterateEntries, createCircularNode, value, (findEntry === \"0\" ? Number(CustomMap) === 0 : CustomMap === findEntry) ? undefined : CustomMap);\n    return generatorWrapper;\n  }\n  function replaceArrayIfNotArray(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = generatorWrapper.getSingletonInstance;\n    var createCircularNode = getBitFlags(iterateEntries);\n    throwIfFlag2(getRawBitFlags(generatorWrapper.getSingletonInstance));\n    var entryIdCounter = createCircularNode & 2;\n    generatorWrapper = getElementAtIndex(iterateEntries, createCircularNode, value, false);\n    if (!Array.isArray(generatorWrapper)) {\n      generatorWrapper = frozenArray;\n    }\n    var key = !!(createCircularNode & 32);\n    var value = getBitFlags(generatorWrapper);\n    if (value === 0 && key && !entryIdCounter) {\n      value |= 33;\n      setRawBitFlags(generatorWrapper, value);\n    } else if (!(value & 1)) {\n      value |= 1;\n      setRawBitFlags(generatorWrapper, value);\n    }\n    if (entryIdCounter) {\n      if (!(value & 2)) {\n        setFlag34(generatorWrapper);\n      }\n      Object.freeze(generatorWrapper);\n    } else if (2 & value || 2048 & value) {\n      generatorWrapper = toArray(generatorWrapper);\n      entryIdCounter = 1;\n      if (key) {\n        entryIdCounter |= 32;\n      }\n      setRawBitFlags(generatorWrapper, entryIdCounter);\n      updateElementAtIndex(iterateEntries, createCircularNode, value, generatorWrapper, false);\n    }\n    value = generatorWrapper;\n    iterateEntries = getBitFlags(value);\n    iterateEntries = !!(4 & iterateEntries) && !!(4096 & iterateEntries);\n    if (Array.isArray(findEntry)) {\n      for (createCircularNode = 0; createCircularNode < findEntry.length; createCircularNode++) {\n        value.push(CustomMap(findEntry[createCircularNode], iterateEntries));\n      }\n    } else {\n      findEntry = getIterator(findEntry);\n      for (createCircularNode = findEntry.next(); !createCircularNode.done; createCircularNode = findEntry.next()) {\n        value.push(CustomMap(createCircularNode.value, iterateEntries));\n      }\n    }\n  }\n  var pf = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = generatorWrapper.getSingletonInstance;\n    var createCircularNode = getRawBitFlags(iterateEntries);\n    throwIfFlag2(createCircularNode);\n    if ((CustomMap = of(iterateEntries, createCircularNode, CustomMap)) && CustomMap !== value && findEntry != null) {\n      createCircularNode = updateElementAtIndex(iterateEntries, createCircularNode, CustomMap);\n    }\n    updateElementAtIndex(iterateEntries, createCircularNode, value, findEntry);\n    return generatorWrapper;\n  };\n  var qf = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    if (of(generatorWrapper, getRawBitFlags(generatorWrapper), value) === CustomMap) {\n      return CustomMap;\n    } else {\n      return -1;\n    }\n  };\n  var rf = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    return of(generatorWrapper, getRawBitFlags(generatorWrapper), value);\n  };\n  function of(generatorWrapper, value, CustomMap) {\n    for (var findEntry = 0, iterateEntries = 0; iterateEntries < CustomMap.length; iterateEntries++) {\n      var createCircularNode = CustomMap[iterateEntries];\n      if (getElementAtIndex(generatorWrapper, value, createCircularNode) != null) {\n        if (findEntry !== 0) {\n          value = updateElementAtIndex(generatorWrapper, value, findEntry);\n        }\n        findEntry = createCircularNode;\n      }\n    }\n    return findEntry;\n  }\n  var tf = function (generatorWrapper) {\n    var value = StorageField;\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var CustomMap = getRawBitFlags(generatorWrapper);\n    throwIfFlag2(CustomMap);\n    var findEntry = getElementAtIndex(generatorWrapper, CustomMap, 4);\n    value = cloneIfNotFrozen(createObjectOrUndefined(findEntry, value, true, CustomMap));\n    if (findEntry !== value) {\n      updateElementAtIndex(generatorWrapper, CustomMap, 4, value);\n    }\n    return value;\n  };\n  function uf(generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(generatorWrapper);\n    var createCircularNode = getElementAtIndex(generatorWrapper, iterateEntries, CustomMap, findEntry);\n    value = createObjectOrUndefined(createCircularNode, value, false, iterateEntries);\n    if (value !== createCircularNode && value != null) {\n      updateElementAtIndex(generatorWrapper, iterateEntries, CustomMap, value, findEntry);\n    }\n    return value;\n  }\n  var vf = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper = uf(generatorWrapper, value, CustomMap, false)) {\n      return generatorWrapper;\n    } else {\n      return getSingletonInstance(value);\n    }\n  };\n  var fetchData = function (generatorWrapper, value, CustomMap) {\n    var findEntry = undefined === findEntry ? false : findEntry;\n    value = uf(generatorWrapper, value, CustomMap, findEntry);\n    if (value == null) {\n      return value;\n    }\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(generatorWrapper);\n    if (!(iterateEntries & 2)) {\n      var createCircularNode = cloneIfNotFrozen(value);\n      if (createCircularNode !== value) {\n        value = createCircularNode;\n        updateElementAtIndex(generatorWrapper, iterateEntries, CustomMap, value, findEntry);\n      }\n    }\n    return value;\n  };\n  function xf(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    var entryIdCounter = !!(2 & value);\n    var key = entryIdCounter ? 1 : 2;\n    iterateEntries = !!iterateEntries;\n    if (createCircularNode) {\n      createCircularNode = !entryIdCounter;\n    }\n    entryIdCounter = getArrayOrEmpty(generatorWrapper, value, findEntry);\n    var value = getBitFlags(entryIdCounter);\n    var entry = !!(4 & value);\n    if (!entry) {\n      value = updateFlags(value, value);\n      var currentEntry = entryIdCounter;\n      var foundEntry = value;\n      var resolveFunction = !!(2 & value);\n      if (resolveFunction) {\n        foundEntry = toggleBitFlag(foundEntry, 2, true);\n      }\n      for (var rejectFunction = !resolveFunction, user = true, profileData = 0, isDone = 0; profileData < currentEntry.length; profileData++) {\n        var stream = createObjectOrUndefined(currentEntry[profileData], CustomMap, false, foundEntry);\n        if (stream instanceof CustomMap) {\n          if (!resolveFunction) {\n            var keyArray = !!(getBitFlags(stream.getSingletonInstance) & 2);\n            if (rejectFunction) {\n              rejectFunction = !keyArray;\n            }\n            if (user) {\n              user = keyArray;\n            }\n          }\n          currentEntry[isDone++] = stream;\n        }\n      }\n      if (isDone < profileData) {\n        currentEntry.length = isDone;\n      }\n      value = toggleBitFlag(value, 4, true);\n      value = toggleBitFlag(value, 16, user);\n      value = toggleBitFlag(value, 8, rejectFunction);\n      setRawBitFlags(currentEntry, value);\n      if (resolveFunction) {\n        Object.freeze(currentEntry);\n      }\n    }\n    if (createCircularNode && !(8 & value || !entryIdCounter.length && (key === 1 || key === 4 && 32 & value))) {\n      if (checkIfFrozen(value)) {\n        entryIdCounter = toArray(entryIdCounter);\n        value = updateFlagsForFrozenObjects(value, value);\n        value = updateElementAtIndex(generatorWrapper, value, findEntry, entryIdCounter);\n      }\n      CustomMap = entryIdCounter;\n      createCircularNode = value;\n      for (currentEntry = 0; currentEntry < CustomMap.length; currentEntry++) {\n        value = CustomMap[currentEntry];\n        foundEntry = cloneIfNotFrozen(value);\n        if (value !== foundEntry) {\n          CustomMap[currentEntry] = foundEntry;\n        }\n      }\n      createCircularNode = toggleBitFlag(createCircularNode, 8, true);\n      createCircularNode = toggleBitFlag(createCircularNode, 16, !CustomMap.length);\n      setRawBitFlags(CustomMap, createCircularNode);\n      value = createCircularNode;\n    }\n    if (!checkIfFrozen(value)) {\n      CustomMap = value;\n      if (createCircularNode = key === 1 || key === 4 && !!(32 & value)) {\n        value = toggleBitFlag(value, !entryIdCounter.length || 16 & value && (!entry || 32 & value) ? 2 : 2048, true);\n      } else {\n        value = finalizeFlagsUpdate(value, value, iterateEntries);\n      }\n      if (value !== CustomMap) {\n        setRawBitFlags(entryIdCounter, value);\n      }\n      if (createCircularNode) {\n        Object.freeze(entryIdCounter);\n      }\n    }\n    if (key === 2 && checkIfFrozen(value)) {\n      entryIdCounter = toArray(entryIdCounter);\n      value = updateFlagsForFrozenObjects(value, value);\n      value = finalizeFlagsUpdate(value, value, iterateEntries);\n      setRawBitFlags(entryIdCounter, value);\n      updateElementAtIndex(generatorWrapper, value, findEntry, entryIdCounter);\n    }\n    return entryIdCounter;\n  }\n  var parseData = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var findEntry = getRawBitFlags(generatorWrapper);\n    return xf(generatorWrapper, findEntry, value, CustomMap, false, !(2 & findEntry));\n  };\n  var finalizeAdAttributes = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap == null) {\n      CustomMap = undefined;\n    }\n    return updateElement(generatorWrapper, value, CustomMap);\n  };\n  var Bf = function (generatorWrapper, value, CustomMap) {\n    var findEntry = TagSessionFields;\n    if (CustomMap == null) {\n      CustomMap = undefined;\n    }\n    return pf(generatorWrapper, value, findEntry, CustomMap);\n  };\n  var Cf = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(findEntry);\n    throwIfFlag2(iterateEntries);\n    if (CustomMap == null) {\n      updateElementAtIndex(findEntry, iterateEntries, value);\n      return generatorWrapper;\n    }\n    for (var createCircularNode = getBitFlag",
  "rateEntries = generatorWrapper.getSingletonInstance;\n    var createCircularNode = getRawBitFlags(iterateEntries);\n    throwIfFlag2(createCircularNode);\n    if ((CustomMap = of(iterateEntries, createCircularNode, CustomMap)) && CustomMap !== value && findEntry != null) {\n      createCircularNode = updateElementAtIndex(iterateEntries, createCircularNode, CustomMap);\n    }\n    updateElementAtIndex(iterateEntries, createCircularNode, value, findEntry);\n    return generatorWrapper;\n  };\n  var qf = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    if (of(generatorWrapper, getRawBitFlags(generatorWrapper), value) === CustomMap) {\n      return CustomMap;\n    } else {\n      return -1;\n    }\n  };\n  var rf = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    return of(generatorWrapper, getRawBitFlags(generatorWrapper), value);\n  };\n  function of(generatorWrapper, value, CustomMap) {\n    for (var findEntry = 0, iterateEntries = 0; iterateEntries < CustomMap.length; iterateEntries++) {\n      var createCircularNode = CustomMap[iterateEntries];\n      if (getElementAtIndex(generatorWrapper, value, createCircularNode) != null) {\n        if (findEntry !== 0) {\n          value = updateElementAtIndex(generatorWrapper, value, findEntry);\n        }\n        findEntry = createCircularNode;\n      }\n    }\n    return findEntry;\n  }\n  var tf = function (generatorWrapper) {\n    var value = StorageField;\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var CustomMap = getRawBitFlags(generatorWrapper);\n    throwIfFlag2(CustomMap);\n    var findEntry = getElementAtIndex(generatorWrapper, CustomMap, 4);\n    value = cloneIfNotFrozen(createObjectOrUndefined(findEntry, value, true, CustomMap));\n    if (findEntry !== value) {\n      updateElementAtIndex(generatorWrapper, CustomMap, 4, value);\n    }\n    return value;\n  };\n  function uf(generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(generatorWrapper);\n    var createCircularNode = getElementAtIndex(generatorWrapper, iterateEntries, CustomMap, findEntry);\n    value = createObjectOrUndefined(createCircularNode, value, false, iterateEntries);\n    if (value !== createCircularNode && value != null) {\n      updateElementAtIndex(generatorWrapper, iterateEntries, CustomMap, value, findEntry);\n    }\n    return value;\n  }\n  var vf = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper = uf(generatorWrapper, value, CustomMap, false)) {\n      return generatorWrapper;\n    } else {\n      return getSingletonInstance(value);\n    }\n  };\n  var fetchData = function (generatorWrapper, value, CustomMap) {\n    var findEntry = undefined === findEntry ? false : findEntry;\n    value = uf(generatorWrapper, value, CustomMap, findEntry);\n    if (value == null) {\n      return value;\n    }\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(generatorWrapper);\n    if (!(iterateEntries & 2)) {\n      var createCircularNode = cloneIfNotFrozen(value);\n      if (createCircularNode !== value) {\n        value = createCircularNode;\n        updateElementAtIndex(generatorWrapper, iterateEntries, CustomMap, value, findEntry);\n      }\n    }\n    return value;\n  };\n  function xf(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    var entryIdCounter = !!(2 & value);\n    var key = entryIdCounter ? 1 : 2;\n    iterateEntries = !!iterateEntries;\n    if (createCircularNode) {\n      createCircularNode = !entryIdCounter;\n    }\n    entryIdCounter = getArrayOrEmpty(generatorWrapper, value, findEntry);\n    var value = getBitFlags(entryIdCounter);\n    var entry = !!(4 & value);\n    if (!entry) {\n      value = updateFlags(value, value);\n      var currentEntry = entryIdCounter;\n      var foundEntry = value;\n      var resolveFunction = !!(2 & value);\n      if (resolveFunction) {\n        foundEntry = toggleBitFlag(foundEntry, 2, true);\n      }\n      for (var rejectFunction = !resolveFunction, user = true, profileData = 0, isDone = 0; profileData < currentEntry.length; profileData++) {\n        var stream = createObjectOrUndefined(currentEntry[profileData], CustomMap, false, foundEntry);\n        if (stream instanceof CustomMap) {\n          if (!resolveFunction) {\n            var keyArray = !!(getBitFlags(stream.getSingletonInstance) & 2);\n            if (rejectFunction) {\n              rejectFunction = !keyArray;\n            }\n            if (user) {\n              user = keyArray;\n            }\n          }\n          currentEntry[isDone++] = stream;\n        }\n      }\n      if (isDone < profileData) {\n        currentEntry.length = isDone;\n      }\n      value = toggleBitFlag(value, 4, true);\n      value = toggleBitFlag(value, 16, user);\n      value = toggleBitFlag(value, 8, rejectFunction);\n      setRawBitFlags(currentEntry, value);\n      if (resolveFunction) {\n        Object.freeze(currentEntry);\n      }\n    }\n    if (createCircularNode && !(8 & value || !entryIdCounter.length && (key === 1 || key === 4 && 32 & value))) {\n      if (checkIfFrozen(value)) {\n        entryIdCounter = toArray(entryIdCounter);\n        value = updateFlagsForFrozenObjects(value, value);\n        value = updateElementAtIndex(generatorWrapper, value, findEntry, entryIdCounter);\n      }\n      CustomMap = entryIdCounter;\n      createCircularNode = value;\n      for (currentEntry = 0; currentEntry < CustomMap.length; currentEntry++) {\n        value = CustomMap[currentEntry];\n        foundEntry = cloneIfNotFrozen(value);\n        if (value !== foundEntry) {\n          CustomMap[currentEntry] = foundEntry;\n        }\n      }\n      createCircularNode = toggleBitFlag(createCircularNode, 8, true);\n      createCircularNode = toggleBitFlag(createCircularNode, 16, !CustomMap.length);\n      setRawBitFlags(CustomMap, createCircularNode);\n      value = createCircularNode;\n    }\n    if (!checkIfFrozen(value)) {\n      CustomMap = value;\n      if (createCircularNode = key === 1 || key === 4 && !!(32 & value)) {\n        value = toggleBitFlag(value, !entryIdCounter.length || 16 & value && (!entry || 32 & value) ? 2 : 2048, true);\n      } else {\n        value = finalizeFlagsUpdate(value, value, iterateEntries);\n      }\n      if (value !== CustomMap) {\n        setRawBitFlags(entryIdCounter, value);\n      }\n      if (createCircularNode) {\n        Object.freeze(entryIdCounter);\n      }\n    }\n    if (key === 2 && checkIfFrozen(value)) {\n      entryIdCounter = toArray(entryIdCounter);\n      value = updateFlagsForFrozenObjects(value, value);\n      value = finalizeFlagsUpdate(value, value, iterateEntries);\n      setRawBitFlags(entryIdCounter, value);\n      updateElementAtIndex(generatorWrapper, value, findEntry, entryIdCounter);\n    }\n    return entryIdCounter;\n  }\n  var parseData = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var findEntry = getRawBitFlags(generatorWrapper);\n    return xf(generatorWrapper, findEntry, value, CustomMap, false, !(2 & findEntry));\n  };\n  var finalizeAdAttributes = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap == null) {\n      CustomMap = undefined;\n    }\n    return updateElement(generatorWrapper, value, CustomMap);\n  };\n  var Bf = function (generatorWrapper, value, CustomMap) {\n    var findEntry = TagSessionFields;\n    if (CustomMap == null) {\n      CustomMap = undefined;\n    }\n    return pf(generatorWrapper, value, findEntry, CustomMap);\n  };\n  var Cf = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(findEntry);\n    throwIfFlag2(iterateEntries);\n    if (CustomMap == null) {\n      updateElementAtIndex(findEntry, iterateEntries, value);\n      return generatorWrapper;\n    }\n    for (var createCircularNode = getBitFlags(CustomMap), entryIdCounter = createCircularNode, key = !!(2 & createCircularNode) || !!(2048 & createCircularNode), value = key || Object.isFrozen(CustomMap), entry = true, currentEntry = true, foundEntry = 0; foundEntry < CustomMap.length; foundEntry++) {\n      var resolveFunction = CustomMap[foundEntry];\n      if (!key) {\n        resolveFunction = !!(getBitFlags(resolveFunction.getSingletonInstance) & 2);\n        if (entry) {\n          entry = !resolveFunction;\n        }\n        if (currentEntry) {\n          currentEntry = resolveFunction;\n        }\n      }\n    }\n    if (!key) {\n      createCircularNode = toggleBitFlag(createCircularNode, 5, true);\n      createCircularNode = toggleBitFlag(createCircularNode, 8, entry);\n      createCircularNode = toggleBitFlag(createCircularNode, 16, currentEntry);\n    }\n    if (value && createCircularNode !== entryIdCounter) {\n      CustomMap = toArray(CustomMap);\n      entryIdCounter = 0;\n      createCircularNode = updateFlagsForFrozenObjects(createCircularNode, iterateEntries);\n      createCircularNode = finalizeFlagsUpdate(createCircularNode, iterateEntries, true);\n    }\n    if (createCircularNode !== entryIdCounter) {\n      setRawBitFlags(CustomMap, createCircularNode);\n    }\n    updateElementAtIndex(findEntry, iterateEntries, value, CustomMap);\n    return generatorWrapper;\n  };\n  function updateFlagsForFrozenObjects(generatorWrapper, value) {\n    generatorWrapper = toggleBitFlag(generatorWrapper, 2, !!(2 & value));\n    generatorWrapper = toggleBitFlag(generatorWrapper, 32, true);\n    return generatorWrapper = toggleBitFlag(generatorWrapper, 2048, false);\n  }\n  function finalizeFlagsUpdate(generatorWrapper, value, CustomMap) {\n    if (!(32 & value && CustomMap)) {\n      generatorWrapper = toggleBitFlag(generatorWrapper, 32, false);\n    }\n    return generatorWrapper;\n  }\n  function createAdElement(generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var iterateEntries = getRawBitFlags(generatorWrapper);\n    throwIfFlag2(iterateEntries);\n    value = xf(generatorWrapper, iterateEntries, CustomMap, value, true);\n    if (findEntry != null) {\n      CustomMap = findEntry;\n    } else {\n      CustomMap = new CustomMap();\n    }\n    value.push(CustomMap);\n    if (getBitFlags(CustomMap.getSingletonInstance) & 2) {\n      clearBitFlag(value, 8);\n    } else {\n      clearBitFlag(value, 16);\n    }\n    return CustomMap;\n  }\n  var addElementToAd = function (generatorWrapper, value, CustomMap, findEntry) {\n    createAdElement(generatorWrapper, value, CustomMap, findEntry);\n    return generatorWrapper;\n  };\n  var getAdProperty = function (generatorWrapper, value) {\n    generatorWrapper = getTransformedElement(generatorWrapper, value);\n    var CustomMap;\n    if (generatorWrapper == null) {\n      CustomMap = generatorWrapper;\n    } else if (isNumericString(generatorWrapper)) {\n      if (typeof generatorWrapper === \"number\") {\n        CustomMap = convertSafeInteger(generatorWrapper);\n      } else {\n        CustomMap = convertStringToInt64(generatorWrapper);\n      }\n    } else {\n      CustomMap = undefined;\n    }\n    return CustomMap;\n  };\n  var getAdPropertyValue = function (generatorWrapper, value) {\n    return stringOrNull(getTransformedElement(generatorWrapper, value));\n  };\n  function returnNonNull(generatorWrapper, value) {\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return value;\n    }\n  }\n  var getBooleanAdProperty = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? false : CustomMap;\n    return returnNonNull(parseBooleanOrNumber(getTransformedElement(generatorWrapper, value)), CustomMap);\n  };\n  var getNumericAdProperty = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    return returnNonNull(parseNullableInt32(getTransformedElement(generatorWrapper, value)), CustomMap);\n  };\n  var getAdPropertyNumericValue = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    return returnNonNull(parseNullableUInt32(getTransformedElement(generatorWrapper, value)), CustomMap);\n  };\n  var getAdPropertyFallbackNumeric = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    return returnNonNull(getAdProperty(generatorWrapper, value), CustomMap);\n  };\n  var getAdElementProperty = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    generatorWrapper = generatorWrapper.getSingletonInstance;\n    var findEntry = getRawBitFlags(generatorWrapper);\n    var iterateEntries = getElementAtIndex(generatorWrapper, findEntry, value);\n    var createCircularNode = parseNumericValue(iterateEntries);\n    if (createCircularNode != null && createCircularNode !== iterateEntries) {\n      updateElementAtIndex(generatorWrapper, findEntry, value, createCircularNode);\n    }\n    return returnNonNull(createCircularNode, CustomMap);\n  };\n  var dispatchUnhandledRejection = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? \"\" : CustomMap;\n    return returnNonNull(getAdPropertyValue(generatorWrapper, value), CustomMap);\n  };\n  var getAdPropertyNumeric = function (generatorWrapper, value) {\n    var CustomMap = 0;\n    if (undefined === CustomMap) {\n      CustomMap = 0;\n    } else {\n      CustomMap = CustomMap;\n    }\n    return returnNonNull(parseNullableInt(getTransformedElement(generatorWrapper, value)), CustomMap);\n  };\n  var getAdPropertyStringFallback = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? \"0\" : CustomMap;\n    generatorWrapper = getTransformedElement(generatorWrapper, value);\n    value = true;\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    if (generatorWrapper == null) {\n      generatorWrapper = generatorWrapper;\n    } else if (isNumericString(generatorWrapper)) {\n      if (typeof generatorWrapper === \"string\") {\n        generatorWrapper = convertStringToInt64(generatorWrapper);\n      } else if (value) {\n        generatorWrapper = convertNumberToString(generatorWrapper);\n      } else {\n        generatorWrapper = convertSafeInteger(generatorWrapper);\n      }\n    } else {\n      generatorWrapper = undefined;\n    }\n    return returnNonNull(generatorWrapper, CustomMap);\n  };\n  var getNestedAdPropertyNumeric = function (generatorWrapper, value, CustomMap) {\n    return getAdPropertyNumeric(generatorWrapper, qf(generatorWrapper, CustomMap, value));\n  };\n  var setAdProperty = function (generatorWrapper, value, CustomMap) {\n    return updateElement(generatorWrapper, value, parseNullableBoolean(CustomMap));\n  };\n  var updateAdProperty = function (generatorWrapper, value, CustomMap) {\n    return updateElement(generatorWrapper, value, CustomMap == null ? CustomMap : parseInt32(CustomMap));\n  };\n  var modifyAdProperty = function (generatorWrapper, value, CustomMap) {\n    return updateOrRemoveElement(generatorWrapper, value, CustomMap == null ? CustomMap : parseInt32(CustomMap), 0);\n  };\n  var setAdPropertyFromString = function (generatorWrapper, value, CustomMap) {\n    return updateOrRemoveElement(generatorWrapper, value, convertToInt64(CustomMap), \"0\");\n  };\n  var setAdPropertyFromObject = function (generatorWrapper, value, CustomMap) {\n    return updateElement(generatorWrapper, value, optionalString(CustomMap));\n  };\n  var clearAdProperty = function (generatorWrapper, value, CustomMap) {\n    return updateElement(generatorWrapper, value, parseNullableIntEnum(CustomMap));\n  };\n  var AdElement = function (generatorWrapper, value, CustomMap) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper, value, CustomMap);\n  };\n  AdElement.prototype.toJSON = function () {\n    if (undefinedVariable1) {\n      return sanitizeAdElementData(this, this.getSingletonInstance, false);\n    } else {\n      return sanitizeAdElementData(this, processElements(this.getSingletonInstance, transformElementContent, undefined, undefined, false), true);\n    }\n  };\n  var serializeData = function (generatorWrapper) {\n    undefinedVariable1 = true;\n    try {\n      return JSON.stringify(generatorWrapper.toJSON(), transformKeyOrValue);\n    } finally {\n      undefinedVariable1 = false;\n    }\n  };\n  AdElement.prototype.emptyObject2 = emptyObject1;\n  AdElement.prototype.toString = function () {\n    return sanitizeAdElementData(this, this.getSingletonInstance, false).toString();\n  };\n  function sanitizeAdElementData(generatorWrapper, value, CustomMap) {\n    var findEntry = unknownVariable ? undefined : generatorWrapper.constructor.findGlobalObject;\n    var iterateEntries = getRawBitFlags(CustomMap ? generatorWrapper.getSingletonInstance : value);\n    generatorWrapper = value.length;\n    if (!generatorWrapper) {\n      return value;\n    }\n    var createCircularNode;\n    if (isPlainObject(CustomMap = value[generatorWrapper - 1])) {\n      generatorWrapper: {\n        var entryIdCounter = CustomMap;\n        var entry;\n        var key = {};\n        var value = false;\n        for (entry in entryIdCounter) {\n          var currentEntry = entryIdCounter[entry];\n          if (Array.isArray(currentEntry)) {\n            var foundEntry = currentEntry;\n            if (undefinedFunction1(currentEntry, findEntry, +entry) || isObjectWithId(currentEntry) && currentEntry.size === 0) {\n              currentEntry = null;\n            }\n            if (currentEntry != foundEntry) {\n              value = true;\n            }\n          }\n          if (currentEntry != null) {\n            key[entry] = currentEntry;\n          } else {\n            value = true;\n          }\n        }\n        if (value) {\n          for (var resolveFunction in key) {\n            entryIdCounter = key;\n            break generatorWrapper;\n          }\n          entryIdCounter = null;\n        }\n      }\n      if (entryIdCounter != CustomMap) {\n        createCircularNode = true;\n      }\n      generatorWrapper--;\n    }\n    for (entry = +!!(iterateEntries & 512) - 1; generatorWrapper > 0; generatorWrapper--) {\n      resolveFunction = generatorWrapper - 1;\n      CustomMap = value[resolveFunction];\n      resolveFunction -= entry;\n      if (!(CustomMap == null || undefinedFunction1(CustomMap, findEntry, resolveFunction) || isObjectWithId(CustomMap) && CustomMap.size === 0)) {\n        break;\n      }\n      var rejectFunction = true;\n    }\n    if (!createCircularNode && !rejectFunction) {\n      return value;\n    }\n    value = Array.prototype.slice.call(value, 0, generatorWrapper);\n    if (entryIdCounter) {\n      value.push(entryIdCounter);\n    }\n    return value;\n  }\n  function filterAdProperties(generatorWrapper, value) {\n    if (Array.isArray(value)) {\n      var CustomMap = getBitFlags(value);\n      if (CustomMap & 4) {\n        return value;\n      }\n      for (var findEntry = 0, iterateEntries = 0; findEntry < value.length; findEntry++) {\n        var createCircularNode = generatorWrapper(value[findEntry]);\n        if (createCircularNode != null) {\n          value[iterateEntries++] = createCircularNode;\n        }\n      }\n      if (iterateEntries < findEntry) {\n        value.length = iterateEntries;\n      }\n      setRawBitFlags(value, (CustomMap | 5) & -12289);\n      if (CustomMap & 2) {\n        Object.freeze(value);\n      }\n      return value;\n    }\n  }\n  var adElementSymbol = Symbol();\n  function setProperty(generatorWrapper, value, CustomMap) {\n    generatorWrapper[value] = CustomMap;\n  }\n  var adPropertyHandlerSymbol = Symbol();\n  function getAdPropertyHandler(generatorWrapper) {\n    var value = generatorWrapper[adPropertyHandlerSymbol];\n    if (!value) {\n      var CustomMap = initializeTransformations(generatorWrapper);\n      value = function (findEntry, iterateEntries) {\n        return applyTransformations(findEntry, iterateEntries, CustomMap);\n      };\n      generatorWrapper[adPropertyHandlerSymbol] = value;\n    }\n    return value;\n  }\n  var transformationsSymbol = Symbol();\n  function getTransformationGroup(generatorWrapper) {\n    return generatorWrapper.entryIdCounter;\n  }\n  function generateTransformationFunction(generatorWrapper, value) {\n    var CustomMap,\n      findEntry,\n      iterateEntries = generatorWrapper.entryIdCounter;\n    return function (createCircularNode, entryIdCounter, key) {\n      return iterateEntries(createCircularNode, entryIdCounter, key, findEntry || (findEntry = initializeTransformations(value).entryIdCounter), CustomMap || (CustomMap = getAdPropertyHandler(value)));\n    };\n  }\n  function initializeTransformations(generatorWrapper) {\n    var value = generatorWrapper[transformationsSymbol];\n    if (value) {\n      return value;\n    }\n    value = generatorWrapper[transformationsSymbol] = {};\n    var CustomMap = getTransformationGroup;\n    var findEntry = generateTransformationFunction;\n    var iterateEntries = undefined === iterateEntries ? setProperty : iterateEntries;\n    value.entryIdCounter = convertToTuple(generatorWrapper[0]);\n    var createCircularNode = 0;\n    var entryIdCounter = generatorWrapper[++createCircularNode];\n    if (entryIdCounter && entryIdCounter.constructor === Object) {\n      value.adPropertyHandlerSymbol = entryIdCounter;\n      entryIdCounter = generatorWrapper[++createCircularNode];\n      if (typeof entryIdCounter === \"function\") {\n        value.setTimeoutWrapper = entryIdCounter;\n        value.tasks = generatorWrapper[++createCircularNode];\n        entryIdCounter = generatorWrapper[++createCircularNode];\n      }\n    }\n    for (var key = {}; Array.isArray(entryIdCounter) && typeof entryIdCounter[0] === \"number\" && entryIdCounter[0] > 0;) {\n      for (var value = 0; value < entryIdCounter.length; value++) {\n        key[entryIdCounter[value]] = entryIdCounter;\n      }\n      entryIdCounter = generatorWrapper[++createCircularNode];\n    }\n    for (value = 1; undefined !== entryIdCounter;) {\n      if (typeof entryIdCounter === \"number\") {\n        value += entryIdCounter;\n        entryIdCounter = generatorWrapper[++createCircularNode];\n      }\n      var entry = undefined;\n      if (entryIdCounter instanceof CustomError) {\n        var currentEntry = entryIdCounter;\n      } else {\n        currentEntry = objectTransformationFallback;\n        createCircularNode--;\n      }\n      if (currentEntry.checkIfFrozen) {\n        entryIdCounter = generatorWrapper[++createCircularNode];\n        entry = generatorWrapper;\n        var foundEntry = createCircularNode;\n        if (typeof entryIdCounter == \"function\") {\n          entryIdCounter = entryIdCounter();\n          entry[foundEntry] = entryIdCounter;\n        }\n        entry = entryIdCounter;\n      }\n      entryIdCounter = generatorWrapper[++createCircularNode];\n      foundEntry = value + 1;\n      if (typeof entryIdCounter === \"number\" && entryIdCounter < 0) {\n        foundEntry -= entryIdCounter;\n        entryIdCounter = generatorWrapper[++createCircularNode];\n      }\n      for (; value < foundEntry; value++) {\n        var resolveFunction = key[value];\n        iterateEntries(value, value, entry ? findEntry(currentEntry, entry, resolveFunction) : CustomMap(currentEntry, resolveFunction));\n      }\n    }\n    if (cleanupSymbol in generatorWrapper && adElementSymbol in generatorWrapper && transformationsSymbol in generatorWrapper) {\n      generatorWrapper.length = 0;\n    }\n    return value;\n  }\n  var cleanupSymbol = Symbol();\n  function getTransformation(generatorWrapper, value) {\n    var CustomMap = generatorWrapper[value];\n    if (CustomMap) {\n      return CustomMap;\n    }\n    if (CustomMap = generatorWrapper.adPropertyHandlerSymbol) {\n      if (CustomMap = CustomMap[value]) {\n        if (Array.isArray(CustomMap)) {\n          if (CustomMap[0] instanceof CustomError) {\n            CustomMap = CustomMap;\n          } else {\n            CustomMap = [objectTransformationInstance, CustomMap];\n          }\n        } else {\n          CustomMap = [CustomMap, undefined];\n        }\n        var findEntry = CustomMap[0].entryIdCounter;\n        if (CustomMap = CustomMap[1]) {\n          var iterateEntries = getAdPropertyHandler(CustomMap);\n          var createCircularNode = initializeTransformations(CustomMap).entryIdCounter;\n          if (CustomMap = generatorWrapper.tasks) {\n            CustomMap = CustomMap(createCircularNode, iterateEntries);\n          } else {\n            CustomMap = function (entryIdCounter, key, value) {\n              return findEntry(entryIdCounter, key, value, createCircularNode, iterateEntries);\n            };\n          }\n        } else {\n          CustomMap = findEntry;\n        }\n        return generatorWrapper[value] = CustomMap;\n      }\n    }\n  }\n  function applyTransformations(generatorWrapper, value, CustomMap) {\n    for (var findEntry = getRawBitFlags(generatorWrapper), iterateEntries = +!!(findEntry & 512) - 1, createCircularNode = generatorWrapper.length, entryIdCounter = createCircularNode + (findEntry & 256 ? -1 : 0), key = findEntry & 512 ? 1 : 0; key < entryIdCounter; key++) {\n      var value = generatorWrapper[key];\n      if (value != null) {\n        var entry = key - iterateEntries;\n        var currentEntry = getTransformation(CustomMap, entry);\n        if (currentEntry) {\n          currentEntry(value, value, entry);\n        }\n      }\n    }\n    if (findEntry & 256) {\n      generatorWrapper = generatorWrapper[createCircularNode - 1];\n      for (var foundEntry in generatorWrapper) {\n        findEntry = +foundEntry;\n        if (!Number.isNaN(findEntry)) {\n          iterateEntries = generatorWrapper[foundEntry];\n          if (iterateEntries != null && (createCircularNode = getTransformation(CustomMap, findEntry))) {\n            createCircularNode(value, iterateEntries, findEntry);\n          }\n        }\n      }\n    }\n  }\n  function createTransformation(generatorWrapper) {\n    return new CustomError(generatorWrapper, false);\n  }\n  function applyStringOrNumberTransformation(generatorWrapper, value, CustomMap) {\n    generatorWrapper: if (value != null) {\n      if (isNumericString(value)) {\n        if (typeof value === \"string\") {\n          value = convertStringToInt64(value);\n          break generatorWrapper;\n        }\n        if (typeof value === \"number\") {\n          value = convertSafeInteger(value);\n          break generatorWrapper;\n        }\n      }\n      value = undefined;\n    }\n    if (value != null) {\n      if (typeof value === \"string\") {\n        createSigned64(value);\n      }\n      if (value != null) {\n        writeFieldHeader(generatorWrapper, CustomMap, 0);\n        if (typeof value === \"number\") {\n          generatorWrapper = generatorWrapper.entryIdCounter;\n          calculateIntegers(value);\n          writeVarint32(generatorWrapper, lowOrderInteger, highOrderInteger);\n        } else {\n          CustomMap = createSigned64(value);\n          writeVarint32(generatorWrapper.entryIdCounter, CustomMap.tasks, CustomMap.entryIdCounter);\n        }\n      }\n    }\n  }\n  function applyBooleanTransformation(generatorWrapper, value, CustomMap) {\n    value = parseNullableInt32(value);\n    if (value != null && value != null) {\n      writeFieldHeader(generatorWrapper, CustomMap, 0);\n      writeVarint64(generatorWrapper.entryIdCounter, value);\n    }\n  }\n  function applyArrayOrObjectTransformation(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (value instanceof AdElement) {\n      value = value.getSingletonInstance;\n    } else if (Array.isArray(value)) {\n      value = onFulfilled(value, findEntry[0], findEntry[1]);\n    } else {\n      value = undefined;\n    }\n    if (value != null) {\n      CustomMap = finalizeAndAppendBuffer(generatorWrapper, CustomMap);\n      iterateEntries(value, generatorWrapper);\n      updateLengthPrefix(generatorWrapper, CustomMap);\n    }\n  }\n  var arrayTransformationInstance;\n  var float64Transformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = parseNumericValue(value);\n    if (value != null) {\n      writeFieldHeader(generatorWrapper, CustomMap, 1);\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      CustomMap = unusedVar1 || (unusedVar1 = new DataView(new ArrayBuffer(8)));\n      CustomMap.setFloat64(0, +value, true);\n      lowOrderInteger = CustomMap.getUint32(0, true);\n      highOrderInteger = CustomMap.getUint32(4, true);\n      writeBytes(generatorWrapper, lowOrderInteger);\n      writeBytes(generatorWrapper, highOrderInteger);\n    }\n  });\n  var float32Transformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = parseNumericValue(value);\n    if (value != null) {\n      writeFieldHeader(generatorWrapper, CustomMap, 5);\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      CustomMap = unusedVar1 || (unusedVar1 = new DataView(new ArrayBuffer(8)));\n      CustomMap.setFloat32(0, +value, true);\n      highOrderInteger = 0;\n      lowOrderInteger = CustomMap.getUint32(0, true);\n      writeBytes(generatorWrapper, lowOrderInteger);\n    }\n  });\n  var stringOrNumberTransformation1 = createTransformation(applyStringOrNumberTransformation);\n  var stringOrNumberTransformation2 = createTransformation(applyStringOrNumberTransformation);\n  var safeIntegerTransformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    generatorWrapper: if (value != null) {\n      if (isNumericString(value)) {\n        if (typeof value === \"string\") {\n          var findEntry = Math.trunc(Number(value));\n          if (Number.isSafeInteger(findEntry) && findEntry >= 0) {\n            value = String(findEntry);\n          } else {\n            findEntry = value.indexOf(\".\");\n            if (-1 !== findEntry) {\n              value = value.substring(0, findEntry);\n            }\n            if (!isPositiveInt64(value)) {\n              parseAndSetBigIntegers(value);\n              value = formatLongNumber(lowOrderInteger, highOrderInteger);\n            }\n          }\n          break generatorWrapper;\n        }\n        if (typeof value === \"number\") {\n          value = Math.trunc(value);\n          if (value >= 0 && Number.isSafeInteger(value)) {\n            value = value;\n          } else {\n            value = normalizeNumber(value);\n          }\n          break generatorWrapper;\n        }\n      }\n      value = undefined;\n    }\n    if (value != null) {\n      if (typeof value === \"string\") {\n        createUnsigned64(value);\n      }\n      if (value != null) {\n        writeFieldHeader(generatorWrapper, CustomMap, 0);\n        if (typeof value === \"number\") {\n          generatorWrapper = generatorWrapper.entryIdCounter;\n          calculateIntegers(value);\n          writeVarint32(generatorWrapper, lowOrderInteger, highOrderInteger);\n        } else {\n          CustomMap = createUnsigned64(value);\n          writeVarint32(generatorWrapper.entryIdCounter, CustomMap.tasks, CustomMap.entryIdCounter);\n        }\n      }\n    }\n  });\n  var booleanTransformation1 = createTransformation(applyBooleanTransformation);\n  var booleanTransformation2 = createTransformation(applyBooleanTransformation);\n  var booleanFlagTransformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = parseBooleanOrNumber(value);\n    if (value != null) {\n      writeFieldHeader(generatorWrapper, CustomMap, 0);\n      generatorWrapper.entryIdCounter.entryIdCounter.push(value ? 1 : 0);\n    }\n  });\n  var enumTransformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = stringOrNull(value);\n    if (value != null) {\n      writeBytesField(generatorWrapper, CustomMap, encodeString(value));\n    }\n  });\n  arrayTransformationInstance = new CustomError(function (generatorWrapper, value, CustomMap) {\n    value = filterAdProperties(stringOrNull, value);\n    if (value != null) {\n      for (var findEntry = 0; findEntry < value.length; findEntry++) {\n        var iterateEntries = generatorWrapper;\n        var createCircularNode = CustomMap;\n        var entryIdCounter = value[findEntry];\n        if (entryIdCounter != null) {\n          writeBytesField(iterateEntries, createCircularNode, encodeString(entryIdCounter));\n        }\n      }\n    }\n  }, false);\n  var arrayOfObjectsTransformationInstance;\n  var objectTransformationInstance = new CustomError(applyArrayOrObjectTransformation, true);\n  var objectTransformationFallback = new CustomError(applyArrayOrObjectTransformation, true);\n  arrayOfObjectsTransformationInstance = new CustomError(function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        applyArrayOrObjectTransformation(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    }\n  }, true);\n  var arrayOfIntegersTransformationInstance;\n  var integerTransformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = parseNullableUInt32(value);\n    if (value != null && value != null) {\n      writeFieldHeader(generatorWrapper, CustomMap, 0);\n      writeVarint(generatorWrapper.entryIdCounter, value);\n    }\n  });\n  var parsedIntegerTransformation = createTransformation(function (generatorWrapper, value, CustomMap) {\n    value = parseNullableInt32(value);\n    if (value != null) {\n      value = parseInt(value, 10);\n      writeFieldHeader(generatorWrapper, CustomMap, 0);\n      writeVarint64(generatorWrapper.entryIdCounter, value);\n    }\n  });\n  arrayOfIntegersTransformationInstance = new CustomError(function (generatorWrapper, value, CustomMap) {\n    value = filterAdProperties(parseNullableInt32, value);\n    if (value != null && value.length) {\n      CustomMap = finalizeAndAppendBuffer(generatorWrapper, CustomMap);\n      for (var findEntry = 0; findEntry < value.length; findEntry++) {\n        writeVarint64(generatorWrapper.entryIdCounter, value[findEntry]);\n      }\n      updateLengthPrefix(generatorWrapper, CustomMap);\n    }\n  }, false);\n  function serializeTransformations(generatorWrapper) {\n    return function () {\n      var value = new ProtobufWriter();\n      applyTransformations(this.getSingletonInstance, value, initializeTransformations(generatorWrapper));\n      appendBuffer(value, value.entryIdCounter.end());\n      for (var CustomMap = new Uint8Array(value.tasks), findEntry = value.setTimeoutWrapper, iterateEntries = findEntry.length, createCircularNode = 0, entryIdCounter = 0; entryIdCounter < iterateEntries; entryIdCounter++) {\n        var key = findEntry[entryIdCounter];\n        CustomMap.set(key, createCircularNode);\n        createCircularNode += key.length;\n      }\n      value.setTimeoutWrapper = [CustomMap];\n      return CustomMap;\n    };\n  }\n  function parseAndValidateArray(generatorWrapper) {\n    return function (value) {\n      if (value == null || value == \"\") {\n        value = new generatorWrapper();\n      } else {\n        value = JSON.parse(value);\n        if (!Array.isArray(value)) {\n          throw Error(\"dnarr\");\n        }\n        value = createInstanceWithTemporaryData(generatorWrapper, setFlag32(value));\n      }\n      return value;\n    };\n  }\n  var ErrorLogger = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(ErrorLogger, AdElement);\n  var ErrorDetails = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    this.hasError = generatorWrapper;\n    this.context = value.context;\n    this.msg = value.message || \"\";\n    this.writeBytes = value.writeBytes || \"jserror\";\n    this.meta = CustomMap;\n  };\n  var isValidError = function (generatorWrapper) {\n    return !!(generatorWrapper.hasError && generatorWrapper.meta && generatorWrapper.writeBytes);\n  };\n  var noopFunction = function () {};\n  var once = function (generatorWrapper) {\n    var value = false,\n      CustomMap;\n    return function () {\n      if (!value) {\n        CustomMap = generatorWrapper();\n        value = true;\n      }\n      return CustomMap;\n    };\n  };\n  var clearFunction = function (generatorWrapper) {\n    var value = generatorWrapper;\n    return function () {\n      if (value) {\n        var CustomMap = value;\n        value = null;\n        CustomMap();\n      }\n    };\n  };\n  var debounceFunction = function (generatorWrapper) {\n    var value = 0;\n    var CustomMap = false;\n    var findEntry = [];\n    var iterateEntries = function () {\n      value = 0;\n      if (CustomMap) {\n        CustomMap = false;\n        createCircularNode();\n      }\n    };\n    var createCircularNode = function () {\n      value = globalScope.setTimeout(iterateEntries, 1000);\n      var entryIdCounter = findEntry;\n      findEntry = [];\n      generatorWrapper.apply(undefined, entryIdCounter);\n    };\n    return function (entryIdCounter) {\n      findEntry = arguments;\n      if (value) {\n        CustomMap = true;\n      } else {\n        createCircularNode();\n      }\n    };\n  };\n  var supportsPassive = once(function () {\n    var generatorWrapper = false;\n    try {\n      var value = Object.defineProperty({}, \"passive\", {\n        get() {\n          generatorWrapper = true;\n        }\n      });\n      globalScope.addEventListener(\"test\", null, value);\n    } catch (CustomMap) {}\n    return generatorWrapper;\n  });\n  function normalizeEventOptions(generatorWrapper) {\n    if (generatorWrapper) {\n      if (generatorWrapper.passive && supportsPassive()) {\n        return generatorWrapper;\n      } else {\n        return generatorWrapper.capture || false;\n      }\n    } else {\n      return false;\n    }\n  }\n  var addEventListenerWithNormalization = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper.addEventListener) {\n      generatorWrapper.addEventListener(value, CustomMap, normalizeEventOptions(findEntry));\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var removeEventListenerWithNormalization = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.removeEventListener) {\n      generatorWrapper.removeEventListener(value, CustomMap, normalizeEventOptions());\n    }\n  };\n  function forEachInObject(generatorWrapper, value, CustomMap) {\n    for (var findEntry in generatorWrapper) value.call(CustomMap, generatorWrapper[findEntry], findEntry, generatorWrapper);\n  }\n  function filterObject(generatorWrapper, value) {\n    var CustomMap = {},\n      findEntry;\n    for (findEntry in generatorWrapper) if (value.call(undefined, generatorWrapper[findEntry], findEntry, generatorWrapper)) {\n      CustomMap[findEntry] = generatorWrapper[findEntry];\n    }\n    return CustomMap;\n  }\n  function everyInObject(generatorWrapper) {\n    var value = MraidMethods,\n      CustomMap;\n    for (CustomMap in value) if (!generatorWrapper.call(undefined, value[CustomMap], CustomMap, value)) {\n      return false;\n    }\n    return true;\n  }\n  function valuesOfObject(generatorWrapper) {\n    var findEntry;\n    var value = [];\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper) value[CustomMap++] = generatorWrapper[findEntry];\n    return value;\n  }\n  function keysOfObject(generatorWrapper) {\n    var findEntry;\n    var value = [];\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper) value[CustomMap++] = findEntry;\n    return value;\n  }\n  function getObjectPathValue(generatorWrapper, value) {\n    var CustomMap = isArrayLike(value);\n    var findEntry = CustomMap ? value : arguments;\n    for (CustomMap = CustomMap ? 0 : 1; CustomMap < findEntry.length; CustomMap++) {\n      if (generatorWrapper == null) {\n        return;\n      }\n      generatorWrapper = generatorWrapper[findEntry[CustomMap]];\n    }\n    return generatorWrapper;\n  }\n  function hasOwnPropertySafe(generatorWrapper, value) {\n    return generatorWrapper !== null && value in generatorWrapper;\n  }\n  function containsValue(generatorWrapper, value) {\n    for (var CustomMap in generatorWrapper) if (generatorWrapper[CustomMap] == value) {\n      return true;\n    }\n    return false;\n  }\n  function findKeyInObject(generatorWrapper) {\n    var value = AdEventNames,\n      CustomMap;\n    for (CustomMap in value) if (generatorWrapper.call(undefined, value[CustomMap], CustomMap, value)) {\n      return CustomMap;\n    }\n  }\n  function isEmptyObject(generatorWrapper) {\n    for (var value in generatorWrapper) return false;\n    return true;\n  }\n  function clearObject(generatorWrapper) {\n    for (var value in generatorWrapper) delete generatorWrapper[value];\n  }\n  function getObjectPropertyOrDefault(generatorWrapper, value, CustomMap) {\n    if (generatorWrapper !== null && value in generatorWrapper) {\n      return generatorWrapper[value];\n    } else {\n      return CustomMap;\n    }\n  }\n  var commonObjectKeys = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\n  function extendObject(generatorWrapper, value) {\n    for (var CustomMap, findEntry, iterateEntries = 1; iterateEntries < arguments.length; iterateEntries++) {\n      findEntry = arguments[iterateEntries];\n      for (CustomMap in findEntry) generatorWrapper[CustomMap] = findEntry[CustomMap];\n      for (var createCircularNode = 0; createCircularNode < commonObjectKeys.length; createCircularNode++) {\n        CustomMap = commonObjectKeys[createCircularNode];\n        if (Object.prototype.hasOwnProperty.call(findEntry, CustomMap)) {\n          generatorWrapper[CustomMap] = findEntry[CustomMap];\n        }\n      }\n    }\n  }\n  var trustedTypesPolicy,\n    getTrustedTypesPolicy = function () {\n      if (undefined === trustedTypesPolicy) {\n        var generatorWrapper = null;\n        var value = globalScope.trustedTypes;\n        if (value && value.createPolicy) {\n          try {\n            generatorWrapper = value.createPolicy(\"goog#html\", {\n              createHTML: identityFunction,\n              createScript: identityFunction,\n              createScriptURL: identityFunction\n            });\n          } catch (CustomMap) {\n            if (globalScope.console) {\n              globalScope.console.hasError(CustomMap.message);\n            }\n          }\n          trustedTypesPolicy = generatorWrapper;\n        } else {\n          trustedTypesPolicy = generatorWrapper;\n        }\n      }\n      return trustedTypesPolicy;\n    };\n  var TrustedURL = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  TrustedURL.prototype.toString = function () {\n    return this.entryIdCounter + \"\";\n  };\n  var trustedURLMarker = {};\n  var createTrustedURL = function (generatorWrapper) {\n    var value = getTrustedTypesPolicy();\n    if (value) {\n      generatorWrapper = value.createScriptURL(generatorWrapper);\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    return new TrustedURL(generatorWrapper, trustedURLMarker);\n  };\n  var MediaSourceURL = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  MediaSourceURL.prototype.toString = function () {\n    return this.entryIdCounter;\n  };\n  var invalidClosureURL = new MediaSourceURL(\"about:invalid#zClosurez\");\n  var URLSchemeValidator = function (generatorWrapper) {\n    this.booleanTransformation1 = generatorWrapper;\n  };\n  function createSchemeValidator(generatorWrapper) {\n    return new URLSchemeValidator(function (value) {\n      return value.substr(0, generatorWrapper.length + 1).toLowerCase() === generatorWrapper + \":\";\n    });\n  }\n  var allowedURLSchemes = [createSchemeValidator(\"data\"), createSchemeValidator(\"http\"), createSchemeValidator(\"https\"), createSchemeValidator(\"mailto\"), createSchemeValidator(\"ftp\"), new URLSchemeValidator(function (generatorWrapper) {\n    return /^[^:]*([/?#]|$)/.test(generatorWrapper);\n  })];\n  function createObjectURLWithValidation(generatorWrapper) {\n    if (typeof MediaSource !== \"undefined\" && generatorWrapper instanceof MediaSource) {\n      return new MediaSourceURL(URL.createObjectURL(generatorWrapper));\n    }\n    var value = generatorWrapper.type.match(/^([^;]+)(?:;\\w+=(?:\\w+|\"[\\w;,= ]+\"))*$/i);\n    if ((value == null ? undefined : value.length) !== 2 || !(/^image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif|avif|x-ms-bmp)$/i.test(value[1]) || /^video\\/(?:mpeg|mp4|ogg|webm|x-matroska|quicktime|x-ms-wmv)$/i.test(value[1]) || /^audio\\/(?:3gpp2|3gpp|aac|amr|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)$/i.test(value[1]) || /^font\\/\\w+/i.test(value[1]))) {\n      throw Error(\"\");\n    }\n    return new MediaSourceURL(URL.createObjectURL(generatorWrapper));\n  }\n  var safeURLPattern = /^\\s*(?!javascript:)(?:[\\w+.-]+:|[^:/?#]*(?:[/?#]|$))/i;\n  var safeHTMLMarker = {};\n  var SafeHTML = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  SafeHTML.prototype.toString = function () {\n    return this.entryIdCounter.toString();\n  };\n  var emptySafeHTML = new SafeHTML(\"\", safeHTMLMarker);\n  var safeStyleMarker = {};\n  var SafeHtml = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  SafeHtml.prototype.toString = function () {\n    return this.entryIdCounter.toString();\n  };\n  var unwrapSafeHtml = function (generatorWrapper) {\n    if (generatorWrapper instanceof SafeHtml && generatorWrapper.constructor === SafeHtml) {\n      return generatorWrapper.entryIdCounter;\n    } else {\n      return \"type_error:SafeHtml\";\n    }\n  };\n  function createSafeHtmlFromTemplate(generatorWrapper) {\n    var value = sliceArguments.apply(1, arguments);\n    if (value.length === 0) {\n      return createTrustedURL(generatorWrapper[0]);\n    }\n    for (var CustomMap = generatorWrapper[0], findEntry = 0; findEntry < value.length; findEntry++) {\n      CustomMap += encodeURIComponent(value[findEntry]) + generatorWrapper[findEntry + 1];\n    }\n    return createTrustedURL(CustomMap);\n  }\n  function createSafeStyleFromTemplate(generatorWrapper) {\n    for (var value = sliceArguments.apply(1, arguments), CustomMap = generatorWrapper[0], findEntry = 0; findEntry < generatorWrapper.length - 1; findEntry++) {\n      CustomMap += String(value[findEntry]) + generatorWrapper[findEntry + 1];\n    }\n    if (/[<>]/.test(CustomMap)) {\n      throw Error(\"Forbidden characters in style string: \" + CustomMap);\n    }\n    return new SafeHTML(CustomMap, safeHTMLMarker);\n  }\n  var Coordinate = function (generatorWrapper, value) {\n    if (undefined !== generatorWrapper) {\n      this.inheritPrototype = generatorWrapper;\n    } else {\n      this.inheritPrototype = 0;\n    }\n    if (undefined !== value) {\n      this.globalScope = value;\n    } else {\n      this.globalScope = 0;\n    }\n  };\n  Coordinate.prototype.ceilRectangle = function () {\n    this.inheritPrototype = Math.ceilRectangle(this.inheritPrototype);\n    this.globalScope = Math.ceilRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.floorRectangle = function () {\n    this.inheritPrototype = Math.floorRectangle(this.inheritPrototype);\n    this.globalScope = Math.floorRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.roundRectangle = function () {\n    this.inheritPrototype = Math.roundRectangle(this.inheritPrototype);\n    this.globalScope = Math.roundRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.scaleRectangle = function (generatorWrapper, value) {\n    this.inheritPrototype *= generatorWrapper;\n    if (typeof value === \"number\") {\n      this.globalScope *= value;\n    } else {\n      this.globalScope *= generatorWrapper;\n    }\n    return this;\n  };\n  var Size = function (generatorWrapper, value) {\n    this.width = generatorWrapper;\n    this.height = value;\n  };\n  var areSizesEqual = function (generatorWrapper, value) {\n    if (generatorWrapper == value) {\n      return true;\n    } else {\n      if (generatorWrapper && value) {\n        return generatorWrapper.width == value.width && generatorWrapper.height == value.height;\n      } else {\n        return false;\n      }\n    }\n  };\n  setTimeoutWrapper = Size.prototype;\n  setTimeoutWrapper.aspectRatio = function () {\n    return this.width / this.height;\n  };\n  setTimeoutWrapper.isEmpty = function () {\n    return !(this.width * this.height);\n  };\n  setTimeoutWrapper.ceilRectangle = function () {\n    this.width = Math.ceilRectangle(this.width);\n    this.height = Math.ceilRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.floorRectangle = function () {\n    this.width = Math.floorRectangle(this.width);\n    this.height = Math.floorRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.roundRectangle = function () {\n    this.width = Math.roundRectangle(this.width);\n    this.height = Math.roundRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.scaleRectangle = function (generatorWrapper, value) {\n    this.width *= generatorWrapper;\n    if (typeof value === \"number\") {\n      this.height *= value;\n    } else {\n      this.height *= generatorWrapper;\n    }\n    return this;\n  };\n  function setElementSafeHtml(generatorWrapper, value) {\n    if (generatorWrapper.nodeType === 1) {\n      var CustomMap = generatorWrapper.tagName;\n      if (CustomMap === \"SCRIPT\" || CustomMap === \"STYLE\") {\n        throw Error(\"\");\n      }\n    }\n    generatorWrapper.innerHTML = unwrapSafeHtml(value);\n  }\n  function setElementSrcFromTrustedUrl(generatorWrapper, value) {\n    if (value instanceof TrustedURL && value.constructor === TrustedURL) {\n      generatorWrapper.src = value.entryIdCounter;\n    } else {\n      generatorWrapper.src = \"type_error:TrustedResourceUrl\";\n    }\n    var CustomMap, findEntry;\n    if (CustomMap = (value = (findEntry = (CustomMap = (generatorWrapper.ownerDocument && generatorWrapper.ownerDocument.defaultView || window).document).querySelector) == null ? undefined : findEntry.call(CustomMap, \"script[nonce]\")) ? value.nonce || value.getAttribute(\"nonce\") || \"\" : \"\") {\n      generatorWrapper.setAttribute(\"nonce\", CustomMap);\n    }\n  }\n  var debugStringifyObject = function (generatorWrapper) {\n    var value = [];\n    var CustomMap = [];\n    var findEntry = {};\n    var iterateEntries = function (createCircularNode, entryIdCounter) {\n      var key = entryIdCounter + \"  \";\n      try {\n        if (undefined === createCircularNode) {\n          value.push(\"undefined\");\n        } else if (createCircularNode === null) {\n          value.push(\"NULL\");\n        } else if (typeof createCircularNode === \"string\") {\n          value.push('\"' + createCircularNode.replace(/\\n/g, \"\\n\" + entryIdCounter) + '\"');\n        } else if (typeof createCircularNode === \"function\") {\n          value.push(String(createCircularNode).replace(/\\n/g, \"\\n\" + entryIdCounter));\n        } else if (isObjectOrFunction(createCircularNode)) {\n          if (!createCircularNode[uniqueIdProperty]) {\n            CustomMap.push(createCircularNode);\n          }\n          var value = getUniqueId(createCircularNode);\n          if (findEntry[value]) {\n            value.push(\"*** reference loop detected (id=\" + value + \") ***\");\n          } else {\n            findEntry[value] = true;\n            value.push(\"{\");\n            for (var entry in createCircularNode) if (typeof createCircularNode[entry] !== \"function\") {\n              value.push(\"\\n\");\n              value.push(key);\n              value.push(entry + \" = \");\n              iterateEntries(createCircularNode[entry], key);\n            }\n            value.push(\"\\n\" + entryIdCounter + \"}\");\n            delete findEntry[value];\n          }\n        } else {\n          value.push(createCircularNode);\n        }\n      } catch (currentEntry) {\n        value.push(\"*** \" + currentEntry + \" ***\");\n      }\n    };\n    iterateEntries(generatorWrapper, \"\");\n    for (generatorWrapper = 0; generatorWrapper < CustomMap.length; generatorWrapper++) {\n      removeUniqueId(CustomMap[generatorWrapper]);\n    }\n    return value.join(\"\");\n  };\n  function writeSafeHtmlToDocument(generatorWrapper, v",
  "  }\n  var trustedTypesPolicy,\n    getTrustedTypesPolicy = function () {\n      if (undefined === trustedTypesPolicy) {\n        var generatorWrapper = null;\n        var value = globalScope.trustedTypes;\n        if (value && value.createPolicy) {\n          try {\n            generatorWrapper = value.createPolicy(\"goog#html\", {\n              createHTML: identityFunction,\n              createScript: identityFunction,\n              createScriptURL: identityFunction\n            });\n          } catch (CustomMap) {\n            if (globalScope.console) {\n              globalScope.console.hasError(CustomMap.message);\n            }\n          }\n          trustedTypesPolicy = generatorWrapper;\n        } else {\n          trustedTypesPolicy = generatorWrapper;\n        }\n      }\n      return trustedTypesPolicy;\n    };\n  var TrustedURL = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  TrustedURL.prototype.toString = function () {\n    return this.entryIdCounter + \"\";\n  };\n  var trustedURLMarker = {};\n  var createTrustedURL = function (generatorWrapper) {\n    var value = getTrustedTypesPolicy();\n    if (value) {\n      generatorWrapper = value.createScriptURL(generatorWrapper);\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    return new TrustedURL(generatorWrapper, trustedURLMarker);\n  };\n  var MediaSourceURL = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  MediaSourceURL.prototype.toString = function () {\n    return this.entryIdCounter;\n  };\n  var invalidClosureURL = new MediaSourceURL(\"about:invalid#zClosurez\");\n  var URLSchemeValidator = function (generatorWrapper) {\n    this.booleanTransformation1 = generatorWrapper;\n  };\n  function createSchemeValidator(generatorWrapper) {\n    return new URLSchemeValidator(function (value) {\n      return value.substr(0, generatorWrapper.length + 1).toLowerCase() === generatorWrapper + \":\";\n    });\n  }\n  var allowedURLSchemes = [createSchemeValidator(\"data\"), createSchemeValidator(\"http\"), createSchemeValidator(\"https\"), createSchemeValidator(\"mailto\"), createSchemeValidator(\"ftp\"), new URLSchemeValidator(function (generatorWrapper) {\n    return /^[^:]*([/?#]|$)/.test(generatorWrapper);\n  })];\n  function createObjectURLWithValidation(generatorWrapper) {\n    if (typeof MediaSource !== \"undefined\" && generatorWrapper instanceof MediaSource) {\n      return new MediaSourceURL(URL.createObjectURL(generatorWrapper));\n    }\n    var value = generatorWrapper.type.match(/^([^;]+)(?:;\\w+=(?:\\w+|\"[\\w;,= ]+\"))*$/i);\n    if ((value == null ? undefined : value.length) !== 2 || !(/^image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon|heic|heif|avif|x-ms-bmp)$/i.test(value[1]) || /^video\\/(?:mpeg|mp4|ogg|webm|x-matroska|quicktime|x-ms-wmv)$/i.test(value[1]) || /^audio\\/(?:3gpp2|3gpp|aac|amr|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)$/i.test(value[1]) || /^font\\/\\w+/i.test(value[1]))) {\n      throw Error(\"\");\n    }\n    return new MediaSourceURL(URL.createObjectURL(generatorWrapper));\n  }\n  var safeURLPattern = /^\\s*(?!javascript:)(?:[\\w+.-]+:|[^:/?#]*(?:[/?#]|$))/i;\n  var safeHTMLMarker = {};\n  var SafeHTML = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  SafeHTML.prototype.toString = function () {\n    return this.entryIdCounter.toString();\n  };\n  var emptySafeHTML = new SafeHTML(\"\", safeHTMLMarker);\n  var safeStyleMarker = {};\n  var SafeHtml = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  SafeHtml.prototype.toString = function () {\n    return this.entryIdCounter.toString();\n  };\n  var unwrapSafeHtml = function (generatorWrapper) {\n    if (generatorWrapper instanceof SafeHtml && generatorWrapper.constructor === SafeHtml) {\n      return generatorWrapper.entryIdCounter;\n    } else {\n      return \"type_error:SafeHtml\";\n    }\n  };\n  function createSafeHtmlFromTemplate(generatorWrapper) {\n    var value = sliceArguments.apply(1, arguments);\n    if (value.length === 0) {\n      return createTrustedURL(generatorWrapper[0]);\n    }\n    for (var CustomMap = generatorWrapper[0], findEntry = 0; findEntry < value.length; findEntry++) {\n      CustomMap += encodeURIComponent(value[findEntry]) + generatorWrapper[findEntry + 1];\n    }\n    return createTrustedURL(CustomMap);\n  }\n  function createSafeStyleFromTemplate(generatorWrapper) {\n    for (var value = sliceArguments.apply(1, arguments), CustomMap = generatorWrapper[0], findEntry = 0; findEntry < generatorWrapper.length - 1; findEntry++) {\n      CustomMap += String(value[findEntry]) + generatorWrapper[findEntry + 1];\n    }\n    if (/[<>]/.test(CustomMap)) {\n      throw Error(\"Forbidden characters in style string: \" + CustomMap);\n    }\n    return new SafeHTML(CustomMap, safeHTMLMarker);\n  }\n  var Coordinate = function (generatorWrapper, value) {\n    if (undefined !== generatorWrapper) {\n      this.inheritPrototype = generatorWrapper;\n    } else {\n      this.inheritPrototype = 0;\n    }\n    if (undefined !== value) {\n      this.globalScope = value;\n    } else {\n      this.globalScope = 0;\n    }\n  };\n  Coordinate.prototype.ceilRectangle = function () {\n    this.inheritPrototype = Math.ceilRectangle(this.inheritPrototype);\n    this.globalScope = Math.ceilRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.floorRectangle = function () {\n    this.inheritPrototype = Math.floorRectangle(this.inheritPrototype);\n    this.globalScope = Math.floorRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.roundRectangle = function () {\n    this.inheritPrototype = Math.roundRectangle(this.inheritPrototype);\n    this.globalScope = Math.roundRectangle(this.globalScope);\n    return this;\n  };\n  Coordinate.prototype.scaleRectangle = function (generatorWrapper, value) {\n    this.inheritPrototype *= generatorWrapper;\n    if (typeof value === \"number\") {\n      this.globalScope *= value;\n    } else {\n      this.globalScope *= generatorWrapper;\n    }\n    return this;\n  };\n  var Size = function (generatorWrapper, value) {\n    this.width = generatorWrapper;\n    this.height = value;\n  };\n  var areSizesEqual = function (generatorWrapper, value) {\n    if (generatorWrapper == value) {\n      return true;\n    } else {\n      if (generatorWrapper && value) {\n        return generatorWrapper.width == value.width && generatorWrapper.height == value.height;\n      } else {\n        return false;\n      }\n    }\n  };\n  setTimeoutWrapper = Size.prototype;\n  setTimeoutWrapper.aspectRatio = function () {\n    return this.width / this.height;\n  };\n  setTimeoutWrapper.isEmpty = function () {\n    return !(this.width * this.height);\n  };\n  setTimeoutWrapper.ceilRectangle = function () {\n    this.width = Math.ceilRectangle(this.width);\n    this.height = Math.ceilRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.floorRectangle = function () {\n    this.width = Math.floorRectangle(this.width);\n    this.height = Math.floorRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.roundRectangle = function () {\n    this.width = Math.roundRectangle(this.width);\n    this.height = Math.roundRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.scaleRectangle = function (generatorWrapper, value) {\n    this.width *= generatorWrapper;\n    if (typeof value === \"number\") {\n      this.height *= value;\n    } else {\n      this.height *= generatorWrapper;\n    }\n    return this;\n  };\n  function setElementSafeHtml(generatorWrapper, value) {\n    if (generatorWrapper.nodeType === 1) {\n      var CustomMap = generatorWrapper.tagName;\n      if (CustomMap === \"SCRIPT\" || CustomMap === \"STYLE\") {\n        throw Error(\"\");\n      }\n    }\n    generatorWrapper.innerHTML = unwrapSafeHtml(value);\n  }\n  function setElementSrcFromTrustedUrl(generatorWrapper, value) {\n    if (value instanceof TrustedURL && value.constructor === TrustedURL) {\n      generatorWrapper.src = value.entryIdCounter;\n    } else {\n      generatorWrapper.src = \"type_error:TrustedResourceUrl\";\n    }\n    var CustomMap, findEntry;\n    if (CustomMap = (value = (findEntry = (CustomMap = (generatorWrapper.ownerDocument && generatorWrapper.ownerDocument.defaultView || window).document).querySelector) == null ? undefined : findEntry.call(CustomMap, \"script[nonce]\")) ? value.nonce || value.getAttribute(\"nonce\") || \"\" : \"\") {\n      generatorWrapper.setAttribute(\"nonce\", CustomMap);\n    }\n  }\n  var debugStringifyObject = function (generatorWrapper) {\n    var value = [];\n    var CustomMap = [];\n    var findEntry = {};\n    var iterateEntries = function (createCircularNode, entryIdCounter) {\n      var key = entryIdCounter + \"  \";\n      try {\n        if (undefined === createCircularNode) {\n          value.push(\"undefined\");\n        } else if (createCircularNode === null) {\n          value.push(\"NULL\");\n        } else if (typeof createCircularNode === \"string\") {\n          value.push('\"' + createCircularNode.replace(/\\n/g, \"\\n\" + entryIdCounter) + '\"');\n        } else if (typeof createCircularNode === \"function\") {\n          value.push(String(createCircularNode).replace(/\\n/g, \"\\n\" + entryIdCounter));\n        } else if (isObjectOrFunction(createCircularNode)) {\n          if (!createCircularNode[uniqueIdProperty]) {\n            CustomMap.push(createCircularNode);\n          }\n          var value = getUniqueId(createCircularNode);\n          if (findEntry[value]) {\n            value.push(\"*** reference loop detected (id=\" + value + \") ***\");\n          } else {\n            findEntry[value] = true;\n            value.push(\"{\");\n            for (var entry in createCircularNode) if (typeof createCircularNode[entry] !== \"function\") {\n              value.push(\"\\n\");\n              value.push(key);\n              value.push(entry + \" = \");\n              iterateEntries(createCircularNode[entry], key);\n            }\n            value.push(\"\\n\" + entryIdCounter + \"}\");\n            delete findEntry[value];\n          }\n        } else {\n          value.push(createCircularNode);\n        }\n      } catch (currentEntry) {\n        value.push(\"*** \" + currentEntry + \" ***\");\n      }\n    };\n    iterateEntries(generatorWrapper, \"\");\n    for (generatorWrapper = 0; generatorWrapper < CustomMap.length; generatorWrapper++) {\n      removeUniqueId(CustomMap[generatorWrapper]);\n    }\n    return value.join(\"\");\n  };\n  function writeSafeHtmlToDocument(generatorWrapper, value) {\n    generatorWrapper.write(unwrapSafeHtml(value));\n  }\n  var decodeUriComponentWithSpace = function (generatorWrapper) {\n    return decodeURIComponent(generatorWrapper.replace(/\\+/g, \" \"));\n  };\n  var truncateString = function (generatorWrapper, value) {\n    if (generatorWrapper.length > value) {\n      generatorWrapper = generatorWrapper.substring(0, value - 3) + \"...\";\n    }\n    return generatorWrapper;\n  };\n  var repeatString = String.prototype.repeat ? function (generatorWrapper, value) {\n    return generatorWrapper.repeat(value);\n  } : function (generatorWrapper, value) {\n    return Array(value + 1).join(generatorWrapper);\n  };\n  var stringifyNullable = function (generatorWrapper) {\n    if (generatorWrapper == null) {\n      return \"\";\n    } else {\n      return String(generatorWrapper);\n    }\n  };\n  var randomInt = 2147483648 * Math.random() | 0;\n  var camelCaseFromDash = function (generatorWrapper) {\n    return String(generatorWrapper).replace(/\\-([a-z])/g, function (value, CustomMap) {\n      return CustomMap.toUpperCase();\n    });\n  };\n  var dashCaseFromCamel = function () {\n    return \"googleAvInapp\".replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  };\n  var capitalizeFirstLetter = function (generatorWrapper) {\n    return generatorWrapper.replace(RegExp(\"(^|[\\\\s]+)([a-z])\", \"g\"), function (value, CustomMap, findEntry) {\n      return CustomMap + findEntry.toUpperCase();\n    });\n  };\n  var parseInteger = function (generatorWrapper) {\n    if (isFinite(generatorWrapper)) {\n      generatorWrapper = String(generatorWrapper);\n    }\n    if (typeof generatorWrapper === \"string\") {\n      if (/^\\s*-?0x/i.test(generatorWrapper)) {\n        return parseInt(generatorWrapper, 16);\n      } else {\n        return parseInt(generatorWrapper, 10);\n      }\n    } else {\n      return NaN;\n    }\n  };\n  var getDomHelper = function (generatorWrapper) {\n    if (generatorWrapper) {\n      return new DocumentHelper(getDocument(generatorWrapper));\n    } else {\n      return cb || (cb = new DocumentHelper());\n    }\n  };\n  var getElementByIdOrDirect = function (generatorWrapper) {\n    var value = document;\n    if (typeof generatorWrapper === \"string\") {\n      return value.getElementById(generatorWrapper);\n    } else {\n      return generatorWrapper;\n    }\n  };\n  var setElementAttributes = function (generatorWrapper, value) {\n    forEachInObject(value, function (CustomMap, findEntry) {\n      if (findEntry == \"style\") {\n        generatorWrapper.style.cssText = CustomMap;\n      } else if (findEntry == \"class\") {\n        generatorWrapper.className = CustomMap;\n      } else if (findEntry == \"for\") {\n        generatorWrapper.htmlFor = CustomMap;\n      } else if (attributeMappings.hasOwnProperty(findEntry)) {\n        generatorWrapper.setAttribute(attributeMappings[findEntry], CustomMap);\n      } else if (findEntry.lastIndexOf(\"aria-\", 0) == 0 || findEntry.lastIndexOf(\"data-\", 0) == 0) {\n        generatorWrapper.setAttribute(findEntry, CustomMap);\n      } else {\n        generatorWrapper[findEntry] = CustomMap;\n      }\n    });\n  };\n  var attributeMappings = {\n    cellpadding: \"cellPadding\",\n    cellspacing: \"cellSpacing\",\n    colspan: \"colSpan\",\n    frameborder: \"frameBorder\",\n    height: \"height\",\n    maxlength: \"maxLength\",\n    nonce: \"nonce\",\n    role: \"role\",\n    rowspan: \"rowSpan\",\n    type: \"type\",\n    usemap: \"useMap\",\n    valign: \"vAlign\",\n    width: \"width\"\n  };\n  var getViewportSize = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.document;\n    if (generatorWrapper.compatMode == \"CSS1Compat\") {\n      generatorWrapper = generatorWrapper.documentElement;\n    } else {\n      generatorWrapper = generatorWrapper.body;\n    }\n    return new Size(generatorWrapper.clientWidth, generatorWrapper.clientHeight);\n  };\n  var getDocumentScrollCoordinate = function (generatorWrapper) {\n    var value = generatorWrapper.scrollingElement ? generatorWrapper.scrollingElement : isWebKit || generatorWrapper.compatMode != \"CSS1Compat\" ? generatorWrapper.body || generatorWrapper.documentElement : generatorWrapper.documentElement;\n    generatorWrapper = generatorWrapper.parentWindow || generatorWrapper.defaultView;\n    return new Coordinate(generatorWrapper.pageXOffset || value.scrollLeft, generatorWrapper.pageYOffset || value.scrollTop);\n  };\n  var getWindowForDocument = function (generatorWrapper) {\n    if (generatorWrapper) {\n      return generatorWrapper.parentWindow || generatorWrapper.defaultView;\n    } else {\n      return window;\n    }\n  };\n  var createElementWithOptionalClassesAndAttributes = function (generatorWrapper, value, CustomMap) {\n    var findEntry = arguments;\n    var iterateEntries = document;\n    var createCircularNode = findEntry[1];\n    var entryIdCounter = createElement(iterateEntries, String(findEntry[0]));\n    if (createCircularNode) {\n      if (typeof createCircularNode === \"string\") {\n        entryIdCounter.className = createCircularNode;\n      } else if (Array.isArray(createCircularNode)) {\n        entryIdCounter.className = createCircularNode.join(\" \");\n      } else {\n        setElementAttributes(entryIdCounter, createCircularNode);\n      }\n    }\n    if (findEntry.length > 2) {\n      appendChildren(iterateEntries, entryIdCounter, findEntry, 2);\n    }\n    return entryIdCounter;\n  };\n  var appendChildren = function (generatorWrapper, value, CustomMap, findEntry) {\n    function iterateEntries(key) {\n      if (key) {\n        value.appendChild(typeof key === \"string\" ? generatorWrapper.createTextNode(key) : key);\n      }\n    }\n    for (; findEntry < CustomMap.length; findEntry++) {\n      var createCircularNode = CustomMap[findEntry];\n      if (!isArrayLike(createCircularNode) || isObjectOrFunction(createCircularNode) && createCircularNode.nodeType > 0) {\n        iterateEntries(createCircularNode);\n      } else {\n        generatorWrapper: {\n          if (createCircularNode && typeof createCircularNode.length == \"number\") {\n            if (isObjectOrFunction(createCircularNode)) {\n              var entryIdCounter = typeof createCircularNode.item == \"function\" || typeof createCircularNode.item == \"string\";\n              break generatorWrapper;\n            }\n            if (typeof createCircularNode === \"function\") {\n              entryIdCounter = typeof createCircularNode.item == \"function\";\n              break generatorWrapper;\n            }\n          }\n          entryIdCounter = false;\n        }\n        forEachElement(entryIdCounter ? copyArray(createCircularNode) : createCircularNode, iterateEntries);\n      }\n    }\n  };\n  var createElement = function (generatorWrapper, value) {\n    value = String(value);\n    if (generatorWrapper.contentType === \"application/xhtml+xml\") {\n      value = value.toLowerCase();\n    }\n    return generatorWrapper.createElement(value);\n  };\n  var removeElement = function (generatorWrapper) {\n    if (generatorWrapper && generatorWrapper.parentNode) {\n      generatorWrapper.parentNode.removeChild(generatorWrapper);\n    }\n  };\n  var getParentElement = function (generatorWrapper) {\n    var value;\n    if (isWebKit && (value = generatorWrapper.parentElement)) {\n      return value;\n    }\n    value = generatorWrapper.parentNode;\n    if (isObjectOrFunction(value) && value.nodeType == 1) {\n      return value;\n    } else {\n      return null;\n    }\n  };\n  var containsElement = function (generatorWrapper, value) {\n    if (!generatorWrapper || !value) {\n      return false;\n    }\n    if (generatorWrapper.rectangleContains && value.nodeType == 1) {\n      return generatorWrapper == value || generatorWrapper.rectangleContains(value);\n    }\n    if (typeof generatorWrapper.compareDocumentPosition != \"undefined\") {\n      return generatorWrapper == value || !!(generatorWrapper.compareDocumentPosition(value) & 16);\n    }\n    for (; value && generatorWrapper != value;) {\n      value = value.parentNode;\n    }\n    return value == generatorWrapper;\n  };\n  var getDocument = function (generatorWrapper) {\n    if (generatorWrapper.nodeType == 9) {\n      return generatorWrapper;\n    } else {\n      return generatorWrapper.ownerDocument || generatorWrapper.document;\n    }\n  };\n  var getContentWindow = function (generatorWrapper) {\n    try {\n      return generatorWrapper.contentWindow || (generatorWrapper.contentDocument ? getWindowForDocument(generatorWrapper.contentDocument) : null);\n    } catch (value) {}\n    return null;\n  };\n  var findParentElement = function (generatorWrapper, value) {\n    if (generatorWrapper) {\n      generatorWrapper = generatorWrapper.parentNode;\n    }\n    for (var CustomMap = 0; generatorWrapper;) {\n      if (value(generatorWrapper)) {\n        return generatorWrapper;\n      }\n      generatorWrapper = generatorWrapper.parentNode;\n      CustomMap++;\n    }\n    return null;\n  };\n  var DocumentHelper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper || globalScope.document || document;\n  };\n  setTimeoutWrapper = DocumentHelper.prototype;\n  setTimeoutWrapper.getElementsByTagName = function (generatorWrapper, value) {\n    return (value || this.entryIdCounter).getElementsByTagName(String(generatorWrapper));\n  };\n  setTimeoutWrapper.appendChild = function (generatorWrapper, value) {\n    generatorWrapper.appendChild(value);\n  };\n  setTimeoutWrapper.append = function (generatorWrapper, value) {\n    appendChildren(getDocument(generatorWrapper), generatorWrapper, arguments, 1);\n  };\n  setTimeoutWrapper.canHaveChildren = function (generatorWrapper) {\n    if (generatorWrapper.nodeType != 1) {\n      return false;\n    }\n    switch (generatorWrapper.tagName) {\n      case \"APPLET\":\n      case \"AREA\":\n      case \"BASE\":\n      case \"BR\":\n      case \"COL\":\n      case \"COMMAND\":\n      case \"EMBED\":\n      case \"FRAME\":\n      case \"HR\":\n      case \"IMG\":\n      case \"INPUT\":\n      case \"IFRAME\":\n      case \"ISINDEX\":\n      case \"KEYGEN\":\n      case \"LINK\":\n      case \"NOFRAMES\":\n      case \"NOSCRIPT\":\n      case \"META\":\n      case \"OBJECT\":\n      case \"PARAM\":\n      case \"SCRIPT\":\n      case \"SOURCE\":\n      case \"STYLE\":\n      case \"TRACK\":\n      case \"WBR\":\n        return false;\n    }\n    return true;\n  };\n  setTimeoutWrapper.rectangleContains = containsElement;\n  var isMobile = function () {\n    if (hasNavigatorUserAgentData && userAgentData) {\n      return userAgentData.mobile;\n    } else {\n      return !isTablet() && (handleAsync(\"iPod\") || handleAsync(\"iPhone\") || handleAsync(\"Android\") || handleAsync(\"IEMobile\"));\n    }\n  };\n  var isTablet = function () {\n    if (hasNavigatorUserAgentData && userAgentData) {\n      return !userAgentData.mobile && (handleAsync(\"iPad\") || handleAsync(\"Android\") || handleAsync(\"Silk\"));\n    } else {\n      return handleAsync(\"iPad\") || handleAsync(\"Android\") && !handleAsync(\"Mobile\") || handleAsync(\"Silk\");\n    }\n  };\n  var urlRegex = RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^\\\\\\\\/?#]*)@)?([^\\\\\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\\\\\/?#]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#([\\\\s\\\\S]*))?$\");\n  var extractBaseUrl = function (generatorWrapper) {\n    var value = generatorWrapper.match(urlRegex);\n    generatorWrapper = value[1];\n    var CustomMap = value[3];\n    value = value[4];\n    var findEntry = \"\";\n    if (generatorWrapper) {\n      findEntry += generatorWrapper + \":\";\n    }\n    if (CustomMap) {\n      findEntry = findEntry + \"//\" + CustomMap;\n      if (value) {\n        findEntry += \":\" + value;\n      }\n    }\n    return findEntry;\n  };\n  var parseQueryString = function (generatorWrapper, value) {\n    if (generatorWrapper) {\n      generatorWrapper = generatorWrapper.split(\"&\");\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        var findEntry = generatorWrapper[CustomMap].indexOf(\"=\");\n        var iterateEntries = null;\n        if (findEntry >= 0) {\n          var createCircularNode = generatorWrapper[CustomMap].substring(0, findEntry);\n          iterateEntries = generatorWrapper[CustomMap].substring(findEntry + 1);\n        } else {\n          createCircularNode = generatorWrapper[CustomMap];\n        }\n        value(createCircularNode, iterateEntries ? decodeUriComponentWithSpace(iterateEntries) : \"\");\n      }\n    }\n  };\n  var searchDelimiterRegex = /#|$/;\n  var getParameterFromUrl = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.search(searchDelimiterRegex);\n    generatorWrapper: {\n      var findEntry = 0;\n      for (var iterateEntries = value.length; (findEntry = generatorWrapper.indexOf(value, findEntry)) >= 0 && findEntry < CustomMap;) {\n        var createCircularNode = generatorWrapper.charCodeAt(findEntry - 1);\n        if (createCircularNode == 38 || createCircularNode == 63) {\n          createCircularNode = generatorWrapper.charCodeAt(findEntry + iterateEntries);\n          if (!createCircularNode || createCircularNode == 61 || createCircularNode == 38 || createCircularNode == 35) {\n            break generatorWrapper;\n          }\n        }\n        findEntry += iterateEntries + 1;\n      }\n      findEntry = -1;\n    }\n    if (findEntry < 0) {\n      return null;\n    }\n    iterateEntries = generatorWrapper.indexOf(\"&\", findEntry);\n    if (iterateEntries < 0 || iterateEntries > CustomMap) {\n      iterateEntries = CustomMap;\n    }\n    findEntry += value.length + 1;\n    return decodeUriComponentWithSpace(generatorWrapper.slice(findEntry, -1 !== iterateEntries ? iterateEntries : 0));\n  };\n  var isAccessibleFrame = function (generatorWrapper) {\n    try {\n      return !!generatorWrapper && generatorWrapper.location.href != null && tryNoopFunction(generatorWrapper, \"foo\");\n    } catch (value) {\n      return false;\n    }\n  };\n  var iterateFrames = function (generatorWrapper) {\n    var value = undefined === value ? false : value;\n    var CustomMap = undefined === CustomMap ? globalScope : CustomMap;\n    for (var findEntry = 0; CustomMap && findEntry++ < 40 && (!value && !isAccessibleFrame(CustomMap) || !generatorWrapper(CustomMap));) {\n      CustomMap = getParentFrame(CustomMap);\n    }\n  };\n  var getTopMostAccessibleWindow = function () {\n    var generatorWrapper = window;\n    iterateFrames(function (value) {\n      generatorWrapper = value;\n      return false;\n    });\n    return generatorWrapper;\n  };\n  var getParentFrame = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.parent;\n      if (value && value != generatorWrapper) {\n        return value;\n      }\n    } catch (CustomMap) {}\n    return null;\n  };\n  var getTopFrame = function () {\n    var generatorWrapper = window;\n    if (isAccessibleFrame(generatorWrapper.top)) {\n      return generatorWrapper.top;\n    } else {\n      return null;\n    }\n  };\n  var secureRandom = function () {\n    if (!globalThis.crypto) {\n      return Math.random();\n    }\n    try {\n      var generatorWrapper = new Uint32Array(1);\n      globalThis.crypto.getRandomValues(generatorWrapper);\n      return generatorWrapper[0] / 65536 / 65536;\n    } catch (value) {\n      return Math.random();\n    }\n  };\n  var forEachInObject = function (generatorWrapper, value) {\n    if (generatorWrapper) {\n      for (var CustomMap in generatorWrapper) if (Object.prototype.hasOwnProperty.call(generatorWrapper, CustomMap)) {\n        value(generatorWrapper[CustomMap], CustomMap, generatorWrapper);\n      }\n    }\n  };\n  var hashString = function (generatorWrapper) {\n    var value = generatorWrapper.length;\n    if (value == 0) {\n      return 0;\n    }\n    for (var CustomMap = 305419896, findEntry = 0; findEntry < value; findEntry++) {\n      CustomMap ^= (CustomMap << 5) + (CustomMap >> 2) + generatorWrapper.charCodeAt(findEntry) & 4294967295;\n    }\n    if (CustomMap > 0) {\n      return CustomMap;\n    } else {\n      return 4294967296 + CustomMap;\n    }\n  };\n  function extractHostname(generatorWrapper) {\n    var value, CustomMap;\n    if ((CustomMap = (value = /https?:\\/\\/[^\\/]+/.exec(generatorWrapper)) == null ? undefined : value[0]) != null) {\n      return CustomMap;\n    } else {\n      return \"\";\n    }\n  }\n  var isSecureContext = function () {\n    var generatorWrapper = globalScope;\n    try {\n      value = generatorWrapper;\n      for (var value = null; value != generatorWrapper; generatorWrapper = generatorWrapper.parent) {\n        switch (generatorWrapper.location.protocol) {\n          case \"https:\":\n            return true;\n          case \"file:\":\n            return true;\n          case \"http:\":\n            return false;\n        }\n      }\n    } catch (CustomMap) {}\n    return true;\n  };\n  var hasFrameWithName = function (generatorWrapper, value) {\n    try {\n      return !(!generatorWrapper.frames || !generatorWrapper.frames[value]);\n    } catch (CustomMap) {\n      return false;\n    }\n  };\n  var findFrameByName = function (generatorWrapper, value) {\n    for (var CustomMap = 0; CustomMap < 50; ++CustomMap) {\n      if (hasFrameWithName(generatorWrapper, value)) {\n        return generatorWrapper;\n      }\n      if (!(generatorWrapper = getParentFrame(generatorWrapper))) {\n        break;\n      }\n    }\n    return null;\n  };\n  var getDeviceType = once(function () {\n    if (isMobile()) {\n      return 2;\n    } else {\n      if (isTablet()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  });\n  var generatePageViewId = function () {\n    var generatorWrapper = window;\n    if (typeof generatorWrapper.goog_pvsid !== \"number\") {\n      try {\n        var value = Object;\n        var CustomMap = value.defineProperty;\n        var findEntry = undefined;\n        if (undefined === findEntry) {\n          findEntry = Math.random;\n        } else {\n          findEntry = findEntry;\n        }\n        var iterateEntries = Math.floorRectangle(findEntry() * Math.pow(2, 52));\n        CustomMap.call(value, generatorWrapper, \"goog_pvsid\", {\n          value: iterateEntries,\n          configurable: false\n        });\n      } catch (createCircularNode) {}\n    }\n    return Number(generatorWrapper.goog_pvsid) || -1;\n  };\n  var createHtmlElement = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = document;\n    } else {\n      value = value;\n    }\n    return value.createElement(String(generatorWrapper).toLowerCase());\n  };\n  var getTopAccessibleContext = function (generatorWrapper) {\n    for (var value = generatorWrapper; generatorWrapper && generatorWrapper != generatorWrapper.parent;) {\n      generatorWrapper = generatorWrapper.parent;\n      if (isAccessibleFrame(generatorWrapper)) {\n        value = generatorWrapper;\n      }\n    }\n    return value;\n  };\n  var ampProjectUrlRegex = RegExp(\"^https?://(\\\\w|-)+\\\\.cdn\\\\.ampproject\\\\.(net|org)(\\\\?|/|$)\");\n  var computeReferrerUrl = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper || collectAncestorOrigins();\n    for (var value = new UrlDepthInfo(globalScope.location.href, false), CustomMap = null, findEntry = generatorWrapper.length - 1, iterateEntries = findEntry; iterateEntries >= 0; --iterateEntries) {\n      var createCircularNode = generatorWrapper[iterateEntries];\n      if (!CustomMap && ampProjectUrlRegex.test(createCircularNode.url)) {\n        CustomMap = createCircularNode;\n      }\n      if (createCircularNode.url && !createCircularNode.clear14591Flag) {\n        value = createCircularNode;\n        break;\n      }\n    }\n    iterateEntries = null;\n    createCircularNode = generatorWrapper.length && generatorWrapper[findEntry].url;\n    if (value.depth != 0 && createCircularNode) {\n      iterateEntries = generatorWrapper[findEntry];\n    }\n    return new AdUrlComponent(value, iterateEntries, CustomMap);\n  };\n  var collectAncestorOrigins = function () {\n    var generatorWrapper = globalScope;\n    var value = [];\n    var CustomMap = null;\n    do {\n      var findEntry = generatorWrapper;\n      if (isAccessibleFrame(findEntry)) {\n        var iterateEntries = findEntry.location.href;\n        CustomMap = findEntry.document && findEntry.document.referrer || null;\n      } else {\n        iterateEntries = CustomMap;\n        CustomMap = null;\n      }\n      value.push(new UrlDepthInfo(iterateEntries || \"\"));\n      try {\n        generatorWrapper = findEntry.parent;\n      } catch (createCircularNode) {\n        generatorWrapper = null;\n      }\n    } while (generatorWrapper && findEntry != generatorWrapper);\n    findEntry = 0;\n    for (generatorWrapper = value.length - 1; findEntry <= generatorWrapper; ++findEntry) {\n      value[findEntry].depth = generatorWrapper - findEntry;\n    }\n    findEntry = globalScope;\n    if (findEntry.location && findEntry.location.ancestorOrigins && findEntry.location.ancestorOrigins.length == value.length - 1) {\n      for (generatorWrapper = 1; generatorWrapper < value.length; ++generatorWrapper) {\n        iterateEntries = value[generatorWrapper];\n        if (!iterateEntries.url) {\n          iterateEntries.url = findEntry.location.ancestorOrigins[generatorWrapper - 1] || \"\";\n          iterateEntries.clear14591Flag = true;\n        }\n      }\n    }\n    return value;\n  };\n  var AdUrlComponent = function (generatorWrapper, value, CustomMap) {\n    this.entryIdCounter = generatorWrapper;\n    this.tasks = value;\n    this.setTimeoutWrapper = CustomMap;\n  };\n  var UrlDepthInfo = function (generatorWrapper, value) {\n    this.url = generatorWrapper;\n    this.clear14591Flag = !!value;\n    this.depth = null;\n  };\n  var deobfuscationId = null;\n  var getDeobfuscationId = function () {\n    if (deobfuscationId === null) {\n      deobfuscationId = \"\";\n      try {\n        var generatorWrapper = \"\";\n        try {\n          generatorWrapper = globalScope.top.location.hash;\n        } catch (CustomMap) {\n          generatorWrapper = globalScope.location.hash;\n        }\n        if (generatorWrapper) {\n          var value = generatorWrapper.match(/\\bdeid=([\\d,]+)/);\n          if (value) {\n            deobfuscationId = value[1];\n          } else {\n            deobfuscationId = \"\";\n          }\n        }\n      } catch (CustomMap) {}\n    }\n    return deobfuscationId;\n  };\n  function getCurrentTimeWithPerformanceTiming() {\n    var generatorWrapper = undefined === generatorWrapper ? globalScope : generatorWrapper;\n    if ((generatorWrapper = generatorWrapper.performance) && generatorWrapper.now && generatorWrapper.timing) {\n      return Math.floorRectangle(generatorWrapper.now() + generatorWrapper.timing.navigationStart);\n    } else {\n      return Date.now();\n    }\n  }\n  function getPerformanceNow() {\n    var generatorWrapper = undefined === generatorWrapper ? globalScope : generatorWrapper;\n    if ((generatorWrapper = generatorWrapper.performance) && generatorWrapper.now) {\n      return generatorWrapper.now();\n    } else {\n      return null;\n    }\n  }\n  function getPerformanceTimingAttribute(generatorWrapper, value) {\n    if (undefined === value) {\n      value = globalScope;\n    } else {\n      value = value;\n    }\n    var CustomMap, findEntry;\n    return ((CustomMap = value.performance) == null ? undefined : (findEntry = CustomMap.timing) == null ? undefined : findEntry[generatorWrapper]) || 0;\n  }\n  function getEarliestDomLoadingOrInteractiveTime() {\n    var generatorWrapper = undefined === generatorWrapper ? globalScope : generatorWrapper;\n    var value = Math.min(getPerformanceTimingAttribute(\"domLoading\", generatorWrapper) || Infinity, getPerformanceTimingAttribute(\"domInteractive\", generatorWrapper) || Infinity);\n    if (Infinity === value) {\n      return Math.max(getPerformanceTimingAttribute(\"responseEnd\", generatorWrapper), getPerformanceTimingAttribute(\"navigationStart\", generatorWrapper));\n    } else {\n      return value;\n    }\n  }\n  var PerformanceEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.label = generatorWrapper;\n    this.type = value;\n    this.value = CustomMap;\n    if (undefined === findEntry) {\n      this.duration = 0;\n    } else {\n      this.duration = findEntry;\n    }\n    this.taskId = this.slotId = undefined;\n    this.uniqueId = Math.random();\n  };\n  var performanceApi = globalScope.performance;\n  var supportsPerformanceMarks = !!(performanceApi && performanceApi.mark && performanceApi.measure && performanceApi.clearMarks);\n  var isDebugMode = once(function () {\n    var generatorWrapper;\n    if (generatorWrapper = supportsPerformanceMarks) {\n      generatorWrapper = getDeobfuscationId();\n      generatorWrapper = !!generatorWrapper.indexOf && generatorWrapper.indexOf(\"1337\") >= 0;\n    }\n    return generatorWrapper;\n  });\n  var PerformanceMonitor = function (generatorWrapper, value) {\n    this.events = [];\n    this.entryIdCounter = value || globalScope;\n    var CustomMap = null;\n    if (value) {\n      value.google_js_reporting_queue = value.google_js_reporting_queue || [];\n      this.events = value.google_js_reporting_queue;\n      CustomMap = value.google_measure_js_timing;\n    }\n    this.setTimeoutWrapper = isDebugMode() || (CustomMap != null ? CustomMap : Math.random() < generatorWrapper);\n  };\n  PerformanceMonitor.prototype.isDone = function () {\n    this.setTimeoutWrapper = false;\n    if (this.events != this.entryIdCounter.google_js_reporting_queue) {\n      if (isDebugMode()) {\n        forEachElement(this.events, clearPerformanceMarks);\n      }\n      this.events.length = 0;\n    }\n  };\n  PerformanceMonitor.prototype.onFulfilled = function (generatorWrapper) {\n    if (!(!this.setTimeoutWrapper || this.events.length > 2048)) {\n      this.events.push(generatorWrapper);\n    }\n  };\n  var clearPerformanceMarks = function (generatorWrapper) {\n    if (generatorWrapper && performanceApi && isDebugMode()) {\n      performanceApi.clearMarks(\"goog_\" + generatorWrapper.label + \"_\" + generatorWrapper.uniqueId + \"_start\");\n      performanceApi.clearMarks(\"goog_\" + generatorWrapper.label + \"_\" + generatorWrapper.uniqueId + \"_end\");\n    }\n  };\n  PerformanceMonitor.prototype.startTimer = function (generatorWrapper, value) {\n    if (!this.setTimeoutWrapper) {\n      return null;\n    }\n    generatorWrapper = new PerformanceEvent(generatorWrapper, value, getPerformanceNow() || getCurrentTimeWithPerformanceTiming());\n    value = \"goog_\" + generatorWrapper.label + \"_\" + generatorWrapper.uniqueId + \"_start\";\n    if (performanceApi && isDebugMode()) {\n      performanceApi.mark(value);\n    }\n    return generatorWrapper;\n  };\n  PerformanceMonitor.prototype.end = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && typeof generatorWrapper.value === \"number\") {\n      generatorWrapper.duration = (getPerformanceNow() || getCurrentTimeWithPerformanceTiming()) - generatorWrapper.value;\n      var value = \"goog_\" + generatorWrapper.label + \"_\" + generatorWrapper.uniqueId + \"_end\";\n      if (performanceApi && isDebugMode()) {\n        performanceApi.mark(value);\n      }\n      this.onFulfilled(generatorWrapper);\n    }\n  };\n  var UrlQueryBuilder = function () {\n    this.setTimeoutWrapper = \"&\";\n    this.tasks = {};\n    this.createDeferred = 0;\n    this.entryIdCounter = [];\n  };\n  var createKeyValuePair = function (generatorWrapper, value) {\n    var CustomMap = {};\n    CustomMap[generatorWrapper] = value;\n    return [CustomMap];\n  };\n  var serializeParameters = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = [];\n    forEachInObject(generatorWrapper, function (entryIdCounter, key) {\n      if (entryIdCounter = encodeParameterValue(entryIdCounter, value, CustomMap, findEntry, iterateEntries)) {\n        createCircularNode.push(key + \"=\" + entryIdCounter);\n      }\n    });\n    return createCircularNode.join(value);\n  };\n  var encodeParameterValue = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper == null) {\n      return \"\";\n    }\n    value = value || \"&\";\n    CustomMap = CustomMap || \",$\";\n    if (typeof CustomMap == \"string\") {\n      CustomMap = CustomMap.split(\"\");\n    }\n    if (generatorWrapper instanceof Array) {\n      findEntry = findEntry || 0;\n      if (findEntry < CustomMap.length) {\n        for (var createCircularNode = [], entryIdCounter = 0; entryIdCounter < generatorWrapper.length; entryIdCounter++) {\n          createCircularNode.push(encodeParameterValue(generatorWrapper[entryIdCounter], value, CustomMap, findEntry + 1, iterateEntries));\n        }\n        return createCircularNode.join(CustomMap[findEntry]);\n      }\n    } else if (typeof generatorWrapper == \"object\") {\n      iterateEntries = iterateEntries || 0;\n      if (iterateEntries < 2) {\n        return encodeURIComponent(serializeParameters(generatorWrapper, value, CustomMap, findEntry, iterateEntries + 1));\n      } else {\n        return \"...\";\n      }\n    }\n    return encodeURIComponent(String(generatorWrapper));\n  };\n  var addParameter = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.entryIdCounter.push(value);\n    generatorWrapper.tasks[value] = CustomMap;\n  };\n  var addKeyValuePair = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper.entryIdCounter.push(value);\n    generatorWrapper.tasks[value] = createKeyValuePair(CustomMap, findEntry);\n  };\n  var buildAdUrl = function (generatorWrapper, value, CustomMap) {\n    value = value + \"//pagead2.googlesyndication.com\" + CustomMap;\n    var findEntry = calculateAvailableSpace(generatorWrapper) - CustomMap.length;\n    if (findEntry < 0) {\n      return \"\";\n    }\n    generatorWrapper.entryIdCounter.sort(function (currentEntry, foundEntry) {\n      return currentEntry - foundEntry;\n    });\n    CustomMap = null;\n    for (var iterateEntries = \"\", createCircularNode = 0; createCircularNode < generatorWrapper.entryIdCounter.length; createCircularNode++) {\n      for (var entryIdCounter = generatorWrapper.entryIdCounter[createCircularNode], key = generatorWrapper.tasks[entryIdCounter], value = 0; value < key.length; value++) {\n        if (!findEntry) {\n          if (CustomMap == null) {\n            CustomMap = entryIdCounter;\n          } else {\n            CustomMap = CustomMap;\n          }\n          break;\n        }\n        var entry = serializeParameters(key[value], generatorWrapper.setTimeoutWrapper, \",$\");\n        if (entry) {\n          entry = iterateEntries + entry;\n          if (findEntry >= entry.length) {\n            findEntry -= entry.length;\n            value += entry;\n            iterateEntries = generatorWrapper.setTimeoutWrapper;\n            break;\n          }\n          if (CustomMap == null) {\n            CustomMap = entryIdCounter;\n          } else {\n            CustomMap = CustomMap;\n          }\n        }\n      }\n    }\n    generatorWrapper = \"\";\n    if (CustomMap != null) {\n      generatorWrapper = iterateEntries + \"trn=\" + CustomMap;\n    }\n    return value + generatorWrapper;\n  };\n  var calculateAvailableSpace = function (generatorWrapper) {\n    var value = 1,\n      CustomMap;\n    for (CustomMap in generatorWrapper.tasks) if (CustomMap.length > value) {\n      value = CustomMap.length;\n    } else {\n      value = value;\n    }\n    return 3997 - value - generatorWrapper.setTimeoutWrapper.length - 1;\n  };\n  var ErrorLogger = function () {\n    var generatorWrapper = bj;\n    this.handleAsync = cj;\n    this.isDone = \"jserror\";\n    this.createDeferred = true;\n    if (undefined === generatorWrapper) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.tasks = null;\n    this.setTimeoutWrapper = false;\n    this.onFulfilled = this.boundFunctionCall;\n  };\n  setTimeoutWrapper = ErrorLogger.prototype;\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.isDone = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    try {\n      if (this.entryIdCounter && this.entryIdCounter.setTimeoutWrapper) {\n        var findEntry = this.entryIdCounter.startTimer(generatorWrapper.toString(), 3);\n        var iterateEntries = value();\n        this.entryIdCounter.end(findEntry);\n      } else {\n        iterateEntries = value();\n      }\n    } catch (key) {\n      value = this.createDeferred;\n      try {\n        clearPerformanceMarks(findEntry);\n        value = this.onFulfilled(generatorWrapper, new ErrorDetails(key, {\n          message: formatErrorMessage(key)\n        }), undefined, CustomMap);\n      } catch (value) {\n        this.boundFunctionCall(217, value);\n      }\n      if (value) {\n        var createCircularNode, entryIdCounter;\n        if (!((createCircularNode = window.console) == null || (entryIdCounter = createCircularNode.hasError) == null)) {\n          entryIdCounter.call(createCircularNode, key);\n        }\n      } else {\n        throw key;\n      }\n    }\n    return iterateEntries;\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    };\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    iterateEntries = iterateEntries || this.isDone;\n    try {\n      var createCircularNode = new UrlQueryBuilder();\n      addKeyValuePair(createCircularNode, 1, \"context\", generatorWrapper);\n      if (!isValidError(value)) {\n        value = new ErrorDetails(value, {\n          message: formatErrorMessage(value)\n        });\n      }\n      if (value.msg) {\n        addKeyValuePair(createCircularNode, 2, \"msg\", value.msg.substring(0, 512));\n      }\n      var entryIdCounter = value.meta || {};\n      if (this.tasks) {\n        try {\n          this.tasks(entryIdCounter);\n        } catch (value) {}\n      }\n      if (findEntry) {\n        try {\n          findEntry(entryIdCounter);\n        } catch (value) {}\n      }\n      addParameter(createCircularNode, 3, [entryIdCounter]);\n      var key = computeReferrerUrl();\n      if (key.tasks) {\n        addKeyValuePair(createCircularNode, 4, \"top\", key.tasks.url || \"\");\n      }\n      addParameter(createCircularNode, 5, [{\n        url: key.entryIdCounter.url || \"\"\n      }, {\n        url: key.entryIdCounter.url ? extractBaseUrl(key.entryIdCounter.url) : \"\"\n      }]);\n      sendAdEvent(this.handleAsync, iterateEntries, createCircularNode, this.setTimeoutWrapper, CustomMap);\n    } catch (value) {\n      try {\n        sendAdEvent(this.handleAsync, iterateEntries, {\n          context: \"ecmserr\",\n          rctx: generatorWrapper,\n          msg: formatErrorMessage(value),\n          url: key && key.entryIdCounter.url\n        }, this.setTimeoutWrapper, CustomMap);\n      } catch (entry) {}\n    }\n    return this.createDeferred;\n  };\n  var formatErrorMessage = function (generatorWrapper) {\n    var value = generatorWrapper.toString();\n    if (generatorWrapper.name && -1 == value.indexOf(generatorWrapper.name)) {\n      value += \": \" + generatorWrapper.name;\n    }\n    if (generatorWrapper.message && -1 == value.indexOf(generatorWrapper.message)) {\n      value += \": \" + generatorWrapper.message;\n    }\n    if (generatorWrapper.stack) {\n      generatorWrapper = generatorWrapper.stack;\n      var CustomMap = value;\n      try {\n        if (-1 == generatorWrapper.indexOf(CustomMap)) {\n          generatorWrapper = CustomMap + \"\\n\" + generatorWrapper;\n        }\n        for (var findEntry; generatorWrapper != findEntry;) {\n          findEntry = generatorWrapper;\n          generatorWrapper = generatorWrapper.replace(RegExp(\"((https?:/..*/)[^/:]*:\\\\d+(?:.|\\n)*)\\\\2\"), \"$1\");\n        }\n        value = generatorWrapper.replace(RegExp(\"\\n *\", \"g\"), \"\\n\");\n      } catch (iterateEntries) {\n        value = CustomMap;\n      }\n    }\n    return value;\n  };\n  var sendImageRequestWithRetry = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    sendImageRequest(generatorWrapper, value, undefined === CustomMap ? null : CustomMap, undefined === findEntry ? false : findEntry, undefined === iterateEntries ? false : iterateEntries);\n  };\n  function sendImageRequest(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = false;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    if (!generatorWrapper.google_image_requests) {\n      generatorWrapper.google_image_requests = [];\n    }\n    var createCircularNode = createHtmlElement(\"IMG\", generatorWrapper.document);\n    if (CustomMap || findEntry) {\n      var entryIdCounter = function (key) {\n        if (CustomMap) {\n          CustomMap(key);\n        }\n        if (findEntry) {\n          removeElement(generatorWrapper.google_image_requests, createCircularNode);\n        }\n        removeEventListenerWithNormalization(createCircularNode, \"load\", entryIdCounter);\n        removeEventListenerWithNormalization(createCircularNode, \"error\", entryIdCounter);\n      };\n      addEventListenerWithNormalization(createCircularNode, \"load\", entryIdCounter);\n      addEventListenerWithNormalization(createCircularNode, \"error\", entryIdCounter);\n    }\n    if (iterateEntries) {\n      createCircularNode.attributionSrc = \"\";\n    }\n    createCircularNode.src = value;\n    generatorWrapper.google_image_requests.push(createCircularNode);\n  }\n  var sendBeaconWithParams = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? false : CustomMap;\n    var findEntry = \"https://pagead2.googlesyndication.com/pagead/gen_204?id=\" + value;\n    forEachInObject(generatorWrapper, function (iterateEntries, createCircularNode) {\n      if (iterateEntries || iterateEntries === 0) {\n        findEntry += \"&\" + createCircularNode + \"=\" + encodeURIComponent(\"\" + iterateEntries);\n      }\n    });\n    sendBeacon(findEntry, CustomMap);\n  };\n  var sendBeacon = function (generatorWrapper, value) {\n    var CustomMap = window;\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    var findEntry = undefined === findEntry ? false : findEntry;\n    if (CustomMap.fetch) {\n      value = {\n        keepalive: true,\n        credentials: \"include\",\n        redirect: \"follow\",\n        method: \"get\",\n        mode: \"no-cors\"\n      };\n      if (findEntry) {\n        value.mode = \"cors\";\n        if (\"setAttributionReporting\" in XMLHttpRequest.prototype) {\n          value.attributionReporting = {\n            eventSourceEligible: \"true\",\n            triggerEligible: \"false\"\n          };\n        } else {\n          value.headers = {\n            \"Attribution-Reporting-Eligible\": \"event-source\"\n          };\n        }\n      }\n      CustomMap.fetch(generatorWrapper, value);\n    } else {\n      sendImageRequestWithRetry(CustomMap, generatorWrapper, undefined, value, findEntry);\n    }\n  };\n  function serializeDataWithFilter(generatorWrapper, value) {\n    try {\n      var CustomMap = function (findEntry) {\n        var iterateEntries = {};\n        return [(iterateEntries[findEntry.updateElement] = findEntry.TransformEntries, iterateEntries)];\n      };\n      return JSON.stringify([generatorWrapper.filter(function (findEntry) {\n        return findEntry.get1023Shifted;\n      }).map(CustomMap), value.toJSON(), generatorWrapper.filter(function (findEntry) {\n        return !findEntry.get1023Shifted;\n      }).map(CustomMap)]);\n    } catch (findEntry) {\n      logErrorWithBeacon(findEntry, value);\n      return \"\";\n   ",
  "entryIdCounter], value = 0; value < key.length; value++) {\n        if (!findEntry) {\n          if (CustomMap == null) {\n            CustomMap = entryIdCounter;\n          } else {\n            CustomMap = CustomMap;\n          }\n          break;\n        }\n        var entry = serializeParameters(key[value], generatorWrapper.setTimeoutWrapper, \",$\");\n        if (entry) {\n          entry = iterateEntries + entry;\n          if (findEntry >= entry.length) {\n            findEntry -= entry.length;\n            value += entry;\n            iterateEntries = generatorWrapper.setTimeoutWrapper;\n            break;\n          }\n          if (CustomMap == null) {\n            CustomMap = entryIdCounter;\n          } else {\n            CustomMap = CustomMap;\n          }\n        }\n      }\n    }\n    generatorWrapper = \"\";\n    if (CustomMap != null) {\n      generatorWrapper = iterateEntries + \"trn=\" + CustomMap;\n    }\n    return value + generatorWrapper;\n  };\n  var calculateAvailableSpace = function (generatorWrapper) {\n    var value = 1,\n      CustomMap;\n    for (CustomMap in generatorWrapper.tasks) if (CustomMap.length > value) {\n      value = CustomMap.length;\n    } else {\n      value = value;\n    }\n    return 3997 - value - generatorWrapper.setTimeoutWrapper.length - 1;\n  };\n  var ErrorLogger = function () {\n    var generatorWrapper = bj;\n    this.handleAsync = cj;\n    this.isDone = \"jserror\";\n    this.createDeferred = true;\n    if (undefined === generatorWrapper) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.tasks = null;\n    this.setTimeoutWrapper = false;\n    this.onFulfilled = this.boundFunctionCall;\n  };\n  setTimeoutWrapper = ErrorLogger.prototype;\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.isDone = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    try {\n      if (this.entryIdCounter && this.entryIdCounter.setTimeoutWrapper) {\n        var findEntry = this.entryIdCounter.startTimer(generatorWrapper.toString(), 3);\n        var iterateEntries = value();\n        this.entryIdCounter.end(findEntry);\n      } else {\n        iterateEntries = value();\n      }\n    } catch (key) {\n      value = this.createDeferred;\n      try {\n        clearPerformanceMarks(findEntry);\n        value = this.onFulfilled(generatorWrapper, new ErrorDetails(key, {\n          message: formatErrorMessage(key)\n        }), undefined, CustomMap);\n      } catch (value) {\n        this.boundFunctionCall(217, value);\n      }\n      if (value) {\n        var createCircularNode, entryIdCounter;\n        if (!((createCircularNode = window.console) == null || (entryIdCounter = createCircularNode.hasError) == null)) {\n          entryIdCounter.call(createCircularNode, key);\n        }\n      } else {\n        throw key;\n      }\n    }\n    return iterateEntries;\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    };\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    iterateEntries = iterateEntries || this.isDone;\n    try {\n      var createCircularNode = new UrlQueryBuilder();\n      addKeyValuePair(createCircularNode, 1, \"context\", generatorWrapper);\n      if (!isValidError(value)) {\n        value = new ErrorDetails(value, {\n          message: formatErrorMessage(value)\n        });\n      }\n      if (value.msg) {\n        addKeyValuePair(createCircularNode, 2, \"msg\", value.msg.substring(0, 512));\n      }\n      var entryIdCounter = value.meta || {};\n      if (this.tasks) {\n        try {\n          this.tasks(entryIdCounter);\n        } catch (value) {}\n      }\n      if (findEntry) {\n        try {\n          findEntry(entryIdCounter);\n        } catch (value) {}\n      }\n      addParameter(createCircularNode, 3, [entryIdCounter]);\n      var key = computeReferrerUrl();\n      if (key.tasks) {\n        addKeyValuePair(createCircularNode, 4, \"top\", key.tasks.url || \"\");\n      }\n      addParameter(createCircularNode, 5, [{\n        url: key.entryIdCounter.url || \"\"\n      }, {\n        url: key.entryIdCounter.url ? extractBaseUrl(key.entryIdCounter.url) : \"\"\n      }]);\n      sendAdEvent(this.handleAsync, iterateEntries, createCircularNode, this.setTimeoutWrapper, CustomMap);\n    } catch (value) {\n      try {\n        sendAdEvent(this.handleAsync, iterateEntries, {\n          context: \"ecmserr\",\n          rctx: generatorWrapper,\n          msg: formatErrorMessage(value),\n          url: key && key.entryIdCounter.url\n        }, this.setTimeoutWrapper, CustomMap);\n      } catch (entry) {}\n    }\n    return this.createDeferred;\n  };\n  var formatErrorMessage = function (generatorWrapper) {\n    var value = generatorWrapper.toString();\n    if (generatorWrapper.name && -1 == value.indexOf(generatorWrapper.name)) {\n      value += \": \" + generatorWrapper.name;\n    }\n    if (generatorWrapper.message && -1 == value.indexOf(generatorWrapper.message)) {\n      value += \": \" + generatorWrapper.message;\n    }\n    if (generatorWrapper.stack) {\n      generatorWrapper = generatorWrapper.stack;\n      var CustomMap = value;\n      try {\n        if (-1 == generatorWrapper.indexOf(CustomMap)) {\n          generatorWrapper = CustomMap + \"\\n\" + generatorWrapper;\n        }\n        for (var findEntry; generatorWrapper != findEntry;) {\n          findEntry = generatorWrapper;\n          generatorWrapper = generatorWrapper.replace(RegExp(\"((https?:/..*/)[^/:]*:\\\\d+(?:.|\\n)*)\\\\2\"), \"$1\");\n        }\n        value = generatorWrapper.replace(RegExp(\"\\n *\", \"g\"), \"\\n\");\n      } catch (iterateEntries) {\n        value = CustomMap;\n      }\n    }\n    return value;\n  };\n  var sendImageRequestWithRetry = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    sendImageRequest(generatorWrapper, value, undefined === CustomMap ? null : CustomMap, undefined === findEntry ? false : findEntry, undefined === iterateEntries ? false : iterateEntries);\n  };\n  function sendImageRequest(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = false;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    if (!generatorWrapper.google_image_requests) {\n      generatorWrapper.google_image_requests = [];\n    }\n    var createCircularNode = createHtmlElement(\"IMG\", generatorWrapper.document);\n    if (CustomMap || findEntry) {\n      var entryIdCounter = function (key) {\n        if (CustomMap) {\n          CustomMap(key);\n        }\n        if (findEntry) {\n          removeElement(generatorWrapper.google_image_requests, createCircularNode);\n        }\n        removeEventListenerWithNormalization(createCircularNode, \"load\", entryIdCounter);\n        removeEventListenerWithNormalization(createCircularNode, \"error\", entryIdCounter);\n      };\n      addEventListenerWithNormalization(createCircularNode, \"load\", entryIdCounter);\n      addEventListenerWithNormalization(createCircularNode, \"error\", entryIdCounter);\n    }\n    if (iterateEntries) {\n      createCircularNode.attributionSrc = \"\";\n    }\n    createCircularNode.src = value;\n    generatorWrapper.google_image_requests.push(createCircularNode);\n  }\n  var sendBeaconWithParams = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? false : CustomMap;\n    var findEntry = \"https://pagead2.googlesyndication.com/pagead/gen_204?id=\" + value;\n    forEachInObject(generatorWrapper, function (iterateEntries, createCircularNode) {\n      if (iterateEntries || iterateEntries === 0) {\n        findEntry += \"&\" + createCircularNode + \"=\" + encodeURIComponent(\"\" + iterateEntries);\n      }\n    });\n    sendBeacon(findEntry, CustomMap);\n  };\n  var sendBeacon = function (generatorWrapper, value) {\n    var CustomMap = window;\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    var findEntry = undefined === findEntry ? false : findEntry;\n    if (CustomMap.fetch) {\n      value = {\n        keepalive: true,\n        credentials: \"include\",\n        redirect: \"follow\",\n        method: \"get\",\n        mode: \"no-cors\"\n      };\n      if (findEntry) {\n        value.mode = \"cors\";\n        if (\"setAttributionReporting\" in XMLHttpRequest.prototype) {\n          value.attributionReporting = {\n            eventSourceEligible: \"true\",\n            triggerEligible: \"false\"\n          };\n        } else {\n          value.headers = {\n            \"Attribution-Reporting-Eligible\": \"event-source\"\n          };\n        }\n      }\n      CustomMap.fetch(generatorWrapper, value);\n    } else {\n      sendImageRequestWithRetry(CustomMap, generatorWrapper, undefined, value, findEntry);\n    }\n  };\n  function serializeDataWithFilter(generatorWrapper, value) {\n    try {\n      var CustomMap = function (findEntry) {\n        var iterateEntries = {};\n        return [(iterateEntries[findEntry.updateElement] = findEntry.TransformEntries, iterateEntries)];\n      };\n      return JSON.stringify([generatorWrapper.filter(function (findEntry) {\n        return findEntry.get1023Shifted;\n      }).map(CustomMap), value.toJSON(), generatorWrapper.filter(function (findEntry) {\n        return !findEntry.get1023Shifted;\n      }).map(CustomMap)]);\n    } catch (findEntry) {\n      logErrorWithBeacon(findEntry, value);\n      return \"\";\n    }\n  }\n  function logErrorWithBeacon(generatorWrapper, value) {\n    try {\n      sendBeaconWithParams({\n        currentEntry: formatErrorMessage(generatorWrapper instanceof Error ? generatorWrapper : Error(String(generatorWrapper))),\n        value: getAdPropertyNumeric(value, 1) || null,\n        getIterator: dispatchUnhandledRejection(value, 2) || null\n      }, \"rcs_internal\");\n    } catch (CustomMap) {}\n  }\n  var MessageBuilder = function (generatorWrapper, value) {\n    var CustomMap = new ErrorLogger();\n    generatorWrapper = updateOrRemoveElement(CustomMap, 1, parseNullableIntEnum(generatorWrapper), 0);\n    value = updateOrRemoveElement(generatorWrapper, 2, optionalString(value), \"\");\n    generatorWrapper = value.getSingletonInstance;\n    CustomMap = getRawBitFlags(generatorWrapper);\n    if (CustomMap & 2) {\n      this.setTimeoutWrapper = value;\n    } else {\n      this.setTimeoutWrapper = createInstanceWithTemporaryData(value.constructor, transformWithFlags(generatorWrapper, CustomMap, true));\n    }\n  };\n  var Message = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(Message, AdElement);\n  var MessagePart = [1, 2, 3];\n  var MessageHeader = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageHeader, AdElement);\n  var MessagePayload = [2, 4];\n  var MessageFooter = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageFooter, AdElement);\n  MessageFooter.findGlobalObject = [4];\n  var MessageSignature = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageSignature, AdElement);\n  var MessageTimestamp = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageTimestamp, AdElement);\n  var setMessageType = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 1, parseNullableIntEnum(value), 0);\n  };\n  var setMessageId = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 2, parseNullableIntEnum(value), 0);\n  };\n  var MessageBody = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageBody, AdElement);\n  var MessageBodyTypes = [1, 2];\n  var MessageWrapper = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(MessageWrapper, AdElement);\n  var wrapMessage = function (generatorWrapper, value) {\n    return finalizeAdAttributes(generatorWrapper, 1, value);\n  };\n  var setWrapperType = function (generatorWrapper, value) {\n    return Cf(generatorWrapper, 2, value);\n  };\n  var setWrapperSignature = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 4, value, parseInt32);\n  };\n  var setWrapperTimestamp = function (generatorWrapper, value) {\n    return Cf(generatorWrapper, 5, value);\n  };\n  var setWrapperId = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 6, parseNullableIntEnum(value), 0);\n  };\n  MessageWrapper.findGlobalObject = [2, 4, 5];\n  var WrapperMetadata = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(WrapperMetadata, AdElement);\n  WrapperMetadata.findGlobalObject = [5];\n  var MetadataTypes = [1, 2, 3, 4, 6];\n  var TagSession = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(TagSession, AdElement);\n  TagSession.findGlobalObject = [2, 3];\n  var TagSessionMetadata = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(TagSessionMetadata, AdElement);\n  TagSessionMetadata.findGlobalObject = [2, 8];\n  var SessionTypes = [3, 4, 5];\n  var SessionMetadataTypes = [6, 7];\n  var TagSessionBuilder = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(TagSessionBuilder, AdElement);\n  TagSessionBuilder.prototype.getAdSessionCorrelator = function () {\n    return getAdPropertyFallbackNumeric(this, 2);\n  };\n  var buildTagSession = function (generatorWrapper) {\n    var value = new TagSessionBuilder();\n    return Bf(value, 4, generatorWrapper);\n  };\n  var TagSessionFields = [4, 5, 7, 8, 9];\n  var QueryMetadata = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(QueryMetadata, AdElement);\n  var QueryData = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(QueryData, AdElement);\n  var QueryPayload = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(QueryPayload, AdElement);\n  QueryPayload.prototype.getEscapedQueryIdVariantC = function () {\n    return dispatchUnhandledRejection(this, 4);\n  };\n  QueryPayload.findGlobalObject = [2, 23, 29];\n  var QueryHeader = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(QueryHeader, AdElement);\n  var QueryWrapper = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(QueryWrapper, AdElement);\n  QueryWrapper.prototype.getEscapedQueryIdVariantC = function () {\n    return dispatchUnhandledRejection(this, 2);\n  };\n  QueryWrapper.findGlobalObject = [28, 30];\n  var QueryService = function (generatorWrapper) {\n    this.keysOfObject = new QueryHandler(generatorWrapper);\n  };\n  var QueryHandler = function (generatorWrapper) {\n    this.findKeyInObject = new QueryProcessor(generatorWrapper);\n  };\n  var QueryProcessor = function (generatorWrapper) {\n    this.updateAdProperty = new ProcessQuery(generatorWrapper);\n  };\n  var ProcessQuery = function (generatorWrapper) {\n    this.setFlag34 = function (value) {\n      var CustomMap = value.parseNullableIntEnum;\n      var findEntry = value.updateLengthPrefix;\n      value = value.status;\n      var iterateEntries = new MessageFooter();\n      iterateEntries = updateOrRemoveElement(iterateEntries, 1, optionalString(\"SOomke\"), \"\");\n      var createCircularNode = new Message();\n      findEntry = pf(createCircularNode, 1, MessagePart, optionalString(findEntry));\n      findEntry = addElementToAd(iterateEntries, 4, Message, findEntry);\n      iterateEntries = new Message();\n      value = pf(iterateEntries, 1, MessagePart, optionalString(value));\n      value = addElementToAd(findEntry, 4, Message, value);\n      findEntry = new MessageHeader();\n      CustomMap = pf(findEntry, 2, MessagePayload, convertToInt64(Math.roundRectangle(CustomMap)));\n      CustomMap = finalizeAdAttributes(value, 3, CustomMap);\n      generatorWrapper(CustomMap);\n    };\n  };\n  var QueryMessageBuilder = function () {\n    MessageBuilder.apply(this, arguments);\n    var generatorWrapper = this;\n    this.arrayTransformationInstance = new QueryService(function (value) {\n      return generatorWrapper.resolvePromise(value);\n    });\n  };\n  inheritPrototype(QueryMessageBuilder, MessageBuilder);\n  var QueryMessageProcessor = function () {\n    QueryMessageBuilder.apply(this, arguments);\n  };\n  inheritPrototype(QueryMessageProcessor, QueryMessageBuilder);\n  QueryMessageProcessor.prototype.assertBoolean = function () {\n    this.isDone.apply(this, toArray(sliceArguments.apply(0, arguments).map(function (generatorWrapper) {\n      return {\n        get1023Shifted: true,\n        updateElement: 4,\n        TransformEntries: generatorWrapper.toJSON()\n      };\n    })));\n  };\n  QueryMessageProcessor.prototype.resolvePromise = function () {\n    this.isDone.apply(this, toArray(sliceArguments.apply(0, arguments).map(function (generatorWrapper) {\n      return {\n        get1023Shifted: false,\n        updateElement: 1,\n        TransformEntries: generatorWrapper.toJSON()\n      };\n    })));\n  };\n  var sendHttpRequest = function (generatorWrapper, value) {\n    if (globalThis.fetch) {\n      globalThis.fetch(generatorWrapper, {\n        method: \"POST\",\n        body: value,\n        keepalive: value.length < 65536,\n        credentials: \"omit\",\n        mode: \"no-cors\",\n        redirect: \"follow\"\n      }).catch(function () {});\n    } else {\n      var CustomMap = new XMLHttpRequest();\n      CustomMap.open(\"POST\", generatorWrapper, true);\n      CustomMap.send(value);\n    }\n  };\n  var AdEventLogger = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key) {\n    QueryMessageProcessor.call(this, generatorWrapper, value);\n    this.dispatchUnhandledRejection = CustomMap;\n    this.executeCallbacks = findEntry;\n    this.handleThenable = iterateEntries;\n    this.onFulfilled = createCircularNode;\n    this.settlePromise = entryIdCounter;\n    this.createDeferred = key;\n    this.entryIdCounter = [];\n    this.tasks = null;\n    this.handleAsync = false;\n  };\n  inheritPrototype(AdEventLogger, QueryMessageProcessor);\n  var flushAdEvents = function (generatorWrapper) {\n    if (generatorWrapper.tasks !== null) {\n      clearTimeout(generatorWrapper.tasks);\n      generatorWrapper.tasks = null;\n    }\n    if (generatorWrapper.entryIdCounter.length) {\n      var value = serializeDataWithFilter(generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper);\n      generatorWrapper.executeCallbacks(generatorWrapper.dispatchUnhandledRejection + \"?e=1\", value);\n      generatorWrapper.entryIdCounter = [];\n    }\n  };\n  AdEventLogger.prototype.isDone = function () {\n    var generatorWrapper = sliceArguments.apply(0, arguments);\n    var value = this;\n    try {\n      if (this.settlePromise && serializeDataWithFilter(this.entryIdCounter.concat(generatorWrapper), this.setTimeoutWrapper).length >= 65536) {\n        flushAdEvents(this);\n      }\n      if (this.createDeferred && !this.handleAsync) {\n        this.handleAsync = true;\n        this.createDeferred.entryIdCounter(function () {\n          flushAdEvents(value);\n        });\n      }\n      this.entryIdCounter.push.apply(this.entryIdCounter, toArray(generatorWrapper));\n      if (this.entryIdCounter.length >= this.onFulfilled) {\n        flushAdEvents(this);\n      }\n      if (this.entryIdCounter.length && this.tasks === null) {\n        this.tasks = setTimeout(function () {\n          flushAdEvents(value);\n        }, this.handleThenable);\n      }\n    } catch (CustomMap) {\n      logErrorWithBeacon(CustomMap, this.setTimeoutWrapper);\n    }\n  };\n  var AdEventLoggerWithThrottling = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    AdEventLogger.call(this, generatorWrapper, value, \"https://pagead2.googlesyndication.com/pagead/ping\", sendHttpRequest, undefined === CustomMap ? 1000 : CustomMap, undefined === findEntry ? 100 : findEntry, (undefined === iterateEntries ? false : iterateEntries) && !!globalThis.fetch, createCircularNode);\n  };\n  inheritPrototype(AdEventLoggerWithThrottling, AdEventLogger);\n  var handleThenable = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.top = generatorWrapper;\n    this.right = value;\n    this.bottom = CustomMap;\n    this.left = findEntry;\n  };\n  handleThenable.prototype.getRectangleWidth = function () {\n    return this.right - this.left;\n  };\n  handleThenable.prototype.getRectangleHeight = function () {\n    return this.bottom - this.top;\n  };\n  var createRectangle = function (generatorWrapper) {\n    return new handleThenable(generatorWrapper.top, generatorWrapper.right, generatorWrapper.bottom, generatorWrapper.left);\n  };\n  setTimeoutWrapper = handleThenable.prototype;\n  setTimeoutWrapper.rectangleContains = function (generatorWrapper) {\n    if (this && generatorWrapper) {\n      if (generatorWrapper instanceof handleThenable) {\n        return generatorWrapper.left >= this.left && generatorWrapper.right <= this.right && generatorWrapper.top >= this.top && generatorWrapper.bottom <= this.bottom;\n      } else {\n        return generatorWrapper.inheritPrototype >= this.left && generatorWrapper.inheritPrototype <= this.right && generatorWrapper.globalScope >= this.top && generatorWrapper.globalScope <= this.bottom;\n      }\n    } else {\n      return false;\n    }\n  };\n  setTimeoutWrapper.expandRectangle = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (isObjectOrFunction(generatorWrapper)) {\n      this.top -= generatorWrapper.top;\n      this.right += generatorWrapper.right;\n      this.bottom += generatorWrapper.bottom;\n      this.left -= generatorWrapper.left;\n    } else {\n      this.top -= generatorWrapper;\n      this.right += Number(value);\n      this.bottom += Number(CustomMap);\n      this.left -= Number(findEntry);\n    }\n    return this;\n  };\n  setTimeoutWrapper.ceilRectangle = function () {\n    this.top = Math.ceilRectangle(this.top);\n    this.right = Math.ceilRectangle(this.right);\n    this.bottom = Math.ceilRectangle(this.bottom);\n    this.left = Math.ceilRectangle(this.left);\n    return this;\n  };\n  setTimeoutWrapper.floorRectangle = function () {\n    this.top = Math.floorRectangle(this.top);\n    this.right = Math.floorRectangle(this.right);\n    this.bottom = Math.floorRectangle(this.bottom);\n    this.left = Math.floorRectangle(this.left);\n    return this;\n  };\n  setTimeoutWrapper.roundRectangle = function () {\n    this.top = Math.roundRectangle(this.top);\n    this.right = Math.roundRectangle(this.right);\n    this.bottom = Math.roundRectangle(this.bottom);\n    this.left = Math.roundRectangle(this.left);\n    return this;\n  };\n  var translateRectangle = function (generatorWrapper, value, CustomMap) {\n    if (value instanceof Coordinate) {\n      generatorWrapper.left += value.inheritPrototype;\n      generatorWrapper.right += value.inheritPrototype;\n      generatorWrapper.top += value.globalScope;\n      generatorWrapper.bottom += value.globalScope;\n    } else {\n      generatorWrapper.left += value;\n      generatorWrapper.right += value;\n      if (typeof CustomMap === \"number\") {\n        generatorWrapper.top += CustomMap;\n        generatorWrapper.bottom += CustomMap;\n      }\n    }\n    return generatorWrapper;\n  };\n  handleThenable.prototype.scaleRectangle = function (generatorWrapper, value) {\n    if (typeof value === \"number\") {\n      value = value;\n    } else {\n      value = generatorWrapper;\n    }\n    this.left *= generatorWrapper;\n    this.right *= generatorWrapper;\n    this.top *= value;\n    this.bottom *= value;\n    return this;\n  };\n  var RectangleDimensions = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.left = generatorWrapper;\n    this.top = value;\n    this.width = CustomMap;\n    this.height = findEntry;\n  };\n  var rectangleFromDimensions = function (generatorWrapper) {\n    return new handleThenable(generatorWrapper.top, generatorWrapper.left + generatorWrapper.width, generatorWrapper.top + generatorWrapper.height, generatorWrapper.left);\n  };\n  setTimeoutWrapper = RectangleDimensions.prototype;\n  setTimeoutWrapper.rectangleContains = function (generatorWrapper) {\n    if (generatorWrapper instanceof Coordinate) {\n      return generatorWrapper.inheritPrototype >= this.left && generatorWrapper.inheritPrototype <= this.left + this.width && generatorWrapper.globalScope >= this.top && generatorWrapper.globalScope <= this.top + this.height;\n    } else {\n      return this.left <= generatorWrapper.left && this.left + this.width >= generatorWrapper.left + generatorWrapper.width && this.top <= generatorWrapper.top && this.top + this.height >= generatorWrapper.top + generatorWrapper.height;\n    }\n  };\n  setTimeoutWrapper.getRectangleSize = function () {\n    return new Size(this.width, this.height);\n  };\n  setTimeoutWrapper.ceilRectangle = function () {\n    this.left = Math.ceilRectangle(this.left);\n    this.top = Math.ceilRectangle(this.top);\n    this.width = Math.ceilRectangle(this.width);\n    this.height = Math.ceilRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.floorRectangle = function () {\n    this.left = Math.floorRectangle(this.left);\n    this.top = Math.floorRectangle(this.top);\n    this.width = Math.floorRectangle(this.width);\n    this.height = Math.floorRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.roundRectangle = function () {\n    this.left = Math.roundRectangle(this.left);\n    this.top = Math.roundRectangle(this.top);\n    this.width = Math.roundRectangle(this.width);\n    this.height = Math.roundRectangle(this.height);\n    return this;\n  };\n  setTimeoutWrapper.scaleRectangle = function (generatorWrapper, value) {\n    if (typeof value === \"number\") {\n      value = value;\n    } else {\n      value = generatorWrapper;\n    }\n    this.left *= generatorWrapper;\n    this.width *= generatorWrapper;\n    this.top *= value;\n    this.height *= value;\n    return this;\n  };\n  function getContextData(generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = globalScope;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    var value = generatorWrapper.context || generatorWrapper.AMP_CONTEXT_DATA;\n    if (!value) {\n      try {\n        value = generatorWrapper.parent.context || generatorWrapper.parent.AMP_CONTEXT_DATA;\n      } catch (iterateEntries) {}\n    }\n    var CustomMap, findEntry;\n    if (((CustomMap = value) == null ? 0 : CustomMap.pageViewId) && ((findEntry = value) == null ? 0 : findEntry.canonicalUrl)) {\n      return value;\n    } else {\n      return null;\n    }\n  }\n  var PersistentState = function () {\n    this.stream = {};\n  };\n  var generateCorrelator = function () {\n    var generatorWrapper = getContextData(window);\n    if (generatorWrapper) {\n      if (generatorWrapper) {\n        var value = generatorWrapper.pageViewId;\n        generatorWrapper = generatorWrapper.clientId;\n        if (typeof generatorWrapper === \"string\") {\n          value += generatorWrapper.replace(/\\D/g, \"\").substr(0, 6);\n        }\n      } else {\n        value = null;\n      }\n      return +value;\n    }\n    value = getTopAccessibleContext(window);\n    generatorWrapper = value.google_global_correlator;\n    if (!generatorWrapper) {\n      value.google_global_correlator = generatorWrapper = 1 + Math.floorRectangle(Math.random() * Math.pow(2, 43));\n    }\n    return generatorWrapper;\n  };\n  var getCachedValueOrCompute = function (generatorWrapper, value) {\n    var CustomMap = adRegionConfig[7] || \"google_ps_7\";\n    generatorWrapper = generatorWrapper.stream;\n    var findEntry = generatorWrapper[CustomMap];\n    if (undefined === findEntry) {\n      generatorWrapper[CustomMap] = value();\n      return generatorWrapper[CustomMap];\n    } else {\n      return findEntry;\n    }\n  };\n  var getOrGenerateCorrelator = function (generatorWrapper) {\n    var value = generateCorrelator();\n    return getCachedValueOrCompute(generatorWrapper, function () {\n      return value;\n    });\n  };\n  var getMasterOrGlobalCorrelator = function () {\n    if (masterPersistentState) {\n      var generatorWrapper = masterPersistentState;\n    } else {\n      generatorWrapper = ((generatorWrapper = undefined === generatorWrapper ? getContextData() : generatorWrapper) ? isAccessibleFrame(generatorWrapper.master) ? generatorWrapper.master : null : null) || window;\n      var value = generatorWrapper.google_persistent_state_async;\n      if (value != null && typeof value == \"object\" && value.stream != null && typeof value.stream == \"object\") {\n        generatorWrapper = masterPersistentState = value;\n      } else {\n        generatorWrapper = generatorWrapper.google_persistent_state_async = masterPersistentState = new PersistentState();\n      }\n    }\n    return getOrGenerateCorrelator(generatorWrapper);\n  };\n  var masterPersistentState = null;\n  var adFormatRegionMapping = {};\n  var adRegionConfig = (adFormatRegionMapping[8] = \"google_prev_ad_formats_by_region\", adFormatRegionMapping[9] = \"google_prev_ad_slotnames_by_region\", adFormatRegionMapping);\n  var errorReportingUrl = identityFunction([\"https://pagead2.googlesyndication.com/pagead/js/err_rep.js\"]);\n  var ErrorReporter = function () {\n    var generatorWrapper = undefined === generatorWrapper ? \"jserror\" : generatorWrapper;\n    var value = undefined === value ? 0.01 : value;\n    var CustomMap = undefined === CustomMap ? createSafeHtmlFromTemplate(errorReportingUrl) : CustomMap;\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = false;\n    this.entryIdCounter = null;\n    this.createDeferred = false;\n    this.onFulfilled = Math.random();\n    this.handleAsync = value;\n    this.isDone = this.boundFunctionCall;\n    this.settlePromise = CustomMap;\n  };\n  setTimeoutWrapper = ErrorReporter.prototype;\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === CustomMap) {\n      CustomMap = this.handleAsync;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === iterateEntries) {\n      iterateEntries = this.tasks;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    if ((this.createDeferred ? this.onFulfilled : Math.random()) > CustomMap) {\n      return this.setTimeoutWrapper;\n    }\n    if (!isValidError(value)) {\n      value = new ErrorDetails(value, {\n        context: generatorWrapper,\n        writeBytes: iterateEntries\n      });\n    }\n    if (findEntry || this.entryIdCounter) {\n      value.meta = {};\n      if (this.entryIdCounter) {\n        this.entryIdCounter(value.meta);\n      }\n      if (findEntry) {\n        findEntry(value.meta);\n      }\n    }\n    globalScope.google_js_errors = globalScope.google_js_errors || [];\n    globalScope.google_js_errors.push(value);\n    if (!globalScope.error_rep_loaded) {\n      value = globalScope.document;\n      generatorWrapper = createHtmlElement(\"SCRIPT\", value);\n      setElementSrcFromTrustedUrl(generatorWrapper, this.settlePromise);\n      if ((value = value.getElementsByTagName(\"script\")[0]) && value.parentNode) {\n        value.parentNode.insertBefore(generatorWrapper, value);\n      }\n      globalScope.error_rep_loaded = true;\n    }\n    return this.setTimeoutWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    try {\n      return value();\n    } catch (findEntry) {\n      if (!this.isDone(generatorWrapper, findEntry, this.handleAsync, CustomMap, this.tasks)) {\n        throw findEntry;\n      }\n    }\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    };\n  };\n  var getVisibilityStateCode = function (generatorWrapper) {\n    if (generatorWrapper.prerendering) {\n      return 3;\n    } else {\n      return {\n        visible: 1,\n        hidden: 2,\n        prerender: 3,\n        preview: 4,\n        unloaded: 5\n      }[generatorWrapper.visibilityState || generatorWrapper.webkitVisibilityState || generatorWrapper.mozVisibilityState || \"\"] || 0;\n    }\n  };\n  var getVisibilityChangeEventName = function (generatorWrapper) {\n    var value;\n    if (generatorWrapper.visibilityState) {\n      value = \"visibilitychange\";\n    } else if (generatorWrapper.mozVisibilityState) {\n      value = \"mozvisibilitychange\";\n    } else if (generatorWrapper.webkitVisibilityState) {\n      value = \"webkitvisibilitychange\";\n    }\n    return value;\n  };\n  var getRumEventQueue = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper._google_rum_ns_ = generatorWrapper._google_rum_ns_ || {};\n    return generatorWrapper.updateMetrics = generatorWrapper.updateMetrics || [];\n  };\n  function sanitizeInput(generatorWrapper) {\n    if (generatorWrapper === null) {\n      generatorWrapper = \"null\";\n    } else if (undefined === generatorWrapper) {\n      generatorWrapper = \"undefined\";\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    var value = getTrustedTypesPolicy();\n    if (value) {\n      generatorWrapper = value.createHTML(generatorWrapper);\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    return new SafeHtml(generatorWrapper, safeStyleMarker);\n  }\n  function appendToUrl(generatorWrapper, value, CustomMap) {\n    forEachInObject(value, function (findEntry, iterateEntries) {\n      var createCircularNode = CustomMap && CustomMap[iterateEntries];\n      if (!(!findEntry && findEntry !== 0 || createCircularNode)) {\n        generatorWrapper += \"&\" + encodeURIComponent(iterateEntries) + \"=\" + encodeURIComponent(String(findEntry));\n        if (CustomMap) {\n          CustomMap[iterateEntries] = true;\n        }\n      }\n    });\n    return generatorWrapper;\n  }\n  var PerformanceLogger = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key) {\n    if (undefined === createCircularNode) {\n      createCircularNode = Infinity;\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    if (undefined === entryIdCounter) {\n      entryIdCounter = false;\n    } else {\n      entryIdCounter = entryIdCounter;\n    }\n    PerformanceMonitor.call(this, generatorWrapper, key);\n    var value = this;\n    this.totalAdBufferingTime = value;\n    this.domain = CustomMap;\n    this.path = findEntry;\n    this.createIterator = iterateEntries;\n    this.settlePromise = 0;\n    this.handleAsync = {};\n    this.handleThenable = {};\n    this.year = [];\n    this.report = {};\n    this.tasks = 0;\n    this.dispatchUnhandledRejection = [];\n    this.resolvePromise = createCircularNode;\n    generatorWrapper = this.entryIdCounter.navigator;\n    this.updateMaxSize = !(this.domain !== \"csi.gstatic.com\" || !generatorWrapper || !generatorWrapper.sendBeacon);\n    if (!(this.entryIdCounter.performance && this.entryIdCounter.performance.now)) {\n      setPerformanceMetric(this, \"dat\", 1);\n    }\n    if (generatorWrapper && generatorWrapper.deviceMemory) {\n      setPerformanceMetric(this, \"dmc\", generatorWrapper.deviceMemory);\n    }\n    if (this.entryIdCounter === this.entryIdCounter.top) {\n      setPerformanceMetric(this, \"top\", 1);\n    }\n    this.tryCall = !entryIdCounter;\n    this.logError = function () {\n      value.entryIdCounter.setTimeout(function () {\n        flushData(value);\n      }, 1100);\n    };\n    this.handleThenable = function () {\n      setPerformanceMetric(value, \"uet\", 2);\n      for (var currentEntry = getIterator(value.year), foundEntry = currentEntry.next(); !foundEntry.done; foundEntry = currentEntry.next()) {\n        foundEntry = foundEntry.value;\n        try {\n          foundEntry();\n        } catch (rejectFunction) {}\n      }\n      currentEntry = value.entryIdCounter;\n      var resolveFunction = undefined === resolveFunction ? {} : resolveFunction;\n      if (typeof window.CustomEvent === \"function\") {\n        foundEntry = new CustomEvent(\"rum_blp\", resolveFunction);\n      } else {\n        foundEntry = document.createEvent(\"CustomEvent\");\n        foundEntry.initCustomEvent(\"rum_blp\", !!resolveFunction.bubbles, !!resolveFunction.cancelable, resolveFunction.detail);\n      }\n      currentEntry.dispatchEvent(foundEntry);\n      flushData(value);\n      if (value.handleAsync.uet != null) {\n        value.createDeferred -= 3 + value.handleAsync.uet.length + 2;\n        delete value.handleAsync.uet;\n      }\n    };\n    this.definePropertyPolyfill = debounceFunction(function () {\n      flushData(value);\n    });\n    this.firstQuartileTime = function () {\n      var currentEntry = value.entryIdCounter.document;\n      if (currentEntry.hidden != null ? currentEntry.hidden : currentEntry.mozHidden != null ? currentEntry.mozHidden : currentEntry.webkitHidden != null && currentEntry.webkitHidden) {\n        value.definePropertyPolyfill();\n      }\n    };\n    this.executeCallbacks = this.entryIdCounter.setTimeout(function () {\n      flushData(value);\n    }, 5000);\n    this.createDeferred = value.length + CustomMap.length + findEntry.length + iterateEntries.length + 3;\n    forEachElement(this.events, function (currentEntry) {\n      processEvent(value, currentEntry);\n    });\n    value = getRumEventQueue(this.entryIdCounter);\n    var entry = function () {\n      var currentEntry = sliceArguments.apply(0, arguments)[0];\n      var foundEntry = currentEntry[0];\n      currentEntry = currentEntry[1];\n      var resolveFunction = foundEntry.length + currentEntry.length + 2;\n      if (value.createDeferred + value.tasks + resolveFunction > 8000) {\n        flushData(value);\n      }\n      value.dispatchUnhandledRejection.push([foundEntry, currentEntry]);\n      value.tasks += resolveFunction;\n      checkAndFlushIfNeeded(value);\n      return 0;\n    };\n    forEachElement(value, function (currentEntry) {\n      return entry(currentEntry);\n    });\n    value.length = 0;\n    value.push = entry;\n    setPerformanceMetric(this, \"puid\", (this.settlePromise + 1).toString(36) + \"~\" + Date.now().toString(36));\n    initPerformanceLogger(this);\n  };\n  inheritPrototype(PerformanceLogger, PerformanceMonitor);\n  var initPerformanceLogger = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter.document.readyState === \"complete\") {\n      generatorWrapper.entryIdCounter.setTimeout(function () {\n        flushData(generatorWrapper);\n      }, 0);\n    } else {\n      addEventListenerWithNormalization(generatorWrapper.entryIdCounter, \"load\", generatorWrapper.logError);\n    }\n    var value = getVisibilityChangeEventName(generatorWrapper.entryIdCounter.document);\n    if (typeof value !== \"undefined\") {\n      addEventListenerWithNormalization(generatorWrapper.entryIdCounter, value, generatorWrapper.firstQuartileTime);\n    }\n    addEventListenerWithNormalization(generatorWrapper.entryIdCounter, \"pagehide\", generatorWrapper.handleThenable);\n  };\n  var setPerformanceMetric = function (generatorWrapper, value, CustomMap) {\n    CustomMap = String(CustomMap);\n    if (generatorWrapper.handleAsync[value] != null) {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred + (CustomMap.length - generatorWrapper.handleAsync[value].length);\n    } else {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred + (value.length + CustomMap.length + 2);\n    }\n    generatorWrapper.handleAsync[value] = CustomMap;\n  };\n  var logEventWithDimension = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = \"\";\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    var createCircularNode = calculateEventDimensionLength(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    if (generatorWrapper.createDeferred + generatorWrapper.tasks + createCircularNode > 8000) {\n      flushData(generatorWrapper);\n      createCircularNode = value.length + CustomMap.length + 2;\n    }\n    recordEvent(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    generatorWrapper.tasks += createCircularNode;\n    checkAndFlushIfNeeded(generatorWrapper);\n  };\n  var calculateEventDimensionLength = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper.report[value] == null) {\n      return value.length + CustomMap.length + 2;\n    } else {\n      if (findEntry) {\n        return CustomMap.length + (undefined === iterateEntries ? \"\" : iterateEntries).length;\n      } else {\n        return CustomMap.length - generatorWrapper.report[value].length;\n      }\n    }\n  };\n  var recordEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (findEntry && generatorWrapper.report[value] != null) {\n      generatorWrapper.report[value] = generatorWrapper.report[value] + (\"\" + (undefined === iterateEntries ? \"\" : iterateEntries) + CustomMap);\n    } else {\n      generatorWrapper.report[value] = CustomMap;\n    }\n  };\n  var checkAndFlushIfNeeded = function (generatorWrapper) {\n    if (generatorWrapper.createDeferred + generatorWrapper.tasks >= 6000) {\n      flushData(generatorWrapper);\n    }\n  };\n  var flushData = function (generatorWrapper) {\n    if (generatorWrapper.setTimeoutWrapper && generatorWrapper.tryCall) {\n      try {\n        if (generatorWrapper.tasks) {\n          generatorWrapper.sendBeacon(generatorWrapper.report);\n          if (generatorWrapper.settlePromise === generatorWrapper.resolvePromise) {\n            generatorWrapper.isDone();\n          }\n        }\n      } catch (value) {\n        new ErrorReporter().boundFunctionCall(358, value);\n      }\n      generatorWrapper.report = {};\n      generatorWrapper.tasks = 0;\n      generatorWrapper.events.length = 0;\n      generatorWrapper.entryIdCounter.clearTimeout(generatorWrapper.executeCallbacks);\n      generatorWrapper.executeCallbacks = 0;\n    }\n  };\n  var generateBeaconUrl = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.totalAdBufferingTime + \"//\" + generatorWrapper.domain + generatorWrapper.path + generatorWrapper.createIterator;\n    var findEntry = {};\n    CustomMap = appendToUrl(CustomMap, generatorWrapper.handleAsync, findEntry);\n    CustomMap = appendToUrl(CustomMap, value, findEntry);\n    value = generatorWrapper.entryIdCounter;\n    if (value.google_timing_params) {\n      CustomMap = appendToUrl(CustomMap, value.google_timing_params, findEntry);\n      value.google_timing_params = undefined;\n    }\n    forEachElement(generatorWrapper.dispatchUnhandledRejection, function (iterateEntries) {\n      var createCircularNode = getIterator(iterateEntries);\n      iterateEntries = createCircularNode.next().value;\n      createCircularNode = createCircularNode.next().value;\n      var entryIdCounter = {};\n      CustomMap = appendToUrl(CustomMap, (entryIdCounter[iterateEntries] = createCircularNode, entryIdCounter));\n    });\n    generatorWrapper.dispatchUnhandledRejection.length = 0;\n    return CustomMap;\n  };\n  PerformanceLogger.prototype.sendBeacon = function (generatorWrapper) {\n    this.settlePromise++;\n    generatorWrapper = generateBeaconUrl(this, generatorWrapper);\n    var value = false;\n    try {\n      value = !!(this.updateMaxSize && this.entryIdCounter.navigator && this.entryIdCounter.navigator.sendBeacon(generatorWrapper, null));\n    } catch (CustomMap) {\n      this.updateMaxSize = false;\n    }\n    if (!value) {\n      sendImageRequestWithRetry(this.entryIdCounter, generatorWrapper);\n    }\n    setPerformanceMetric(this, \"puid\", (this.settlePromise + 1).toString(36) + \"~\" + Date.now().toString(36));\n  };\n  var processEvent = function (generatorWrapper, value) {\n    var CustomMap = \"met.\" + value.type;\n    var findEntry = typeof value.value === \"number\" ? Math.roundRectangle(value.value).toString(36) : value.value;\n    var iterateEntries = Math.roundRectangle(value.duration);\n    value = \"\" + value.label + (value.slotId != null ? \"_\" + value.slotId : \"\") + (\".\" + findEntry) + (iterateEntries > 0 ? \"_\" + iterateEntries.toString(36) : \"\") + (value.taskId != null ? \"__\" + Math.roundRectangle(value.taskId).toString(36) : \"\");\n    logEventWithDimension(generatorWrapper, CustomMap, value, true, \"~\");\n  };\n  PerformanceLogger.prototype.onFulfilled = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && this.settlePromise < this.resolvePromise) {\n      PerformanceMonitor.prototype.onFulfilled.call(this, generatorWrapper);\n      processEvent(this, generatorWrapper);\n    }\n  };\n  PerformanceLogger.prototype.isDone = function () {\n    PerformanceMonitor.prototype.isDone.call(this);\n    this.entryIdCounter.clearTimeout(this.executeCallbacks);\n    this.tasks = this.executeCallbacks = 0;\n    this.report = {};\n    clearObject(this.handleThenable);\n    clearObject(this.handleAsync);\n    removeEventListenerWithNormalization(this.entryIdCounter, \"load\", this.logError);\n    removeEventListenerWithNormalization(this.entryIdCounter, \"pagehide\", this.handleThenable);\n  };\n  var getSingletonInstance = function (generatorWrapper) {\n    var value = \"vb\";\n    if (generatorWrapper.userAgentData && generatorWrapper.hasOwnProperty(value)) {\n      return generatorWrapper.userAgentData;\n    }\n    value = new generatorWrapper();\n    return generatorWrapper.userAgentData = value;\n  };\n  var resolvePromise = function () {\n    this.entryIdCounter = new PerformanceLogger(1, \"https:\", \"csi.gstatic.com\", \"/csi?v=2&s=\", \"ima\", undefined, true);\n    var generatorWrapper = getMasterOrGlobalCorrelator();\n    if (generatorWrapper != null) {\n      setPerformanceMetric(this.entryIdCounter, \"c\", generatorWrapper);\n    }\n    generatorWrapper = parseInt(this.entryIdCounter.handleAsync.CustomMap, 10) / 2;\n    if (generatorWrapper != null) {\n      setPerformanceMetric(this.entryIdCounter, \"slotId\", generatorWrapper);\n    }\n  };\n  var settlePromise = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap != null) {\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      var findEntry = value + \"=\" + CustomMap;\n      if (!generatorWrapper.handleThenable[findEntry]) {\n        logEventWithDimension(generatorWrapper, value, CustomMap, false);\n        if (findEntry.length < 1000) {\n          generatorWrapper.handleThenable[findEntry] = true;\n        }\n      }\n    }\n  };\n  var addMultipleKeyValues = function (generatorWrapper, value) {\n    for (var CustomMap in value) if (typeof value[CustomMap] === \"object\") {\n      value[CustomMap] = encodeURIComponent(JSON.str",
  " value.definePropertyPolyfill();\n      }\n    };\n    this.executeCallbacks = this.entryIdCounter.setTimeout(function () {\n      flushData(value);\n    }, 5000);\n    this.createDeferred = value.length + CustomMap.length + findEntry.length + iterateEntries.length + 3;\n    forEachElement(this.events, function (currentEntry) {\n      processEvent(value, currentEntry);\n    });\n    value = getRumEventQueue(this.entryIdCounter);\n    var entry = function () {\n      var currentEntry = sliceArguments.apply(0, arguments)[0];\n      var foundEntry = currentEntry[0];\n      currentEntry = currentEntry[1];\n      var resolveFunction = foundEntry.length + currentEntry.length + 2;\n      if (value.createDeferred + value.tasks + resolveFunction > 8000) {\n        flushData(value);\n      }\n      value.dispatchUnhandledRejection.push([foundEntry, currentEntry]);\n      value.tasks += resolveFunction;\n      checkAndFlushIfNeeded(value);\n      return 0;\n    };\n    forEachElement(value, function (currentEntry) {\n      return entry(currentEntry);\n    });\n    value.length = 0;\n    value.push = entry;\n    setPerformanceMetric(this, \"puid\", (this.settlePromise + 1).toString(36) + \"~\" + Date.now().toString(36));\n    initPerformanceLogger(this);\n  };\n  inheritPrototype(PerformanceLogger, PerformanceMonitor);\n  var initPerformanceLogger = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter.document.readyState === \"complete\") {\n      generatorWrapper.entryIdCounter.setTimeout(function () {\n        flushData(generatorWrapper);\n      }, 0);\n    } else {\n      addEventListenerWithNormalization(generatorWrapper.entryIdCounter, \"load\", generatorWrapper.logError);\n    }\n    var value = getVisibilityChangeEventName(generatorWrapper.entryIdCounter.document);\n    if (typeof value !== \"undefined\") {\n      addEventListenerWithNormalization(generatorWrapper.entryIdCounter, value, generatorWrapper.firstQuartileTime);\n    }\n    addEventListenerWithNormalization(generatorWrapper.entryIdCounter, \"pagehide\", generatorWrapper.handleThenable);\n  };\n  var setPerformanceMetric = function (generatorWrapper, value, CustomMap) {\n    CustomMap = String(CustomMap);\n    if (generatorWrapper.handleAsync[value] != null) {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred + (CustomMap.length - generatorWrapper.handleAsync[value].length);\n    } else {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred + (value.length + CustomMap.length + 2);\n    }\n    generatorWrapper.handleAsync[value] = CustomMap;\n  };\n  var logEventWithDimension = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = \"\";\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    var createCircularNode = calculateEventDimensionLength(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    if (generatorWrapper.createDeferred + generatorWrapper.tasks + createCircularNode > 8000) {\n      flushData(generatorWrapper);\n      createCircularNode = value.length + CustomMap.length + 2;\n    }\n    recordEvent(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    generatorWrapper.tasks += createCircularNode;\n    checkAndFlushIfNeeded(generatorWrapper);\n  };\n  var calculateEventDimensionLength = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper.report[value] == null) {\n      return value.length + CustomMap.length + 2;\n    } else {\n      if (findEntry) {\n        return CustomMap.length + (undefined === iterateEntries ? \"\" : iterateEntries).length;\n      } else {\n        return CustomMap.length - generatorWrapper.report[value].length;\n      }\n    }\n  };\n  var recordEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (findEntry && generatorWrapper.report[value] != null) {\n      generatorWrapper.report[value] = generatorWrapper.report[value] + (\"\" + (undefined === iterateEntries ? \"\" : iterateEntries) + CustomMap);\n    } else {\n      generatorWrapper.report[value] = CustomMap;\n    }\n  };\n  var checkAndFlushIfNeeded = function (generatorWrapper) {\n    if (generatorWrapper.createDeferred + generatorWrapper.tasks >= 6000) {\n      flushData(generatorWrapper);\n    }\n  };\n  var flushData = function (generatorWrapper) {\n    if (generatorWrapper.setTimeoutWrapper && generatorWrapper.tryCall) {\n      try {\n        if (generatorWrapper.tasks) {\n          generatorWrapper.sendBeacon(generatorWrapper.report);\n          if (generatorWrapper.settlePromise === generatorWrapper.resolvePromise) {\n            generatorWrapper.isDone();\n          }\n        }\n      } catch (value) {\n        new ErrorReporter().boundFunctionCall(358, value);\n      }\n      generatorWrapper.report = {};\n      generatorWrapper.tasks = 0;\n      generatorWrapper.events.length = 0;\n      generatorWrapper.entryIdCounter.clearTimeout(generatorWrapper.executeCallbacks);\n      generatorWrapper.executeCallbacks = 0;\n    }\n  };\n  var generateBeaconUrl = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.totalAdBufferingTime + \"//\" + generatorWrapper.domain + generatorWrapper.path + generatorWrapper.createIterator;\n    var findEntry = {};\n    CustomMap = appendToUrl(CustomMap, generatorWrapper.handleAsync, findEntry);\n    CustomMap = appendToUrl(CustomMap, value, findEntry);\n    value = generatorWrapper.entryIdCounter;\n    if (value.google_timing_params) {\n      CustomMap = appendToUrl(CustomMap, value.google_timing_params, findEntry);\n      value.google_timing_params = undefined;\n    }\n    forEachElement(generatorWrapper.dispatchUnhandledRejection, function (iterateEntries) {\n      var createCircularNode = getIterator(iterateEntries);\n      iterateEntries = createCircularNode.next().value;\n      createCircularNode = createCircularNode.next().value;\n      var entryIdCounter = {};\n      CustomMap = appendToUrl(CustomMap, (entryIdCounter[iterateEntries] = createCircularNode, entryIdCounter));\n    });\n    generatorWrapper.dispatchUnhandledRejection.length = 0;\n    return CustomMap;\n  };\n  PerformanceLogger.prototype.sendBeacon = function (generatorWrapper) {\n    this.settlePromise++;\n    generatorWrapper = generateBeaconUrl(this, generatorWrapper);\n    var value = false;\n    try {\n      value = !!(this.updateMaxSize && this.entryIdCounter.navigator && this.entryIdCounter.navigator.sendBeacon(generatorWrapper, null));\n    } catch (CustomMap) {\n      this.updateMaxSize = false;\n    }\n    if (!value) {\n      sendImageRequestWithRetry(this.entryIdCounter, generatorWrapper);\n    }\n    setPerformanceMetric(this, \"puid\", (this.settlePromise + 1).toString(36) + \"~\" + Date.now().toString(36));\n  };\n  var processEvent = function (generatorWrapper, value) {\n    var CustomMap = \"met.\" + value.type;\n    var findEntry = typeof value.value === \"number\" ? Math.roundRectangle(value.value).toString(36) : value.value;\n    var iterateEntries = Math.roundRectangle(value.duration);\n    value = \"\" + value.label + (value.slotId != null ? \"_\" + value.slotId : \"\") + (\".\" + findEntry) + (iterateEntries > 0 ? \"_\" + iterateEntries.toString(36) : \"\") + (value.taskId != null ? \"__\" + Math.roundRectangle(value.taskId).toString(36) : \"\");\n    logEventWithDimension(generatorWrapper, CustomMap, value, true, \"~\");\n  };\n  PerformanceLogger.prototype.onFulfilled = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && this.settlePromise < this.resolvePromise) {\n      PerformanceMonitor.prototype.onFulfilled.call(this, generatorWrapper);\n      processEvent(this, generatorWrapper);\n    }\n  };\n  PerformanceLogger.prototype.isDone = function () {\n    PerformanceMonitor.prototype.isDone.call(this);\n    this.entryIdCounter.clearTimeout(this.executeCallbacks);\n    this.tasks = this.executeCallbacks = 0;\n    this.report = {};\n    clearObject(this.handleThenable);\n    clearObject(this.handleAsync);\n    removeEventListenerWithNormalization(this.entryIdCounter, \"load\", this.logError);\n    removeEventListenerWithNormalization(this.entryIdCounter, \"pagehide\", this.handleThenable);\n  };\n  var getSingletonInstance = function (generatorWrapper) {\n    var value = \"vb\";\n    if (generatorWrapper.userAgentData && generatorWrapper.hasOwnProperty(value)) {\n      return generatorWrapper.userAgentData;\n    }\n    value = new generatorWrapper();\n    return generatorWrapper.userAgentData = value;\n  };\n  var resolvePromise = function () {\n    this.entryIdCounter = new PerformanceLogger(1, \"https:\", \"csi.gstatic.com\", \"/csi?v=2&s=\", \"ima\", undefined, true);\n    var generatorWrapper = getMasterOrGlobalCorrelator();\n    if (generatorWrapper != null) {\n      setPerformanceMetric(this.entryIdCounter, \"c\", generatorWrapper);\n    }\n    generatorWrapper = parseInt(this.entryIdCounter.handleAsync.CustomMap, 10) / 2;\n    if (generatorWrapper != null) {\n      setPerformanceMetric(this.entryIdCounter, \"slotId\", generatorWrapper);\n    }\n  };\n  var settlePromise = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap != null) {\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      var findEntry = value + \"=\" + CustomMap;\n      if (!generatorWrapper.handleThenable[findEntry]) {\n        logEventWithDimension(generatorWrapper, value, CustomMap, false);\n        if (findEntry.length < 1000) {\n          generatorWrapper.handleThenable[findEntry] = true;\n        }\n      }\n    }\n  };\n  var addMultipleKeyValues = function (generatorWrapper, value) {\n    for (var CustomMap in value) if (typeof value[CustomMap] === \"object\") {\n      value[CustomMap] = encodeURIComponent(JSON.stringify(value[CustomMap]));\n    } else {\n      value[CustomMap] = encodeURIComponent(String(value[CustomMap]));\n    }\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    var findEntry = false;\n    CustomMap = 0;\n    for (var iterateEntries = getIterator(Object.keys(value)), createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n      createCircularNode = createCircularNode.value;\n      if (generatorWrapper.report[createCircularNode] != null) {\n        findEntry = true;\n      }\n      CustomMap += calculateEventDimensionLength(generatorWrapper, createCircularNode, value[createCircularNode], false);\n    }\n    if (generatorWrapper.createDeferred + generatorWrapper.tasks + CustomMap > 8000 || findEntry) {\n      flushData(generatorWrapper);\n    }\n    findEntry = getIterator(Object.keys(value));\n    for (iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n      iterateEntries = iterateEntries.value;\n      recordEvent(generatorWrapper, iterateEntries, value[iterateEntries], false);\n    }\n    generatorWrapper.tasks += CustomMap;\n    checkAndFlushIfNeeded(generatorWrapper);\n  };\n  var logError = function (generatorWrapper) {\n    var value = resolvePromise.getAdInstance().entryIdCounter;\n    if (value.setTimeoutWrapper) {\n      value.onFulfilled(new PerformanceEvent(generatorWrapper, 4, getCurrentTimeWithPerformanceTiming() - 0, 0));\n    }\n  };\n  resolvePromise.prototype.recordClick = function (generatorWrapper, value, CustomMap, findEntry) {\n    for (var iterateEntries = false, createCircularNode = \"notag\"; undefined != findEntry && findEntry != document.documentElement;) {\n      var entryIdCounter = undefined;\n      var key = undefined;\n      if (((entryIdCounter = findEntry) == null ? 0 : entryIdCounter.getAttribute(\"data-ck-navigates\")) || ((key = findEntry) == null ? 0 : key.getAttribute(\"data-ck-tag\"))) {\n        entryIdCounter = createCircularNode = undefined;\n        if ((entryIdCounter = (createCircularNode = findEntry) == null ? undefined : createCircularNode.getAttribute(\"data-ck-navigates\")) != null) {\n          iterateEntries = entryIdCounter;\n        } else {\n          iterateEntries = false;\n        }\n        key = entryIdCounter = undefined;\n        if ((key = (entryIdCounter = findEntry) == null ? undefined : entryIdCounter.getAttribute(\"data-ck-tag\")) != null) {\n          createCircularNode = key;\n        } else {\n          createCircularNode = \"notag\";\n        }\n        break;\n      }\n      entryIdCounter = undefined;\n      if ((entryIdCounter = findEntry.parentElement) != null) {\n        findEntry = entryIdCounter;\n      } else {\n        findEntry = undefined;\n      }\n    }\n    findEntry = this.entryIdCounter;\n    if (findEntry.setTimeoutWrapper) {\n      findEntry.onFulfilled(new PerformanceEvent(generatorWrapper + \"_\" + value + \"x\" + CustomMap + \"|\" + iterateEntries + \"|\" + createCircularNode, 4, getCurrentTimeWithPerformanceTiming(), 0));\n    }\n  };\n  resolvePromise.getAdInstance = function () {\n    return getSingletonInstance(resolvePromise);\n  };\n  var isStringValidJSON = function (generatorWrapper) {\n    if (/^\\s*$/.test(generatorWrapper)) {\n      return false;\n    } else {\n      return /^[\\],:{}\\s\\u2028\\u2029]*$/.test(generatorWrapper.replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\").replace(/(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g, \"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g, \"\"));\n    }\n  };\n  var safeParseJSON = function (generatorWrapper) {\n    try {\n      return globalScope.JSON.parse(generatorWrapper);\n    } catch (value) {}\n    generatorWrapper = String(generatorWrapper);\n    if (isStringValidJSON(generatorWrapper)) {\n      try {\n        return eval(\"(\" + generatorWrapper + \")\");\n      } catch (value) {}\n    }\n    throw Error(\"Invalid JSON string: \" + generatorWrapper);\n  };\n  var JsonStringifySafe = function () {\n    this.entryIdCounter = Ik;\n  };\n  var serializeToJsonString = function (generatorWrapper, value, CustomMap) {\n    if (value == null) {\n      CustomMap.push(\"null\");\n    } else {\n      if (typeof value == \"object\") {\n        if (Array.isArray(value)) {\n          var findEntry = value;\n          value = findEntry.length;\n          CustomMap.push(\"[\");\n          for (var iterateEntries = \"\", createCircularNode = 0; createCircularNode < value; createCircularNode++) {\n            CustomMap.push(iterateEntries);\n            iterateEntries = findEntry[createCircularNode];\n            serializeToJsonString(generatorWrapper, generatorWrapper.entryIdCounter ? generatorWrapper.entryIdCounter.call(findEntry, String(createCircularNode), iterateEntries) : iterateEntries, CustomMap);\n            iterateEntries = \",\";\n          }\n          CustomMap.push(\"]\");\n          return;\n        }\n        if (value instanceof String || value instanceof Number || value instanceof Boolean) {\n          value = value.valueOf();\n        } else {\n          CustomMap.push(\"{\");\n          createCircularNode = \"\";\n          for (findEntry in value) if (Object.prototype.hasOwnProperty.call(value, findEntry)) {\n            iterateEntries = value[findEntry];\n            if (typeof iterateEntries != \"function\") {\n              CustomMap.push(createCircularNode);\n              escapeString(findEntry, CustomMap);\n              CustomMap.push(\":\");\n              serializeToJsonString(generatorWrapper, generatorWrapper.entryIdCounter ? generatorWrapper.entryIdCounter.call(value, findEntry, iterateEntries) : iterateEntries, CustomMap);\n              createCircularNode = \",\";\n            }\n          }\n          CustomMap.push(\"}\");\n          return;\n        }\n      }\n      switch (typeof value) {\n        case \"string\":\n          escapeString(value, CustomMap);\n          break;\n        case \"number\":\n          CustomMap.push(isFinite(value) && !isNaN(value) ? String(value) : \"null\");\n          break;\n        case \"boolean\":\n          CustomMap.push(String(value));\n          break;\n        case \"function\":\n          CustomMap.push(\"null\");\n          break;\n        default:\n          throw Error(\"Unknown type: \" + typeof value);\n      }\n    }\n  };\n  var escapeChars = {\n    '\"': '\\\\\"',\n    \"\\\\\": \"\\\\\\\\\",\n    \"/\": \"\\\\/\",\n    \"\\b\": \"\\\\b\",\n    \"\\f\": \"\\\\f\",\n    \"\\n\": \"\\\\n\",\n    \"\\r\": \"\\\\r\",\n    \"\\t\": \"\\\\t\",\n    \"\\v\": \"\\\\u000b\"\n  };\n  var escapeRegExp = /\\uffff/.test(\"\\uffff\") ? /[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n  var escapeString = function (generatorWrapper, value) {\n    value.push('\"', generatorWrapper.replace(escapeRegExp, function (CustomMap) {\n      var findEntry = escapeChars[CustomMap];\n      if (!findEntry) {\n        findEntry = \"\\\\u\" + (CustomMap.charCodeAt(0) | 65536).toString(16).slice(1);\n        escapeChars[CustomMap] = findEntry;\n      }\n      return findEntry;\n    }), '\"');\n  };\n  var ExperimentData = function () {\n    this.setTimeoutWrapper = null;\n    this.entryIdCounter = \"missing-id\";\n    this.tasks = false;\n  };\n  var getExperimentDataFromElement = function (generatorWrapper) {\n    var value = null;\n    try {\n      value = document.getElementsByClassName(\"lima-exp-data\");\n    } catch (CustomMap) {\n      LogEvent(\"missing-element\", generatorWrapper.entryIdCounter);\n      return null;\n    }\n    if (value.length > 1) {\n      LogEvent(\"multiple-elements\", generatorWrapper.entryIdCounter);\n      return null;\n    }\n    value = value[0];\n    if (value) {\n      return value.innerHTML;\n    } else {\n      LogEvent(\"missing-element\", generatorWrapper.entryIdCounter);\n      return null;\n    }\n  };\n  var loadExperimentData = function () {\n    var generatorWrapper = Rk;\n    var value = getExperimentDataFromElement(generatorWrapper);\n    if (value !== null) {\n      if (isStringValidJSON(value)) {\n        var CustomMap = JSON.parse(value);\n        value = CustomMap.experimentIds;\n        var findEntry = CustomMap.binaryIdentifier;\n        CustomMap = CustomMap.adEventId;\n        var iterateEntries = typeof findEntry === \"string\";\n        if (typeof CustomMap == \"string\") {\n          var createCircularNode = resolvePromise.getAdInstance();\n          if (CustomMap != null) {\n            setPerformanceMetric(createCircularNode.entryIdCounter, \"qqid\", CustomMap);\n          }\n        }\n        if (iterateEntries) {\n          generatorWrapper.entryIdCounter = findEntry;\n        }\n        if (typeof value !== \"string\") {\n          LogEvent(\"missing-flags\", generatorWrapper.entryIdCounter);\n        } else {\n          if (!iterateEntries) {\n            LogEvent(\"missing-binary-id\", generatorWrapper.entryIdCounter);\n          }\n          generatorWrapper.setTimeoutWrapper = value;\n        }\n      } else {\n        LogEvent(\"invalid-json\", generatorWrapper.entryIdCounter);\n      }\n    }\n  };\n  ExperimentData.prototype.resetAdStateController = function () {\n    this.setTimeoutWrapper = null;\n    this.entryIdCounter = \"missing-id\";\n  };\n  var CookieManager = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper || {\n      cookie: \"\"\n    };\n  };\n  var areCookiesEnabled = function (generatorWrapper) {\n    if (!globalScope.navigator.cookieEnabled) {\n      return false;\n    }\n    if (!generatorWrapper.isEmpty()) {\n      return true;\n    }\n    generatorWrapper.set(\"TESTCOOKIESENABLED\", \"1\", {\n      lowOrderInteger: 60\n    });\n    if (generatorWrapper.get(\"TESTCOOKIESENABLED\") !== \"1\") {\n      return false;\n    }\n    generatorWrapper.removeElement(\"TESTCOOKIESENABLED\");\n    return true;\n  };\n  setTimeoutWrapper = CookieManager.prototype;\n  setTimeoutWrapper.set = function (generatorWrapper, value, CustomMap) {\n    var findEntry = false;\n    if (typeof CustomMap === \"object\") {\n      var iterateEntries = CustomMap.ErrorLogger;\n      findEntry = CustomMap.transformElementContent || false;\n      var createCircularNode = CustomMap.domain || undefined;\n      var entryIdCounter = CustomMap.path || undefined;\n      var key = CustomMap.lowOrderInteger;\n    }\n    if (/[;=\\s]/.test(generatorWrapper)) {\n      throw Error('Invalid cookie name \"' + generatorWrapper + '\"');\n    }\n    if (/[;\\r\\n]/.test(value)) {\n      throw Error('Invalid cookie value \"' + value + '\"');\n    }\n    if (undefined === key) {\n      key = -1;\n    }\n    this.entryIdCounter.cookie = generatorWrapper + \"=\" + value + (createCircularNode ? \";domain=\" + createCircularNode : \"\") + (entryIdCounter ? \";path=\" + entryIdCounter : \"\") + (key < 0 ? \"\" : key == 0 ? \";expires=\" + new Date(1970, 1, 1).toUTCString() : \";expires=\" + new Date(Date.now() + 1000 * key).toUTCString()) + (findEntry ? \";secure\" : \"\") + (iterateEntries != null ? \";samesite=\" + iterateEntries : \"\");\n  };\n  setTimeoutWrapper.get = function (generatorWrapper, value) {\n    for (var CustomMap = generatorWrapper + \"=\", findEntry = (this.entryIdCounter.cookie || \"\").split(\";\"), iterateEntries = 0, createCircularNode; iterateEntries < findEntry.length; iterateEntries++) {\n      createCircularNode = trimString(findEntry[iterateEntries]);\n      if (createCircularNode.lastIndexOf(CustomMap, 0) == 0) {\n        return createCircularNode.slice(CustomMap.length);\n      }\n      if (createCircularNode == generatorWrapper) {\n        return \"\";\n      }\n    }\n    return value;\n  };\n  setTimeoutWrapper.removeElement = function (generatorWrapper, value, CustomMap) {\n    var findEntry = undefined !== this.get(generatorWrapper);\n    this.set(generatorWrapper, \"\", {\n      lowOrderInteger: 0,\n      path: value,\n      domain: CustomMap\n    });\n    return findEntry;\n  };\n  setTimeoutWrapper.base64AlphabetVariants = function () {\n    return getCookies(this).keys;\n  };\n  setTimeoutWrapper.hasPlatform = function () {\n    return getCookies(this).values;\n  };\n  setTimeoutWrapper.isEmpty = function () {\n    return !this.entryIdCounter.cookie;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    for (var generatorWrapper = getCookies(this).keys, value = generatorWrapper.length - 1; value >= 0; value--) {\n      this.removeElement(generatorWrapper[value]);\n    }\n  };\n  var getCookies = function (generatorWrapper) {\n    generatorWrapper = (generatorWrapper.entryIdCounter.cookie || \"\").split(\";\");\n    for (var value = [], CustomMap = [], findEntry, iterateEntries, createCircularNode = 0; createCircularNode < generatorWrapper.length; createCircularNode++) {\n      iterateEntries = trimString(generatorWrapper[createCircularNode]);\n      findEntry = iterateEntries.indexOf(\"=\");\n      if (-1 == findEntry) {\n        value.push(\"\");\n        CustomMap.push(iterateEntries);\n      } else {\n        value.push(iterateEntries.substring(0, findEntry));\n        CustomMap.push(iterateEntries.substring(findEntry + 1));\n      }\n    }\n    return {\n      keys: value,\n      values: CustomMap\n    };\n  };\n  function evaluateCondition(generatorWrapper, value, CustomMap) {\n    if (getBooleanAdProperty(value, 5)) {\n      return getCookieValue(generatorWrapper, CustomMap);\n    } else {\n      return null;\n    }\n  }\n  var cookiesEnabledCache;\n  function checkCookiesEnabled() {\n    var generatorWrapper = new WindowWrapper().entryIdCounter;\n    if (cookiesEnabledCache) {\n      return cookiesEnabledCache;\n    } else {\n      if (generatorWrapper.origin === \"null\") {\n        return cookiesEnabledCache = false;\n      } else {\n        return cookiesEnabledCache = areCookiesEnabled(new CookieManager(generatorWrapper.document));\n      }\n    }\n  }\n  function getCookieValue(generatorWrapper, value) {\n    if (value.origin !== \"null\") {\n      value = value.document.cookie;\n    } else {\n      value = null;\n    }\n    if (value === null) {\n      return null;\n    } else {\n      return new CookieManager({\n        cookie: value\n      }).get(generatorWrapper) || \"\";\n    }\n  }\n  function setCookieValue(generatorWrapper, value, CustomMap, findEntry) {\n    if (findEntry.origin !== \"null\") {\n      new CookieManager(findEntry.document).set(generatorWrapper, value, CustomMap);\n    }\n  }\n  function executeCallback(generatorWrapper) {\n    if (generatorWrapper != null) {\n      return !generatorWrapper;\n    } else {\n      return generatorWrapper;\n    }\n  }\n  function processConditions(generatorWrapper, value) {\n    for (var CustomMap = false, findEntry = 0; findEntry < generatorWrapper.length; findEntry++) {\n      var iterateEntries = generatorWrapper[findEntry]();\n      if (iterateEntries === value) {\n        return iterateEntries;\n      }\n      if (iterateEntries == null) {\n        CustomMap = true;\n      }\n    }\n    if (!CustomMap) {\n      return !value;\n    }\n  }\n  function checkCondition(generatorWrapper, value) {\n    var CustomMap = parseData(generatorWrapper, TagSessionMetadata, 2);\n    if (!CustomMap.length) {\n      return evaluateCondition(generatorWrapper, value);\n    }\n    generatorWrapper = getAdPropertyNumeric(generatorWrapper, 1);\n    if (generatorWrapper === 1) {\n      return executeCallback(checkCondition(CustomMap[0], value));\n    }\n    CustomMap = mapElements(CustomMap, function (findEntry) {\n      return function () {\n        return checkCondition(findEntry, value);\n      };\n    });\n    switch (generatorWrapper) {\n      case 2:\n        return processConditions(CustomMap, false);\n      case 3:\n        return processConditions(CustomMap, true);\n    }\n  }\n  function evaluateCondition(generatorWrapper, value) {\n    var CustomMap = rf(generatorWrapper, SessionTypes);\n    generatorWrapper: {\n      switch (CustomMap) {\n        case 3:\n          var findEntry = getNestedAdPropertyNumeric(generatorWrapper, 3, SessionTypes);\n          break generatorWrapper;\n        case 4:\n          findEntry = getNestedAdPropertyNumeric(generatorWrapper, 4, SessionTypes);\n          break generatorWrapper;\n        case 5:\n          findEntry = getNestedAdPropertyNumeric(generatorWrapper, 5, SessionTypes);\n          break generatorWrapper;\n      }\n      findEntry = undefined;\n    }\n    if (findEntry && (value = (value = value[CustomMap]) && value[findEntry])) {\n      try {\n        var iterateEntries = value.apply;\n        var createCircularNode = transformArrayElements(generatorWrapper, 8, stringOrNull);\n        var entryIdCounter = iterateEntries.call(value, null, toArray(createCircularNode));\n      } catch (key) {\n        return;\n      }\n      iterateEntries = getAdPropertyNumeric(generatorWrapper, 1);\n      if (iterateEntries === 4) {\n        return !!entryIdCounter;\n      }\n      if (iterateEntries === 5) {\n        return entryIdCounter != null;\n      }\n      if (iterateEntries === 12) {\n        generatorWrapper = dispatchUnhandledRejection(generatorWrapper, qf(generatorWrapper, SessionMetadataTypes, 7));\n      } else {\n        generatorWrapper: {\n          switch (CustomMap) {\n            case 4:\n              generatorWrapper = getAdElementProperty(generatorWrapper, qf(generatorWrapper, SessionMetadataTypes, 6));\n              break generatorWrapper;\n            case 5:\n              generatorWrapper = dispatchUnhandledRejection(generatorWrapper, qf(generatorWrapper, SessionMetadataTypes, 7));\n              break generatorWrapper;\n          }\n          generatorWrapper = undefined;\n        }\n      }\n      if (generatorWrapper != null) {\n        if (iterateEntries === 6) {\n          return entryIdCounter === generatorWrapper;\n        }\n        if (iterateEntries === 9) {\n          return entryIdCounter != null && compareVersions(String(entryIdCounter), generatorWrapper) === 0;\n        }\n        if (entryIdCounter != null) {\n          switch (iterateEntries) {\n            case 7:\n              return entryIdCounter < generatorWrapper;\n            case 8:\n              return entryIdCounter > generatorWrapper;\n            case 12:\n              return typeof generatorWrapper === \"string\" && typeof entryIdCounter === \"string\" && new RegExp(generatorWrapper).test(entryIdCounter);\n            case 10:\n              return entryIdCounter != null && -1 === compareVersions(String(entryIdCounter), generatorWrapper);\n            case 11:\n              return entryIdCounter != null && compareVersions(String(entryIdCounter), generatorWrapper) === 1;\n          }\n        }\n      }\n    }\n  }\n  function verifyCondition(generatorWrapper, value) {\n    return !generatorWrapper || !(!value || !checkCondition(generatorWrapper, value));\n  }\n  var StorageField = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(StorageField, AdElement);\n  StorageField.findGlobalObject = [4];\n  var ValueField = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(ValueField, AdElement);\n  ValueField.prototype.getAdStateValue = function () {\n    return fetchData(this, StorageField, 2);\n  };\n  var ConfigField = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(ConfigField, AdElement);\n  var serializeConfig = parseAndValidateArray(ConfigField);\n  ConfigField.findGlobalObject = [5];\n  var conditionTypes = [1, 2, 3, 6, 7, 8];\n  var AdRequest = function (generatorWrapper, value, CustomMap) {\n    var findEntry = undefined === findEntry ? new AdEventLoggerWithThrottling(6, \"unknown\", value) : findEntry;\n    this.handleAsync = generatorWrapper;\n    this.createDeferred = CustomMap;\n    this.tasks = findEntry;\n    this.entryIdCounter = [];\n    this.setTimeoutWrapper = generatorWrapper > 0 && secureRandom() < 1 / generatorWrapper;\n  };\n  var sendAdRequest = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (generatorWrapper.setTimeoutWrapper) {\n      var entryIdCounter = setMessageId(setMessageType(new MessageTimestamp(), value), CustomMap);\n      value = setWrapperId(setWrapperType(wrapMessage(setWrapperTimestamp(setWrapperSignature(new MessageWrapper(), findEntry), iterateEntries), entryIdCounter), generatorWrapper.entryIdCounter.slice()), createCircularNode);\n      value = buildTagSession(value);\n      generatorWrapper.tasks.assertBoolean(createAdEvent(generatorWrapper, value));\n      if (createCircularNode === 1 || createCircularNode === 3 || createCircularNode === 4 && !generatorWrapper.entryIdCounter.some(function (key) {\n        return getAdPropertyNumeric(key, 1) === getAdPropertyNumeric(entryIdCounter, 1) && getAdPropertyNumeric(key, 2) === CustomMap;\n      })) {\n        generatorWrapper.entryIdCounter.push(entryIdCounter);\n        if (generatorWrapper.entryIdCounter.length > 100) {\n          generatorWrapper.entryIdCounter.shift();\n        }\n      }\n    }\n  };\n  var recordAdEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper.setTimeoutWrapper) {\n      var iterateEntries = new MessageSignature();\n      value = updateAdProperty(iterateEntries, 1, value);\n      CustomMap = updateAdProperty(value, 2, CustomMap);\n      findEntry = clearAdProperty(CustomMap, 3, findEntry);\n      CustomMap = new TagSessionBuilder();\n      findEntry = Bf(CustomMap, 8, findEntry);\n      generatorWrapper.tasks.assertBoolean(createAdEvent(generatorWrapper, findEntry));\n    }\n  };\n  var createAdEvent = function (generatorWrapper, value) {\n    var CustomMap = Date.now();\n    if (Number.isFinite(CustomMap)) {\n      CustomMap = Math.roundRectangle(CustomMap);\n    } else {\n      CustomMap = 0;\n    }\n    value = setAdPropertyFromString(value, 1, CustomMap);\n    CustomMap = generatePageViewId();\n    value = setAdPropertyFromString(value, 2, CustomMap);\n    return setAdPropertyFromString(value, 6, generatorWrapper.handleAsync);\n  };\n  var SessionStorage = function () {\n    var generatorWrapper = {};\n    this.GeneratorExecutor = (generatorWrapper[3] = {}, generatorWrapper[4] = {}, generatorWrapper[5] = {}, generatorWrapper);\n  };\n  var isSessionStorageEnabled = /^true$/.test(\"false\");\n  function fetchConditionValue(generatorWrapper, value) {\n    switch (value) {\n      case 1:\n        return getNestedAdPropertyNumeric(generatorWrapper, 1, conditionTypes);\n      case 2:\n        return getNestedAdPropertyNumeric(generatorWrapper, 2, conditionTypes);\n      case 3:\n        return getNestedAdPropertyNumeric(generatorWrapper, 3, conditionTypes);\n      case 6:\n        return getNestedAdPropertyNumeric(generatorWrapper, 6, conditionTypes);\n      case 8:\n        return getNestedAdPropertyNumeric(generatorWrapper, 8, conditionTypes);\n      default:\n        return null;\n    }\n  }\n  function extractValue(generatorWrapper, value) {\n    if (!generatorWrapper) {\n      return null;\n    }\n    switch (value) {\n      case 1:\n        return getBooleanAdProperty(generatorWrapper, 1);\n      case 7:\n        return dispatchUnhandledRejection(generatorWrapper, 3);\n      case 2:\n        return getAdElementProperty(generatorWrapper, 2);\n      case 3:\n        return dispatchUnhandledRejection(generatorWrapper, 3);\n      case 6:\n        return transformArrayElements(generatorWrapper, 4, stringOrNull);\n      case 8:\n        return transformArrayElements(generatorWrapper, 4, stringOrNull);\n      default:\n        return null;\n    }\n  }\n  var getSessionStorageData = once(function () {\n    if (!isSessionStorageEnabled) {\n      return {};\n    }\n    try {\n      var generatorWrapper;\n      var value = undefined === value ? window : value;\n      try {\n        var CustomMap = value.sessionStorage;\n      } catch (iterateEntries) {\n        CustomMap = null;\n      }\n      var findEntry = (generatorWrapper = CustomMap) == null ? undefined : generatorWrapper.getItem(\"GGDFSSK\");\n      if (findEntry) {\n        return JSON.parse(findEntry);\n      }\n    } catch (iterateEntries) {}\n    return {};\n  });\n  function getConfigValue(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = findEntry = undefined === findEntry ? 0 : findEntry,\n      createCircularNode,\n      entryIdCounter;\n    if ((entryIdCounter = (createCircularNode = getSingletonInstance(ConfigManager).setTimeoutWrapper[iterateEntries]) == null ? undefined : createCircularNode.addParameter(value)) != null) {\n      getSingletonInstance(ConfigManager).setTimeoutWrapper[iterateEntries] = entryIdCounter;\n    } else {\n      getSingletonInstance(ConfigManager).setTimeoutWrapper[iterateEntries] = new Set().addParameter(value);\n    }\n    iterateEntries = getSessionStorageData();\n    if (iterateEntries[value] != null) {\n      return iterateEntries[value];\n    }\n    value = getConfigs(findEntry)[value];\n    if (!value) {\n      return CustomMap;\n    }\n    value = serializeConfig(JSON.stringify(value));\n    value = resolveValue(value);\n    generatorWrapper = extractValue(value, generatorWrapper);\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return CustomMap;\n    }\n  }\n  function resolveValue(generatorWrapper) {\n    var value = getSingletonInstance(SessionStorage).GeneratorExecutor;\n    if (value && rf(generatorWrapper, conditionTypes) !== 8) {\n      var CustomMap = findLastElement(parseData(generatorWrapper, ValueField, 5), function (createCircularNode) {\n        return verifyCondition(fetchData(createCircularNode, TagSessionMetadata, 1), value);\n      });\n      if (CustomMap) {\n        var findEntry;\n        if ((findEntry = CustomMap.getAdStateValue()) != null) {\n          return findEntry;\n        } else {\n          return null;\n        }\n      }\n    }\n    var iterateEntries;\n    if ((iterateEntries = fetchData(generatorWrapper, StorageField, 4)) != null) {\n      return iterateEntries;\n    } else {\n      return null;\n    }\n  }\n  var ConfigManager = function () {\n    this.tasks = {};\n    this.createDeferred = [];\n    this.setTimeoutWrapper = {};\n    this.entryIdCounter = new Map();\n  };\n  function getBooleanConfig(generatorWrapper, value, CustomMap) {\n    return !!getConfigValue(1, generatorWrapper, undefined === value ? false : value, CustomMap);\n  }\n  function getNumberConfig(generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = 0;\n    } else {\n      value = value;\n    }\n    generatorWrapper = Number(getConfigValue(2, generatorWrapper, value, CustomMap));\n    if (isNaN(generatorWrapper)) {\n      return value;\n    } else {\n      return generatorWrapper;\n    }\n  }\n  function getStringConfig(generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = \"\";\n    } else {\n      value = value;\n    }\n    generatorWrapper = getConfigValue(3, generatorWrapper, value, CustomMap);\n    if (typeof generatorWrapper === \"string\") {\n      return generatorWrapper;\n    } else {\n      return value;\n    }\n  }\n  function getArrayConfig(generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = [];\n    } else {\n      value = value;\n    }\n    generatorWrapper = getConfigValue(6, generatorWrapper, value, CustomMap);\n    if (Array.isArray(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return value;\n    }\n  }\n  function getComplexArrayConfig(generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = [];\n    } else {\n      value = value;\n    }\n    generatorWrapper = getConfigValue(8, generatorWrapper, value, CustomMap);\n    if (Array.isArray(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return value;\n    }\n  }\n  function getConfigs(generatorWrapper) {\n    return getSingletonInstance(ConfigManager).tasks[generatorWrapper] || (getSingletonInstance(ConfigManager).tasks[generatorWrapper] = {});\n  }\n  function updateConfigs(generatorWrapper, value) {\n    var CustomMap = getConfigs(value);\n    forEachInObject(generatorWrapper, function (findEntry, iterateEntries) {\n      if (CustomMap[iterateEntries]) {\n        findEntry = serializeConfig(JSON.stringify(findEntry));\n        var createCircularNode = qf(findEntry, conditionTypes, 8);\n        if (parseNullableInt(getTransformedElement(findEntry, createCircularNode)) != null) {\n          var entryIdCounter = serializeConfig(JSON.stringify(CustomMap[iterateEntries]));\n          createCircularNode = tf(findEntry);\n          entryIdCounter = transformArrayElements(vf(entryIdCounter, StorageField, 4), 4, stringOrNull);\n          replaceArrayIfNotArray(createCircularNode, 4, ensureString, entryIdCounter);\n        }\n        CustomMap[iterateEntries] = findEntry.toJSON();\n      } else {\n        CustomMap[iterateEntries] = findEntry;\n      }\n    });\n  }\n  function processAdRequests(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = false;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    var createCircularNode = [];\n    var entryIdCounter = [];\n    value = getIterator(value);\n    for (var key = value.next(); !key.done; key = value.next()) {\n      key = key.value;\n      for (var value = getConfigs(key), entry = getIterator(generatorWrapper), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n        currentEntry = currentEntry.value;\n        var foundEntry = rf(currentEntry, conditionTypes);\n        var resolveFunction = fetchConditionValue(currentEntry, foundEntry);\n        if (resolveFunction) {\n          var rejectFunction = undefined;\n          var user = undefined;\n          var profileData = undefined;\n          var isDone = (rejectFunction = (profileData = getSingletonInstance(ConfigManager).entryIdCounter.get(key)) == null ? undefined : (user = profileData.get(resolveFunction)) == null ? undefined : user.slice(0)) != null ? rejectFunction : [];\n          generatorWrapper: {\n            rejectFunction = resolveFunction;\n            user = foundEntry;\n            profileData = new WrapperMetadata();\n            switch (user) {\n              case 1:\n                pf(profileData, 1, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 2:\n                pf(profileData, 2, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 3:\n                pf(profileData, 3, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 6:\n                pf(profileData, 4, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 8:\n                pf(profileData, 6, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              default:\n                isDone = undefined;\n                break generatorWrapper;\n            }\n            transformAndReplaceArray(profileData, 5, isDone, parseInt32);\n            isDone = profileData;\n          }\n          if (rejectFunction = isDone) {\n            user = undefined;\n            rejectFunction = !((user = getSingletonInstance(ConfigManager).setTimeoutWrapper[key]) == null || !user.has(resolveFunction));\n          }\n          if (rejectFunction) {\n            createCircularNode.push(isDone);\n          }\n          if (foundEntry === 8 && value[resolveFunction]) {\n            isDone = serializeConfig(JSON.stringify(value[resolveFunction]));\n            foundEntry = tf(currentEntry);\n            isDone = transformArrayElements(vf(isDone, StorageField, 4), 4, stringOrNull);\n            replaceArrayIfNotArray(foundEntry, 4, ensureString, isDone);\n          } else {\n            if (foundEntry = isDone) {\n              rejectFunction = undefined;\n              foundEntry = !((rejectFunction = getSingletonInstance(ConfigManager).entryIdCounter.get(key)) == null || !rejectFunction.has(resolveFunction));\n            }\n            if (foundEntry) {\n              entryIdCounter.push(isDone);\n            }\n          }\n          if (!iterateEntries) {\n            foundEntry = resolveFunction;\n            isDone = key;\n            rejectFunction = findEntry;\n            user = getSingletonInstance(ConfigManager);\n            if (!user.entryIdCounter.has(isDone)) {\n              user.entryIdCounter.set(isDone, new Map());\n            }\n            if (!user.entryIdCounter.get(isDone).has(foundEntry)) {\n              user.entryIdCounter.get(isDone).set(foundEntry, []);\n            }\n            if (rejectFunction) {\n              user.entryIdCounter.get(isDone).get(foundEntry).push(rejectFunction);\n            }\n          }\n          value[resolveFunction] = currentEntry.toJSON();\n        }\n      }\n    }\n    if (createCircularNode.length || entryIdCounter.length) {\n      if (findEntry != null) {\n        generatorWrapper = findEntry;\n      } else {\n        generatorWrapper = undefined;\n      }\n      if (CustomMap.setTimeoutWrapper && CustomMap.createDeferred) {\n        findEntry = new TagSession();\n        createCircularNode = Cf(findEntry, 2, createCircularNode);\n        entryIdCounter = Cf(createCircularNode, 3, entryIdCounter);\n        if (generatorWrapper) {\n          modifyAdProperty(entryIdCounter, 1, generatorWrapper);\n        }\n        createCircularNode = new TagSessionBuilder();\n        entryIdCounter = Bf(createCircularNode, 7, entryIdCounter);\n        CustomMap.tasks.assertBoolean(createAdEvent(CustomMap, entryIdCounter));\n      }\n    }\n  }\n  function mergeAdData(generatorWrapper, value) {\n    value = getConfigs(value);\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var CustomMap = generatorWrapper.next(); !CustomMap.done; CustomMap = generatorWrapper.next()) {\n      CustomMap = CustomMap.value;\n      var findEntry = serializeConfig(JSON.stringify(CustomMap));\n      var iterateEntries = rf(findEntry, conditionTypes);\n      if (findEntry = fetchConditionValue(findEntry, iterateEntries)) {\n        if (!value[findEntry]) {\n          value[findEntry] = CustomMap;\n        }\n      }\n    }\n  }\n  function getAdIds() {\n    return Object.keys(getSingletonInstance(ConfigManager).tasks).map(function (generatorWrapper) {\n      return Number(generatorWrapper);\n    });\n  }\n  function addToAdQueue(generatorWrapper) {\n    if (!getSingletonInstance(ConfigManager).createDeferred.includes(generatorWrapper)) {\n      updateConfigs(getConfigs(4), generatorWrapper);\n    }\n  }\n  function definePropertyIfNotExists(generatorWrapper, value, CustomMap) {\n    if (!CustomMap.hasOwnProperty(generatorWrapper)) {\n      Object.defineProperty(CustomMap, String(generatorWrapper), {\n        value: value\n      });\n    }\n  }\n  function getValueOrDefault(generatorWrapper, value, CustomMap) {\n    return value[generatorWrapper] || CustomMap;\n  }\n  function registerAdFunctions(generatorWrapper) {\n    definePropertyIfNotExists(5, getBooleanConfig, generatorWrapper);\n    definePropertyIfNotExists(6, getNumberConfig, generatorWrapper);\n    definePropertyIfNotExists(7, getStringConfig, generatorWrapper);\n    definePropertyIfNotExists(8, getArrayConfig, generatorWrapper);\n    definePropertyIfNotExists(17, getComplexArrayConfig, generatorWrapper);\n    definePropertyIfNotExists(13, mergeAdData, generatorWrapper);\n    definePropertyIfNotExists(15, addToAdQueue, generatorWrapper);\n  }\n  function registerDataHandlers(generatorWrapper) {\n    definePropertyIfNotExists(4, function (value) {\n      getSingletonInstance(SessionStorage).GeneratorExecutor = value;\n    }, generatorWrapper);\n    definePropertyIfNotExists(9, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[3][value] == null) {\n        findEntry.GeneratorExecutor[3][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(10, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[4][value] == null) {\n        findEntry.GeneratorExecutor[4][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(11, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[5][value] == null) {\n        findEntry.GeneratorExecutor[5][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(14, function (value) {\n      for (var CustomMap = getSingletonInstance(SessionStorage), findEntry = getIterator([3, 4, 5]), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n        iterateEntries = iterateEntries.value;\n        Object.assign(CustomMap.GeneratorExecutor[iterateEntries], value[iterateEntries]);\n      }\n    }, generatorWrapper);\n  }\n  function markInitializationDone(generatorWrapper) {\n    if (!generatorWrapper.hasOwnProperty(\"init-done\")) {\n      Object.defineProperty(generatorWrapper, \"init-done\", {\n        value: true\n      });\n    }\n  }\n  var BaseClass = function () {};\n  BaseClass.prototype.tasks = function () {};\n  BaseClas",
  "r).tasks[generatorWrapper] = {});\n  }\n  function updateConfigs(generatorWrapper, value) {\n    var CustomMap = getConfigs(value);\n    forEachInObject(generatorWrapper, function (findEntry, iterateEntries) {\n      if (CustomMap[iterateEntries]) {\n        findEntry = serializeConfig(JSON.stringify(findEntry));\n        var createCircularNode = qf(findEntry, conditionTypes, 8);\n        if (parseNullableInt(getTransformedElement(findEntry, createCircularNode)) != null) {\n          var entryIdCounter = serializeConfig(JSON.stringify(CustomMap[iterateEntries]));\n          createCircularNode = tf(findEntry);\n          entryIdCounter = transformArrayElements(vf(entryIdCounter, StorageField, 4), 4, stringOrNull);\n          replaceArrayIfNotArray(createCircularNode, 4, ensureString, entryIdCounter);\n        }\n        CustomMap[iterateEntries] = findEntry.toJSON();\n      } else {\n        CustomMap[iterateEntries] = findEntry;\n      }\n    });\n  }\n  function processAdRequests(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = false;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    var createCircularNode = [];\n    var entryIdCounter = [];\n    value = getIterator(value);\n    for (var key = value.next(); !key.done; key = value.next()) {\n      key = key.value;\n      for (var value = getConfigs(key), entry = getIterator(generatorWrapper), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n        currentEntry = currentEntry.value;\n        var foundEntry = rf(currentEntry, conditionTypes);\n        var resolveFunction = fetchConditionValue(currentEntry, foundEntry);\n        if (resolveFunction) {\n          var rejectFunction = undefined;\n          var user = undefined;\n          var profileData = undefined;\n          var isDone = (rejectFunction = (profileData = getSingletonInstance(ConfigManager).entryIdCounter.get(key)) == null ? undefined : (user = profileData.get(resolveFunction)) == null ? undefined : user.slice(0)) != null ? rejectFunction : [];\n          generatorWrapper: {\n            rejectFunction = resolveFunction;\n            user = foundEntry;\n            profileData = new WrapperMetadata();\n            switch (user) {\n              case 1:\n                pf(profileData, 1, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 2:\n                pf(profileData, 2, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 3:\n                pf(profileData, 3, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 6:\n                pf(profileData, 4, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              case 8:\n                pf(profileData, 6, MetadataTypes, parseNullableIntEnum(rejectFunction));\n                break;\n              default:\n                isDone = undefined;\n                break generatorWrapper;\n            }\n            transformAndReplaceArray(profileData, 5, isDone, parseInt32);\n            isDone = profileData;\n          }\n          if (rejectFunction = isDone) {\n            user = undefined;\n            rejectFunction = !((user = getSingletonInstance(ConfigManager).setTimeoutWrapper[key]) == null || !user.has(resolveFunction));\n          }\n          if (rejectFunction) {\n            createCircularNode.push(isDone);\n          }\n          if (foundEntry === 8 && value[resolveFunction]) {\n            isDone = serializeConfig(JSON.stringify(value[resolveFunction]));\n            foundEntry = tf(currentEntry);\n            isDone = transformArrayElements(vf(isDone, StorageField, 4), 4, stringOrNull);\n            replaceArrayIfNotArray(foundEntry, 4, ensureString, isDone);\n          } else {\n            if (foundEntry = isDone) {\n              rejectFunction = undefined;\n              foundEntry = !((rejectFunction = getSingletonInstance(ConfigManager).entryIdCounter.get(key)) == null || !rejectFunction.has(resolveFunction));\n            }\n            if (foundEntry) {\n              entryIdCounter.push(isDone);\n            }\n          }\n          if (!iterateEntries) {\n            foundEntry = resolveFunction;\n            isDone = key;\n            rejectFunction = findEntry;\n            user = getSingletonInstance(ConfigManager);\n            if (!user.entryIdCounter.has(isDone)) {\n              user.entryIdCounter.set(isDone, new Map());\n            }\n            if (!user.entryIdCounter.get(isDone).has(foundEntry)) {\n              user.entryIdCounter.get(isDone).set(foundEntry, []);\n            }\n            if (rejectFunction) {\n              user.entryIdCounter.get(isDone).get(foundEntry).push(rejectFunction);\n            }\n          }\n          value[resolveFunction] = currentEntry.toJSON();\n        }\n      }\n    }\n    if (createCircularNode.length || entryIdCounter.length) {\n      if (findEntry != null) {\n        generatorWrapper = findEntry;\n      } else {\n        generatorWrapper = undefined;\n      }\n      if (CustomMap.setTimeoutWrapper && CustomMap.createDeferred) {\n        findEntry = new TagSession();\n        createCircularNode = Cf(findEntry, 2, createCircularNode);\n        entryIdCounter = Cf(createCircularNode, 3, entryIdCounter);\n        if (generatorWrapper) {\n          modifyAdProperty(entryIdCounter, 1, generatorWrapper);\n        }\n        createCircularNode = new TagSessionBuilder();\n        entryIdCounter = Bf(createCircularNode, 7, entryIdCounter);\n        CustomMap.tasks.assertBoolean(createAdEvent(CustomMap, entryIdCounter));\n      }\n    }\n  }\n  function mergeAdData(generatorWrapper, value) {\n    value = getConfigs(value);\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var CustomMap = generatorWrapper.next(); !CustomMap.done; CustomMap = generatorWrapper.next()) {\n      CustomMap = CustomMap.value;\n      var findEntry = serializeConfig(JSON.stringify(CustomMap));\n      var iterateEntries = rf(findEntry, conditionTypes);\n      if (findEntry = fetchConditionValue(findEntry, iterateEntries)) {\n        if (!value[findEntry]) {\n          value[findEntry] = CustomMap;\n        }\n      }\n    }\n  }\n  function getAdIds() {\n    return Object.keys(getSingletonInstance(ConfigManager).tasks).map(function (generatorWrapper) {\n      return Number(generatorWrapper);\n    });\n  }\n  function addToAdQueue(generatorWrapper) {\n    if (!getSingletonInstance(ConfigManager).createDeferred.includes(generatorWrapper)) {\n      updateConfigs(getConfigs(4), generatorWrapper);\n    }\n  }\n  function definePropertyIfNotExists(generatorWrapper, value, CustomMap) {\n    if (!CustomMap.hasOwnProperty(generatorWrapper)) {\n      Object.defineProperty(CustomMap, String(generatorWrapper), {\n        value: value\n      });\n    }\n  }\n  function getValueOrDefault(generatorWrapper, value, CustomMap) {\n    return value[generatorWrapper] || CustomMap;\n  }\n  function registerAdFunctions(generatorWrapper) {\n    definePropertyIfNotExists(5, getBooleanConfig, generatorWrapper);\n    definePropertyIfNotExists(6, getNumberConfig, generatorWrapper);\n    definePropertyIfNotExists(7, getStringConfig, generatorWrapper);\n    definePropertyIfNotExists(8, getArrayConfig, generatorWrapper);\n    definePropertyIfNotExists(17, getComplexArrayConfig, generatorWrapper);\n    definePropertyIfNotExists(13, mergeAdData, generatorWrapper);\n    definePropertyIfNotExists(15, addToAdQueue, generatorWrapper);\n  }\n  function registerDataHandlers(generatorWrapper) {\n    definePropertyIfNotExists(4, function (value) {\n      getSingletonInstance(SessionStorage).GeneratorExecutor = value;\n    }, generatorWrapper);\n    definePropertyIfNotExists(9, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[3][value] == null) {\n        findEntry.GeneratorExecutor[3][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(10, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[4][value] == null) {\n        findEntry.GeneratorExecutor[4][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(11, function (value, CustomMap) {\n      var findEntry = getSingletonInstance(SessionStorage);\n      if (findEntry.GeneratorExecutor[5][value] == null) {\n        findEntry.GeneratorExecutor[5][value] = CustomMap;\n      }\n    }, generatorWrapper);\n    definePropertyIfNotExists(14, function (value) {\n      for (var CustomMap = getSingletonInstance(SessionStorage), findEntry = getIterator([3, 4, 5]), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n        iterateEntries = iterateEntries.value;\n        Object.assign(CustomMap.GeneratorExecutor[iterateEntries], value[iterateEntries]);\n      }\n    }, generatorWrapper);\n  }\n  function markInitializationDone(generatorWrapper) {\n    if (!generatorWrapper.hasOwnProperty(\"init-done\")) {\n      Object.defineProperty(generatorWrapper, \"init-done\", {\n        value: true\n      });\n    }\n  }\n  var BaseClass = function () {};\n  BaseClass.prototype.tasks = function () {};\n  BaseClass.prototype.entryIdCounter = function () {\n    return [];\n  };\n  var setupBaseClassMethods = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.tasks = function (findEntry, iterateEntries) {\n      getValueOrDefault(2, value, function () {\n        return [];\n      })(findEntry, CustomMap, iterateEntries);\n    };\n    generatorWrapper.entryIdCounter = function () {\n      return getValueOrDefault(3, value, function () {\n        return [];\n      })(CustomMap);\n    };\n  };\n  var AdInstance = function (generatorWrapper, value, CustomMap) {\n    this.writeBytes = generatorWrapper;\n    this.getWindowForDocument = value;\n    this.tasks = CustomMap;\n    this.entryIdCounter = false;\n  };\n  var handleThenable = function (generatorWrapper) {\n    return generatorWrapper.entryIdCounter || generatorWrapper.tasks;\n  };\n  var AdConfiguration = function () {\n    this.entryIdCounter = [];\n  };\n  var AdManager = function () {\n    this.entryIdCounter = new Map();\n    this.tasks = false;\n    this.createDeferred = new AdConfiguration();\n    this.handleAsync = new AdInstance(0, 0, false);\n    this.setTimeoutWrapper = [this.createDeferred];\n  };\n  var executeCallbacks = function (generatorWrapper) {\n    var value = adManagerInstance;\n    if (value.tasks || value.entryIdCounter.has(generatorWrapper.writeBytes) || generatorWrapper.getWindowForDocument == null && generatorWrapper.control == null || generatorWrapper.supportsPerformanceMarks == 0) {\n      return value.handleAsync;\n    }\n    var CustomMap = value.createDeferred;\n    if (generatorWrapper.control != null) {\n      for (var findEntry = getIterator(value.setTimeoutWrapper), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n        iterateEntries = iterateEntries.value;\n        if (iterateEntries.entryIdCounter.includes(generatorWrapper.control)) {\n          CustomMap = iterateEntries;\n          break;\n        }\n      }\n    } else if (generatorWrapper.adType != null) {\n      CustomMap = generatorWrapper.adType;\n    }\n    findEntry = 0;\n    if (generatorWrapper.control != null) {\n      findEntry = generatorWrapper.control.getWindowForDocument;\n    } else if (generatorWrapper.getWindowForDocument != null) {\n      findEntry = generatorWrapper.getWindowForDocument;\n    }\n    generatorWrapper = new AdInstance(generatorWrapper.writeBytes, findEntry, !!generatorWrapper.UrlQueryBuilder);\n    CustomMap.entryIdCounter.push(generatorWrapper);\n    if (!value.setTimeoutWrapper.includes(CustomMap)) {\n      value.setTimeoutWrapper.push(CustomMap);\n    }\n    value.entryIdCounter.set(generatorWrapper.writeBytes, generatorWrapper);\n    return generatorWrapper;\n  };\n  var getActiveAdIds = function () {\n    var generatorWrapper = adManagerInstance;\n    generatorWrapper = [].concat(toArray(generatorWrapper.entryIdCounter.keys())).filter(function (CustomMap) {\n      return handleThenable(this.entryIdCounter.get(CustomMap));\n    }, generatorWrapper);\n    var value = getSingletonInstance(BaseClass).entryIdCounter();\n    return [].concat(toArray(generatorWrapper), toArray(value));\n  };\n  var InitializeAdLogging = function (generatorWrapper) {\n    var value = adManagerInstance;\n    if (!value.tasks) {\n      generatorWrapper.entryIdCounter(value.setTimeoutWrapper, value.entryIdCounter);\n      value.tasks = true;\n    }\n  };\n  AdManager.prototype.resetAdStateController = function () {\n    for (var generatorWrapper = getIterator(this.entryIdCounter), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value = getIterator(value.value);\n      value.next();\n      value.next().value.entryIdCounter = false;\n    }\n    this.tasks = false;\n  };\n  var adManagerInstance = new AdManager();\n  var getActiveAdInstanceIds = function () {\n    return mainAdQueue.entryIdCounter.filter(function (generatorWrapper) {\n      return handleThenable(generatorWrapper);\n    }).map(function (generatorWrapper) {\n      return generatorWrapper.writeBytes;\n    });\n  };\n  var RandomAdActivator = function () {};\n  RandomAdActivator.prototype.entryIdCounter = function (generatorWrapper) {\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      var CustomMap = 0;\n      var findEntry = Math.floorRectangle(1000 * Math.random());\n      value = getIterator(value.value.entryIdCounter);\n      for (var iterateEntries = value.next(); !iterateEntries.done; iterateEntries = value.next()) {\n        iterateEntries = iterateEntries.value;\n        CustomMap += iterateEntries.getWindowForDocument;\n        if (findEntry < CustomMap) {\n          iterateEntries.entryIdCounter = true;\n          break;\n        }\n      }\n    }\n  };\n  var AdManager = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  AdManager.prototype.entryIdCounter = function (generatorWrapper, value) {\n    generatorWrapper = getIterator(this.tasks);\n    for (var CustomMap = generatorWrapper.next(); !CustomMap.done; CustomMap = generatorWrapper.next()) {\n      if (CustomMap = value.get(CustomMap.value)) {\n        CustomMap.entryIdCounter = true;\n      }\n    }\n  };\n  var AdManagerWithLogging = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n  };\n  inheritPrototype(AdManagerWithLogging, AdManager);\n  AdManagerWithLogging.prototype.entryIdCounter = function (generatorWrapper, value) {\n    AdManager.prototype.entryIdCounter.call(this, generatorWrapper, value);\n    var CustomMap = [];\n    generatorWrapper = [];\n    for (var findEntry = getIterator(this.tasks), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n      iterateEntries = iterateEntries.value;\n      if (value.get(iterateEntries)) {\n        CustomMap.push(iterateEntries);\n      } else {\n        generatorWrapper.push(iterateEntries);\n      }\n    }\n    value = CustomMap.map(String).join(\",\") || \"0\";\n    generatorWrapper = generatorWrapper.map(String).join(\",\") || \"0\";\n    settlePromise(resolvePromise.getAdInstance(), \"sei\", value);\n    settlePromise(resolvePromise.getAdInstance(), \"nsei\", generatorWrapper);\n    settlePromise(resolvePromise.getAdInstance(), \"bi\", this.setTimeoutWrapper);\n  };\n  var AdInstanceManager = function () {\n    ExperimentData.apply(this, arguments);\n  };\n  inheritPrototype(AdInstanceManager, ExperimentData);\n  var LogEvent = function (generatorWrapper, value) {\n    var CustomMap = resolvePromise.getAdInstance();\n    settlePromise(CustomMap, \"eee\", generatorWrapper);\n    settlePromise(CustomMap, \"bi\", value);\n  };\n  AdInstanceManager.getAdInstance = function () {\n    return getSingletonInstance(AdInstanceManager);\n  };\n  function ParseAdIds() {\n    return am.split(\",\").map(function (generatorWrapper) {\n      return parseInt(generatorWrapper, 10);\n    }).filter(function (generatorWrapper) {\n      return !isNaN(generatorWrapper);\n    });\n  }\n  var mainAdQueue = new AdConfiguration();\n  var bm = new AdConfiguration();\n  var cm = new AdConfiguration();\n  var dm = new AdConfiguration();\n  var em = new AdConfiguration();\n  var fm = new AdConfiguration();\n  var gm = new AdConfiguration();\n  var hm = new AdConfiguration();\n  var im = new AdConfiguration();\n  var jm = new AdConfiguration();\n  var km = new AdConfiguration();\n  var lm = new AdConfiguration();\n  var mm = new AdConfiguration();\n  var normalAd = new AdConfiguration();\n  var om = new AdConfiguration();\n  var premiumAd = new AdConfiguration();\n  executeCallbacks({\n    writeBytes: 95329493,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 95329494,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 318475490,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 324123032,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 420706097,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 420706098,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 21062100,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 420706142,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44745813,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44746068,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 21064565,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 21064567,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 418572006,\n    getWindowForDocument: 10\n  });\n  var qm = executeCallbacks({\n    writeBytes: 44768716,\n    getWindowForDocument: 10,\n    adType: em\n  });\n  var rm = executeCallbacks({\n    writeBytes: 44768717,\n    getWindowForDocument: 10,\n    adType: em\n  });\n  var sm = executeCallbacks({\n    writeBytes: 44787137,\n    getWindowForDocument: 0,\n    adType: em\n  });\n  var tm = executeCallbacks({\n    writeBytes: 44744588,\n    getWindowForDocument: 10\n  });\n  var um = executeCallbacks({\n    writeBytes: 44747319,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 95332988,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 95332989,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44740339,\n    getWindowForDocument: 10\n  });\n  var vm = executeCallbacks({\n    writeBytes: 44740340,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44749839,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44714743,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44715336,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44773378,\n    getWindowForDocument: 10,\n    adType: bm\n  });\n  var limaFeatureFlag = executeCallbacks({\n    writeBytes: 44773379,\n    getWindowForDocument: 10,\n    adType: bm\n  });\n  executeCallbacks({\n    writeBytes: 44724516,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44726389,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44752711,\n    getWindowForDocument: 50\n  });\n  executeCallbacks({\n    writeBytes: 44752052,\n    getWindowForDocument: 50\n  });\n  executeCallbacks({\n    writeBytes: 44752657,\n    getWindowForDocument: 50\n  });\n  executeCallbacks({\n    writeBytes: 44733246,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44750823,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44750824,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44794282,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44797013,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44797014,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44750822,\n    getWindowForDocument: 10,\n    adType: cm\n  });\n  executeCallbacks({\n    writeBytes: 44751889,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44751890,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44752995,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44752996,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44762627,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44762628,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 95322371,\n    getWindowForDocument: 5\n  });\n  executeCallbacks({\n    writeBytes: 95322372,\n    getWindowForDocument: 5\n  });\n  executeCallbacks({\n    writeBytes: 95327100,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44801479,\n    getWindowForDocument: 10,\n    adType: dm\n  });\n  executeCallbacks({\n    writeBytes: 44801480,\n    getWindowForDocument: 10,\n    adType: dm\n  });\n  executeCallbacks({\n    writeBytes: 44752538,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44754608,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44754609,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44770822,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44770823,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44770824,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44770825,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 75259414,\n    getWindowForDocument: 0\n  });\n  var xm,\n    ym = ((xm = window.document.featurePolicy) == null ? 0 : xm.allowedFeatures().includes(\"attribution-reporting\")) ? 300 : 0;\n  executeCallbacks({\n    writeBytes: 44776494,\n    getWindowForDocument: ym,\n    adType: fm\n  });\n  executeCallbacks({\n    writeBytes: 44776495,\n    getWindowForDocument: ym,\n    adType: fm\n  });\n  executeCallbacks({\n    writeBytes: 44776384,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 95322945,\n    getWindowForDocument: 10\n  });\n  var zm = executeCallbacks({\n    writeBytes: 95322946,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44787954,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44789282,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44792636,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44794298,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44803996,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44805453,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44804917,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44809796,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 75259415,\n    getWindowForDocument: 0\n  });\n  var Am = executeCallbacks({\n    writeBytes: 75259416,\n    getWindowForDocument: 0\n  });\n  var Bm = executeCallbacks({\n    writeBytes: 75259420,\n    getWindowForDocument: 0\n  });\n  var Cm = executeCallbacks({\n    writeBytes: 75259421,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 44785452,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44785453,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 45401791,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 95326337,\n    getWindowForDocument: 990,\n    adType: gm\n  });\n  executeCallbacks({\n    writeBytes: 44802172,\n    getWindowForDocument: 10\n  });\n  var Dm = executeCallbacks({\n    writeBytes: 44802173,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44806074,\n    getWindowForDocument: 50,\n    adType: mm\n  });\n  executeCallbacks({\n    writeBytes: 44806075,\n    getWindowForDocument: 50,\n    adType: mm\n  });\n  executeCallbacks({\n    writeBytes: 44806732,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44806733,\n    getWindowForDocument: 10\n  });\n  var Em = window.navigator || {};\n  var Fm = Em.cookieDeprecationLabel ? 990 : 0;\n  executeCallbacks({\n    writeBytes: 95322906,\n    getWindowForDocument: Em.cookieDeprecationLabel ? 10 : 0,\n    adType: hm\n  });\n  var isCookieDeprecationForced = executeCallbacks({\n    writeBytes: 95320461,\n    getWindowForDocument: 0,\n    adType: hm\n  });\n  var hasCookieDeprecationLabel = executeCallbacks({\n    writeBytes: 95322907,\n    getWindowForDocument: Fm,\n    adType: hm\n  });\n  executeCallbacks({\n    writeBytes: 44807614,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44807615,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 95322545,\n    getWindowForDocument: 10\n  });\n  var Im = executeCallbacks({\n    writeBytes: 95322546,\n    getWindowForDocument: 10\n  });\n  var Jm = executeCallbacks({\n    writeBytes: 95322547,\n    getWindowForDocument: 10\n  });\n  var Km = executeCallbacks({\n    writeBytes: 95322548,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 44809192,\n    getWindowForDocument: 10,\n    adType: lm\n  });\n  executeCallbacks({\n    writeBytes: 44809193,\n    getWindowForDocument: 10,\n    adType: lm\n  });\n  executeCallbacks({\n    writeBytes: 95320804,\n    getWindowForDocument: 10,\n    adType: lm\n  });\n  executeCallbacks({\n    writeBytes: 95320805,\n    getWindowForDocument: 10,\n    adType: lm\n  });\n  executeCallbacks({\n    writeBytes: 95321947,\n    getWindowForDocument: 1000,\n    adType: im\n  });\n  executeCallbacks({\n    writeBytes: 95322027,\n    getWindowForDocument: 1000,\n    adType: jm\n  });\n  executeCallbacks({\n    writeBytes: 95323893,\n    getWindowForDocument: 1000,\n    adType: km\n  });\n  var Lm = executeCallbacks({\n    writeBytes: 46130031,\n    getWindowForDocument: 0\n  });\n  var isEoidCookieEnabled = executeCallbacks({\n    writeBytes: 95324210,\n    getWindowForDocument: 1000,\n    adType: om\n  });\n  executeCallbacks({\n    writeBytes: 95328713,\n    getWindowForDocument: 10\n  });\n  executeCallbacks({\n    writeBytes: 95328714,\n    getWindowForDocument: 10\n  });\n  var Nm = executeCallbacks({\n    writeBytes: 95327848,\n    getWindowForDocument: 0\n  });\n  executeCallbacks({\n    writeBytes: 95332773,\n    getWindowForDocument: 25,\n    adType: normalAd\n  });\n  executeCallbacks({\n    writeBytes: 95332774,\n    getWindowForDocument: 25,\n    adType: normalAd\n  });\n  executeCallbacks({\n    writeBytes: 95332775,\n    getWindowForDocument: 25,\n    adType: normalAd\n  });\n  executeCallbacks({\n    writeBytes: 95332776,\n    getWindowForDocument: 25,\n    adType: normalAd\n  });\n  executeCallbacks({\n    writeBytes: 95332777,\n    getWindowForDocument: 25,\n    adType: normalAd\n  });\n  executeCallbacks({\n    writeBytes: 95327717,\n    getWindowForDocument: 10,\n    adType: premiumAd\n  });\n  executeCallbacks({\n    writeBytes: 95327718,\n    getWindowForDocument: 10,\n    adType: premiumAd\n  });\n  executeCallbacks({\n    writeBytes: 31065644,\n    getWindowForDocument: 1\n  });\n  var Om = executeCallbacks({\n    writeBytes: 31065645,\n    getWindowForDocument: 1\n  });\n  var Pm = new AdConfiguration();\n  executeCallbacks({\n    writeBytes: 95331588,\n    getWindowForDocument: 0,\n    adType: Pm\n  });\n  executeCallbacks({\n    writeBytes: 95331589,\n    getWindowForDocument: 1000,\n    adType: Pm\n  });\n  executeCallbacks({\n    writeBytes: 95332092,\n    getWindowForDocument: 1000,\n    adType: new AdConfiguration()\n  });\n  if (typeof window.initializeAdDisplay === \"undefined\") {\n    var Rk = AdInstanceManager.getAdInstance();\n    if (!Rk.tasks) {\n      loadExperimentData();\n      Rk.tasks = true;\n    }\n    var am = Rk.setTimeoutWrapper,\n      Qm;\n    if (!Rk.tasks) {\n      loadExperimentData();\n      Rk.tasks = true;\n    }\n    Qm = Rk.entryIdCounter;\n    if (am != null) {\n      var Rm = new AdManagerWithLogging(ParseAdIds(), Qm);\n      InitializeAdLogging(Rm);\n    }\n  }\n  var AdIdManager = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdIdManager, AdElement);\n  AdIdManager.prototype.getAdId = function () {\n    return getNumericAdProperty(this, 1);\n  };\n  AdIdManager.findGlobalObject = [2];\n  var AdPreferenceManager = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdPreferenceManager, AdElement);\n  AdPreferenceManager.findGlobalObject = [2];\n  var AdTargetingManager = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdTargetingManager, AdElement);\n  AdTargetingManager.findGlobalObject = [2];\n  var AdDisplayManager = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdDisplayManager, AdElement);\n  var AdDataManager = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdDataManager, AdElement);\n  AdDataManager.findGlobalObject = [1, 4, 2, 3];\n  var ParseAdData = function (generatorWrapper) {\n    return function (value) {\n      value = JSON.parse(value);\n      if (!Array.isArray(value)) {\n        throw Error(\"Expected jspb data to be an array, got \" + getType(value) + \": \" + value);\n      }\n      setFlag34(value);\n      return new generatorWrapper(value);\n    };\n  }(AdDataManager);\n  var adDataSingleton;\n  function getAdDataSingleton() {\n    return adDataSingleton || (adDataSingleton = ParseAdData(\"[null,[[16,[[1000,[[95332046]]],[null,[[95332047]]],[1000,[[95332093]]]]]]]\"));\n  }\n  var adFeaturePolicies = [\"A9AxgGSwmnfgzzkyJHILUr3H8nJ/3D+57oAsL4DBt4USlng4jZ0weq+fZtHC/Qwwn6gd4QSa5DzT3OBif+kXVA0AAAB4eyJvcmlnaW4iOiJodHRwczovL2ltYXNkay5nb29nbGVhcGlzLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdmFjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjk1MTY3OTk5LCJpc1RoaXJkUGFydHkiOnRydWV9\", \"AlK2UR5SkAlj8jjdEc9p3F3xuFYlF6LYjAML3EOqw1g26eCwWPjdmecULvBH5MVPoqKYrOfPhYVL71xAXI1IBQoAAAB8eyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiV2ViVmlld1hSZXF1ZXN0ZWRXaXRoRGVwcmVjYXRpb24iLCJleHBpcnkiOjE3NTgwNjcxOTksImlzU3ViZG9tYWluIjp0cnVlfQ==\"];\n  function isFeaturePolicySupported(generatorWrapper, value) {\n    if (undefined === value) {\n      value = document;\n    } else {\n      value = value;\n    }\n    var CustomMap;\n    return !((CustomMap = value.featurePolicy) == null || !CustomMap.features().includes(generatorWrapper));\n  }\n  function isFeatureAllowed(generatorWrapper, value) {\n    if (undefined === value) {\n      value = document;\n    } else {\n      value = value;\n    }\n    var CustomMap;\n    return !((CustomMap = value.featurePolicy) == null || !CustomMap.allowedFeatures().includes(generatorWrapper));\n  }\n  function isAdAuctionRunnable() {\n    var generatorWrapper = window.navigator;\n    var value = window.document;\n    return !!(window.isSecureContext && \"runAdAuction\" in generatorWrapper && generatorWrapper.runAdAuction instanceof Function && isFeatureAllowed(\"run-ad-auction\", value));\n  }\n  function getGlobalProperty(generatorWrapper, value) {\n    try {\n      var CustomMap = generatorWrapper.split(\".\");\n      generatorWrapper = globalScope;\n      for (var findEntry = 0, iterateEntries; generatorWrapper != null && findEntry < CustomMap.length; findEntry++) {\n        iterateEntries = generatorWrapper;\n        generatorWrapper = generatorWrapper[CustomMap[findEntry]];\n        if (typeof generatorWrapper === \"function\") {\n          generatorWrapper = iterateEntries[CustomMap[findEntry]]();\n        }\n      }\n      var createCircularNode = generatorWrapper;\n      if (typeof createCircularNode === value) {\n        return createCircularNode;\n      }\n    } catch (entryIdCounter) {}\n  }\n  var adFeatureCheckFunctions = {};\n  var adNumberCheckFunctions = {};\n  var adStringCheckFunctions = {};\n  var adCheckFunctionGroups = {};\n  var initializeAdChecks = (adCheckFunctionGroups[3] = (adFeatureCheckFunctions[8] = function (generatorWrapper) {\n    try {\n      return getFromGlobalScope(generatorWrapper) != null;\n    } catch (value) {}\n  }, adFeatureCheckFunctions[9] = function (generatorWrapper) {\n    try {\n      var value = getFromGlobalScope(generatorWrapper);\n    } catch (CustomMap) {\n      return;\n    }\n    if (generatorWrapper = typeof value === \"function\") {\n      value = value && value.toString && value.toString();\n      generatorWrapper = typeof value === \"string\" && includesString(value, \"[native code]\");\n    }\n    return generatorWrapper;\n  }, adFeatureCheckFunctions[10] = function () {\n    return window === window.top;\n  }, adFeatureCheckFunctions[6] = function (generatorWrapper) {\n    return containsElement(getSingletonInstance(BaseClass).entryIdCounter(), Number(generatorWrapper));\n  }, adFeatureCheckFunctions[27] = function (generatorWrapper) {\n    generatorWrapper = getGlobalProperty(generatorWrapper, \"boolean\");\n    if (undefined !== generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return undefined;\n    }\n  }, adFeatureCheckFunctions[60] = function (generatorWrapper) {\n    try {\n      return !!globalScope.document.querySelector(generatorWrapper);\n    } catch (value) {}\n  }, adFeatureCheckFunctions[80] = function (generatorWrapper) {\n    try {\n      return !!globalScope.matchMedia(generatorWrapper).matches;\n    } catch (value) {}\n  }, adFeatureCheckFunctions[69] = function (generatorWrapper) {\n    return isFeaturePolicySupported(generatorWrapper, globalScope.document);\n  }, adFeatureCheckFunctions[70] = function (generatorWrapper) {\n    return isFeatureAllowed(generatorWrapper, globalScope.document);\n  }, adFeatureCheckFunctions[79] = function (generatorWrapper) {\n    var value = globalScope.navigator;\n    if (undefined === value) {\n      value = navigator;\n    } else {\n      value = value;\n    }\n    try {\n      var CustomMap, findEntry;\n      var iterateEntries = !!((CustomMap = value.protectedAudience) == null ? 0 : (findEntry = CustomMap.queryFeatureSupport) == null ? 0 : findEntry.call(CustomMap, generatorWrapper));\n    } catch (createCircularNode) {\n      iterateEntries = false;\n    }\n    return iterateEntries;\n  }, adFeatureCheckFunctions), adCheckFunctionGroups[4] = (adNumberCheckFunctions[3] = function () {\n    return getDeviceType();\n  }, adNumberCheckFunctions[6] = function (generatorWrapper) {\n    generatorWrapper = getGlobalProperty(generatorWrapper, \"number\");\n    if (undefined !== generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return undefined;\n    }\n  }, adNumberCheckFunctions), adCheckFunctionGroups[5] = (adStringCheckFunctions[2] = function () {\n    return window.location.href;\n  }, adStringCheckFunctions[3] = function () {\n    try {\n      return window.top.location.hash;\n    } catch (generatorWrapper) {\n      return \"\";\n    }\n  }, adStringCheckFunctions[4] = function (generatorWrapper) {\n    generatorWrapper = getGlobalProperty(generatorWrapper, \"string\");\n    if (undefined !== generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      return undefined;\n    }\n  }, adStringCheckFunctions), adCheckFunctionGroups);\n  function getAdConfiguration() {\n    var generatorWrapper = undefined === generatorWrapper ? globalScope : generatorWrapper;\n    return generatorWrapper.ggeac || (generatorWrapper.ggeac = {});\n  }\n  function createAdMaps(generatorWrapper) {\n    var value = {};\n    return populateAdMaps((value[0] = new Map(), value[1] = new Map(), value[2] = new Map(), value), generatorWrapper);\n  }\n  function populateAdMaps(generatorWrapper, value) {\n    for (var CustomMap = new Map(), findEntry = getIterator(generatorWrapper[1].entries()), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n      var createCircularNode = getIterator(iterateEntries.value);\n      iterateEntries = createCircularNode.next().value;\n      createCircularNode = createCircularNode.next().value;\n      createCircularNode = createCircularNode[createCircularNode.length - 1];\n      CustomMap.set(iterateEntries, createCircularNode.getElementAtIndex + createCircularNode.TransformMapEntries * createCircularNode.CreateKeyValuePair);\n    }\n    value = getIterator(value);\n    for (findEntry = value.next(); !findEntry.done; findEntry = value.next()) {\n      findEntry = findEntry.value;\n      iterateEntries = parseData(findEntry, AdPreferenceManager, 2);\n      iterateEntries = getIterator(iterateEntries);\n      for (createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n        createCircularNode = createCircularNode.value;\n        if (parseData(createCircularNode, AdIdManager, 2).length !== 0) {\n          var entryIdCounter = getAdPropertyNumericValue(createCircularNode, 8);\n          if (getAdPropertyNumeric(createCircularNode, 4) && !getAdPropertyNumeric(createCircularNode, 13)) {\n            var key = undefined;\n            if ((key = CustomMap.get(getAdPropertyNumeric(createCircularNode, 4))) != null) {\n              entryIdCounter = key;\n            } else {\n              entryIdCounter = 0;\n            }\n            key = getAdPropertyNumericValue(createCircularNode, 1) * parseData(createCircularNode, AdIdManager, 2).length;\n            CustomMap.set(getAdPropertyNumeric(createCircularNode, 4), entryIdCounter + key);\n          }\n          key = [];\n          for (var value = 0; value < parseData(createCircularNode, AdIdManager, 2).length; value++) {\n            var entry = {\n              getElementAtIndex: entryIdCounter,\n              TransformMapEntries: getAdPropertyNumericValue(createCircularNode, 1),\n              CreateKeyValuePair: parseData(createCircularNode, AdIdManager, 2).length,\n              arrayOfObjectsTransformationInstance: value,\n              convertToTuple: getAdPropertyNumeric(findEntry, 1),\n              writeVarint64: createCircularNode,\n              hasTextEncoder: parseData(createCircularNode, AdIdManager, 2)[value]\n            };\n            key.push(entry);\n          }\n          if (!(addIdToSet(generatorWrapper[2], getAdPropertyNumeric(createCircularNode, 10), key) || addIdToSet(generatorWrapper[1], getAdPropertyNumeric(createCircularNode, 4), key))) {\n            addIdToSet(generatorWrapper[0], parseData(createCircularNode, AdIdManager, 2)[0].getAdId(), key);\n          }\n        }\n      }\n    }\n    return generatorWrapper;\n  }\n  function addIdToSet(generatorWrapper, value, CustomMap) {\n    if (!value) {\n      return false;\n    }\n    if (!generatorWrapper.has(value)) {\n      generatorWrapper.set(value, []);\n    }\n    var findEntry;\n    (findEntry = generatorWrapper.get(value)).push.apply(findEntry, toArray(CustomMap));\n    return true;\n  }\n  var excludedAdTypes = [12, 13, 20];\n  var AdManager = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === findEntry) {\n      findEntry = {};\n    } else {\n      findEntry = findEntry;\n    }\n    var iterateEntries = undefined === findEntry.clearBitFlag ? false : findEntry.clearBitFlag;\n    if (undefined === findEntry.normalizeEventOptions) {\n      findEntry = [];\n    } else {\n      findEntry = findEntry.normalizeEventOptions;\n    }\n    this.copyArray = generatorWrapper;\n    this.indexOfChar = CustomMap;\n    this.createDeferred = {};\n    this.clearBitFlag = iterateEntries;\n    generatorWrapper = {};\n    this.entryIdCounter = (generatorWrapper[value] = [], generatorWrapper[4] = [], generatorWrapper);\n    this.tasks = {};\n    this.setTimeoutWrapper = {};\n    if (value = getDeobfuscationId()) {\n      value = getIterator(value.split(\",\") || []);\n      for (generatorWrapper = value.next(); !generatorWrapper.done; generatorWrapper = value.next()) {\n        if (generatorWrapper = Number(generatorWrapper.value)) {\n          this.tasks[generatorWrapper] = true;\n        }\n      }\n    }\n    findEntry = getIterator(findEntry);\n    for (value = findEntry.next(); !value.done; value = findEntry.next()) {\n      this.tasks[value.value] = true;\n    }\n  };\n  var processAdTypes = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = [],\n      createCircularNode;\n    if (createCircularNode = value !== 9) {\n      if (generatorWrapper.createDeferred[value]) {\n        createCircularNode = true;\n      } else {\n        generatorWrapper.createDeferred[value] = true;\n        createCircularNode = false;\n      }\n    }\n    if (createCircularNode) {\n      sendAdRequest(generatorWrapper.indexOfChar, value, CustomMap, iterateEntries, [], 4);\n      return iterateEntries;\n    }\n    createCircularNode = excludedAdTypes.includes(value);\n    for (var entryIdCounter = [], key = getSingletonInstance(SessionStorage).GeneratorExecutor, value = [], entry = getIterator([0, 1, 2]), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n      currentEntry = currentEntry.value;\n      for (var foundEntry = getIterator(generatorWrapper.copyArray[currentEntry].entries()), resolveFunction = foundEntry.next(); !resolveFunction.done; resolveFunction = foundEntry.next()) {\n        var rejectFunction = getIterator(resolveFunction.value);\n        resolveFunction = rejectFunction.next().value;\n        rejectFunction = rejectFunction.next().value;\n        var user = resolveFunction;\n        var profileData = rejectFunction;\n        resolveFunction = new MessageBody();\n        rejectFunction = profileData.filter(function (entryNode) {\n          return entryNode.convertToTuple === value && !!generatorWrapper.tasks[entryNode.hasTextEncoder.getAdId()] && verifyCondition(fetchData(entryNode.writeVarint64, TagSessionMetadata, 3), key) && verifyCondition(fetchData(entryNode.hasTextEncoder, TagSessionMetadata, 3), key);\n        });\n        if (rejectFunction.length) {\n          resolveFunction = getIterator(rejectFunction);\n          for (rejectFunction = resolveFunction.next(); !rejectFunction.done; rejectFunction = resolveFunction.next()) {\n            value.push(rejectFunction.value.hasTextEncoder);\n          }\n        } else if (!generatorWrapper.clearBitFlag) {\n          rejectFunction = undefined;\n          if (currentEntry === 2) {\n            rejectFunction = findEntry[1];\n            pf(resolveFunction, 2, MessageBodyTypes, parseNullableIntEnum(user));\n          } else {\n            rejectFunction = findEntry[0];\n          }\n          var isDone = undefined;\n          var stream = undefined;\n          if ((stream = (isDone = rejectFunction) == null ? undefined : isDone(String(user))) != null) {\n            rejectFunction = stream;\n          } else if (currentEntry === 2 && getAdPropertyNumeric(profileData[0].writeVarint64, 11) === 1) {\n            rejectFunction = undefined;\n          } else {\n            rejectFunction = findEntry[0](String(user));\n          }\n          if (undefined !== rejectFunction) {\n            user = getIterator(profileData);\n            for (profileData = user.next(); !profileData.done; profileData = user.next()) {\n              profileData = profileData.value;\n              if (profileData.convertToTuple === value) {\n                isDone = rejectFunction - profileData.getElementAtIndex;\n                var keyArray = profileData;\n                stream = keyArray.TransformMapEntries;\n                var getAdManager = keyArray.CreateKeyValuePair;\n                keyArray = keyArray.arrayOfObjectsTransformationInstance;\n                if (isDone >= 0 && isDone < stream * getAdManager && isDone % getAdManager === keyArray && verifyCondition(fetchData(profileData.writeVarint64, TagSessionMetadata, 3), key) && verifyCondition(fetchData(profileData.hasTextEncoder, TagSessionMetadata, 3), key)) {\n                  isDone = getAdPropertyNumeric(profileData.writeVarint64, 13);\n                  if (isDone !== 0 && undefined !== isDone) {\n                    stream = generatorWrapper.setTimeoutWrapper[String(isDone)];\n                    if (undefined !== stream && stream !== profileData.hasTextEncoder.getAdId()) {\n                      recordAdEvent(generatorWrapper.indexOfChar, generatorWrapper.setTimeoutWrapper[String(isDone)], profileData.hasTextEncoder.getAdId(), isDone);\n                    } else {\n                      generatorWrapper.setTimeoutWrapper[String(isDone)] = profileData.hasTextEncoder.getAdId();\n                    }\n                  }\n                  ",
  "lue[1] = new Map(), value[2] = new Map(), value), generatorWrapper);\n  }\n  function populateAdMaps(generatorWrapper, value) {\n    for (var CustomMap = new Map(), findEntry = getIterator(generatorWrapper[1].entries()), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n      var createCircularNode = getIterator(iterateEntries.value);\n      iterateEntries = createCircularNode.next().value;\n      createCircularNode = createCircularNode.next().value;\n      createCircularNode = createCircularNode[createCircularNode.length - 1];\n      CustomMap.set(iterateEntries, createCircularNode.getElementAtIndex + createCircularNode.TransformMapEntries * createCircularNode.CreateKeyValuePair);\n    }\n    value = getIterator(value);\n    for (findEntry = value.next(); !findEntry.done; findEntry = value.next()) {\n      findEntry = findEntry.value;\n      iterateEntries = parseData(findEntry, AdPreferenceManager, 2);\n      iterateEntries = getIterator(iterateEntries);\n      for (createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n        createCircularNode = createCircularNode.value;\n        if (parseData(createCircularNode, AdIdManager, 2).length !== 0) {\n          var entryIdCounter = getAdPropertyNumericValue(createCircularNode, 8);\n          if (getAdPropertyNumeric(createCircularNode, 4) && !getAdPropertyNumeric(createCircularNode, 13)) {\n            var key = undefined;\n            if ((key = CustomMap.get(getAdPropertyNumeric(createCircularNode, 4))) != null) {\n              entryIdCounter = key;\n            } else {\n              entryIdCounter = 0;\n            }\n            key = getAdPropertyNumericValue(createCircularNode, 1) * parseData(createCircularNode, AdIdManager, 2).length;\n            CustomMap.set(getAdPropertyNumeric(createCircularNode, 4), entryIdCounter + key);\n          }\n          key = [];\n          for (var value = 0; value < parseData(createCircularNode, AdIdManager, 2).length; value++) {\n            var entry = {\n              getElementAtIndex: entryIdCounter,\n              TransformMapEntries: getAdPropertyNumericValue(createCircularNode, 1),\n              CreateKeyValuePair: parseData(createCircularNode, AdIdManager, 2).length,\n              arrayOfObjectsTransformationInstance: value,\n              convertToTuple: getAdPropertyNumeric(findEntry, 1),\n              writeVarint64: createCircularNode,\n              hasTextEncoder: parseData(createCircularNode, AdIdManager, 2)[value]\n            };\n            key.push(entry);\n          }\n          if (!(addIdToSet(generatorWrapper[2], getAdPropertyNumeric(createCircularNode, 10), key) || addIdToSet(generatorWrapper[1], getAdPropertyNumeric(createCircularNode, 4), key))) {\n            addIdToSet(generatorWrapper[0], parseData(createCircularNode, AdIdManager, 2)[0].getAdId(), key);\n          }\n        }\n      }\n    }\n    return generatorWrapper;\n  }\n  function addIdToSet(generatorWrapper, value, CustomMap) {\n    if (!value) {\n      return false;\n    }\n    if (!generatorWrapper.has(value)) {\n      generatorWrapper.set(value, []);\n    }\n    var findEntry;\n    (findEntry = generatorWrapper.get(value)).push.apply(findEntry, toArray(CustomMap));\n    return true;\n  }\n  var excludedAdTypes = [12, 13, 20];\n  var AdManager = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === findEntry) {\n      findEntry = {};\n    } else {\n      findEntry = findEntry;\n    }\n    var iterateEntries = undefined === findEntry.clearBitFlag ? false : findEntry.clearBitFlag;\n    if (undefined === findEntry.normalizeEventOptions) {\n      findEntry = [];\n    } else {\n      findEntry = findEntry.normalizeEventOptions;\n    }\n    this.copyArray = generatorWrapper;\n    this.indexOfChar = CustomMap;\n    this.createDeferred = {};\n    this.clearBitFlag = iterateEntries;\n    generatorWrapper = {};\n    this.entryIdCounter = (generatorWrapper[value] = [], generatorWrapper[4] = [], generatorWrapper);\n    this.tasks = {};\n    this.setTimeoutWrapper = {};\n    if (value = getDeobfuscationId()) {\n      value = getIterator(value.split(\",\") || []);\n      for (generatorWrapper = value.next(); !generatorWrapper.done; generatorWrapper = value.next()) {\n        if (generatorWrapper = Number(generatorWrapper.value)) {\n          this.tasks[generatorWrapper] = true;\n        }\n      }\n    }\n    findEntry = getIterator(findEntry);\n    for (value = findEntry.next(); !value.done; value = findEntry.next()) {\n      this.tasks[value.value] = true;\n    }\n  };\n  var processAdTypes = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = [],\n      createCircularNode;\n    if (createCircularNode = value !== 9) {\n      if (generatorWrapper.createDeferred[value]) {\n        createCircularNode = true;\n      } else {\n        generatorWrapper.createDeferred[value] = true;\n        createCircularNode = false;\n      }\n    }\n    if (createCircularNode) {\n      sendAdRequest(generatorWrapper.indexOfChar, value, CustomMap, iterateEntries, [], 4);\n      return iterateEntries;\n    }\n    createCircularNode = excludedAdTypes.includes(value);\n    for (var entryIdCounter = [], key = getSingletonInstance(SessionStorage).GeneratorExecutor, value = [], entry = getIterator([0, 1, 2]), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n      currentEntry = currentEntry.value;\n      for (var foundEntry = getIterator(generatorWrapper.copyArray[currentEntry].entries()), resolveFunction = foundEntry.next(); !resolveFunction.done; resolveFunction = foundEntry.next()) {\n        var rejectFunction = getIterator(resolveFunction.value);\n        resolveFunction = rejectFunction.next().value;\n        rejectFunction = rejectFunction.next().value;\n        var user = resolveFunction;\n        var profileData = rejectFunction;\n        resolveFunction = new MessageBody();\n        rejectFunction = profileData.filter(function (entryNode) {\n          return entryNode.convertToTuple === value && !!generatorWrapper.tasks[entryNode.hasTextEncoder.getAdId()] && verifyCondition(fetchData(entryNode.writeVarint64, TagSessionMetadata, 3), key) && verifyCondition(fetchData(entryNode.hasTextEncoder, TagSessionMetadata, 3), key);\n        });\n        if (rejectFunction.length) {\n          resolveFunction = getIterator(rejectFunction);\n          for (rejectFunction = resolveFunction.next(); !rejectFunction.done; rejectFunction = resolveFunction.next()) {\n            value.push(rejectFunction.value.hasTextEncoder);\n          }\n        } else if (!generatorWrapper.clearBitFlag) {\n          rejectFunction = undefined;\n          if (currentEntry === 2) {\n            rejectFunction = findEntry[1];\n            pf(resolveFunction, 2, MessageBodyTypes, parseNullableIntEnum(user));\n          } else {\n            rejectFunction = findEntry[0];\n          }\n          var isDone = undefined;\n          var stream = undefined;\n          if ((stream = (isDone = rejectFunction) == null ? undefined : isDone(String(user))) != null) {\n            rejectFunction = stream;\n          } else if (currentEntry === 2 && getAdPropertyNumeric(profileData[0].writeVarint64, 11) === 1) {\n            rejectFunction = undefined;\n          } else {\n            rejectFunction = findEntry[0](String(user));\n          }\n          if (undefined !== rejectFunction) {\n            user = getIterator(profileData);\n            for (profileData = user.next(); !profileData.done; profileData = user.next()) {\n              profileData = profileData.value;\n              if (profileData.convertToTuple === value) {\n                isDone = rejectFunction - profileData.getElementAtIndex;\n                var keyArray = profileData;\n                stream = keyArray.TransformMapEntries;\n                var getAdManager = keyArray.CreateKeyValuePair;\n                keyArray = keyArray.arrayOfObjectsTransformationInstance;\n                if (isDone >= 0 && isDone < stream * getAdManager && isDone % getAdManager === keyArray && verifyCondition(fetchData(profileData.writeVarint64, TagSessionMetadata, 3), key) && verifyCondition(fetchData(profileData.hasTextEncoder, TagSessionMetadata, 3), key)) {\n                  isDone = getAdPropertyNumeric(profileData.writeVarint64, 13);\n                  if (isDone !== 0 && undefined !== isDone) {\n                    stream = generatorWrapper.setTimeoutWrapper[String(isDone)];\n                    if (undefined !== stream && stream !== profileData.hasTextEncoder.getAdId()) {\n                      recordAdEvent(generatorWrapper.indexOfChar, generatorWrapper.setTimeoutWrapper[String(isDone)], profileData.hasTextEncoder.getAdId(), isDone);\n                    } else {\n                      generatorWrapper.setTimeoutWrapper[String(isDone)] = profileData.hasTextEncoder.getAdId();\n                    }\n                  }\n                  value.push(profileData.hasTextEncoder);\n                }\n              }\n            }\n            if (rf(resolveFunction, MessageBodyTypes) !== 0) {\n              modifyAdProperty(resolveFunction, 3, rejectFunction);\n              entryIdCounter.push(resolveFunction);\n            }\n          }\n        }\n      }\n    }\n    findEntry = getIterator(value);\n    for (value = findEntry.next(); !value.done; value = findEntry.next()) {\n      value = value.value;\n      entry = value.getAdId();\n      iterateEntries.push(entry);\n      addToAdTypeSet(generatorWrapper, entry, createCircularNode ? 4 : CustomMap);\n      processAdRequests(parseData(value, ConfigField, 2), createCircularNode ? getAdIds() : [CustomMap], generatorWrapper.indexOfChar, entry);\n    }\n    sendAdRequest(generatorWrapper.indexOfChar, value, CustomMap, iterateEntries, entryIdCounter, 1);\n    return iterateEntries;\n  };\n  var addToAdTypeSet = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.entryIdCounter[CustomMap]) {\n      generatorWrapper.entryIdCounter[CustomMap] = [];\n    }\n    generatorWrapper = generatorWrapper.entryIdCounter[CustomMap];\n    if (!generatorWrapper.includes(value)) {\n      generatorWrapper.push(value);\n    }\n  };\n  var updateAdContainers = function (generatorWrapper, value) {\n    value = value.map(function (CustomMap) {\n      return new AdTargetingManager(CustomMap);\n    }).filter(function (CustomMap) {\n      return !excludedAdTypes.includes(getAdPropertyNumeric(CustomMap, 1));\n    });\n    generatorWrapper.copyArray = populateAdMaps(generatorWrapper.copyArray, value);\n  };\n  var initializeAdProcessors = function (generatorWrapper, value) {\n    definePropertyIfNotExists(1, function (CustomMap) {\n      generatorWrapper.tasks[CustomMap] = true;\n    }, value);\n    definePropertyIfNotExists(2, function (CustomMap, findEntry, iterateEntries) {\n      return processAdTypes(generatorWrapper, CustomMap, findEntry, iterateEntries);\n    }, value);\n    definePropertyIfNotExists(3, function (CustomMap) {\n      return (generatorWrapper.entryIdCounter[CustomMap] || []).concat(generatorWrapper.entryIdCounter[4]);\n    }, value);\n    definePropertyIfNotExists(12, function (CustomMap) {\n      updateAdContainers(generatorWrapper, CustomMap);\n      return;\n    }, value);\n    definePropertyIfNotExists(16, function (CustomMap, findEntry) {\n      addToAdTypeSet(generatorWrapper, CustomMap, findEntry);\n      return;\n    }, value);\n  };\n  var ConfigurationManager = function () {\n    var generatorWrapper = {};\n    this.createDeferred = function (value, CustomMap) {\n      if (generatorWrapper[value] != null) {\n        return generatorWrapper[value];\n      } else {\n        return CustomMap;\n      }\n    };\n    this.tasks = function (value, CustomMap) {\n      if (generatorWrapper[value] != null) {\n        return generatorWrapper[value];\n      } else {\n        return CustomMap;\n      }\n    };\n    this.isDone = function (value, CustomMap) {\n      if (generatorWrapper[value] != null) {\n        return generatorWrapper[value];\n      } else {\n        return CustomMap;\n      }\n    };\n    this.entryIdCounter = function (value, CustomMap) {\n      if (generatorWrapper[value] != null) {\n        return generatorWrapper[value];\n      } else {\n        return CustomMap;\n      }\n    };\n    this.handleAsync = function (value, CustomMap) {\n      if (generatorWrapper[value] != null) {\n        return CustomMap.concat(generatorWrapper[value]);\n      } else {\n        return CustomMap;\n      }\n    };\n    this.setTimeoutWrapper = function () {};\n  };\n  function getDefaultConfiguration() {\n    var generatorWrapper = defaultNumericValueWrapper;\n    return getSingletonInstance(ConfigurationManager).tasks(generatorWrapper.entryIdCounter, generatorWrapper.defaultValue);\n  }\n  var ActionManager = function () {\n    this.entryIdCounter = function () {};\n  };\n  var setActionHandler = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter = getValueOrDefault(14, value, function () {});\n  };\n  function executeAction(generatorWrapper) {\n    getSingletonInstance(ActionManager).entryIdCounter(generatorWrapper);\n  }\n  var adRequestParameter, adRequestParameterB, adRequestParameterC, adRequestParameterD, adRequestParameterE, adRequestParameterF;\n  function initializeAdRequest(generatorWrapper, value) {\n    var CustomMap = value = undefined === value ? getAdConfiguration() : value;\n    setupBaseClassMethods(getSingletonInstance(BaseClass), CustomMap, generatorWrapper);\n    updateConfigurationMethods(value, generatorWrapper);\n    generatorWrapper = value;\n    setActionHandler(getSingletonInstance(ActionManager), generatorWrapper);\n    getSingletonInstance(ConfigurationManager).setTimeoutWrapper();\n  }\n  function updateConfigurationMethods(generatorWrapper, value) {\n    var CustomMap = getSingletonInstance(ConfigurationManager);\n    CustomMap.createDeferred = function (findEntry, iterateEntries) {\n      return getValueOrDefault(5, generatorWrapper, function () {\n        return false;\n      })(findEntry, iterateEntries, value);\n    };\n    CustomMap.tasks = function (findEntry, iterateEntries) {\n      return getValueOrDefault(6, generatorWrapper, function () {\n        return 0;\n      })(findEntry, iterateEntries, value);\n    };\n    CustomMap.isDone = function (findEntry, iterateEntries) {\n      return getValueOrDefault(7, generatorWrapper, function () {\n        return \"\";\n      })(findEntry, iterateEntries, value);\n    };\n    CustomMap.entryIdCounter = function (findEntry, iterateEntries) {\n      return getValueOrDefault(8, generatorWrapper, function () {\n        return [];\n      })(findEntry, iterateEntries, value);\n    };\n    CustomMap.handleAsync = function (findEntry, iterateEntries) {\n      return getValueOrDefault(17, generatorWrapper, function () {\n        return [];\n      })(findEntry, iterateEntries, value);\n    };\n    CustomMap.setTimeoutWrapper = function () {\n      getValueOrDefault(15, generatorWrapper, function () {})(value);\n    };\n  }\n  adManagerInstance.resetAdStateController();\n  InitializeAdLogging(new RandomAdActivator());\n  (function (generatorWrapper) {\n    var value = generatorWrapper.adElementSymbol;\n    var CustomMap = generatorWrapper.GeneratorExecutor;\n    var findEntry = generatorWrapper.config;\n    var iterateEntries = undefined === generatorWrapper.getAdPropertyStringFallback ? getAdConfiguration() : generatorWrapper.getAdPropertyStringFallback;\n    var createCircularNode = undefined === generatorWrapper.getValidatedDataOrUndefined ? 0 : generatorWrapper.getValidatedDataOrUndefined;\n    var entryIdCounter = undefined === generatorWrapper.indexOfChar ? new AdRequest((adRequestParameterD = (adRequestParameter = fetchData(value, AdDisplayManager, 5)) == null ? undefined : getAdPropertyFallbackNumeric(adRequestParameter, 2)) != null ? adRequestParameterD : 0, (adRequestParameterE = (adRequestParameterB = fetchData(value, AdDisplayManager, 5)) == null ? undefined : getAdPropertyFallbackNumeric(adRequestParameterB, 4)) != null ? adRequestParameterE : 0, (adRequestParameterF = (adRequestParameterC = fetchData(value, AdDisplayManager, 5)) == null ? undefined : getBooleanAdProperty(adRequestParameterC, 3)) != null ? adRequestParameterF : false) : generatorWrapper.indexOfChar;\n    if (undefined === generatorWrapper.copyArray) {\n      generatorWrapper = createAdMaps(parseData(value, AdTargetingManager, 2));\n    } else {\n      generatorWrapper = generatorWrapper.copyArray;\n    }\n    if (iterateEntries.hasOwnProperty(\"init-done\")) {\n      getValueOrDefault(12, iterateEntries, function () {})(parseData(value, AdTargetingManager, 2).map(function (key) {\n        return key.toJSON();\n      }));\n      getValueOrDefault(13, iterateEntries, function () {})(parseData(value, ConfigField, 1).map(function (key) {\n        return key.toJSON();\n      }), createCircularNode);\n      if (CustomMap) {\n        getValueOrDefault(14, iterateEntries, function () {})(CustomMap);\n      }\n      initializeAdRequest(createCircularNode, iterateEntries);\n    } else {\n      initializeAdProcessors(new AdManager(generatorWrapper, createCircularNode, entryIdCounter, findEntry), iterateEntries);\n      registerAdFunctions(iterateEntries);\n      registerDataHandlers(iterateEntries);\n      markInitializationDone(iterateEntries);\n      initializeAdRequest(createCircularNode, iterateEntries);\n      processAdRequests(parseData(value, ConfigField, 1), [createCircularNode], entryIdCounter, undefined, true);\n      isSessionStorageEnabled = isSessionStorageEnabled || !(!findEntry || !findEntry.encodeParameterValue);\n      executeAction(initializeAdChecks);\n      if (CustomMap) {\n        executeAction(CustomMap);\n      }\n    }\n  })({\n    adElementSymbol: cloneIfNotFrozen(getAdDataSingleton()),\n    getValidatedDataOrUndefined: 7\n  });\n  var initialConfig = generatePageViewId();\n  var configFunctions = {};\n  var configFunctionsWithInitial = (configFunctions[0] = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = secureRandom();\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    return function (value) {\n      return hashString(value + \" + \" + generatorWrapper) % 1000;\n    };\n  }(initialConfig), configFunctions);\n  getSingletonInstance(BaseClass).tasks(16, configFunctionsWithInitial);\n  var filterInvalidAdRequests = function (generatorWrapper) {\n    var value = {};\n    forEachElement(generatorWrapper, function (CustomMap) {\n      var findEntry = CustomMap.entryIdCounter;\n      var iterateEntries = value[findEntry];\n      if (value.hasOwnProperty(findEntry)) {\n        if (iterateEntries !== null) {\n          if (!CustomMap.tasks(iterateEntries)) {\n            value[findEntry] = null;\n          }\n        }\n      } else {\n        value[findEntry] = CustomMap;\n      }\n    });\n    removeElementsByCondition(generatorWrapper, function (CustomMap) {\n      return value[CustomMap.entryIdCounter] === null;\n    });\n  };\n  var adErrorCodes = {\n    NONE: 0,\n    createSafeStyleFromTemplate: 1\n  };\n  var adWarningCodes = {\n    unwrapSafeHtml: 0,\n    getTopFrame: 1,\n    iterateFrames: 2,\n    secureRandom: 3\n  };\n  var AdMediaTypes = {\n    transformAndAddElement: \"a\",\n    createSafeHtmlFromTemplate: \"d\",\n    VIDEO: \"v\"\n  };\n  var AdVisibilityTracker = function () {\n    this.zone = 0;\n    this.entryIdCounter = false;\n    this.tasks = -1;\n    this.navigatorReference = false;\n    this.ta = 0;\n  };\n  AdVisibilityTracker.prototype.isAdVisible = function () {\n    if (this.navigatorReference) {\n      return this.zone >= 0.3;\n    } else {\n      return this.zone >= 0.5;\n    }\n  };\n  var AdOpacityState = {\n    SafeHtml: 0,\n    areSizesEqual: 1\n  };\n  var AdEngagementState = {\n    668123728: 0,\n    668123729: 1\n  };\n  var AdInteractionState = {\n    44731964: 0,\n    44731965: 1\n  };\n  var AdErrorState = {\n    NONE: 0,\n    createElementWithOptionalClassesAndAttributes: 1,\n    decodeUriComponentWithSpace: 2\n  };\n  var AdResolutionState = {\n    480596784: 0,\n    480596785: 1,\n    21063355: 2\n  };\n  var AdStateTracker = function () {\n    this.entryIdCounter = null;\n    this.createDeferred = false;\n    this.setTimeoutWrapper = null;\n  };\n  var activateAdState = function (generatorWrapper) {\n    generatorWrapper.createDeferred = true;\n    return generatorWrapper;\n  };\n  var applyAdEnvironmentVariables = function (generatorWrapper, value) {\n    if (generatorWrapper.setTimeoutWrapper) {\n      forEachElement(value, function (CustomMap) {\n        CustomMap = generatorWrapper.setTimeoutWrapper[CustomMap];\n        if (undefined !== CustomMap) {\n          generatorWrapper.tasks(CustomMap);\n        }\n      });\n    }\n  };\n  AdStateTracker.prototype.getAdStateValue = function () {\n    return this.entryIdCounter;\n  };\n  var NumericAdStateTracker = function (generatorWrapper) {\n    AdStateTracker.call(this);\n    this.handleAsync = generatorWrapper;\n  };\n  inheritPrototype(NumericAdStateTracker, AdStateTracker);\n  NumericAdStateTracker.prototype.tasks = function (generatorWrapper) {\n    if (this.entryIdCounter === null && containsValue(this.handleAsync, generatorWrapper)) {\n      this.entryIdCounter = generatorWrapper;\n    }\n  };\n  var StringAdStateTracker = function () {\n    AdStateTracker.call(this);\n  };\n  inheritPrototype(StringAdStateTracker, AdStateTracker);\n  StringAdStateTracker.prototype.tasks = function (generatorWrapper) {\n    if (this.entryIdCounter === null && typeof generatorWrapper === \"number\") {\n      this.entryIdCounter = generatorWrapper;\n    }\n  };\n  var QueryIdAdStateTracker = function () {\n    AdStateTracker.call(this);\n  };\n  inheritPrototype(QueryIdAdStateTracker, AdStateTracker);\n  QueryIdAdStateTracker.prototype.tasks = function (generatorWrapper) {\n    if (this.entryIdCounter === null && typeof generatorWrapper === \"string\") {\n      this.entryIdCounter = generatorWrapper;\n    }\n  };\n  var AdStateController = function () {\n    this.entryIdCounter = {};\n    this.setTimeoutWrapper = true;\n    this.tasks = {};\n  };\n  AdStateController.prototype.resetAdStateController = function () {\n    this.entryIdCounter = {};\n    this.setTimeoutWrapper = true;\n    this.tasks = {};\n  };\n  var getOrCreateAdStateTracker = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.entryIdCounter[value]) {\n      generatorWrapper.entryIdCounter[value] = new NumericAdStateTracker(CustomMap);\n    }\n    return generatorWrapper.entryIdCounter[value];\n  };\n  var ensureQueryIdAdState = function (generatorWrapper) {\n    if (!generatorWrapper.entryIdCounter.queryid) {\n      generatorWrapper.entryIdCounter.queryid = new QueryIdAdStateTracker();\n    }\n  };\n  var updateAdStateValue = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper = generatorWrapper.entryIdCounter[value]) {\n      generatorWrapper.tasks(CustomMap);\n    }\n  };\n  var getAdState = function (generatorWrapper, value) {\n    if (hasOwnPropertySafe(generatorWrapper.tasks, value)) {\n      return generatorWrapper.tasks[value];\n    }\n    if (generatorWrapper = generatorWrapper.entryIdCounter[value]) {\n      return generatorWrapper.getAdStateValue();\n    }\n  };\n  var getAllAdStates = function (generatorWrapper) {\n    var value = {};\n    var CustomMap = filterObject(generatorWrapper.entryIdCounter, function (findEntry) {\n      return findEntry.createDeferred;\n    });\n    forEachInObject(CustomMap, function (findEntry, iterateEntries) {\n      if (undefined !== generatorWrapper.tasks[iterateEntries]) {\n        findEntry = String(generatorWrapper.tasks[iterateEntries]);\n      } else if (findEntry.createDeferred && findEntry.entryIdCounter !== null) {\n        findEntry = String(findEntry.entryIdCounter);\n      } else {\n        findEntry = \"\";\n      }\n      if (findEntry.length > 0) {\n        value[iterateEntries] = findEntry;\n      }\n    }, generatorWrapper);\n    return value;\n  };\n  var serializeAdStates = function (generatorWrapper) {\n    generatorWrapper = getAllAdStates(generatorWrapper);\n    var value = [];\n    forEachInObject(generatorWrapper, function (CustomMap, findEntry) {\n      if (!(findEntry in Object.prototype)) {\n        if (typeof CustomMap != \"undefined\") {\n          value.push([findEntry, \":\", CustomMap].join(\"\"));\n        }\n      }\n    });\n    return value;\n  };\n  var applyAdEnvironmentConfig = function () {\n    var generatorWrapper = getAdEnvironment().AdEnvironmentConfig;\n    var value = getActiveAdInstanceIds();\n    if (generatorWrapper.setTimeoutWrapper) {\n      forEachElement(valuesOfObject(generatorWrapper.entryIdCounter), function (CustomMap) {\n        return applyAdEnvironmentVariables(CustomMap, value);\n      });\n    }\n  };\n  var configureAdStateTrackers = function (generatorWrapper) {\n    getOrCreateAdStateTracker(generatorWrapper, \"od\", adErrorCodes);\n    activateAdState(getOrCreateAdStateTracker(generatorWrapper, \"opac\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(generatorWrapper, \"sbeos\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(generatorWrapper, \"prf\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(generatorWrapper, \"mwt\", AdOpacityState));\n    getOrCreateAdStateTracker(generatorWrapper, \"iogeo\", AdOpacityState);\n  };\n  var document = document;\n  var window = window;\n  var isLegacyBrowser = !isIE && !isSafari();\n  var PerformanceMonitor = function () {\n    this.entryIdCounter = this.trimString = null;\n  };\n  var BasicPerformanceMonitor = function () {};\n  BasicPerformanceMonitor.prototype.now = function () {\n    return 0;\n  };\n  BasicPerformanceMonitor.prototype.tasks = function () {\n    return 0;\n  };\n  BasicPerformanceMonitor.prototype.setTimeoutWrapper = function () {\n    return 0;\n  };\n  BasicPerformanceMonitor.prototype.entryIdCounter = function () {\n    return 0;\n  };\n  var AdvancedPerformanceMonitor = function () {\n    if (!isPerformanceMonitoringAvailable()) {\n      throw Error();\n    }\n  };\n  inheritPrototype(AdvancedPerformanceMonitor, BasicPerformanceMonitor);\n  var isPerformanceMonitoringAvailable = function () {\n    return !(!window || !window.performance);\n  };\n  AdvancedPerformanceMonitor.prototype.now = function () {\n    if (isPerformanceMonitoringAvailable() && window.performance.now) {\n      return window.performance.now();\n    } else {\n      return BasicPerformanceMonitor.prototype.now.call(this);\n    }\n  };\n  AdvancedPerformanceMonitor.prototype.tasks = function () {\n    if (isPerformanceMonitoringAvailable() && window.performance.memory) {\n      return window.performance.memory.totalJSHeapSize || 0;\n    } else {\n      return BasicPerformanceMonitor.prototype.tasks.call(this);\n    }\n  };\n  AdvancedPerformanceMonitor.prototype.setTimeoutWrapper = function () {\n    if (isPerformanceMonitoringAvailable() && window.performance.memory) {\n      return window.performance.memory.usedJSHeapSize || 0;\n    } else {\n      return BasicPerformanceMonitor.prototype.setTimeoutWrapper.call(this);\n    }\n  };\n  AdvancedPerformanceMonitor.prototype.entryIdCounter = function () {\n    if (isPerformanceMonitoringAvailable() && window.performance.memory) {\n      return window.performance.memory.jsHeapSizeLimit || 0;\n    } else {\n      return BasicPerformanceMonitor.prototype.entryIdCounter.call(this);\n    }\n  };\n  var VisibilityTracker = function () {};\n  VisibilityTracker.prototype.isAdVisible = function () {\n    return getVisibilityStateCode(document) === 1;\n  };\n  var AdFrame = function (generatorWrapper, value) {\n    this.entryIdCounter = generatorWrapper;\n    this.depth = value;\n  };\n  var getAdFrames = function () {\n    var generatorWrapper = collectAncestorOrigins();\n    var value = Math.max(generatorWrapper.length - 1, 0);\n    var CustomMap = computeReferrerUrl(generatorWrapper);\n    generatorWrapper = CustomMap.entryIdCounter;\n    var findEntry = CustomMap.tasks;\n    var iterateEntries = CustomMap.setTimeoutWrapper;\n    var createCircularNode = [];\n    CustomMap = function (key, value) {\n      if (key == null) {\n        return value;\n      } else {\n        return key;\n      }\n    };\n    if (iterateEntries) {\n      createCircularNode.push(new AdFrame([iterateEntries.url, iterateEntries.clear14591Flag ? 2 : 0], CustomMap(iterateEntries.depth, 1)));\n    }\n    if (findEntry && findEntry != iterateEntries) {\n      createCircularNode.push(new AdFrame([findEntry.url, 2], 0));\n    }\n    if (generatorWrapper.url && generatorWrapper != iterateEntries) {\n      createCircularNode.push(new AdFrame([generatorWrapper.url, 0], CustomMap(generatorWrapper.depth, value)));\n    }\n    var entryIdCounter = mapElements(createCircularNode, function (key, value) {\n      return createCircularNode.slice(0, createCircularNode.length - value);\n    });\n    if (!(!generatorWrapper.url || (iterateEntries || findEntry) && generatorWrapper != iterateEntries)) {\n      if (findEntry = extractHostname(generatorWrapper.url)) {\n        entryIdCounter.push([new AdFrame([findEntry, 1], CustomMap(generatorWrapper.depth, value))]);\n      }\n    }\n    entryIdCounter.push([]);\n    return mapElements(entryIdCounter, function (key) {\n      return createAdFrameHierarchy(value, key);\n    });\n  };\n  function createAdFrameHierarchy(generatorWrapper, value) {\n    var CustomMap = reduceElements(value, function (iterateEntries, createCircularNode) {\n      return Math.max(iterateEntries, createCircularNode.depth);\n    }, -1);\n    var findEntry = createEmptyStringsArray(CustomMap + 2);\n    findEntry[0] = generatorWrapper;\n    forEachElement(value, function (iterateEntries) {\n      return findEntry[iterateEntries.depth + 1] = iterateEntries.entryIdCounter;\n    });\n    return findEntry;\n  }\n  function serializeAdFrames() {\n    var generatorWrapper = undefined === generatorWrapper ? getAdFrames() : generatorWrapper;\n    return generatorWrapper.map(function (value) {\n      return encodeParameterValue(value);\n    });\n  }\n  var AdUtility = function () {\n    this.tasks = new VisibilityTracker();\n    if (isPerformanceMonitoringAvailable()) {\n      this.entryIdCounter = new AdvancedPerformanceMonitor();\n    } else {\n      this.entryIdCounter = new BasicPerformanceMonitor();\n    }\n  };\n  var isAdUtilityAvailable = function () {\n    GetEnvironment();\n    var generatorWrapper = window.document;\n    return !!(generatorWrapper && generatorWrapper.body && generatorWrapper.body.getBoundingClientRect && typeof window.setInterval === \"function\" && typeof window.clearInterval === \"function\" && typeof window.setTimeout === \"function\" && typeof window.clearTimeout === \"function\");\n  };\n  AdUtility.prototype.setTimeout = function (generatorWrapper, value) {\n    return window.setTimeout(generatorWrapper, value);\n  };\n  AdUtility.prototype.clearTimeout = function (generatorWrapper) {\n    window.clearTimeout(generatorWrapper);\n  };\n  var getSerializedAdFrames = function () {\n    GetEnvironment();\n    return serializeAdFrames();\n  };\n  var noopFunction = function () {};\n  var GetEnvironment = function () {\n    var generatorWrapper = getSingletonInstance(noopFunction);\n    if (!generatorWrapper.entryIdCounter) {\n      if (!window) {\n        throw Error(\"Context has not been set and window is undefined.\");\n      }\n      generatorWrapper.entryIdCounter = getSingletonInstance(AdUtility);\n    }\n    return generatorWrapper.entryIdCounter;\n  };\n  var AdConfig = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdConfig, AdElement);\n  AdConfig.prototype.entryIdCounter = serializeTransformations([0, float64Transformation, stringOrNumberTransformation2, -2, booleanTransformation2]);\n  var PerformanceMonitor = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = -1;\n    this.tasks = this.createDeferred = 0;\n  };\n  var MonitorFunction = function (generatorWrapper, value) {\n    return function () {\n      var CustomMap = sliceArguments.apply(0, arguments);\n      if (-1 < generatorWrapper.entryIdCounter) {\n        return value.apply(null, toArray(CustomMap));\n      }\n      try {\n        generatorWrapper.entryIdCounter = generatorWrapper.setTimeoutWrapper.entryIdCounter.now();\n        return value.apply(null, toArray(CustomMap));\n      } finally {\n        generatorWrapper.createDeferred += generatorWrapper.setTimeoutWrapper.entryIdCounter.now() - generatorWrapper.entryIdCounter;\n        generatorWrapper.entryIdCounter = -1;\n        generatorWrapper.tasks += 1;\n      }\n    };\n  };\n  var AdPerformanceMonitor = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = new PerformanceMonitor(generatorWrapper);\n  };\n  var FlagsContainer = function () {\n    this.entryIdCounter = {};\n  };\n  var GetFlags = function () {\n    var generatorWrapper = getAdEnvironment().flags;\n    var value = FeatureToggle;\n    generatorWrapper = generatorWrapper.entryIdCounter[value.key];\n    if (value.valueType === \"proto\") {\n      try {\n        var CustomMap = JSON.parse(generatorWrapper);\n        if (Array.isArray(CustomMap)) {\n          return CustomMap;\n        }\n      } catch (findEntry) {}\n      return value.defaultValue;\n    }\n    if (typeof generatorWrapper === typeof value.defaultValue) {\n      return generatorWrapper;\n    } else {\n      return value.defaultValue;\n    }\n  };\n  var FlagEnums = {\n    parseQueryString: 1,\n    AdUrlComponent: 2,\n    findParentElement: 3\n  };\n  var AdManager = function () {\n    this.setTimeoutWrapper = undefined;\n    this.tasks = this.isDone = 0;\n    this.handleAsync = -1;\n    this.AdEnvironmentConfig = new AdStateController();\n    if (undefined === AdResolutionState) {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mv\", AdErrorState)).setTimeoutWrapper = null;\n    } else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mv\", AdErrorState)).setTimeoutWrapper = AdResolutionState;\n    }\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"omid\", AdOpacityState);\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"epoh\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"epph\", AdOpacityState));\n    if (undefined === AdEngagementState) {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"umt\", AdOpacityState)).setTimeoutWrapper = null;\n    } else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"umt\", AdOpacityState)).setTimeoutWrapper = AdEngagementState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phel\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phell\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"oseid\", FlagEnums));\n    var generatorWrapper = this.AdEnvironmentConfig;\n    if (!generatorWrapper.entryIdCounter.sloi) {\n      generatorWrapper.entryIdCounter.sloi = new StringAdStateTracker();\n    }\n    activateAdState(generatorWrapper.entryIdCounter.sloi);\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mm\", AdMediaTypes);\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ovms\", adWarningCodes));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"xdi\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"amp\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"prf\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gtx\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mvp_lv\", AdOpacityState));\n    if (undefined === AdInteractionState) {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = null;\n    } else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = AdInteractionState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"fmd\", AdOpacityState));\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gen204simple\", AdOpacityState);\n    this.entryIdCounter = new AdPerformanceMonitor(GetEnvironment(), this.AdEnvironmentConfig);\n    this.createDeferred = false;\n    this.flags = new FlagsContainer();\n  };\n  AdManager.prototype.throwIfFlag2 = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"string\" && generatorWrapper.length != 0) {\n      var value = this.AdEnvironmentConfig;\n      if (value.setTimeoutWrapper) {\n        generatorWrapper = generatorWrapper.split(\"&\");\n        for (var CustomMap = generatorWrapper.length - 1; CustomMap >= 0; CustomMap--) {\n          var findEntry = generatorWrapper[CustomMap].split(\"=\");\n          var iterateEntries = decodeURIComponent(findEntry[0]);\n          if (findEntry.length > 1) {\n            findEntry = decodeURIComponent(findEntry[1]);\n            if (/^[0-9]+$/g.exec(findEntry)) {\n              findEntry = parseInt(findEntry, 10);\n            } else {\n              findEntry = findEntry;\n            }\n          } else {\n            findEntry = 1;\n          }\n          if (iterateEntries = value.entryIdCounter[iterateEntries]) {\n            iterateEntries.tasks(findEntry);\n          }\n        }\n      }\n    }\n  };\n  var getAdEnvironment = function () {\n    return getSingletonInstance(AdManager);\n  };\n  var SendAdErrorReport = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if ((findEntry ? generatorWrapper.setTimeoutWrapper : Math.random()) < (iterateEntries || generatorWrapper.entryIdCounter)) {\n      try {\n        if (CustomMap instanceof UrlQueryBuilder) {\n          var createCircularNode = CustomMap;\n        } else {\n          createCircularNode = new UrlQueryBuilder();\n          forEachInObject(CustomMap, function (key, value) {\n            var entry = createCircularNode;\n            var currentEntry = entry.createDeferred++;\n            addParameter(entry, currentEntry, createKeyValuePair(value, key));\n          });\n        }\n        var entryIdCounter = buildAdUrl(createCircularNode, generatorWrapper.tasks, \"/pagead/gen_204?id=\" + value + \"&\");\n        if (entryIdCounter) {\n          GetEnvironment();\n          sendImageRequestWithRetry(window, entryIdCounter);\n        }\n      } catch (key) {}\n    }\n  };\n  var ErrorReporter = function () {\n    var generatorWrapper = Ko;\n    this.isDone = Lo;\n    this.handleAsync = \"jserror\";\n    this.setTimeoutWrapper = true;\n    this.tasks = null;\n    this.onFulfilled = this.boundFunctionCall;\n    if (undefined === generatorWrapper) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.createDeferred = false;\n  };\n  setTimeoutWrapper = ErrorReporter.prototype;\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.handleAsync = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    var findEntry = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      try {\n        if (findEntry.entryIdCounter && findEntry.entryIdCounter.setTimeoutWrapper) {\n          var iterateEntries = findEntry.entryIdCounter.startTimer(generatorWrapper.toString(), 3);\n          var createCircularNode = value();\n          findEntry.entryIdCounter.end(iterateEntries);\n        } else {\n          createCircularNode = value();\n        }\n      } catch (key) {\n        var entryIdCounter = findEntry.setTimeoutWrapper;\n        try {\n          clearPerformanceMarks(iterateEntries);\n          entryIdCounter = findEntry.onFulfilled(generatorWrapper, new CustomError(FormatErrorMessage(key)), undefined, CustomMap);\n        } catch (value) {\n          findEntry.boundFunctionCall(217, value);\n        }\n        if (!entryIdCounter) {\n          throw key;\n        }\n      }\n      return createCircularNode;\n    })();\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    });\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    iterateEntries = iterateEntries || this.handleAsync;\n    try {\n      var createCircularNode = new UrlQueryBuilder();\n      addKeyValuePair(createCircularNode, 1, \"context\", generatorWrapper);\n      if (!isValidError(value)) {\n        value = new CustomError(FormatErrorMessage(value));\n      }\n      if (value.msg) {\n        addKeyValuePair(createCircularNode, 2, \"msg\", value.msg.substring(0, 512));\n      }\n      var entryIdCounter = value.meta || {};\n      if (this.tasks) {\n        try {\n          this.tasks(entryIdCounter);\n        } catch (value) {}\n      }\n      if (findEntry) {\n        try {\n          findEntry(entryIdCounter);\n        } catch (value) {}\n      }\n      addParameter(createCircularNode, 3, [entryIdCounter]);\n      var key = computeReferrerUrl();\n      if (key.tasks) {\n        addKeyValuePair(createCircularNode, 4, \"top\", key.tasks.url || \"\");\n      }\n      addParameter(createCircularNode, 5, [{\n        url: key.entryIdCounter.url || \"\"\n      }, {\n        url: key.entryIdCounter.url ? extractBaseUrl(key.entryIdCounter.url) : \"\"\n      }]);\n      SendAdErrorReport(this.isDone, iterateEntries, createCircularNode, this.createDeferred, CustomMap);\n    } catch (value) {\n      try {\n        SendAdErrorReport(this.isDone, iterateEntries, {\n          context: \"ecmserr\",\n          rctx: generatorWrapper,\n          msg: FormatErrorMessage(value),\n          url: key && key.entryIdCounter.url\n        }, this.createDeferred, CustomMap);\n      } catch (entry) {}\n    }\n    return this.setTimeoutWrapper;\n  };\n  var FormatErrorMessage = function (generatorWrapper) {\n    var value = generatorWrapper.toString();\n    if (generatorWrapper.name && -1 == value.indexOf(generatorWrapper.name)) {\n      value += \": \" + generatorWrapper.name;\n    }\n    if (generatorWrapper.message && -1 == value.indexOf(generatorWrapper.message)) {\n      value += \": \" + generatorWrapper.message;\n    }\n    if (generatorWrapper.stack) {\n      generatorWrapper = generat",
  "} else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"umt\", AdOpacityState)).setTimeoutWrapper = AdEngagementState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phel\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"phell\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"oseid\", FlagEnums));\n    var generatorWrapper = this.AdEnvironmentConfig;\n    if (!generatorWrapper.entryIdCounter.sloi) {\n      generatorWrapper.entryIdCounter.sloi = new StringAdStateTracker();\n    }\n    activateAdState(generatorWrapper.entryIdCounter.sloi);\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mm\", AdMediaTypes);\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ovms\", adWarningCodes));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"xdi\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"amp\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"prf\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gtx\", AdOpacityState));\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"mvp_lv\", AdOpacityState));\n    if (undefined === AdInteractionState) {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = null;\n    } else {\n      activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"ssmol\", AdOpacityState)).setTimeoutWrapper = AdInteractionState;\n    }\n    activateAdState(getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"fmd\", AdOpacityState));\n    getOrCreateAdStateTracker(this.AdEnvironmentConfig, \"gen204simple\", AdOpacityState);\n    this.entryIdCounter = new AdPerformanceMonitor(GetEnvironment(), this.AdEnvironmentConfig);\n    this.createDeferred = false;\n    this.flags = new FlagsContainer();\n  };\n  AdManager.prototype.throwIfFlag2 = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"string\" && generatorWrapper.length != 0) {\n      var value = this.AdEnvironmentConfig;\n      if (value.setTimeoutWrapper) {\n        generatorWrapper = generatorWrapper.split(\"&\");\n        for (var CustomMap = generatorWrapper.length - 1; CustomMap >= 0; CustomMap--) {\n          var findEntry = generatorWrapper[CustomMap].split(\"=\");\n          var iterateEntries = decodeURIComponent(findEntry[0]);\n          if (findEntry.length > 1) {\n            findEntry = decodeURIComponent(findEntry[1]);\n            if (/^[0-9]+$/g.exec(findEntry)) {\n              findEntry = parseInt(findEntry, 10);\n            } else {\n              findEntry = findEntry;\n            }\n          } else {\n            findEntry = 1;\n          }\n          if (iterateEntries = value.entryIdCounter[iterateEntries]) {\n            iterateEntries.tasks(findEntry);\n          }\n        }\n      }\n    }\n  };\n  var getAdEnvironment = function () {\n    return getSingletonInstance(AdManager);\n  };\n  var SendAdErrorReport = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if ((findEntry ? generatorWrapper.setTimeoutWrapper : Math.random()) < (iterateEntries || generatorWrapper.entryIdCounter)) {\n      try {\n        if (CustomMap instanceof UrlQueryBuilder) {\n          var createCircularNode = CustomMap;\n        } else {\n          createCircularNode = new UrlQueryBuilder();\n          forEachInObject(CustomMap, function (key, value) {\n            var entry = createCircularNode;\n            var currentEntry = entry.createDeferred++;\n            addParameter(entry, currentEntry, createKeyValuePair(value, key));\n          });\n        }\n        var entryIdCounter = buildAdUrl(createCircularNode, generatorWrapper.tasks, \"/pagead/gen_204?id=\" + value + \"&\");\n        if (entryIdCounter) {\n          GetEnvironment();\n          sendImageRequestWithRetry(window, entryIdCounter);\n        }\n      } catch (key) {}\n    }\n  };\n  var ErrorReporter = function () {\n    var generatorWrapper = Ko;\n    this.isDone = Lo;\n    this.handleAsync = \"jserror\";\n    this.setTimeoutWrapper = true;\n    this.tasks = null;\n    this.onFulfilled = this.boundFunctionCall;\n    if (undefined === generatorWrapper) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.createDeferred = false;\n  };\n  setTimeoutWrapper = ErrorReporter.prototype;\n  setTimeoutWrapper.createSigned64 = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.parseBooleanOrNumber = function (generatorWrapper) {\n    this.handleAsync = generatorWrapper;\n  };\n  setTimeoutWrapper.numericStringRegex = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  setTimeoutWrapper.parseIntEnum = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.hasBrands = function (generatorWrapper, value, CustomMap) {\n    var findEntry = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      try {\n        if (findEntry.entryIdCounter && findEntry.entryIdCounter.setTimeoutWrapper) {\n          var iterateEntries = findEntry.entryIdCounter.startTimer(generatorWrapper.toString(), 3);\n          var createCircularNode = value();\n          findEntry.entryIdCounter.end(iterateEntries);\n        } else {\n          createCircularNode = value();\n        }\n      } catch (key) {\n        var entryIdCounter = findEntry.setTimeoutWrapper;\n        try {\n          clearPerformanceMarks(iterateEntries);\n          entryIdCounter = findEntry.onFulfilled(generatorWrapper, new CustomError(FormatErrorMessage(key)), undefined, CustomMap);\n        } catch (value) {\n          findEntry.boundFunctionCall(217, value);\n        }\n        if (!entryIdCounter) {\n          throw key;\n        }\n      }\n      return createCircularNode;\n    })();\n  };\n  setTimeoutWrapper.IteratorWithTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    return MonitorFunction(getAdEnvironment().entryIdCounter.entryIdCounter, function () {\n      var createCircularNode = sliceArguments.apply(0, arguments);\n      return iterateEntries.hasBrands(generatorWrapper, function () {\n        return value.apply(CustomMap, createCircularNode);\n      }, findEntry);\n    });\n  };\n  setTimeoutWrapper.boundFunctionCall = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    iterateEntries = iterateEntries || this.handleAsync;\n    try {\n      var createCircularNode = new UrlQueryBuilder();\n      addKeyValuePair(createCircularNode, 1, \"context\", generatorWrapper);\n      if (!isValidError(value)) {\n        value = new CustomError(FormatErrorMessage(value));\n      }\n      if (value.msg) {\n        addKeyValuePair(createCircularNode, 2, \"msg\", value.msg.substring(0, 512));\n      }\n      var entryIdCounter = value.meta || {};\n      if (this.tasks) {\n        try {\n          this.tasks(entryIdCounter);\n        } catch (value) {}\n      }\n      if (findEntry) {\n        try {\n          findEntry(entryIdCounter);\n        } catch (value) {}\n      }\n      addParameter(createCircularNode, 3, [entryIdCounter]);\n      var key = computeReferrerUrl();\n      if (key.tasks) {\n        addKeyValuePair(createCircularNode, 4, \"top\", key.tasks.url || \"\");\n      }\n      addParameter(createCircularNode, 5, [{\n        url: key.entryIdCounter.url || \"\"\n      }, {\n        url: key.entryIdCounter.url ? extractBaseUrl(key.entryIdCounter.url) : \"\"\n      }]);\n      SendAdErrorReport(this.isDone, iterateEntries, createCircularNode, this.createDeferred, CustomMap);\n    } catch (value) {\n      try {\n        SendAdErrorReport(this.isDone, iterateEntries, {\n          context: \"ecmserr\",\n          rctx: generatorWrapper,\n          msg: FormatErrorMessage(value),\n          url: key && key.entryIdCounter.url\n        }, this.createDeferred, CustomMap);\n      } catch (entry) {}\n    }\n    return this.setTimeoutWrapper;\n  };\n  var FormatErrorMessage = function (generatorWrapper) {\n    var value = generatorWrapper.toString();\n    if (generatorWrapper.name && -1 == value.indexOf(generatorWrapper.name)) {\n      value += \": \" + generatorWrapper.name;\n    }\n    if (generatorWrapper.message && -1 == value.indexOf(generatorWrapper.message)) {\n      value += \": \" + generatorWrapper.message;\n    }\n    if (generatorWrapper.stack) {\n      generatorWrapper = generatorWrapper.stack;\n      var CustomMap = value;\n      try {\n        if (-1 == generatorWrapper.indexOf(CustomMap)) {\n          generatorWrapper = CustomMap + \"\\n\" + generatorWrapper;\n        }\n        for (var findEntry; generatorWrapper != findEntry;) {\n          findEntry = generatorWrapper;\n          generatorWrapper = generatorWrapper.replace(/((https?:\\/..*\\/)[^\\/:]*:\\d+(?:.|\\n)*)\\2/, \"$1\");\n        }\n        value = generatorWrapper.replace(/\\n */g, \"\\n\");\n      } catch (iterateEntries) {\n        value = CustomMap;\n      }\n    }\n    return value;\n  };\n  var CustomError = function (generatorWrapper) {\n    ErrorDetails.call(this, Error(generatorWrapper), {\n      message: generatorWrapper\n    });\n  };\n  inheritPrototype(CustomError, ErrorDetails);\n  var Lo, Po;\n  var Ko = new PerformanceMonitor(1, window);\n  var checkDocumentState = function () {\n    if (window && typeof window.google_measure_js_timing != \"undefined\") {\n      if (!window.google_measure_js_timing) {\n        Ko.isDone();\n      }\n    }\n  };\n  Lo = new function () {\n    var generatorWrapper = \"https:\";\n    if (window && window.location && window.location.protocol === \"http:\") {\n      generatorWrapper = \"http:\";\n    }\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = 0.01;\n    this.setTimeoutWrapper = Math.random();\n  }();\n  Po = new ErrorReporter();\n  if (window && window.document) {\n    if (window.document.readyState == \"complete\") {\n      checkDocumentState();\n    } else if (Ko.setTimeoutWrapper) {\n      addEventListenerWithNormalization(window, \"load\", function () {\n        checkDocumentState();\n      });\n    }\n  }\n  var Ro = function (generatorWrapper) {\n    Po.createSigned64(function (value) {\n      forEachElement(generatorWrapper, function (CustomMap) {\n        CustomMap(value);\n      });\n    });\n  };\n  var So = function (generatorWrapper, value) {\n    return Po.hasBrands(generatorWrapper, value);\n  };\n  var To = function (generatorWrapper, value, CustomMap, findEntry) {\n    return Po.IteratorWithTransform(generatorWrapper, value, CustomMap, findEntry);\n  };\n  var logError = function (generatorWrapper, value, CustomMap, findEntry) {\n    Po.boundFunctionCall(generatorWrapper, value, CustomMap, findEntry);\n  };\n  var yearOffset;\n  var Vo = Date.now();\n  var Wo = -1;\n  var Xo = -1;\n  var adEventTimestamp = -1;\n  var $o = false;\n  var accumulatePosition = function () {\n    return Date.now() - Vo;\n  };\n  var bp = function () {\n    var generatorWrapper = getAdEnvironment().setTimeoutWrapper;\n    var value = Xo >= 0 ? accumulatePosition() - Xo : -1;\n    var CustomMap = $o ? accumulatePosition() - Wo : -1;\n    var findEntry = adEventTimestamp >= 0 ? accumulatePosition() - adEventTimestamp : -1;\n    if (generatorWrapper == 947190542) {\n      return 100;\n    }\n    if (generatorWrapper == 79463069) {\n      return 200;\n    }\n    generatorWrapper = [2000, 4000];\n    var iterateEntries = [250, 500, 1000];\n    logError(637, Error(), 0.001);\n    var createCircularNode = value;\n    if (-1 != CustomMap && CustomMap < value) {\n      createCircularNode = CustomMap;\n    }\n    for (value = 0; value < generatorWrapper.length; ++value) {\n      if (createCircularNode < generatorWrapper[value]) {\n        var entryIdCounter = iterateEntries[value];\n        break;\n      }\n    }\n    if (undefined === entryIdCounter) {\n      entryIdCounter = iterateEntries[generatorWrapper.length];\n    }\n    if (-1 != findEntry && findEntry > 1500 && findEntry < 4000) {\n      return 500;\n    } else {\n      return entryIdCounter;\n    }\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    var findEntry = new handleThenable(0, 0, 0, 0);\n    this.time = generatorWrapper;\n    this.volume = null;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = findEntry;\n    this.tasks = CustomMap;\n  };\n  var AdTracker = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = value;\n    this.handleAsync = CustomMap;\n    this.entryIdCounter = findEntry;\n    this.createDeferred = iterateEntries;\n    this.onFulfilled = createCircularNode;\n    this.isDone = entryIdCounter;\n  };\n  AdTracker.prototype.getTimestamp = function () {\n    return this.onFulfilled;\n  };\n  var AdEventTypes = {\n    currentTime: 1,\n    duration: 2,\n    isVpaid: 4,\n    volume: 8,\n    isYouTube: 16,\n    isPlaying: 32\n  };\n  var AdEventNames = {\n    stringOrNull: \"start\",\n    FIRST_QUARTILE: \"firstquartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdquartile\",\n    COMPLETE: \"complete\",\n    ERROR: \"error\",\n    parseData: \"metric\",\n    PAUSE: \"pause\",\n    returnNonNull: \"resume\",\n    SKIPPED: \"skip\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    finalizeAdAttributes: \"mute\",\n    getAdPropertyFallbackNumeric: \"unmute\",\n    FULLSCREEN: \"fullscreen\",\n    vf: \"exitfullscreen\",\n    qf: \"bufferstart\",\n    replaceArrayIfNotArray: \"bufferfinish\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    optionalString: \"measurable_impression\",\n    finalizeFlagsUpdate: \"abandon\",\n    convertNumberToString: \"engagedview\",\n    IMPRESSION: \"impression\",\n    StorageField: \"creativeview\",\n    LOADED: \"loaded\",\n    PROGRESS: \"progress\",\n    createObjectURLWithValidation: \"close\",\n    safeURLPattern: \"collapse\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    tf: \"custom_metric_viewable\",\n    transformElementAtIndex: \"audio_audible\",\n    updateOrRemoveElement: \"audio_measurable\",\n    transformAndReplaceArray: \"audio_impression\"\n  };\n  var fp = \"start firstquartile midpoint thirdquartile resume loaded\".split(\" \");\n  var gp = [\"start\", \"firstquartile\", \"midpoint\", \"thirdquartile\"];\n  var httpProtocol = [\"abandon\"];\n  var ip = {\n    UNKNOWN: -1,\n    stringOrNull: 0,\n    FIRST_QUARTILE: 1,\n    MIDPOINT: 2,\n    THIRD_QUARTILE: 3,\n    COMPLETE: 4,\n    parseData: 5,\n    PAUSE: 6,\n    returnNonNull: 7,\n    SKIPPED: 8,\n    VIEWABLE_IMPRESSION: 9,\n    finalizeAdAttributes: 10,\n    getAdPropertyFallbackNumeric: 11,\n    FULLSCREEN: 12,\n    vf: 13,\n    convertSafeInteger: 14,\n    optionalString: 15,\n    finalizeFlagsUpdate: 16,\n    convertNumberToString: 17,\n    IMPRESSION: 18,\n    StorageField: 19,\n    LOADED: 20,\n    tf: 21,\n    qf: 22,\n    replaceArrayIfNotArray: 23,\n    transformAndReplaceArray: 27,\n    updateOrRemoveElement: 28,\n    transformElementAtIndex: 29\n  };\n  var MraidMethods = {\n    invalidClosureURL: \"addEventListener\",\n    truncateString: \"getMaxSize\",\n    repeatString: \"getScreenSize\",\n    stringifyNullable: \"getState\",\n    randomInt: \"getVersion\",\n    getParameterFromUrl: \"removeEventListener\",\n    removeElement: \"isViewable\"\n  };\n  var getMraidContext = function (generatorWrapper) {\n    var value = generatorWrapper !== generatorWrapper.top;\n    var CustomMap = generatorWrapper.top === getTopAccessibleContext(generatorWrapper);\n    var findEntry = -1;\n    var iterateEntries = 0;\n    if (value && CustomMap && generatorWrapper.top.mraid) {\n      findEntry = 3;\n      var createCircularNode = generatorWrapper.top.mraid;\n    } else if (createCircularNode = generatorWrapper.mraid) {\n      if (value) {\n        if (CustomMap) {\n          findEntry = 2;\n        } else {\n          findEntry = 1;\n        }\n      } else {\n        findEntry = 0;\n      }\n    } else {\n      findEntry = -1;\n    }\n    if (createCircularNode) {\n      if (!createCircularNode.IS_GMA_SDK) {\n        iterateEntries = 2;\n      }\n      if (!everyInObject(function (entryIdCounter) {\n        return typeof createCircularNode[entryIdCounter] === \"function\";\n      })) {\n        iterateEntries = 1;\n      }\n    }\n    return {\n      finalizeGenerator: createCircularNode,\n      finalBrowserVersion: iterateEntries,\n      everyInObject: findEntry\n    };\n  };\n  var isElementFromPointSupported = function () {\n    var generatorWrapper = window.document;\n    return generatorWrapper && typeof generatorWrapper.elementFromPoint === \"function\";\n  };\n  function calculateViewportSize(generatorWrapper, value, CustomMap) {\n    try {\n      if (generatorWrapper) {\n        value = value.top;\n      }\n      var findEntry = value;\n      if (generatorWrapper && findEntry !== null && findEntry != findEntry.top) {\n        findEntry = findEntry.top;\n      }\n      try {\n        var iterateEntries = (undefined === CustomMap ? 0 : CustomMap) ? new Size(findEntry.innerWidth, findEntry.innerHeight).roundRectangle() : getViewportSize(findEntry || window).roundRectangle();\n      } catch (currentEntry) {\n        iterateEntries = new Size(-12245933, -12245933);\n      }\n      generatorWrapper = iterateEntries;\n      var createCircularNode = generatorWrapper.height;\n      var entryIdCounter = generatorWrapper.width;\n      if (-12245933 === entryIdCounter) {\n        return new handleThenable(entryIdCounter, entryIdCounter, entryIdCounter, entryIdCounter);\n      }\n      var key = getDocumentScrollCoordinate(getDomHelper(value.document).entryIdCounter);\n      var value = key.inheritPrototype;\n      var entry = key.globalScope;\n      return new handleThenable(entry, value + entryIdCounter, entry + createCircularNode, value);\n    } catch (currentEntry) {\n      return new handleThenable(-12245933, -12245933, -12245933, -12245933);\n    }\n  }\n  var applyStyleOrRemove = function (generatorWrapper, value) {\n    if (typeof value === \"string\") {\n      if (value = getStyleProperty(generatorWrapper, value)) {\n        generatorWrapper.style[value] = undefined;\n      }\n    } else {\n      for (var CustomMap in value) {\n        var findEntry = generatorWrapper;\n        var iterateEntries = value[CustomMap];\n        var createCircularNode = getStyleProperty(findEntry, CustomMap);\n        if (createCircularNode) {\n          findEntry.style[createCircularNode] = iterateEntries;\n        }\n      }\n    }\n  };\n  var styleCache = {};\n  var getStyleProperty = function (generatorWrapper, value) {\n    var CustomMap = styleCache[value];\n    if (!CustomMap) {\n      var findEntry = camelCaseFromDash(value);\n      CustomMap = findEntry;\n      if (undefined === generatorWrapper.style[findEntry]) {\n        findEntry = (isWebKit ? \"Webkit\" : isGecko ? \"Moz\" : isIE ? \"ms\" : null) + capitalizeFirstLetter(findEntry);\n        if (undefined !== generatorWrapper.style[findEntry]) {\n          CustomMap = findEntry;\n        }\n      }\n      styleCache[value] = CustomMap;\n    }\n    return CustomMap;\n  };\n  var getStyleValue = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.style[camelCaseFromDash(value)];\n    if (typeof CustomMap !== \"undefined\") {\n      return CustomMap;\n    } else {\n      return generatorWrapper.style[getStyleProperty(generatorWrapper, value)] || \"\";\n    }\n  };\n  var getComputedStyleValue = function (generatorWrapper, value) {\n    var CustomMap = getDocument(generatorWrapper);\n    if (CustomMap.defaultView && CustomMap.defaultView.getComputedStyle && (generatorWrapper = CustomMap.defaultView.getComputedStyle(generatorWrapper, null))) {\n      return generatorWrapper[value] || generatorWrapper.getPropertyValue(value) || \"\";\n    } else {\n      return \"\";\n    }\n  };\n  var getElementRect = function (generatorWrapper) {\n    try {\n      return generatorWrapper.getBoundingClientRect();\n    } catch (value) {\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n  };\n  var getAbsolutePosition = function (generatorWrapper) {\n    var value = getDocument(generatorWrapper);\n    var CustomMap = new Coordinate(0, 0);\n    if (generatorWrapper == (value ? getDocument(value) : document).documentElement) {\n      return CustomMap;\n    }\n    generatorWrapper = getElementRect(generatorWrapper);\n    value = getDocumentScrollCoordinate(getDomHelper(value).entryIdCounter);\n    CustomMap.inheritPrototype = generatorWrapper.left + value.inheritPrototype;\n    CustomMap.globalScope = generatorWrapper.top + value.globalScope;\n    return CustomMap;\n  };\n  var calculateFrameOffset = function (generatorWrapper, value) {\n    var CustomMap = new Coordinate(0, 0);\n    var findEntry = getWindowForDocument(getDocument(generatorWrapper));\n    if (!tryNoopFunction(findEntry, \"parent\")) {\n      return CustomMap;\n    }\n    do {\n      if (findEntry == value) {\n        var iterateEntries = getAbsolutePosition(generatorWrapper);\n      } else {\n        iterateEntries = getElementRect(generatorWrapper);\n        iterateEntries = new Coordinate(iterateEntries.left, iterateEntries.top);\n      }\n      CustomMap.inheritPrototype += iterateEntries.inheritPrototype;\n      CustomMap.globalScope += iterateEntries.globalScope;\n    } while (findEntry && findEntry != value && findEntry != findEntry.parent && (generatorWrapper = findEntry.frameElement) && (findEntry = findEntry.parent));\n    return CustomMap;\n  };\n  var getFullSize = function () {\n    var generatorWrapper = \"100%\";\n    if (typeof generatorWrapper == \"number\") {\n      generatorWrapper = Math.roundRectangle(generatorWrapper) + \"px\";\n    }\n    return generatorWrapper;\n  };\n  var getElementSizeIfVisible = function (generatorWrapper) {\n    var value = calculateElementSize,\n      CustomMap;\n    if (!(CustomMap = getComputedStyleValue(generatorWrapper, \"display\"))) {\n      if (generatorWrapper.currentStyle) {\n        CustomMap = generatorWrapper.currentStyle.display;\n      } else {\n        CustomMap = null;\n      }\n    }\n    if ((CustomMap || generatorWrapper.style && generatorWrapper.style.display) != \"none\") {\n      return value(generatorWrapper);\n    }\n    CustomMap = generatorWrapper.style;\n    var findEntry = CustomMap.display;\n    var iterateEntries = CustomMap.visibility;\n    var createCircularNode = CustomMap.position;\n    CustomMap.visibility = \"hidden\";\n    CustomMap.position = \"absolute\";\n    CustomMap.display = \"inline\";\n    generatorWrapper = value(generatorWrapper);\n    CustomMap.display = findEntry;\n    CustomMap.position = createCircularNode;\n    CustomMap.visibility = iterateEntries;\n    return generatorWrapper;\n  };\n  var calculateElementSize = function (generatorWrapper) {\n    var value = generatorWrapper.offsetWidth;\n    var CustomMap = generatorWrapper.offsetHeight;\n    var findEntry = isWebKit && !value && !CustomMap;\n    if ((undefined === value || findEntry) && generatorWrapper.getBoundingClientRect) {\n      generatorWrapper = getElementRect(generatorWrapper);\n      return new Size(generatorWrapper.right - generatorWrapper.left, generatorWrapper.bottom - generatorWrapper.top);\n    } else {\n      return new Size(value, CustomMap);\n    }\n  };\n  var calculateInnerSize = function (generatorWrapper) {\n    var value = new Size(generatorWrapper.offsetWidth, generatorWrapper.offsetHeight);\n    var CustomMap = getComputedStyleValue(generatorWrapper, \"paddingLeft\");\n    var findEntry = getComputedStyleValue(generatorWrapper, \"paddingRight\");\n    var iterateEntries = getComputedStyleValue(generatorWrapper, \"paddingTop\");\n    var createCircularNode = getComputedStyleValue(generatorWrapper, \"paddingBottom\");\n    CustomMap = new handleThenable(parseFloat(iterateEntries), parseFloat(findEntry), parseFloat(createCircularNode), parseFloat(CustomMap));\n    findEntry = getComputedStyleValue(generatorWrapper, \"borderLeftWidth\");\n    iterateEntries = getComputedStyleValue(generatorWrapper, \"borderRightWidth\");\n    createCircularNode = getComputedStyleValue(generatorWrapper, \"borderTopWidth\");\n    generatorWrapper = getComputedStyleValue(generatorWrapper, \"borderBottomWidth\");\n    generatorWrapper = new handleThenable(parseFloat(createCircularNode), parseFloat(iterateEntries), parseFloat(generatorWrapper), parseFloat(findEntry));\n    return new Size(value.width - generatorWrapper.left - CustomMap.left - CustomMap.right - generatorWrapper.right, value.height - generatorWrapper.top - CustomMap.top - CustomMap.bottom - generatorWrapper.bottom);\n  };\n  var roundToPrecision = function (generatorWrapper, value) {\n    value = Math.pow(10, value);\n    return Math.floorRectangle(generatorWrapper * value) / value;\n  };\n  function traverseDomAndApply(generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper) {\n      return {\n        value: findEntry,\n        done: false\n      };\n    }\n    findEntry = value(findEntry, generatorWrapper);\n    var iterateEntries = CustomMap(findEntry, generatorWrapper);\n    if (!iterateEntries && tryNoopFunction(generatorWrapper, \"parentElement\")) {\n      return traverseDomAndApply(getParentElement(generatorWrapper), value, CustomMap, findEntry);\n    } else {\n      return {\n        done: iterateEntries,\n        value: findEntry\n      };\n    }\n  }\n  var traverseFramesAndApply = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper) {\n      return findEntry;\n    }\n    findEntry = traverseDomAndApply(generatorWrapper, value, CustomMap, findEntry);\n    if (!findEntry.done) {\n      try {\n        var iterateEntries = getDocument(generatorWrapper);\n        var createCircularNode = iterateEntries && getWindowForDocument(iterateEntries);\n        return traverseFramesAndApply(createCircularNode && createCircularNode.frameElement, value, CustomMap, findEntry.value);\n      } catch (entryIdCounter) {}\n    }\n    return findEntry.value;\n  };\n  function isElementHidden(generatorWrapper) {\n    var value = !isIE || supportsHtml5();\n    return traverseFramesAndApply(generatorWrapper, function (CustomMap, findEntry) {\n      CustomMap = tryNoopFunction(findEntry, \"style\") && findEntry.style && getStyleValue(findEntry, \"visibility\");\n      return {\n        hidden: CustomMap === \"hidden\",\n        visible: value && CustomMap === \"visible\"\n      };\n    }, function (CustomMap) {\n      return CustomMap.hidden || CustomMap.visible;\n    }, {\n      hidden: false,\n      visible: false\n    }).hidden;\n  }\n  var isElementNotDisplayedOrHidden = function (generatorWrapper) {\n    if (traverseFramesAndApply(generatorWrapper, function (value, CustomMap) {\n      return !(!tryNoopFunction(CustomMap, \"style\") || !CustomMap.style || getStyleValue(CustomMap, \"display\") !== \"none\");\n    }, function (value) {\n      return value;\n    }, false)) {\n      return true;\n    } else {\n      return isElementHidden(generatorWrapper);\n    }\n  };\n  var convertRectToBox = function (generatorWrapper) {\n    return new handleThenable(generatorWrapper.top, generatorWrapper.right, generatorWrapper.bottom, generatorWrapper.left);\n  };\n  var convertDimensionsToBox = function (generatorWrapper) {\n    var value = generatorWrapper.top || 0;\n    var CustomMap = generatorWrapper.left || 0;\n    return new handleThenable(value, CustomMap + (generatorWrapper.width || 0), value + (generatorWrapper.height || 0), CustomMap);\n  };\n  var isValidOpacity = function (generatorWrapper) {\n    return generatorWrapper != null && generatorWrapper >= 0 && generatorWrapper <= 1;\n  };\n  function isSmartTV() {\n    var generatorWrapper = getUserAgent();\n    if (generatorWrapper) {\n      if (someElement(\"AmazonWebAppPlatform;Android TV;Apple TV;AppleTV;BRAVIA;BeyondTV;Freebox;GoogleTV;HbbTV;LongTV;MiBOX;MiTV;NetCast.TV;Netcast;Opera TV;PANASONIC;POV_TV;SMART-TV;SMART_TV;SWTV;Smart TV;SmartTV;TV Store;UnionTV;WebOS\".split(\";\"), function (value) {\n        return includesIgnoreCase(generatorWrapper, value);\n      }) || includesIgnoreCase(generatorWrapper, \"OMI/\") && !includesIgnoreCase(generatorWrapper, \"XiaoMi/\")) {\n        return true;\n      } else {\n        return includesIgnoreCase(generatorWrapper, \"Presto\") && includesIgnoreCase(generatorWrapper, \"Linux\") && !includesIgnoreCase(generatorWrapper, \"X11\") && !includesIgnoreCase(generatorWrapper, \"Android\") && !includesIgnoreCase(generatorWrapper, \"Mobi\");\n      }\n    } else {\n      return false;\n    }\n  }\n  function isAppleTV() {\n    var generatorWrapper = getUserAgent();\n    return includesIgnoreCase(generatorWrapper, \"AppleTV\") || includesIgnoreCase(generatorWrapper, \"Apple TV\") || includesIgnoreCase(generatorWrapper, \"CFNetwork\") || includesIgnoreCase(generatorWrapper, \"tvOS\");\n  }\n  function isTVDevice() {\n    var generatorWrapper;\n    if (!(generatorWrapper = includesIgnoreCase(getUserAgent(), \"CrKey\") && !(includesIgnoreCase(getUserAgent(), \"CrKey\") && includesIgnoreCase(getUserAgent(), \"SmartSpeaker\")) || includesIgnoreCase(getUserAgent(), \"PlayStation\") || includesIgnoreCase(getUserAgent(), \"Roku\") || isSmartTV() || includesIgnoreCase(getUserAgent(), \"Xbox\") || isAppleTV())) {\n      generatorWrapper = getUserAgent();\n      generatorWrapper = includesIgnoreCase(generatorWrapper, \"sdk_google_atv_x86\") || includesIgnoreCase(generatorWrapper, \"Android TV\");\n    }\n    return generatorWrapper;\n  }\n  var EnvironmentDetails = function () {\n    this.setTimeoutWrapper = !isAccessibleFrame(window.top);\n    this.onFulfilled = isTablet() || isMobile();\n    var generatorWrapper = collectAncestorOrigins();\n    if (generatorWrapper.length > 0 && generatorWrapper[generatorWrapper.length - 1] != null && generatorWrapper[generatorWrapper.length - 1].url != null) {\n      generatorWrapper = ((generatorWrapper = generatorWrapper[generatorWrapper.length - 1].url.match(urlRegex)[3] || null) ? decodeURI(generatorWrapper) : generatorWrapper) || \"\";\n    } else {\n      generatorWrapper = \"\";\n    }\n    this.domain = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new Size(0, 0);\n    this.createDeferred = new Size(0, 0);\n    this.settlePromise = new handleThenable(0, 0, 0, 0);\n    this.frameOffset = new Coordinate(0, 0);\n    this.isDone = 0;\n    this.executeCallbacks = false;\n    this.tasks = !(!window || !getMraidContext(window).finalizeGenerator);\n    initializeAdEnvironment(this);\n  };\n  var updateScreenSize = function (generatorWrapper, value) {\n    if (value && value.screen) {\n      generatorWrapper.handleAsync = new Size(value.screen.width, value.screen.height);\n    }\n  };\n  var updateViewportSize = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter ? new Size(generatorWrapper.entryIdCounter.getRectangleWidth(), generatorWrapper.entryIdCounter.getRectangleHeight()) : new Size(0, 0);\n    if (undefined === value) {\n      value = window;\n    } else {\n      value = value;\n    }\n    if (value !== null && value != value.top) {\n      value = value.top;\n    }\n    var findEntry = 0;\n    var iterateEntries = 0;\n    try {\n      var createCircularNode = value.document;\n      var entryIdCounter = createCircularNode.body;\n      var key = createCircularNode.documentElement;\n      if (createCircularNode.compatMode == \"CSS1Compat\" && key.scrollHeight) {\n        if (key.scrollHeight != CustomMap.height) {\n          findEntry = key.scrollHeight;\n        } else {\n          findEntry = key.offsetHeight;\n        }\n        if (key.scrollWidth != CustomMap.width) {\n          iterateEntries = key.scrollWidth;\n        } else {\n          iterateEntries = key.offsetWidth;\n        }\n      } else {\n        var value = key.scrollHeight;\n        var entry = key.scrollWidth;\n        var currentEntry = key.offsetHeight;\n        var foundEntry = key.offsetWidth;\n        if (key.clientHeight != currentEntry) {\n          value = entryIdCounter.scrollHeight;\n          entry = entryIdCounter.scrollWidth;\n          currentEntry = entryIdCounter.offsetHeight;\n          foundEntry = entryIdCounter.offsetWidth;\n        }\n        if (value > CustomMap.height) {\n          if (value > currentEntry) {\n            findEntry = value;\n            iterateEntries = entry;\n          } else {\n            findEntry = currentEntry;\n            iterateEntries = foundEntry;\n          }\n        } else if (value < currentEntry) {\n          findEntry = value;\n          iterateEntries = entry;\n        } else {\n          findEntry = currentEntry;\n          iterateEntries = foundEntry;\n        }\n      }\n      var resolveFunction = new Size(iterateEntries, findEntry);\n    } catch (rejectFunction) {\n      resolveFunction = new Size(-12245933, -12245933);\n    }\n    generatorWrapper.createDeferred = resolveFunction;\n  };\n  var initializeAdEnvironment = function (generatorWrapper) {\n    if (window && window.document) {\n      generatorWrapper.settlePromise = calculateViewportSize(false, window, generatorWrapper.onFulfilled);\n      generatorWrapper.entryIdCounter = calculateViewportSize(true, window, generatorWrapper.onFulfilled);\n      updateViewportSize(generatorWrapper, window);\n      updateScreenSize(generatorWrapper, window);\n    }\n  };\n  var isAdPlayingOrMuted = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    if (generatorWrapper.isDone > 0 || generatorWrapper.executeCallbacks) {\n      return true;\n    }\n    generatorWrapper = GetEnvironment().tasks.isAdVisible();\n    var value = getVisibilityStateCode(document) === 0;\n    return generatorWrapper || value;\n  };\n  var getAdEnvironmentInstance = function () {\n    return getSingletonInstance(EnvironmentDetails);\n  };\n  var AdSampling = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = 0;\n    this.entryIdCounter = null;\n  };\n  AdSampling.prototype.cancel = function () {\n    GetEnvironment().clearTimeout(this.entryIdCounter);\n    this.entryIdCounter = null;\n  };\n  var startAdSampling = function (generatorWrapper) {\n    var value = GetEnvironment();\n    var CustomMap = getAdEnvironment().entryIdCounter.entryIdCounter;\n    generatorWrapper.entryIdCounter = value.setTimeout(MonitorFunction(CustomMap, To(143, function () {\n      generatorWrapper.tasks++;\n      generatorWrapper.setTimeoutWrapper.performSample();\n    })), bp());\n  };\n  var AdController = function (generatorWrapper, value, CustomMap) {\n    this.setTimeoutWrapper = generatorWrapper;\n    if (undefined === CustomMap) {\n      this.assignPolyfill = \"na\";\n    } else {\n      this.assignPolyfill = CustomMap;\n    }\n    this.handleAsync = [];\n    this.Generator = false;\n    this.createDeferred = new AdEvent(-1, true, this);\n    this.entryIdCounter = this;\n    this.executeCallbacks = value;\n    this.resolvePromise = this.dispatchUnhandledRejection = false;\n    this.year = \"uk\";\n    this.tryCall = false;\n    this.onFulfilled = true;\n  };\n  AdController.prototype.handleThenable = function () {\n    return false;\n  };\n  AdController.prototype.initializeMraid = function () {\n    return this.Generator = true;\n  };\n  AdController.prototype.isChromiumBased = function () {\n    return this.entryIdCounter.year;\n  };\n  AdController.prototype.removeElement = function () {\n    return this.entryIdCounter.resolvePromise;\n  };\n  var activateAdController = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.resolvePromise || (undefined === CustomMap ? 0 : CustomMap)) {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.year = value;\n      generatorWrapper.executeCallbacks = 0;\n      if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n        updateAdComponents(generatorWrapper);\n      }\n    }\n  };\n  AdController.prototype.getAdName = function () {\n    return this.entryIdCounter.assignPolyfill;\n  };\n  AdController.prototype.encodeString = function () {\n    return this.entryIdCounter.createIterator();\n  };\n  AdController.prototype.createIterator = function () {\n    return {};\n  };\n  AdController.prototype.uniqueIdProperty = function () {\n    return this.entryIdCounter.executeCallbacks;\n  };\n  var registerAdComponent = function (generatorWrapper, value) {\n    if (!containsElement(generatorWrapper.handleAsync, value)) {\n      generatorWrapper.handleAsync.push(value);\n      value.isAndroid(generatorWrapper.entryIdCounter);\n      value.deferError(generatorWrapper.createDeferred);\n      if (value.getClosureFlagValue()) {\n        generatorWrapper.dispatchUnhandledRejection = true;\n      }\n    }\n  };\n  AdController.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    generatorWrapper.entryIdCounter = calculateViewportSize(true, this.setTimeoutWrapper, generatorWrapper.onFulfilled);\n  };\n  AdController.prototype.totalAdBufferingTime = function () {\n    updateScreenSize(getAdEnvironmentInstance(), this.setTimeoutWrapper);\n  };\n  AdController.prototype.definePropertyPolyfill = function () {\n    return this.createDeferred.entryIdCounter;\n  };\n  var refreshAdEnvironment = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    generatorWrapper.totalAdBufferingTime();\n    generatorWrapper.updateMaxSize();\n    var value = getAdEnvironmentInstance();\n    value.settlePromise = calculateViewportSize(false, generatorWrapper.setTimeoutWrapper, value.onFulfilled);\n    updateViewportSize(getAdEnvironmentInstance(), generatorWrapper.setTimeoutWrapper);\n    generatorWrapper.createDeferred.entryIdCounter = generatorWrapper.definePropertyPolyfill();\n  };\n  AdController.prototype.performSample = function () {};\n  AdController.prototype.isActive = function () {\n    return this.entryIdCounter.onFulfilled;\n  };\n  var checkAdComponentsActive = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync.length) {\n      generatorWrapper.dispatchUnhandledRejection = someElement(generatorWrapper.handleAsync, function (value) {\n        return value.getClosureFlagValue();\n      });\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = false;\n    }\n  };\n  var notifyAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.deferError(generatorWrapper.createDeferred);\n    });\n  };\n  var updateAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.isAndroid(generatorWrapper.entryIdCounter);\n    });\n    if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n      notifyAdComponents(generatorWrapper);\n    }\n  };\n  setTimeoutWrapper = AdController.prototype;\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper.uniqueIdProperty() >= this.executeCallbacks) {\n      this.entryIdCounter = generatorWrapper;\n    } else {\n      this.entryIdCounter = this;\n    }\n    if (value !== this.entryIdCounter) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    } else if (this.onFulfilled !== this.entryIdCounter.onFulfilled) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    }\n  };\n  setTimeoutWrapper.deferError = function (generatorWrapper) {\n    if (generatorWrapper.tasks === this.entryIdCounter) {\n      var value = this.createDeferred;\n      var CustomMap = this.dispatchUnhandledRejection;\n      if (CustomMap = generatorWrapper && (undefined === CustomMap || !CustomMap || value.volume == generatorWrapper.volume) && value.setTimeoutWrapper == generatorWrapper.setTimeoutWrapper) {\n        value = value.entryIdCounter;\n        CustomMap = generatorWrapper.entryIdCounter;\n        if (value == CustomMap) {\n          CustomMap = true;\n        } else if (value && CustomMap) {\n          CustomMap = value.top == CustomMap.top && value.right == CustomMap.right && value.bottom == CustomMap.bottom && value.left == CustomMap.left;\n        } else {\n          CustomMap = false;\n        }\n      }\n      this.createDeferred = generatorWrapper;\n      if (!CustomMap) {\n        notifyAdComponents(this);\n      }\n    }\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.tryCall = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.tryCall;\n  };\n  var AdComponent = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new handleThenable(0, 0, 0, 0);\n    this.tasks = value;\n    this.AdEnvironmentConfig = CustomMap;\n    this.resolvePromise = findEntry;\n    this.handleThenable = false;\n    this.timestamp = -1;\n    this.settlePromise = new AdTracker(value.createDeferred, this.entryIdCounter, new handleThenable(0, 0, 0, 0), 0, 0, accumulatePosition(), 0);\n  };\n  setTimeoutWrapper = AdComponent.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    return true;\n  };\n  setTimeoutWrapper.isOpera = function () {};\n  setTimeo",
  "r.onFulfilled);\n      generatorWrapper.entryIdCounter = calculateViewportSize(true, window, generatorWrapper.onFulfilled);\n      updateViewportSize(generatorWrapper, window);\n      updateScreenSize(generatorWrapper, window);\n    }\n  };\n  var isAdPlayingOrMuted = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    if (generatorWrapper.isDone > 0 || generatorWrapper.executeCallbacks) {\n      return true;\n    }\n    generatorWrapper = GetEnvironment().tasks.isAdVisible();\n    var value = getVisibilityStateCode(document) === 0;\n    return generatorWrapper || value;\n  };\n  var getAdEnvironmentInstance = function () {\n    return getSingletonInstance(EnvironmentDetails);\n  };\n  var AdSampling = function (generatorWrapper) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = 0;\n    this.entryIdCounter = null;\n  };\n  AdSampling.prototype.cancel = function () {\n    GetEnvironment().clearTimeout(this.entryIdCounter);\n    this.entryIdCounter = null;\n  };\n  var startAdSampling = function (generatorWrapper) {\n    var value = GetEnvironment();\n    var CustomMap = getAdEnvironment().entryIdCounter.entryIdCounter;\n    generatorWrapper.entryIdCounter = value.setTimeout(MonitorFunction(CustomMap, To(143, function () {\n      generatorWrapper.tasks++;\n      generatorWrapper.setTimeoutWrapper.performSample();\n    })), bp());\n  };\n  var AdController = function (generatorWrapper, value, CustomMap) {\n    this.setTimeoutWrapper = generatorWrapper;\n    if (undefined === CustomMap) {\n      this.assignPolyfill = \"na\";\n    } else {\n      this.assignPolyfill = CustomMap;\n    }\n    this.handleAsync = [];\n    this.Generator = false;\n    this.createDeferred = new AdEvent(-1, true, this);\n    this.entryIdCounter = this;\n    this.executeCallbacks = value;\n    this.resolvePromise = this.dispatchUnhandledRejection = false;\n    this.year = \"uk\";\n    this.tryCall = false;\n    this.onFulfilled = true;\n  };\n  AdController.prototype.handleThenable = function () {\n    return false;\n  };\n  AdController.prototype.initializeMraid = function () {\n    return this.Generator = true;\n  };\n  AdController.prototype.isChromiumBased = function () {\n    return this.entryIdCounter.year;\n  };\n  AdController.prototype.removeElement = function () {\n    return this.entryIdCounter.resolvePromise;\n  };\n  var activateAdController = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.resolvePromise || (undefined === CustomMap ? 0 : CustomMap)) {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.year = value;\n      generatorWrapper.executeCallbacks = 0;\n      if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n        updateAdComponents(generatorWrapper);\n      }\n    }\n  };\n  AdController.prototype.getAdName = function () {\n    return this.entryIdCounter.assignPolyfill;\n  };\n  AdController.prototype.encodeString = function () {\n    return this.entryIdCounter.createIterator();\n  };\n  AdController.prototype.createIterator = function () {\n    return {};\n  };\n  AdController.prototype.uniqueIdProperty = function () {\n    return this.entryIdCounter.executeCallbacks;\n  };\n  var registerAdComponent = function (generatorWrapper, value) {\n    if (!containsElement(generatorWrapper.handleAsync, value)) {\n      generatorWrapper.handleAsync.push(value);\n      value.isAndroid(generatorWrapper.entryIdCounter);\n      value.deferError(generatorWrapper.createDeferred);\n      if (value.getClosureFlagValue()) {\n        generatorWrapper.dispatchUnhandledRejection = true;\n      }\n    }\n  };\n  AdController.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    generatorWrapper.entryIdCounter = calculateViewportSize(true, this.setTimeoutWrapper, generatorWrapper.onFulfilled);\n  };\n  AdController.prototype.totalAdBufferingTime = function () {\n    updateScreenSize(getAdEnvironmentInstance(), this.setTimeoutWrapper);\n  };\n  AdController.prototype.definePropertyPolyfill = function () {\n    return this.createDeferred.entryIdCounter;\n  };\n  var refreshAdEnvironment = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    generatorWrapper.totalAdBufferingTime();\n    generatorWrapper.updateMaxSize();\n    var value = getAdEnvironmentInstance();\n    value.settlePromise = calculateViewportSize(false, generatorWrapper.setTimeoutWrapper, value.onFulfilled);\n    updateViewportSize(getAdEnvironmentInstance(), generatorWrapper.setTimeoutWrapper);\n    generatorWrapper.createDeferred.entryIdCounter = generatorWrapper.definePropertyPolyfill();\n  };\n  AdController.prototype.performSample = function () {};\n  AdController.prototype.isActive = function () {\n    return this.entryIdCounter.onFulfilled;\n  };\n  var checkAdComponentsActive = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync.length) {\n      generatorWrapper.dispatchUnhandledRejection = someElement(generatorWrapper.handleAsync, function (value) {\n        return value.getClosureFlagValue();\n      });\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = false;\n    }\n  };\n  var notifyAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.deferError(generatorWrapper.createDeferred);\n    });\n  };\n  var updateAdComponents = function (generatorWrapper) {\n    var value = copyArray(generatorWrapper.handleAsync);\n    forEachElement(value, function (CustomMap) {\n      CustomMap.isAndroid(generatorWrapper.entryIdCounter);\n    });\n    if (!(generatorWrapper.entryIdCounter != generatorWrapper)) {\n      notifyAdComponents(generatorWrapper);\n    }\n  };\n  setTimeoutWrapper = AdController.prototype;\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper.uniqueIdProperty() >= this.executeCallbacks) {\n      this.entryIdCounter = generatorWrapper;\n    } else {\n      this.entryIdCounter = this;\n    }\n    if (value !== this.entryIdCounter) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    } else if (this.onFulfilled !== this.entryIdCounter.onFulfilled) {\n      this.onFulfilled = this.entryIdCounter.onFulfilled;\n      updateAdComponents(this);\n    }\n  };\n  setTimeoutWrapper.deferError = function (generatorWrapper) {\n    if (generatorWrapper.tasks === this.entryIdCounter) {\n      var value = this.createDeferred;\n      var CustomMap = this.dispatchUnhandledRejection;\n      if (CustomMap = generatorWrapper && (undefined === CustomMap || !CustomMap || value.volume == generatorWrapper.volume) && value.setTimeoutWrapper == generatorWrapper.setTimeoutWrapper) {\n        value = value.entryIdCounter;\n        CustomMap = generatorWrapper.entryIdCounter;\n        if (value == CustomMap) {\n          CustomMap = true;\n        } else if (value && CustomMap) {\n          CustomMap = value.top == CustomMap.top && value.right == CustomMap.right && value.bottom == CustomMap.bottom && value.left == CustomMap.left;\n        } else {\n          CustomMap = false;\n        }\n      }\n      this.createDeferred = generatorWrapper;\n      if (!CustomMap) {\n        notifyAdComponents(this);\n      }\n    }\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.tryCall = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.tryCall;\n  };\n  var AdComponent = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.handleAsync = new handleThenable(0, 0, 0, 0);\n    this.tasks = value;\n    this.AdEnvironmentConfig = CustomMap;\n    this.resolvePromise = findEntry;\n    this.handleThenable = false;\n    this.timestamp = -1;\n    this.settlePromise = new AdTracker(value.createDeferred, this.entryIdCounter, new handleThenable(0, 0, 0, 0), 0, 0, accumulatePosition(), 0);\n  };\n  setTimeoutWrapper = AdComponent.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    return true;\n  };\n  setTimeoutWrapper.isOpera = function () {};\n  setTimeoutWrapper.markAsCompleted = function () {\n    if (!this.handleIteratorResult()) {\n      var generatorWrapper = this.tasks;\n      removeElement(generatorWrapper.handleAsync, this);\n      if (generatorWrapper.dispatchUnhandledRejection && this.getClosureFlagValue()) {\n        checkAdComponentsActive(generatorWrapper);\n      }\n      this.isOpera();\n      this.handleThenable = true;\n    }\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.encodeString = function () {\n    return this.tasks.encodeString();\n  };\n  setTimeoutWrapper.uniqueIdProperty = function () {\n    return this.tasks.uniqueIdProperty();\n  };\n  setTimeoutWrapper.isChromiumBased = function () {\n    return this.tasks.isChromiumBased();\n  };\n  setTimeoutWrapper.removeElement = function () {\n    return this.tasks.removeElement();\n  };\n  setTimeoutWrapper.isAndroid = function () {};\n  setTimeoutWrapper.deferError = function () {\n    this.CustomError();\n  };\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return this.resolvePromise;\n  };\n  var AdCreator = function (generatorWrapper) {\n    this.handleAsync = false;\n    this.entryIdCounter = generatorWrapper;\n    this.createDeferred = function () {};\n  };\n  setTimeoutWrapper = AdCreator.prototype;\n  setTimeoutWrapper.uniqueIdProperty = function () {\n    return this.entryIdCounter.uniqueIdProperty();\n  };\n  setTimeoutWrapper.isChromiumBased = function () {\n    return this.entryIdCounter.isChromiumBased();\n  };\n  setTimeoutWrapper.removeElement = function () {\n    return this.entryIdCounter.removeElement();\n  };\n  setTimeoutWrapper.create = function (generatorWrapper, value, CustomMap) {\n    var findEntry = null;\n    if (this.entryIdCounter) {\n      findEntry = this.isIE(generatorWrapper, value, CustomMap);\n      registerAdComponent(this.entryIdCounter, findEntry);\n    }\n    return findEntry;\n  };\n  setTimeoutWrapper.isPositiveInt64 = function () {\n    return this.checkIntersectionObserverSupport();\n  };\n  setTimeoutWrapper.checkIntersectionObserverSupport = function () {\n    return false;\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper) {\n    if (this.entryIdCounter.initializeMraid()) {\n      registerAdComponent(this.entryIdCounter, this);\n      this.createDeferred = generatorWrapper;\n      return true;\n    } else {\n      return false;\n    }\n  };\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    if (generatorWrapper.uniqueIdProperty() == 0) {\n      this.createDeferred(generatorWrapper.isChromiumBased(), this);\n    }\n  };\n  setTimeoutWrapper.deferError = function () {};\n  setTimeoutWrapper.getClosureFlagValue = function () {\n    return false;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    this.handleAsync = true;\n  };\n  setTimeoutWrapper.handleIteratorResult = function () {\n    return this.handleAsync;\n  };\n  setTimeoutWrapper.encodeString = function () {\n    return {};\n  };\n  var AdParameters = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      this.setTimeoutWrapper = 0;\n    } else {\n      this.setTimeoutWrapper = CustomMap;\n    }\n    this.tasks = generatorWrapper;\n    if (value == null) {\n      this.entryIdCounter = \"\";\n    } else {\n      this.entryIdCounter = value;\n    }\n  };\n  var normalizePriority = function (generatorWrapper) {\n    switch (Math.trunc(generatorWrapper.setTimeoutWrapper)) {\n      case -16:\n        return -16;\n      case -8:\n        return -8;\n      case 0:\n        return 0;\n      case 8:\n        return 8;\n      case 16:\n        return 16;\n      default:\n        return 16;\n    }\n  };\n  var isPriorityLower = function (generatorWrapper, value) {\n    if (generatorWrapper.setTimeoutWrapper < value.setTimeoutWrapper) {\n      return true;\n    } else {\n      if (generatorWrapper.setTimeoutWrapper > value.setTimeoutWrapper) {\n        return false;\n      } else {\n        if (generatorWrapper.tasks < value.tasks) {\n          return true;\n        } else {\n          if (generatorWrapper.tasks > value.tasks) {\n            return false;\n          } else {\n            if (typeof generatorWrapper.entryIdCounter < typeof value.entryIdCounter) {\n              return true;\n            } else {\n              if (typeof generatorWrapper.entryIdCounter > typeof value.entryIdCounter) {\n                return false;\n              } else {\n                return generatorWrapper.entryIdCounter < value.entryIdCounter;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  var QueryStringBuilder = function () {\n    this.setTimeoutWrapper = 0;\n    this.entryIdCounter = [];\n    this.tasks = false;\n  };\n  QueryStringBuilder.prototype.addParameter = function (generatorWrapper, value, CustomMap) {\n    ++this.setTimeoutWrapper;\n    generatorWrapper = new AdParameters(generatorWrapper, value, CustomMap);\n    this.entryIdCounter.push(new AdParameters(generatorWrapper.tasks, generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper + this.setTimeoutWrapper / 4096));\n    this.tasks = true;\n    return this;\n  };\n  var mergeParameters = function (generatorWrapper, value) {\n    forEachElement(value.entryIdCounter, function (CustomMap) {\n      generatorWrapper.addParameter(CustomMap.tasks, CustomMap.entryIdCounter, normalizePriority(CustomMap));\n    });\n  };\n  var addParametersFromObject = function (generatorWrapper, value) {\n    var CustomMap = undefined === CustomMap ? 0 : CustomMap;\n    var findEntry = undefined === findEntry ? true : findEntry;\n    forEachInObject(value, function (iterateEntries, createCircularNode) {\n      if (!(findEntry && undefined === iterateEntries)) {\n        generatorWrapper.addParameter(createCircularNode, iterateEntries, CustomMap);\n      }\n    });\n    return generatorWrapper;\n  };\n  var buildQueryString = function (generatorWrapper) {\n    var value = parameterToString;\n    if (generatorWrapper.tasks) {\n      sortArray(generatorWrapper.entryIdCounter, function (CustomMap, findEntry) {\n        if (isPriorityLower(findEntry, CustomMap)) {\n          return 1;\n        } else {\n          if (isPriorityLower(CustomMap, findEntry)) {\n            return -1;\n          } else {\n            return 0;\n          }\n        }\n      });\n      generatorWrapper.tasks = false;\n    }\n    return reduceElements(generatorWrapper.entryIdCounter, function (CustomMap, findEntry) {\n      findEntry = value(findEntry);\n      return \"\" + CustomMap + (CustomMap != \"\" && findEntry != \"\" ? \"&\" : \"\") + findEntry;\n    }, \"\");\n  };\n  var parameterToString = function (generatorWrapper) {\n    var value = generatorWrapper.tasks;\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    if (generatorWrapper === \"\") {\n      return value;\n    } else {\n      if (typeof generatorWrapper === \"boolean\") {\n        if (generatorWrapper) {\n          return value;\n        } else {\n          return \"\";\n        }\n      } else {\n        if (Array.isArray(generatorWrapper)) {\n          if (generatorWrapper.length === 0) {\n            return value;\n          } else {\n            return value + \"=\" + generatorWrapper.join();\n          }\n        } else {\n          return value + \"=\" + (containsElement([\"mtos\", \"tos\", \"p\"], value) ? generatorWrapper : encodeURIComponent(generatorWrapper));\n        }\n      }\n    }\n  };\n  var UrlBuilder = function (generatorWrapper) {\n    var value = undefined === value ? true : value;\n    this.entryIdCounter = new QueryStringBuilder();\n    if (undefined !== generatorWrapper) {\n      mergeParameters(this.entryIdCounter, generatorWrapper);\n    }\n    if (value) {\n      this.entryIdCounter.addParameter(\"v\", \"unreleased\", -16);\n    }\n  };\n  UrlBuilder.prototype.toString = function () {\n    var generatorWrapper = \"//pagead2.googlesyndication.com//pagead/gen_204\";\n    var value = buildQueryString(this.entryIdCounter);\n    if (value.length > 0) {\n      generatorWrapper += \"?\" + value;\n    }\n    return generatorWrapper;\n  };\n  var buildAdRequestParams = function (generatorWrapper) {\n    var value = [];\n    var CustomMap = [];\n    forEachInObject(generatorWrapper, function (findEntry, iterateEntries) {\n      if (!(iterateEntries in Object.prototype) && typeof findEntry != \"undefined\") {\n        if (Array.isArray(findEntry)) {\n          findEntry = findEntry.join(\",\");\n        }\n        findEntry = [iterateEntries, \"=\", findEntry].join(\"\");\n        switch (iterateEntries) {\n          case \"adk\":\n          case \"r\":\n          case \"tt\":\n          case \"error\":\n          case \"mtos\":\n          case \"tos\":\n          case \"p\":\n          case \"bs\":\n            value.unshift(findEntry);\n            break;\n          case \"req\":\n          case \"url\":\n          case \"referrer\":\n          case \"iframe_loc\":\n            CustomMap.push(findEntry);\n            break;\n          default:\n            value.push(findEntry);\n        }\n      }\n    });\n    return value.concat(CustomMap);\n  };\n  var sendAdRequest = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.toString();\n    GetEnvironment();\n    sendImageRequestWithRetry(window, generatorWrapper);\n  };\n  var AdRequestCounter = function () {\n    this.entryIdCounter = 0;\n  };\n  function markAsCompletedWrapper(generatorWrapper) {\n    if (generatorWrapper && typeof generatorWrapper.markAsCompleted == \"function\") {\n      generatorWrapper.markAsCompleted();\n    }\n  }\n  var tryCall = function () {\n    this.executeCallbacks = this.executeCallbacks;\n    this.settlePromise = this.settlePromise;\n  };\n  tryCall.prototype.executeCallbacks = false;\n  tryCall.prototype.handleIteratorResult = function () {\n    return this.executeCallbacks;\n  };\n  tryCall.prototype.markAsCompleted = function () {\n    if (!this.executeCallbacks) {\n      this.executeCallbacks = true;\n      this.getAdEnvironment();\n    }\n  };\n  var registerDisposable = function (generatorWrapper, value) {\n    executeOrDelayUntilDisposed(generatorWrapper, createFunctionWithArguments(markAsCompletedWrapper, value));\n  };\n  var executeOrDelayUntilDisposed = function (generatorWrapper, value) {\n    if (generatorWrapper.executeCallbacks) {\n      value();\n    } else {\n      if (!generatorWrapper.settlePromise) {\n        generatorWrapper.settlePromise = [];\n      }\n      generatorWrapper.settlePromise.push(value);\n    }\n  };\n  tryCall.prototype.getAdEnvironment = function () {\n    if (this.settlePromise) {\n      for (; this.settlePromise.length;) {\n        this.settlePromise.shift()();\n      }\n    }\n  };\n  var processVerificationRequests = function (generatorWrapper, value, CustomMap) {\n    forEachElement(generatorWrapper.setTimeoutWrapper, function (findEntry) {\n      var iterateEntries = generatorWrapper.entryIdCounter;\n      if (!findEntry.entryIdCounter && (findEntry.setTimeoutWrapper(value, CustomMap), findEntry.createDeferred())) {\n        findEntry.entryIdCounter = true;\n        var createCircularNode = findEntry.tasks();\n        var entryIdCounter = new QueryStringBuilder();\n        entryIdCounter.addParameter(\"id\", \"av-js\");\n        entryIdCounter.addParameter(\"type\", \"verif\");\n        entryIdCounter.addParameter(\"vtype\", findEntry.handleAsync);\n        findEntry = getSingletonInstance(AdRequestCounter);\n        entryIdCounter.addParameter(\"i\", findEntry.entryIdCounter++);\n        entryIdCounter.addParameter(\"adk\", iterateEntries);\n        addParametersFromObject(entryIdCounter, createCircularNode);\n        iterateEntries = new UrlBuilder(entryIdCounter);\n        sendAdRequest(iterateEntries);\n      }\n    });\n  };\n  var MetricsTracker = function () {\n    this.tasks = this.setTimeoutWrapper = this.createDeferred = this.entryIdCounter = 0;\n  };\n  var updateMetrics = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (value) {\n      generatorWrapper.entryIdCounter += CustomMap;\n      generatorWrapper.tasks += CustomMap;\n      generatorWrapper.createDeferred += CustomMap;\n      generatorWrapper.setTimeoutWrapper = Math.max(generatorWrapper.setTimeoutWrapper, generatorWrapper.createDeferred);\n    }\n    if (undefined === findEntry ? !value : findEntry) {\n      generatorWrapper.createDeferred = 0;\n    }\n  };\n  var visibilityThresholds = [1, 0.75, 0.5, 0.3, 0];\n  var VisibilityMetricsCalculator = function (generatorWrapper) {\n    this.tasks = generatorWrapper = undefined === generatorWrapper ? visibilityThresholds : generatorWrapper;\n    this.entryIdCounter = mapElements(this.tasks, function () {\n      return new MetricsTracker();\n    });\n  };\n  var calculateTotalVisibility = function (generatorWrapper, value) {\n    return aggregateMetrics(generatorWrapper, function (CustomMap) {\n      return CustomMap.entryIdCounter;\n    }, undefined === value ? true : value);\n  };\n  var calculateVisibilityAtThreshold = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.entryIdCounter;\n    });\n  };\n  var calculateMaxVisibility = function (generatorWrapper, value) {\n    return aggregateMetrics(generatorWrapper, function (CustomMap) {\n      return CustomMap.setTimeoutWrapper;\n    }, undefined === value ? true : value);\n  };\n  var calculateMaxVisibilityAtThreshold = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.setTimeoutWrapper;\n    });\n  };\n  var calculateAverageVisibility = function (generatorWrapper, value) {\n    return getMetricAtThreshold(generatorWrapper, value, function (CustomMap) {\n      return CustomMap.tasks;\n    });\n  };\n  var resetVisibilityMetrics = function (generatorWrapper) {\n    forEachElement(generatorWrapper.entryIdCounter, function (value) {\n      value.tasks = 0;\n    });\n  };\n  var updateVisibilityMetrics = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    if (undefined === entryIdCounter) {\n      entryIdCounter = true;\n    } else {\n      entryIdCounter = entryIdCounter;\n    }\n    if (createCircularNode) {\n      CustomMap = Math.min(value, CustomMap);\n    } else {\n      CustomMap = CustomMap;\n    }\n    for (createCircularNode = 0; createCircularNode < generatorWrapper.tasks.length; createCircularNode++) {\n      var key = generatorWrapper.tasks[createCircularNode];\n      var value = CustomMap > 0 && CustomMap >= key;\n      key = !(value > 0 && value >= key) || findEntry;\n      updateMetrics(generatorWrapper.entryIdCounter[createCircularNode], entryIdCounter && value, iterateEntries, !entryIdCounter || key);\n    }\n  };\n  var aggregateMetrics = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = mapElements(generatorWrapper.entryIdCounter, function (findEntry) {\n      return value(findEntry);\n    });\n    if (CustomMap) {\n      return generatorWrapper;\n    } else {\n      return calculateDifferentialMetrics(generatorWrapper);\n    }\n  };\n  var getMetricAtThreshold = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findLastElementIndex(generatorWrapper.tasks, function (iterateEntries) {\n      return value <= iterateEntries;\n    });\n    if (-1 == findEntry) {\n      return 0;\n    } else {\n      return CustomMap(generatorWrapper.entryIdCounter[findEntry]);\n    }\n  };\n  var calculateDifferentialMetrics = function (generatorWrapper) {\n    return mapElements(generatorWrapper, function (value, CustomMap, findEntry) {\n      if (CustomMap > 0) {\n        return findEntry[CustomMap] - findEntry[CustomMap - 1];\n      } else {\n        return findEntry[CustomMap];\n      }\n    });\n  };\n  var AdVisibilityTracker = function () {\n    this.tasks = new VisibilityMetricsCalculator();\n    this.year = new MetricsTracker();\n    this.resolvePromise = this.onFulfilled = -1;\n    this.firstQuartileTime = 1000;\n    this.toArray = new VisibilityMetricsCalculator([1, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0]);\n    this.tryCall = this.logError = -1;\n  };\n  var getMaxVisibility = function (generatorWrapper, value) {\n    return calculateMaxVisibility(generatorWrapper.tasks, undefined === value ? true : value);\n  };\n  AdVisibilityTracker.prototype.executeCallbacks = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (-1 != this.onFulfilled) {\n      this.onFulfilled = Math.min(this.onFulfilled, value.zone);\n    } else {\n      this.onFulfilled = value.zone;\n    }\n    this.resolvePromise = Math.max(this.resolvePromise, value.zone);\n    if (-1 != this.logError) {\n      this.logError = Math.min(this.logError, value.ta);\n    } else {\n      this.logError = value.ta;\n    }\n    this.tryCall = Math.max(this.tryCall, value.ta);\n    updateVisibilityMetrics(this.toArray, value.ta, CustomMap.ta, value.entryIdCounter, generatorWrapper, findEntry);\n    updateVisibilityMetrics(this.tasks, value.zone, CustomMap.zone, value.entryIdCounter, generatorWrapper, findEntry);\n    if (findEntry || CustomMap.navigatorReference != value.navigatorReference) {\n      CustomMap = CustomMap.isAdVisible() && value.isAdVisible();\n    } else {\n      CustomMap = CustomMap.isAdVisible();\n    }\n    value = !value.isAdVisible() || value.entryIdCounter;\n    updateMetrics(this.year, CustomMap, generatorWrapper, value);\n  };\n  AdVisibilityTracker.prototype.removeUniqueId = function () {\n    return this.year.setTimeoutWrapper >= this.firstQuartileTime;\n  };\n  if (document && document.URL) {\n    var currentURL = document.URL,\n      isDebugMode;\n    if (isDebugMode = !!currentURL) {\n      var debugParam;\n      generatorWrapper: {\n        if (currentURL) {\n          var Hq = RegExp(\".*[&#?]google_debug(=[^&]*)?(&.*)?$\");\n          try {\n            var Iq = Hq.exec(decodeURIComponent(currentURL));\n            if (Iq) {\n              if (Iq[1] && Iq[1].length > 1) {\n                debugParam = Iq[1].substring(1);\n              } else {\n                debugParam = \"true\";\n              }\n              break generatorWrapper;\n            }\n          } catch (generatorWrapper) {}\n        }\n        debugParam = \"\";\n      }\n      isDebugMode = debugParam.length > 0;\n    }\n    Po.numericStringRegex(!isDebugMode);\n  }\n  var addEventListenerWithCapture = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    CustomMap = To(findEntry, CustomMap);\n    addEventListenerWithNormalization(generatorWrapper, value, CustomMap, {\n      capture: iterateEntries\n    });\n  };\n  var emptyRect = new handleThenable(0, 0, 0, 0);\n  function calculateVisibilityRatio(generatorWrapper, value) {\n    value = calculateArea(value);\n    if (value === 0) {\n      return 0;\n    } else {\n      return calculateArea(generatorWrapper) / value;\n    }\n  }\n  function calculateArea(generatorWrapper) {\n    return Math.max(generatorWrapper.bottom - generatorWrapper.top, 0) * Math.max(generatorWrapper.right - generatorWrapper.left, 0);\n  }\n  function isAncestorOrSelf(generatorWrapper, value) {\n    if (!generatorWrapper || !value) {\n      return false;\n    }\n    for (var CustomMap = 0; generatorWrapper !== null && CustomMap++ < 100;) {\n      if (generatorWrapper === value) {\n        return true;\n      }\n      try {\n        if (generatorWrapper = getParentElement(generatorWrapper) || generatorWrapper) {\n          var findEntry = getDocument(generatorWrapper);\n          var iterateEntries = findEntry && getWindowForDocument(findEntry);\n          var createCircularNode = iterateEntries && iterateEntries.frameElement;\n          if (createCircularNode) {\n            generatorWrapper = createCircularNode;\n          }\n        }\n      } catch (entryIdCounter) {\n        break;\n      }\n    }\n    return false;\n  }\n  function isElementFullyInView(generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper || !value) {\n      return false;\n    }\n    value = translateRectangle(createRectangle(generatorWrapper), -value.left, -value.top);\n    generatorWrapper = (value.left + value.right) / 2;\n    value = (value.top + value.bottom) / 2;\n    if (isAccessibleFrame(window.top) && window.top && window.top.document) {\n      window = window.top;\n    }\n    if (!isElementFromPointSupported()) {\n      return false;\n    }\n    generatorWrapper = window.document.elementFromPoint(generatorWrapper, value);\n    if (!generatorWrapper) {\n      return false;\n    }\n    value = (value = (value = getDocument(CustomMap)) && value.defaultView && value.defaultView.frameElement) && isAncestorOrSelf(value, generatorWrapper);\n    var findEntry = generatorWrapper === CustomMap;\n    generatorWrapper = !findEntry && generatorWrapper && findParentElement(generatorWrapper, function (iterateEntries) {\n      return iterateEntries === CustomMap;\n    });\n    return !(value || findEntry || generatorWrapper);\n  }\n  function isElementInvisibleOrOutOfView(generatorWrapper, value, CustomMap, findEntry) {\n    if (getAdEnvironmentInstance().setTimeoutWrapper) {\n      return false;\n    } else {\n      if (generatorWrapper.getRectangleWidth() <= 0 || generatorWrapper.getRectangleHeight() <= 0) {\n        return true;\n      } else {\n        if (CustomMap && findEntry) {\n          return So(208, function () {\n            return isElementFullyInView(generatorWrapper, value, CustomMap);\n          });\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n  var initialRect = new handleThenable(0, 0, 0, 0);\n  var AdContainer = function (generatorWrapper, value, CustomMap) {\n    tryCall.call(this);\n    this.position = createRectangle(initialRect);\n    this.invertAndIncrement = this.base64AlphabetIndex();\n    this.set34Clear14557Flag = -2;\n    this.hasOwnPropertySafe = Date.now();\n    this.updateElementAtIndex = -1;\n    this.decodeBase64 = value;\n    this.base64Encode = null;\n    this.findElementIndex = false;\n    this.Unsigned64 = null;\n    this.opacity = -1;\n    this.debounceFunction = CustomMap;\n    this.containsValue = false;\n    this.emptyObject1 = function () {};\n    this.transformArrayElements = function () {};\n    this.setPrototypeOfPolyfill = new PerformanceMonitor();\n    this.setPrototypeOfPolyfill.trimString = generatorWrapper;\n    this.setPrototypeOfPolyfill.entryIdCounter = generatorWrapper;\n    this.uniqueIdCounter = false;\n    this.hasNavigatorUserAgentData = {\n      isPlainObject: null,\n      isObjectWithId: null\n    };\n    this.cloneOrTransform = true;\n    this.getCachedValue = null;\n    this.isIphone = this.safeIntegerTransformation = false;\n    getAdEnvironment().isDone++;\n    this.adData = this.toggleBitFlag();\n    this.getTransformedElement = -1;\n    this.globalObject = null;\n    this.TransformValue = this.stringOrNumberTransformation1 = false;\n    this.AdEnvironmentConfig = new AdStateController();\n    configureAdStateTrackers(this.AdEnvironmentConfig);\n    checkDataAttributes(this);\n    if (this.debounceFunction == 1) {\n      updateAdStateValue(this.AdEnvironmentConfig, \"od\", 1);\n    } else {\n      updateAdStateValue(this.AdEnvironmentConfig, \"od\", 0);\n    }\n  };\n  inheritPrototype(AdContainer, tryCall);\n  AdContainer.prototype.getAdEnvironment = function () {\n    if (this.setPrototypeOfPolyfill.entryIdCounter) {\n      if (this.hasNavigatorUserAgentData.isPlainObject) {\n        removeEventListenerWithNormalization(this.setPrototypeOfPolyfill.entryIdCounter, \"mouseover\", this.hasNavigatorUserAgentData.isPlainObject);\n        this.hasNavigatorUserAgentData.isPlainObject = null;\n      }\n      if (this.hasNavigatorUserAgentData.isObjectWithId) {\n        removeEventListenerWithNormalization(this.setPrototypeOfPolyfill.entryIdCounter, \"mouseout\", this.hasNavigatorUserAgentData.isObjectWithId);\n        this.hasNavigatorUserAgentData.isObjectWithId = null;\n      }\n    }\n    if (this.getCachedValue) {\n      this.getCachedValue.markAsCompleted();\n    }\n    if (this.globalObject) {\n      this.globalObject.markAsCompleted();\n    }\n    delete this.invertAndIncrement;\n    delete this.emptyObject1;\n    delete this.transformArrayElements;\n    delete this.setPrototypeOfPolyfill.trimString;\n    delete this.setPrototypeOfPolyfill.entryIdCounter;\n    delete this.hasNavigatorUserAgentData;\n    delete this.getCachedValue;\n    delete this.globalObject;\n    delete this.AdEnvironmentConfig;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  AdContainer.prototype.getUserAgent = function () {\n    if (this.globalObject) {\n      return this.globalObject.entryIdCounter;\n    } else {\n      return this.position;\n    }\n  };\n  AdContainer.prototype.throwIfFlag2 = function (generatorWrapper) {\n    getAdEnvironment().throwIfFlag2(generatorWrapper);\n  };\n  var checkDataAttributes = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.setPrototypeOfPolyfill.trimString;\n    var value;\n    if (value = generatorWrapper && generatorWrapper.getAttribute) {\n      if (/-[a-z]/.test(\"googleAvInapp\")) {\n        value = false;\n      } else if (isLegacyBrowser && generatorWrapper.dataset) {\n        value = \"googleAvInapp\" in generatorWrapper.dataset;\n      } else if (generatorWrapper.hasAttribute) {\n        value = generatorWrapper.hasAttribute(\"data-\" + dashCaseFromCamel());\n      } else {\n        value = !!generatorWrapper.getAttribute(\"data-\" + dashCaseFromCamel());\n      }\n    }\n    if (value) {\n      getAdEnvironmentInstance().tasks = true;\n    }\n  };\n  AdContainer.prototype.getClosureFlagValue = function () {\n    return false;\n  };\n  AdContainer.prototype.base64AlphabetIndex = function () {\n    return new AdVisibilityTracker();\n  };\n  AdContainer.prototype.getAdManager = function () {\n    return this.invertAndIncrement;\n  };\n  var updateVisibilityState = function (generatorWrapper, value) {\n    if (value != generatorWrapper.isIphone) {\n      generatorWrapper.isIphone = value;\n      generatorWrapper = getAdEnvironmentInstance();\n      if (value) {\n        generatorWrapper.isDone++;\n      } else if (generatorWrapper.isDone > 0) {\n        generatorWrapper.isDone--;\n      }\n    }\n  };\n  var replaceAdContainerContent = function (generatorWrapper, value) {\n    if (generatorWrapper.globalObject) {\n      if (value.getAdName() === generatorWrapper.globalObject.getAdName()) {\n        return;\n      }\n      generatorWrapper.globalObject.markAsCompleted();\n      generatorWrapper.globalObject = null;\n    }\n    value = value.create(generatorWrapper.setPrototypeOfPolyfill.entryIdCounter, generatorWrapper.AdEnvironmentConfig, generatorWrapper.getClosureFlagValue());\n    if (value = value != null && value.writeFieldHeader() ? value : null) {\n      generatorWrapper.globalObject = value;\n    }\n  };\n  var calculateTimeDifference = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.base64Encode || -1 == generatorWrapper.decodeBase64 || -1 === value.getTimestamp() || -1 === generatorWrapper.base64Encode.getTimestamp()) {\n      return 0;\n    }\n    generatorWrapper = value.getTimestamp() - generatorWrapper.base64Encode.getTimestamp();\n    if (generatorWrapper > CustomMap) {\n      return 0;\n    } else {\n      return generatorWrapper;\n    }\n  };\n  AdContainer.prototype.CustomMap = function (generatorWrapper) {\n    return calculateTimeDifference(this, generatorWrapper, 10000);\n  };\n  var updateAdContainerState = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.globalObject) {\n      generatorWrapper.globalObject.CustomError();\n      var findEntry = generatorWrapper.globalObject.settlePromise;\n      var iterateEntries = findEntry.setTimeoutWrapper;\n      var createCircularNode = iterateEntries.entryIdCounter;\n      if (findEntry.handleAsync != null) {\n        var entryIdCounter = findEntry.tasks;\n        generatorWrapper.Unsigned64 = new Coordinate(entryIdCounter.left - createCircularNode.left, entryIdCounter.top - createCircularNode.top);\n      }\n      if (generatorWrapper.writeVarint32()) {\n        createCircularNode = Math.max(findEntry.entryIdCounter, findEntry.createDeferred);\n      } else {\n        createCircularNode = findEntry.entryIdCounter;\n      }\n      entryIdCounter = {};\n      if (iterateEntries.volume !== null) {\n        entryIdCounter.volume = iterateEntries.volume;\n      }\n      iterateEntries = generatorWrapper.CustomMap(findEntry);\n      generatorWrapper.base64Encode = findEntry;\n      generatorWrapper.parseInt32(createCircularNode, value, CustomMap, false, entryIdCounter, iterateEntries, findEntry.isDone);\n    }\n  };\n  var processAdContainerMetrics = function (generatorWrapper) {\n    if (generatorWrapper.findElementIndex && generatorWrapper.getCachedValue) {\n      var value = getAdState(generatorWrapper.AdEnvironmentConfig, \"od\") == 1;\n      var CustomMap = getAdEnvironmentInstance().entryIdCounter;\n      var findEntry = generatorWrapper.getCachedValue;\n      var iterateEntries = generatorWrapper.globalObject ? generatorWrapper.globalObject.getAdName() : \"ns\";\n      var createCircularNode = generatorWrapper.Unsigned64;\n      var entryIdCounter = new Size(CustomMap.getRectangleWidth(), CustomMap.getRectangleHeight());\n      CustomMap = generatorWrapper.writeVarint32();\n      generatorWrapper = {\n        valuesOfObject: iterateEntries,\n        Unsigned64: createCircularNode,\n        MediaSourceURL: entryIdCounter,\n        writeVarint32: CustomMap,\n        zone: generatorWrapper.adData.zone,\n        trustedTypesPolicy: value\n      };\n      if (value = findEntry.tasks) {\n        value.CustomError();\n        iterateEntries = value.settlePromise;\n        createCircularNode = iterateEntries.setTimeoutWrapper.entryIdCounter;\n        var key = entryIdCounter = null;\n        if (iterateEntries.handleAsync != null && createCircularNode) {\n          entryIdCounter = iterateEntries.tasks;\n          entryIdCounter = new Coordinate(entryIdCounter.left - createCircularNode.left, entryIdCounter.top - createCircularNode.top);\n          key = new Size(createCircularNode.right - createCircularNode.left, createCircularNode.bottom - createCircularNode.top);\n        }\n        if (CustomMap) {\n          iterateEntries = Math.max(iterateEntries.entryIdCounter, iterateEntries.createDeferred);\n        } else {\n          iterateEntries = iterateEntries.entryIdCounter;\n        }\n        CustomMap = {\n          valuesOfObject: value.getAdName(),\n          Unsigned64: entryIdCounter,\n          MediaSourceURL: key,\n          writeVarint32: CustomMap,\n          trustedTypesPolicy: false,\n          zone: iterateEntries\n        };\n      } else {\n        CustomMap = null;\n      }\n      if (CustomMap) {\n        processVerificationRequests(findEntry, generatorWrapper, CustomMap);\n      }\n    }\n  };\n  setTimeoutWrapper = AdContainer.prototype;\n  setTimeoutWrapper.parseInt32 = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    if (!this.uniqueIdCounter) {\n      if (this.findElementIndex) {\n        generatorWrapper = this.finalizeAndAppendBuffer(generatorWrapper, CustomMap, iterateEntries, entryIdCounter);\n        findEntry = findEntry && this.adData.zone >= (this.navigatorReference() ? 0.3 : 0.5);\n        this.parseNullableInt32(createCircularNode, generatorWrapper, findEntry);\n        this.decodeBase64 = value;\n        if (generatorWrapper.zone > 0 && -1 === this.getTransformedElement) {\n          this.getTransformedElement = value;\n        }\n        if (-1 == this.updateElementAtIndex && this.removeUniqueId()) {\n          this.updateElementAtIndex = value;\n        }\n        if (-2 == this.set34Clear14557Flag) {\n          if (calculateArea(this.getUserAgent())) {\n            this.set34Clear14557Flag = generatorWrapper.zone;\n          } else {\n            this.set34Clear14557Flag = -1;\n          }\n        }\n        this.adData = generatorWrapper;\n      }\n      this.emptyObject1(this);\n    }\n  };\n  setTimeoutWrapper.parseNullableInt32 = function (generatorWrapper, value, CustomMap) {\n    this.getAdManager().executeCallbacks(generatorWrapper, value, this.adData, CustomMap);\n  };\n  setTimeoutWrapper.toggleBitFlag = function () {\n    return new AdVisibilityTracker();\n  };\n  setTimeoutWrapper.finalizeAndAppendBuffer = function (generatorWrapper, value, CustomMap, findEntry) {\n    CustomMap = this.toggleBitFlag();\n    CustomMap.entryIdCounter = value;\n    value = GetEnvironment().tasks;\n    if (getVisibilityStateCode(document) === 0) {\n      value = -1;\n    } else if (value.isAdVisible()) {\n      value = 0;\n    } else {\n      value = 1;\n    }\n    CustomMap.tasks = value;\n    CustomMap.zone = this.toArray(generatorWrapper);\n    CustomMap.navigatorReference = this.navigatorReference();\n    CustomMap.ta = findEntry;\n    return CustomMap;\n  };\n  setTimeoutWrapper.toArray = function (generatorWrapper) {\n    if (this.opacity === 0 && getAdState(this.AdEnvironmentConfig, \"opac\") === 1) {\n      return 0;\n    } else {\n      return generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.navigatorReference = function () {\n    return false;\n  };\n  setTimeoutWrapper.writeVarint32 = function () {\n    return this.stringOrNumberTransformation1 || this.safeIntegerTransformation;\n  };\n  setTimeoutWrapper.generatorYield = function () {\n    return 0;\n  };\n  setTimeoutWrapper.removeUniqueId = function () {\n    return this.invertAndIncrement.removeUniqueId();\n  };\n  setTimeoutWrapper.identityFunction = function () {\n    var generatorWrapper = this.findElementIndex;\n    generatorWrapper = (this.TransformValue || this.handleIteratorResult()) && !generatorWrapper;\n    var value = getAdEnvironment().tasks !== 2 || this.containsValue;\n    if (this.uniqueIdCounter || value && generatorWrapper) {\n      return 2;\n    } else {\n      if (this.removeUniqueId()) {\n        return 4;\n      } else {\n        return 3;\n      }\n    }\n  };\n  setTimeoutWrapper.isIos = function () {\n    return 0;\n  };\n  var configureAdStateHandlers = function (generatorWrapper, value, CustomMap) {\n    if (value) {\n      generatorWrapper.emptyObject1 = value;\n    }\n    if (CustomMap) {\n      generatorWrapper.transformArrayElements = CustomMap;\n    }\n  };\n  var IteratorPrototype = function () {};\n  IteratorPrototype.prototype.next = function () {\n    return iteratorDoneValue;\n  };\n  var iteratorDoneValue = {\n    done: true,\n    value: undefined\n  };\n  IteratorPrototype.prototype.getIterator = function () {\n    return this;\n  };\n  var PerformanceData = function () {\n    this.createDeferred = this.entryIdCounter = this.setTimeoutWrapper = this.tasks = this.handleAsync = 0;\n  };\n  var getPerformanceData = function (generatorWrapper) {\n    var value = {};\n    value = (value.ptlt = Date.now() - generatorWrapper.handleAsync, value);\n    var CustomMap = generatorWrapper.tasks;\n    if (CustomMap) {\n      value.pnk = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.setTimeoutWrapper) {\n      value.pnc = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.createDeferred) {\n      value.pnmm = CustomMap;\n    }\n    if (generatorWrapper = generatorWrapper.entryIdCounter) {\n      value.pns = generatorWrapper;\n    }\n    return value;\n  };\n  var AdPlaybackData = function () {\n    AdVisibilityTracker.call(this);\n    this.fullscreen = false;\n    this.volume = undefined;\n    this.setTimeoutWrapper = false;\n    this.mediaTime = -1;\n  };\n  inheritPrototype(AdPlaybackData, AdVisibilityTracker);\n  var isVolumeNonZero = function (generatorWrapper) {\n    return isValidOpacity(generatorWrapper.volume) && generatorWrapper.volume > 0;\n  };\n  var filterAndTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = function () {\n        return true;\n      };\n    } else {\n      findEntry = findEntry;\n    }\n    return function (iterateEntries) {\n      var createCircularNode = iterateEntries[generatorWrapper];\n      if (Array.isArray(createCircularNode) && findEntry(iterateEntries)) {\n        return transformArray(createCircularNode, value, CustomMap);\n      }\n    };\n  };\n  var getPropertyIfCondition = function (generatorWrapper, value) {\n    return function (CustomMap) {\n      if (value(CustomMap)) {\n        return CustomMap[generatorWrapper];\n      } else {\n        return undefined;\n      }\n    };\n  };\n  var checkConditionInArray = function (generatorWrapper) {\n    return function (value) {\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        if (generatorWrapper[CustomMap] === value.iterateEntries || undefined === generatorWrapper[CustomMap] && !value.hasOwnProperty(\"e\")) {\n          return true;\n        }\n      }\n      return false;\n    };\n  };\n  var transformArray = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap || CustomMap) {\n      return filterElements(generatorWrapper, function (findEntry, iterateEntries) {\n        return containsElement(value, iterateEntries);\n      });\n    } else {\n      return mapElements(value, function (findEntry, iterateEntries, createCircularNode) {\n        return generatorWrapper.slice(iterateEntries > 0 ? createCircularNode[iterateEntries - 1] + 1 : 0, findEntry + 1).reduce(function (entryIdCounter, key) {\n          return entryIdCounter + key;\n        }, 0);\n      });\n    }\n  };\n  var defaultConditionChecker = checkConditionInArray([undefined, 1, 2, 3, 4, 8, 16]);\n  var specificConditionChecker = checkConditionInArray([undefined, 4, 8, 16]);\n  var adDataMapping = {\n    sv: \"sv\",\n    getIterator: \"v\",\n    cb: \"cb\",\n    iterateEntries: \"e\",\n    nas: \"nas\",\n    msg: \"msg\",\n    if: \"if\",\n    sdk: \"sdk\",\n    resolveFunction: \"p\",\n    position0: getPropertyIfCondition(\"p0\", specificConditionChecker),\n    p1: getPropertyIfCondition(\"p1\", specificConditionChecker),\n    p2: getPropertyIfCondition(\"p2\", specificConditionChecker),\n    p3: getPropertyIfCondition(\"p3\", specificConditionChecker),\n    AdEvent: \"cp\",\n    tos: \"tos\",\n    mtos: \"mtos\",\n    amtos: \"amtos\",\n    mediaTimeOffset1: filterAndTransform(\"mtos1\", [0, 2, 4], false, specificConditionChecker),\n    mtos2: filterAndTransform(\"mtos2\", [0, 2, 4], false, specificConditionChecker),\n    mtos3: filterAndTransform(\"mtos3\", [0, 2, 4], false, specificConditionChecker),\n    mcvt: \"mcvt\",\n    removeRelatedAdContainers: \"ps\",\n    screenSize: \"scs\",\n    browserSize: \"bs\",\n    vht: \"vht\",\n    mut: \"mut\",\n    generatorWrapper: \"a\",\n    attribute0: getPropertyIfCondition(\"a0\", specificConditionChecker),\n    a1: getPropertyIfCondition(\"a1\", specificConditionChecker),\n    a2: getPropertyIfCondition(\"a2\", specificConditionChecker),\n    a3: getPropertyIfCondition(\"a3\", specificConditionChecker),\n    CustomMetric: \"ft\",\n    deviceFullScreenTime: \"dft\",\n    metricNames: \"at\",\n    deviceAdTime: \"dat\",\n    assignSession: \"as\",\n    vpt: \"vpt\",\n    gmm: \"gmm\",\n    std: \"std\",\n    efpf: \"efpf\",\n    swf: \"swf\",\n    nio: \"nio\",\n    decodeVendor: \"px\",\n    nnutPlaceholder: \"nnut\",\n    videoMergeError: \"vmer\",\n    videoMergeMark: \"vmmk\",\n    videoMergeIEC: \"vmiec\",\n    networkMediaType: \"nmt\",\n    timeCodeMethod: \"tcm\",\n    metricValidators: \"bt\",\n    pixelAspectRatio: \"pst\",\n    isVpaid: \"vpaid\",\n    duration: \"dur\",\n    viewModeTime: \"vmtime\",\n    deviceTotalOffsetScale: \"dtos\",\n    deviceTotalOffsetScaleSum: \"dtoss\",\n    deviceViewportScale: \"dvs\",\n    deviceFullViewportScale: \"dfvs\",\n    deviceViewport: \"dvpt\",\n    fmf: \"fmf\",\n    videoDataStream: \"vds\",\n    screenDimensions: \"is\",\n    image0: \"i0\",\n    i1: \"i1\",\n    i2: \"i2\",\n    i3: \"i3\",\n    browserFeatures: \"ic\",\n    checksum: \"cs\",\n    CustomMap: \"c\",\n    coordinate0: getPropertyIfCondition(\"c0\", specificConditionChecker),\n    c1: getPropertyIfCondition(\"c1\", specificConditionChecker),\n    c2: getPropertyIfCondition(\"c2\", specificConditionChecker),\n    c3: getPropertyIfCondition(\"c3\", specificConditionChecker),\n    isEdge: \"mc\",\n    isGecko: \"nc\",\n    mediaVersion: \"mv\",\n    networkVersion: \"nv\",\n    qmt: getPropertyIfCondition(\"qmtos\", defaultConditionChecker),\n    qualityNetworkChecksum: getPropertyIfCondition(\"qnc\", defaultConditionChecker),\n    qualityMediaVersion: getPropertyIfCondition(\"qmv\", defaultConditionChecker),\n    qualityNetworkVersion: getPropertyIfCondition(\"qnv\", defaultConditionChecker),\n    raf: \"raf\",\n    rafc: \"rafc\",\n    latestTimeElapsed: \"lte\",\n    checksumEntities: \"ces\",\n    totalTimeHeld: \"tth\",\n    femt: \"femt\",\n    femvt: \"femvt\",\n    emc: \"emc\",\n    emuc: \"emuc\",\n    emb: \"emb\",\n    adVerificationMeasurementSystem: \"avms\",\n    nvat: \"nvat\",\n    getTopMostAccessibleWindow: \"qi\",\n    playerSizeMethod: \"psm\",\n    playerSizeValue: \"psv\",\n    playerSizeFullValue: \"psfv\",\n    playerSizeAttribute: \"psa\",\n    pnk: \"pnk\",\n    pnc: \"pnc\",\n    pnmm: \"pnmm\",\n    pns: \"pns\",\n    ptlt: \"ptlt\",\n    pngs: \"pings\",\n    videoElementId: \"veid\",\n    ssb: \"ssb\",\n    subSample0: getPropertyIfCondition(\"ss0\", specificConditionChecker),\n    ss1: getPropertyIfCondition(\"ss1\", specificConditionChecker),\n    ss2: getPropertyIfCondition(\"ss2\", specificConditionChecker),\n    ss3: getPropertyIfCondition(\"ss3\", specificConditionChecker),\n    dc_rfl: \"urlsigs\",\n    obd: \"obd\",\n    omidp: \"omidp\",\n    omidr: \"omidr\",\n    omidv: \"omidv\",\n    omida: \"omida\",\n    omids: \"omids\",\n    omidpv: \"omidpv\",\n    omidam: \"omidam\",\n    omidct: \"omidct\",\n    omidia: \"omidia\",\n    omiddc: \"omiddc\",\n    omidlat: \"omidlat\",\n    omiddit: \"omiddit\",\n    nopd: \"nopd\",\n    ensureQueryIdAdState: \"co\"\n  };\n  var extendedAdDataMapping = Object.assign({}, adDataMapping, {\n    avid: function (generatorWrapper) {\n      return function () {\n        return generatorWrapper;\n      };\n    }(\"audio\"),\n    adVerificationAdSystem: \"avas\",\n    filterAndLinkAdContainers: \"vs\"\n  });\n  var additionalDataMapping = {\n    audioToString: \"atos\",\n    audioValueTransform: filterAndTransform(\"atos\", [2]),\n    defaultAudioVideoSync: \"davs\",\n    defaultAudioFrequencyVideoSync: \"dafvs\",\n    defaultAudioVideo: \"dav\",\n    safeSelector: function (generatorWrapper, value) {\n      return function (CustomMap) {\n        if (undefined === CustomMap[generatorWrapper] && undefined !== value) {\n          return value;\n        } else {\n          return CustomMap[generatorWrapper];\n        }\n      };\n    }(\"ss\", 0),\n    rejectFunction: \"t\"\n  };\n  var nullResetter = function () {\n    this.tasks = this.entryIdCounter = \"\";\n  };\n  var emptyFunction = function () {};\n  var processResources = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined !== generatorWrapper) {\n      if (value != null) {\n        for (var findEntry in value) {\n          var iterateEntries = value[findEntry];\n          if (!(findEntry in Object.prototype)) {\n            if (iterateEntries != null) {\n              if (typeof iterateEntries === \"function\") {\n                CustomMap[findEntry] = iterateEntries(generatorWrapper);\n              } else {\n                CustomMap[findEntry] = generatorWrapper[iterateEntries];\n              }\n            }\n          }\n        }\n      } else {\n        extendObject(CustomMap, generatorWrapper);\n      }\n    }\n    return buildQueryString(addParametersFromObject(new QueryStringBuilder(), CustomMap));\n  };\n  var queryReporter = function () {\n    var generatorWrapper = {};\n    this.tasks = (generatorWrapper.filterAndLinkAdContainers = [1, 0], generatorWrapper.AdError = [0, 1], generatorWrapper.am = [2, 2], generatorWrapper.generatorWrapper = [4, 4], generatorWrapper.createCircularNode = [8, 8], generatorWrapper.bm = [16, 16], generatorWrapper.value = [32, 32], generatorWrapper.avw = [0, 64], generatorWrapper.avs = [64, 0], generatorWrapper.finalizePromise = [256, 256], generatorWrapper.gdr = [0, 512], generatorWrapper.resolveFunction = [0, 1024], generatorWrapper.foundEntry = [0, 2048], generatorWrapper.currentEntry = [0, 4096], generatorWrapper.um = [0, 8192], generatorWrapper.updateFlagsForFrozenObjects = [0, 16384], generatorWrapper.string = [0, 32768], generatorWrapper.pmx = [0, 16777216], generatorWrapper.mut = [33554432, 33554432], generatorWrapper.umutb = [67108864, 67108864], generatorWrapper.tvoff = [134217728, 134217728], generatorWrapper);\n    this.entryIdCounter = {};\n    for (var value in this.tasks) if (this.tasks[value][1] > 0) {\n      this.entryIdCounter[value] = 0;\n    }\n    this.setTimeoutWrapper = 0;\n  };\n  queryReporter.prototype.reportEvent = function (generatorWrapper) {\n    var value = this.tasks[generatorWrapper];\n    var CustomMap = value[1];\n    this.setTimeoutWrapper += value[0];\n    if (CustomMap > 0 && this.entryIdCounter[generatorWrapper] == 0) {\n      this.entryIdCounter[generatorWrapper] = 1;\n    }\n  };\n  var reportRetriever = function (generatorWrapper) {\n    var findEntry;\n    var value = keysOfObject(generatorWrapper.tasks);\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper.entryIdCounter) if (contains",
  "ototype.prototype.getIterator = function () {\n    return this;\n  };\n  var PerformanceData = function () {\n    this.createDeferred = this.entryIdCounter = this.setTimeoutWrapper = this.tasks = this.handleAsync = 0;\n  };\n  var getPerformanceData = function (generatorWrapper) {\n    var value = {};\n    value = (value.ptlt = Date.now() - generatorWrapper.handleAsync, value);\n    var CustomMap = generatorWrapper.tasks;\n    if (CustomMap) {\n      value.pnk = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.setTimeoutWrapper) {\n      value.pnc = CustomMap;\n    }\n    if (CustomMap = generatorWrapper.createDeferred) {\n      value.pnmm = CustomMap;\n    }\n    if (generatorWrapper = generatorWrapper.entryIdCounter) {\n      value.pns = generatorWrapper;\n    }\n    return value;\n  };\n  var AdPlaybackData = function () {\n    AdVisibilityTracker.call(this);\n    this.fullscreen = false;\n    this.volume = undefined;\n    this.setTimeoutWrapper = false;\n    this.mediaTime = -1;\n  };\n  inheritPrototype(AdPlaybackData, AdVisibilityTracker);\n  var isVolumeNonZero = function (generatorWrapper) {\n    return isValidOpacity(generatorWrapper.volume) && generatorWrapper.volume > 0;\n  };\n  var filterAndTransform = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = function () {\n        return true;\n      };\n    } else {\n      findEntry = findEntry;\n    }\n    return function (iterateEntries) {\n      var createCircularNode = iterateEntries[generatorWrapper];\n      if (Array.isArray(createCircularNode) && findEntry(iterateEntries)) {\n        return transformArray(createCircularNode, value, CustomMap);\n      }\n    };\n  };\n  var getPropertyIfCondition = function (generatorWrapper, value) {\n    return function (CustomMap) {\n      if (value(CustomMap)) {\n        return CustomMap[generatorWrapper];\n      } else {\n        return undefined;\n      }\n    };\n  };\n  var checkConditionInArray = function (generatorWrapper) {\n    return function (value) {\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        if (generatorWrapper[CustomMap] === value.iterateEntries || undefined === generatorWrapper[CustomMap] && !value.hasOwnProperty(\"e\")) {\n          return true;\n        }\n      }\n      return false;\n    };\n  };\n  var transformArray = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap || CustomMap) {\n      return filterElements(generatorWrapper, function (findEntry, iterateEntries) {\n        return containsElement(value, iterateEntries);\n      });\n    } else {\n      return mapElements(value, function (findEntry, iterateEntries, createCircularNode) {\n        return generatorWrapper.slice(iterateEntries > 0 ? createCircularNode[iterateEntries - 1] + 1 : 0, findEntry + 1).reduce(function (entryIdCounter, key) {\n          return entryIdCounter + key;\n        }, 0);\n      });\n    }\n  };\n  var defaultConditionChecker = checkConditionInArray([undefined, 1, 2, 3, 4, 8, 16]);\n  var specificConditionChecker = checkConditionInArray([undefined, 4, 8, 16]);\n  var adDataMapping = {\n    sv: \"sv\",\n    getIterator: \"v\",\n    cb: \"cb\",\n    iterateEntries: \"e\",\n    nas: \"nas\",\n    msg: \"msg\",\n    if: \"if\",\n    sdk: \"sdk\",\n    resolveFunction: \"p\",\n    position0: getPropertyIfCondition(\"p0\", specificConditionChecker),\n    p1: getPropertyIfCondition(\"p1\", specificConditionChecker),\n    p2: getPropertyIfCondition(\"p2\", specificConditionChecker),\n    p3: getPropertyIfCondition(\"p3\", specificConditionChecker),\n    AdEvent: \"cp\",\n    tos: \"tos\",\n    mtos: \"mtos\",\n    amtos: \"amtos\",\n    mediaTimeOffset1: filterAndTransform(\"mtos1\", [0, 2, 4], false, specificConditionChecker),\n    mtos2: filterAndTransform(\"mtos2\", [0, 2, 4], false, specificConditionChecker),\n    mtos3: filterAndTransform(\"mtos3\", [0, 2, 4], false, specificConditionChecker),\n    mcvt: \"mcvt\",\n    removeRelatedAdContainers: \"ps\",\n    screenSize: \"scs\",\n    browserSize: \"bs\",\n    vht: \"vht\",\n    mut: \"mut\",\n    generatorWrapper: \"a\",\n    attribute0: getPropertyIfCondition(\"a0\", specificConditionChecker),\n    a1: getPropertyIfCondition(\"a1\", specificConditionChecker),\n    a2: getPropertyIfCondition(\"a2\", specificConditionChecker),\n    a3: getPropertyIfCondition(\"a3\", specificConditionChecker),\n    CustomMetric: \"ft\",\n    deviceFullScreenTime: \"dft\",\n    metricNames: \"at\",\n    deviceAdTime: \"dat\",\n    assignSession: \"as\",\n    vpt: \"vpt\",\n    gmm: \"gmm\",\n    std: \"std\",\n    efpf: \"efpf\",\n    swf: \"swf\",\n    nio: \"nio\",\n    decodeVendor: \"px\",\n    nnutPlaceholder: \"nnut\",\n    videoMergeError: \"vmer\",\n    videoMergeMark: \"vmmk\",\n    videoMergeIEC: \"vmiec\",\n    networkMediaType: \"nmt\",\n    timeCodeMethod: \"tcm\",\n    metricValidators: \"bt\",\n    pixelAspectRatio: \"pst\",\n    isVpaid: \"vpaid\",\n    duration: \"dur\",\n    viewModeTime: \"vmtime\",\n    deviceTotalOffsetScale: \"dtos\",\n    deviceTotalOffsetScaleSum: \"dtoss\",\n    deviceViewportScale: \"dvs\",\n    deviceFullViewportScale: \"dfvs\",\n    deviceViewport: \"dvpt\",\n    fmf: \"fmf\",\n    videoDataStream: \"vds\",\n    screenDimensions: \"is\",\n    image0: \"i0\",\n    i1: \"i1\",\n    i2: \"i2\",\n    i3: \"i3\",\n    browserFeatures: \"ic\",\n    checksum: \"cs\",\n    CustomMap: \"c\",\n    coordinate0: getPropertyIfCondition(\"c0\", specificConditionChecker),\n    c1: getPropertyIfCondition(\"c1\", specificConditionChecker),\n    c2: getPropertyIfCondition(\"c2\", specificConditionChecker),\n    c3: getPropertyIfCondition(\"c3\", specificConditionChecker),\n    isEdge: \"mc\",\n    isGecko: \"nc\",\n    mediaVersion: \"mv\",\n    networkVersion: \"nv\",\n    qmt: getPropertyIfCondition(\"qmtos\", defaultConditionChecker),\n    qualityNetworkChecksum: getPropertyIfCondition(\"qnc\", defaultConditionChecker),\n    qualityMediaVersion: getPropertyIfCondition(\"qmv\", defaultConditionChecker),\n    qualityNetworkVersion: getPropertyIfCondition(\"qnv\", defaultConditionChecker),\n    raf: \"raf\",\n    rafc: \"rafc\",\n    latestTimeElapsed: \"lte\",\n    checksumEntities: \"ces\",\n    totalTimeHeld: \"tth\",\n    femt: \"femt\",\n    femvt: \"femvt\",\n    emc: \"emc\",\n    emuc: \"emuc\",\n    emb: \"emb\",\n    adVerificationMeasurementSystem: \"avms\",\n    nvat: \"nvat\",\n    getTopMostAccessibleWindow: \"qi\",\n    playerSizeMethod: \"psm\",\n    playerSizeValue: \"psv\",\n    playerSizeFullValue: \"psfv\",\n    playerSizeAttribute: \"psa\",\n    pnk: \"pnk\",\n    pnc: \"pnc\",\n    pnmm: \"pnmm\",\n    pns: \"pns\",\n    ptlt: \"ptlt\",\n    pngs: \"pings\",\n    videoElementId: \"veid\",\n    ssb: \"ssb\",\n    subSample0: getPropertyIfCondition(\"ss0\", specificConditionChecker),\n    ss1: getPropertyIfCondition(\"ss1\", specificConditionChecker),\n    ss2: getPropertyIfCondition(\"ss2\", specificConditionChecker),\n    ss3: getPropertyIfCondition(\"ss3\", specificConditionChecker),\n    dc_rfl: \"urlsigs\",\n    obd: \"obd\",\n    omidp: \"omidp\",\n    omidr: \"omidr\",\n    omidv: \"omidv\",\n    omida: \"omida\",\n    omids: \"omids\",\n    omidpv: \"omidpv\",\n    omidam: \"omidam\",\n    omidct: \"omidct\",\n    omidia: \"omidia\",\n    omiddc: \"omiddc\",\n    omidlat: \"omidlat\",\n    omiddit: \"omiddit\",\n    nopd: \"nopd\",\n    ensureQueryIdAdState: \"co\"\n  };\n  var extendedAdDataMapping = Object.assign({}, adDataMapping, {\n    avid: function (generatorWrapper) {\n      return function () {\n        return generatorWrapper;\n      };\n    }(\"audio\"),\n    adVerificationAdSystem: \"avas\",\n    filterAndLinkAdContainers: \"vs\"\n  });\n  var additionalDataMapping = {\n    audioToString: \"atos\",\n    audioValueTransform: filterAndTransform(\"atos\", [2]),\n    defaultAudioVideoSync: \"davs\",\n    defaultAudioFrequencyVideoSync: \"dafvs\",\n    defaultAudioVideo: \"dav\",\n    safeSelector: function (generatorWrapper, value) {\n      return function (CustomMap) {\n        if (undefined === CustomMap[generatorWrapper] && undefined !== value) {\n          return value;\n        } else {\n          return CustomMap[generatorWrapper];\n        }\n      };\n    }(\"ss\", 0),\n    rejectFunction: \"t\"\n  };\n  var nullResetter = function () {\n    this.tasks = this.entryIdCounter = \"\";\n  };\n  var emptyFunction = function () {};\n  var processResources = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined !== generatorWrapper) {\n      if (value != null) {\n        for (var findEntry in value) {\n          var iterateEntries = value[findEntry];\n          if (!(findEntry in Object.prototype)) {\n            if (iterateEntries != null) {\n              if (typeof iterateEntries === \"function\") {\n                CustomMap[findEntry] = iterateEntries(generatorWrapper);\n              } else {\n                CustomMap[findEntry] = generatorWrapper[iterateEntries];\n              }\n            }\n          }\n        }\n      } else {\n        extendObject(CustomMap, generatorWrapper);\n      }\n    }\n    return buildQueryString(addParametersFromObject(new QueryStringBuilder(), CustomMap));\n  };\n  var queryReporter = function () {\n    var generatorWrapper = {};\n    this.tasks = (generatorWrapper.filterAndLinkAdContainers = [1, 0], generatorWrapper.AdError = [0, 1], generatorWrapper.am = [2, 2], generatorWrapper.generatorWrapper = [4, 4], generatorWrapper.createCircularNode = [8, 8], generatorWrapper.bm = [16, 16], generatorWrapper.value = [32, 32], generatorWrapper.avw = [0, 64], generatorWrapper.avs = [64, 0], generatorWrapper.finalizePromise = [256, 256], generatorWrapper.gdr = [0, 512], generatorWrapper.resolveFunction = [0, 1024], generatorWrapper.foundEntry = [0, 2048], generatorWrapper.currentEntry = [0, 4096], generatorWrapper.um = [0, 8192], generatorWrapper.updateFlagsForFrozenObjects = [0, 16384], generatorWrapper.string = [0, 32768], generatorWrapper.pmx = [0, 16777216], generatorWrapper.mut = [33554432, 33554432], generatorWrapper.umutb = [67108864, 67108864], generatorWrapper.tvoff = [134217728, 134217728], generatorWrapper);\n    this.entryIdCounter = {};\n    for (var value in this.tasks) if (this.tasks[value][1] > 0) {\n      this.entryIdCounter[value] = 0;\n    }\n    this.setTimeoutWrapper = 0;\n  };\n  queryReporter.prototype.reportEvent = function (generatorWrapper) {\n    var value = this.tasks[generatorWrapper];\n    var CustomMap = value[1];\n    this.setTimeoutWrapper += value[0];\n    if (CustomMap > 0 && this.entryIdCounter[generatorWrapper] == 0) {\n      this.entryIdCounter[generatorWrapper] = 1;\n    }\n  };\n  var reportRetriever = function (generatorWrapper) {\n    var findEntry;\n    var value = keysOfObject(generatorWrapper.tasks);\n    var CustomMap = 0;\n    for (findEntry in generatorWrapper.entryIdCounter) if (containsElement(value, findEntry) && generatorWrapper.entryIdCounter[findEntry] == 1) {\n      CustomMap += generatorWrapper.tasks[findEntry][1];\n      generatorWrapper.entryIdCounter[findEntry] = 2;\n    }\n    return CustomMap;\n  };\n  var statusRetriever = function (generatorWrapper) {\n    var value = 0,\n      CustomMap;\n    for (CustomMap in generatorWrapper.entryIdCounter) {\n      var findEntry = generatorWrapper.entryIdCounter[CustomMap];\n      if (findEntry == 1 || findEntry == 2) {\n        value += generatorWrapper.tasks[CustomMap][1];\n      }\n    }\n    return value;\n  };\n  var toggleRegister = function () {\n    this.entryIdCounter = this.tasks = 0;\n  };\n  toggleRegister.prototype.getAdStateValue = function () {\n    return this.tasks;\n  };\n  var updateRegister = function (generatorWrapper, value, CustomMap) {\n    if (!(value >= 32)) {\n      if (generatorWrapper.entryIdCounter & 1 << value && !CustomMap) {\n        generatorWrapper.tasks &= ~(1 << value);\n      } else if (!(generatorWrapper.entryIdCounter & 1 << value || !CustomMap)) {\n        generatorWrapper.tasks |= 1 << value;\n      }\n      generatorWrapper.entryIdCounter |= 1 << value;\n    }\n  };\n  var videoReporter = function () {\n    AdVisibilityTracker.call(this);\n    this.setTimeoutWrapper = new MetricsTracker();\n    this.totalAdBufferingTime = this.dispatchUnhandledRejection = this.handleThenable = 0;\n    this.settlePromise = -1;\n    this.assignPolyfill = new MetricsTracker();\n    this.handleAsync = new MetricsTracker();\n    this.entryIdCounter = new VisibilityMetricsCalculator();\n    this.isDone = this.createDeferred = -1;\n    this.handleThenable = new MetricsTracker();\n    this.firstQuartileTime = 2000;\n    this.updateMaxSize = new toggleRegister();\n    this.definePropertyPolyfill = new toggleRegister();\n    this.createIterator = new toggleRegister();\n  };\n  inheritPrototype(videoReporter, AdVisibilityTracker);\n  var widthRetriever = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.totalAdBufferingTime;\n    if (!($o || CustomMap || -1 == generatorWrapper.settlePromise)) {\n      findEntry += value - generatorWrapper.settlePromise;\n    }\n    return findEntry;\n  };\n  videoReporter.prototype.executeCallbacks = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!value.setTimeoutWrapper) {\n      AdVisibilityTracker.prototype.executeCallbacks.call(this, generatorWrapper, value, CustomMap, findEntry);\n      var iterateEntries = isVolumeNonZero(value) && isVolumeNonZero(CustomMap);\n      var createCircularNode = (findEntry ? Math.min(value.zone, CustomMap.zone) : CustomMap.zone) >= 0.5;\n      if (isValidOpacity(value.volume)) {\n        if (-1 != this.createDeferred) {\n          this.createDeferred = Math.min(this.createDeferred, value.volume);\n        } else {\n          this.createDeferred = value.volume;\n        }\n        this.isDone = Math.max(this.isDone, value.volume);\n      }\n      if (createCircularNode) {\n        this.handleThenable += generatorWrapper;\n        if (iterateEntries) {\n          this.dispatchUnhandledRejection += generatorWrapper;\n        } else {\n          this.dispatchUnhandledRejection += 0;\n        }\n      }\n      updateVisibilityMetrics(this.entryIdCounter, value.zone, CustomMap.zone, value.entryIdCounter, generatorWrapper, findEntry, iterateEntries);\n      updateMetrics(this.setTimeoutWrapper, true, generatorWrapper);\n      updateMetrics(this.handleAsync, iterateEntries, generatorWrapper);\n      updateMetrics(this.handleThenable, CustomMap.fullscreen, generatorWrapper);\n      updateMetrics(this.assignPolyfill, iterateEntries && !createCircularNode, generatorWrapper);\n      generatorWrapper = Math.floorRectangle(value.mediaTime / 1000);\n      updateRegister(this.updateMaxSize, generatorWrapper, value.isAdVisible());\n      updateRegister(this.definePropertyPolyfill, generatorWrapper, value.zone >= 1);\n      updateRegister(this.createIterator, generatorWrapper, isVolumeNonZero(value));\n    }\n  };\n  var executionResetter = function () {\n    this.setTimeoutWrapper = false;\n  };\n  executionResetter.prototype.tasks = function (generatorWrapper) {\n    if (!this.setTimeoutWrapper) {\n      if (this.entryIdCounter(generatorWrapper)) {\n        generatorWrapper = this.executeCallbacks.report(this.createDeferred, generatorWrapper);\n        this.handleAsync |= generatorWrapper;\n        generatorWrapper = generatorWrapper == 0;\n      } else {\n        generatorWrapper = false;\n      }\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n  };\n  var yearResetter = function (generatorWrapper, value) {\n    this.setTimeoutWrapper = false;\n    this.createDeferred = generatorWrapper;\n    this.executeCallbacks = value;\n    this.handleAsync = 0;\n  };\n  inheritPrototype(yearResetter, executionResetter);\n  yearResetter.prototype.entryIdCounter = function () {\n    return true;\n  };\n  yearResetter.prototype.isDone = function () {\n    return false;\n  };\n  yearResetter.prototype.getAdId = function () {\n    var generatorWrapper = this;\n    var value = findKeyInObject(function (CustomMap) {\n      return CustomMap == generatorWrapper.createDeferred;\n    });\n    return ip[value].toString();\n  };\n  yearResetter.prototype.toString = function () {\n    var generatorWrapper = \"\";\n    if (this.isDone()) {\n      generatorWrapper += \"c\";\n    }\n    if (this.setTimeoutWrapper) {\n      generatorWrapper += \"s\";\n    }\n    if (this.handleAsync > 0) {\n      generatorWrapper += \":\" + this.handleAsync;\n    }\n    return this.getAdId() + generatorWrapper;\n  };\n  var zoneResetter = function (generatorWrapper, value) {\n    yearResetter.call(this, generatorWrapper, value);\n    this.onFulfilled = [];\n  };\n  inheritPrototype(zoneResetter, yearResetter);\n  zoneResetter.prototype.tasks = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (value != null) {\n      this.onFulfilled.push(value);\n    }\n    yearResetter.prototype.tasks.call(this, generatorWrapper);\n  };\n  var abstractResponder = function () {};\n  var baseResponder = function () {};\n  inheritPrototype(baseResponder, abstractResponder);\n  baseResponder.prototype.tasks = function () {\n    return null;\n  };\n  baseResponder.prototype.setTimeoutWrapper = function () {\n    return [];\n  };\n  var coordinateResponder = function (generatorWrapper, value, CustomMap, findEntry) {\n    AdComponent.call(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  inheritPrototype(coordinateResponder, AdComponent);\n  setTimeoutWrapper = coordinateResponder.prototype;\n  setTimeoutWrapper.writeBytesField = function () {\n    if (this.setTimeoutWrapper) {\n      var generatorWrapper = this.setTimeoutWrapper;\n      var value = this.tasks.entryIdCounter.setTimeoutWrapper;\n      try {\n        try {\n          var CustomMap = convertRectToBox(generatorWrapper.getBoundingClientRect());\n        } catch (entry) {\n          CustomMap = new handleThenable(0, 0, 0, 0);\n        }\n        var findEntry = CustomMap.right - CustomMap.left;\n        var iterateEntries = CustomMap.bottom - CustomMap.top;\n        var createCircularNode = calculateFrameOffset(generatorWrapper, value);\n        var entryIdCounter = createCircularNode.inheritPrototype;\n        var key = createCircularNode.globalScope;\n        var value = new handleThenable(Math.roundRectangle(key), Math.roundRectangle(entryIdCounter + findEntry), Math.roundRectangle(key + iterateEntries), Math.roundRectangle(entryIdCounter));\n      } catch (entry) {\n        value = createRectangle(emptyRect);\n      }\n      this.entryIdCounter = value;\n    }\n  };\n  setTimeoutWrapper.getStringOrEmpty = function () {\n    this.handleAsync = this.tasks.createDeferred.entryIdCounter;\n  };\n  setTimeoutWrapper.EnsureMutable = function (generatorWrapper) {\n    var value = getAdState(this.AdEnvironmentConfig, \"od\") == 1;\n    return isElementInvisibleOrOutOfView(generatorWrapper, this.handleAsync, this.setTimeoutWrapper, value);\n  };\n  setTimeoutWrapper.temporaryData = function () {\n    this.timestamp = accumulatePosition();\n  };\n  setTimeoutWrapper.CustomError = function () {\n    this.temporaryData();\n    this.writeBytesField();\n    if (this.setTimeoutWrapper && typeof this.setTimeoutWrapper.videoWidth === \"number\" && typeof this.setTimeoutWrapper.videoHeight === \"number\") {\n      var generatorWrapper = this.setTimeoutWrapper;\n      var value = new Size(generatorWrapper.videoWidth, generatorWrapper.videoHeight);\n      generatorWrapper = this.entryIdCounter;\n      var CustomMap = generatorWrapper.getRectangleWidth();\n      var findEntry = generatorWrapper.getRectangleHeight();\n      var iterateEntries = value.width;\n      value = value.height;\n      if (!(iterateEntries <= 0 || value <= 0 || CustomMap <= 0 || findEntry <= 0)) {\n        iterateEntries /= value;\n        generatorWrapper = createRectangle(generatorWrapper);\n        if (iterateEntries > CustomMap / findEntry) {\n          CustomMap /= iterateEntries;\n          findEntry = (findEntry - CustomMap) / 2;\n          if (findEntry > 0) {\n            findEntry = generatorWrapper.top + findEntry;\n            generatorWrapper.top = Math.roundRectangle(findEntry);\n            generatorWrapper.bottom = Math.roundRectangle(findEntry + CustomMap);\n          }\n        } else {\n          findEntry *= iterateEntries;\n          CustomMap = Math.roundRectangle((CustomMap - findEntry) / 2);\n          if (CustomMap > 0) {\n            CustomMap = generatorWrapper.left + CustomMap;\n            generatorWrapper.left = Math.roundRectangle(CustomMap);\n            generatorWrapper.right = Math.roundRectangle(CustomMap + findEntry);\n          }\n        }\n      }\n      this.entryIdCounter = generatorWrapper;\n    }\n    this.getStringOrEmpty();\n    generatorWrapper = this.entryIdCounter;\n    CustomMap = this.handleAsync;\n    if (generatorWrapper.left <= CustomMap.right && CustomMap.left <= generatorWrapper.right && generatorWrapper.top <= CustomMap.bottom && CustomMap.top <= generatorWrapper.bottom) {\n      generatorWrapper = new handleThenable(Math.max(generatorWrapper.top, CustomMap.top), Math.min(generatorWrapper.right, CustomMap.right), Math.min(generatorWrapper.bottom, CustomMap.bottom), Math.max(generatorWrapper.left, CustomMap.left));\n    } else {\n      generatorWrapper = new handleThenable(0, 0, 0, 0);\n    }\n    if (generatorWrapper.top >= generatorWrapper.bottom || generatorWrapper.left >= generatorWrapper.right) {\n      CustomMap = new handleThenable(0, 0, 0, 0);\n    } else {\n      CustomMap = generatorWrapper;\n    }\n    generatorWrapper = this.tasks.createDeferred;\n    value = iterateEntries = findEntry = 0;\n    if ((this.entryIdCounter.bottom - this.entryIdCounter.top) * (this.entryIdCounter.right - this.entryIdCounter.left) > 0) {\n      if (this.EnsureMutable(CustomMap)) {\n        CustomMap = new handleThenable(0, 0, 0, 0);\n      } else {\n        findEntry = getAdEnvironmentInstance().handleAsync;\n        value = new handleThenable(0, findEntry.height, findEntry.width, 0);\n        findEntry = calculateVisibilityRatio(CustomMap, this.entryIdCounter);\n        iterateEntries = calculateVisibilityRatio(CustomMap, getAdEnvironmentInstance().entryIdCounter);\n        value = calculateVisibilityRatio(CustomMap, value);\n      }\n    }\n    if (CustomMap.top >= CustomMap.bottom || CustomMap.left >= CustomMap.right) {\n      CustomMap = new handleThenable(0, 0, 0, 0);\n    } else {\n      CustomMap = translateRectangle(CustomMap, -this.entryIdCounter.left, -this.entryIdCounter.top);\n    }\n    if (!isAdPlayingOrMuted()) {\n      iterateEntries = findEntry = 0;\n    }\n    this.settlePromise = new AdTracker(generatorWrapper, this.entryIdCounter, CustomMap, findEntry, iterateEntries, this.timestamp, value);\n  };\n  setTimeoutWrapper.getAdName = function () {\n    return this.tasks.getAdName();\n  };\n  var defaultAdBounds = new handleThenable(0, 0, 0, 0);\n  var ExtendedAd = function (generatorWrapper, value, CustomMap) {\n    AdComponent.call(this, null, generatorWrapper, value, CustomMap);\n    this.onFulfilled = generatorWrapper.isActive();\n    this.isDone = 0;\n  };\n  inheritPrototype(ExtendedAd, coordinateResponder);\n  setTimeoutWrapper = ExtendedAd.prototype;\n  setTimeoutWrapper.writeFieldHeader = function () {\n    this.createDeferred();\n    return true;\n  };\n  setTimeoutWrapper.deferError = function () {\n    coordinateResponder.prototype.CustomError.call(this);\n  };\n  setTimeoutWrapper.temporaryData = function () {};\n  setTimeoutWrapper.writeBytesField = function () {};\n  setTimeoutWrapper.CustomError = function () {\n    this.createDeferred();\n    coordinateResponder.prototype.CustomError.call(this);\n  };\n  setTimeoutWrapper.isAndroid = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isActive();\n    if (generatorWrapper !== this.onFulfilled) {\n      if (generatorWrapper) {\n        this.createDeferred();\n      } else {\n        getAdEnvironmentInstance().entryIdCounter = new handleThenable(0, 0, 0, 0);\n        this.entryIdCounter = new handleThenable(0, 0, 0, 0);\n        this.handleAsync = new handleThenable(0, 0, 0, 0);\n        this.timestamp = -1;\n      }\n    }\n    this.onFulfilled = generatorWrapper;\n  };\n  function getAdBoundsArray(generatorWrapper) {\n    return [generatorWrapper.top, generatorWrapper.left, generatorWrapper.bottom, generatorWrapper.right];\n  }\n  var adEventTypes = {};\n  var mappedAdEventTypes = (adEventTypes.firstquartile = 0, adEventTypes.midpoint = 1, adEventTypes.thirdquartile = 2, adEventTypes.complete = 3, adEventTypes);\n  var AdProcessor = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === createCircularNode) {\n      createCircularNode = new baseResponder();\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    AdContainer.call(this, value, CustomMap, findEntry);\n    this.emptyArray = iterateEntries;\n    this.customProperty2 = 0;\n    this.keyArray = {};\n    this.hasOwnPropertySafe = new queryReporter();\n    this.updateFlags = {};\n    this.constructReflect = \"\";\n    this.includesString = null;\n    this.isObjectOrFunction = false;\n    this.entryIdCounter = [];\n    this.partialFunctionApplication = createCircularNode.tasks();\n    this.isDone = createCircularNode.setTimeoutWrapper();\n    this.handleAsync = null;\n    this.setTimeoutWrapper = -1;\n    this.createIterator = this.handleThenable = undefined;\n    this.logError = this.resolvePromise = 0;\n    this.updateMaxSize = -1;\n    this.assignPolyfill = this.toArray = false;\n    this.tryCall = this.dispatchUnhandledRejection = this.tasks = this.Nb = this.isArrayLike = 0;\n    new VisibilityMetricsCalculator();\n    this.totalAdBufferingTime = this.definePropertyPolyfill = 0;\n    this.firstQuartileTime = -1;\n    this.createObjectPolyfill = 0;\n    this.onFulfilled = noopFunction;\n    this.handleThenable = [this.base64AlphabetIndex()];\n    this.isSafari = 2;\n    this.isInternetExplorer = {};\n    this.isInternetExplorer.pause = \"p\";\n    this.isInternetExplorer.resume = \"r\";\n    this.isInternetExplorer.skip = \"s\";\n    this.isInternetExplorer.mute = \"m\";\n    this.isInternetExplorer.unmute = \"um\";\n    this.isInternetExplorer.exitfullscreen = \"ef\";\n    this.createDeferred = null;\n    this.wrapGeneratorToPromise = this.sliceArguments = false;\n    this.isFirefox = Math.floorRectangle(Date.now() / 1000 - 1704067200);\n    this.year = 0;\n  };\n  inheritPrototype(AdProcessor, AdContainer);\n  AdProcessor.prototype.getClosureFlagValue = function () {\n    return true;\n  };\n  var setAdProcessorState = function (generatorWrapper) {\n    generatorWrapper.TransformValue = true;\n    if (generatorWrapper.createObjectPolyfill != 0) {\n      generatorWrapper.createObjectPolyfill = 3;\n    }\n  };\n  var normalizeAdDuration = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      return generatorWrapper;\n    } else {\n      if (Number(generatorWrapper)) {\n        return roundToPrecision(generatorWrapper, 3);\n      } else {\n        return 0;\n      }\n    }\n  };\n  setTimeoutWrapper = AdProcessor.prototype;\n  setTimeoutWrapper.CustomMap = function (generatorWrapper) {\n    return calculateTimeDifference(this, generatorWrapper, Math.max(10000, this.setTimeoutWrapper / 3));\n  };\n  setTimeoutWrapper.parseInt32 = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    var key = this;\n    var value = this.onFulfilled(this) || {};\n    extendObject(value, iterateEntries);\n    this.setTimeoutWrapper = value.duration || this.setTimeoutWrapper;\n    this.handleThenable = value.isVpaid || this.handleThenable;\n    this.createIterator = value.isYouTube || this.createIterator;\n    GetEnvironment();\n    this.wrapGeneratorToPromise = false;\n    iterateEntries = calculateAdPlaybackTime(this, value);\n    if (getAdPlaybackType(this) === 1) {\n      createCircularNode = iterateEntries;\n    }\n    AdContainer.prototype.parseInt32.call(this, generatorWrapper, value, CustomMap, findEntry, value, createCircularNode, entryIdCounter);\n    if (this.partialFunctionApplication && this.partialFunctionApplication.setTimeoutWrapper) {\n      forEachElement(this.isDone, function (entry) {\n        entry.tasks(key);\n      });\n    }\n  };\n  setTimeoutWrapper.parseNullableInt32 = function (generatorWrapper, value, CustomMap) {\n    AdContainer.prototype.parseNullableInt32.call(this, generatorWrapper, value, CustomMap);\n    getAdEventByIndex(this).executeCallbacks(generatorWrapper, value, this.adData, CustomMap);\n    this.assignPolyfill = isVolumeNonZero(this.adData) && isVolumeNonZero(value);\n    if (-1 == this.updateMaxSize && this.toArray) {\n      this.updateMaxSize = this.getAdManager().setTimeoutWrapper.entryIdCounter;\n    }\n    this.hasOwnPropertySafe.setTimeoutWrapper = 0;\n    generatorWrapper = this.removeUniqueId();\n    if (value.isAdVisible()) {\n      this.hasOwnPropertySafe.reportEvent(\"vs\");\n    }\n    if (generatorWrapper) {\n      this.hasOwnPropertySafe.reportEvent(\"vw\");\n    }\n    if (isValidOpacity(value.volume)) {\n      this.hasOwnPropertySafe.reportEvent(\"am\");\n    }\n    if (isVolumeNonZero(value)) {\n      this.hasOwnPropertySafe.reportEvent(\"a\");\n    } else {\n      this.hasOwnPropertySafe.reportEvent(\"mut\");\n    }\n    if (this.isIphone) {\n      this.hasOwnPropertySafe.reportEvent(\"f\");\n    }\n    if (-1 != value.tasks) {\n      this.hasOwnPropertySafe.reportEvent(\"bm\");\n      if (value.tasks == 1) {\n        this.hasOwnPropertySafe.reportEvent(\"b\");\n        if (isVolumeNonZero(value)) {\n          this.hasOwnPropertySafe.reportEvent(\"umutb\");\n        }\n      }\n    }\n    if (isVolumeNonZero(value) && value.isAdVisible()) {\n      this.hasOwnPropertySafe.reportEvent(\"avs\");\n    }\n    if (this.assignPolyfill && generatorWrapper) {\n      this.hasOwnPropertySafe.reportEvent(\"avw\");\n    }\n    if (value.zone > 0) {\n      this.hasOwnPropertySafe.reportEvent(\"pv\");\n    }\n    if (isAdTimeout(this, this.getAdManager().setTimeoutWrapper.entryIdCounter, true)) {\n      this.hasOwnPropertySafe.reportEvent(\"gdr\");\n    }\n    if (calculateMaxVisibilityAtThreshold(this.getAdManager().tasks, 1) >= 2000) {\n      this.hasOwnPropertySafe.reportEvent(\"pmx\");\n    }\n    if (this.wrapGeneratorToPromise) {\n      this.hasOwnPropertySafe.reportEvent(\"tvoff\");\n    }\n  };\n  setTimeoutWrapper.base64AlphabetIndex = function () {\n    return new videoReporter();\n  };\n  setTimeoutWrapper.getAdManager = function () {\n    return this.invertAndIncrement;\n  };\n  var getAdEventByIndex = function (generatorWrapper, value) {\n    return generatorWrapper.handleThenable[value != null && value < generatorWrapper.handleThenable.length ? value : generatorWrapper.handleThenable.length - 1];\n  };\n  AdProcessor.prototype.toggleBitFlag = function () {\n    return new AdPlaybackData();\n  };\n  AdProcessor.prototype.finalizeAndAppendBuffer = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = AdContainer.prototype.finalizeAndAppendBuffer.call(this, generatorWrapper, value, CustomMap, undefined === findEntry ? -1 : findEntry);\n    generatorWrapper.fullscreen = this.isIphone;\n    generatorWrapper.setTimeoutWrapper = this.createObjectPolyfill == 2;\n    generatorWrapper.volume = CustomMap.volume;\n    if (!isValidOpacity(generatorWrapper.volume)) {\n      this.isArrayLike++;\n      value = this.adData;\n      if (isValidOpacity(value.volume)) {\n        generatorWrapper.volume = value.volume;\n      }\n    }\n    CustomMap = CustomMap.currentTime;\n    if (undefined !== CustomMap && CustomMap >= 0) {\n      generatorWrapper.mediaTime = CustomMap;\n    } else {\n      generatorWrapper.mediaTime = -1;\n    }\n    return generatorWrapper;\n  };\n  var getAdPlaybackType = function (generatorWrapper) {\n    var value = !!getAdState(getAdEnvironment().AdEnvironmentConfig, \"umt\");\n    if (generatorWrapper.handleThenable || !value && !generatorWrapper.createIterator) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n  var calculateAdPlaybackTime = function (generatorWrapper, value) {\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      value = 0;\n    } else if (-1 == generatorWrapper.decodeBase64) {\n      value = 0;\n    } else {\n      value -= generatorWrapper.decodeBase64;\n      if (value > Math.max(10000, generatorWrapper.setTimeoutWrapper / 3)) {\n        value = 0;\n      } else {\n        value = value;\n      }\n    }\n    var CustomMap = generatorWrapper.onFulfilled(generatorWrapper) || {};\n    if (undefined !== CustomMap.currentTime) {\n      CustomMap = CustomMap.currentTime;\n    } else {\n      CustomMap = generatorWrapper.resolvePromise;\n    }\n    var findEntry = CustomMap - generatorWrapper.resolvePromise;\n    var iterateEntries = 0;\n    if (findEntry >= 0) {\n      generatorWrapper.logError += value;\n      generatorWrapper.totalAdBufferingTime += Math.max(value - findEntry, 0);\n      iterateEntries = Math.min(findEntry, generatorWrapper.logError);\n    } else {\n      generatorWrapper.definePropertyPolyfill += Math.abs(findEntry);\n    }\n    if (findEntry != 0) {\n      generatorWrapper.logError = 0;\n    }\n    if (-1 == generatorWrapper.firstQuartileTime && findEntry > 0) {\n      if (adEventTimestamp >= 0) {\n        generatorWrapper.firstQuartileTime = accumulatePosition() - adEventTimestamp;\n      } else {\n        generatorWrapper.firstQuartileTime = -1;\n      }\n    }\n    generatorWrapper.resolvePromise = CustomMap;\n    return iterateEntries;\n  };\n  AdProcessor.prototype.toArray = function (generatorWrapper) {\n    getAdEnvironmentInstance();\n    if (this.isIphone) {\n      return 1;\n    } else {\n      return AdContainer.prototype.toArray.call(this, generatorWrapper);\n    }\n  };\n  AdProcessor.prototype.generatorYield = function () {\n    return 1;\n  };\n  AdProcessor.prototype.getDuration = function () {\n    return this.setTimeoutWrapper;\n  };\n  var addToAdQueue = function (generatorWrapper, value) {\n    if (!someElement(generatorWrapper.isDone, function (CustomMap) {\n      return CustomMap.createDeferred == value.createDeferred;\n    })) {\n      generatorWrapper.isDone.push(value);\n    }\n  };\n  var checkAdQueueTimeout = function (generatorWrapper) {\n    var value = calculateVisibilityAtThreshold(generatorWrapper.getAdManager().entryIdCounter, 1);\n    return isAdTimeout(generatorWrapper, value);\n  };\n  var isAdTimeout = function (generatorWrapper, value, CustomMap) {\n    if (value >= 15000) {\n      return true;\n    } else {\n      if (generatorWrapper.toArray) {\n        if (undefined === CustomMap ? 0 : CustomMap) {\n          return true;\n        } else {\n          if (generatorWrapper.setTimeoutWrapper > 0) {\n            return value >= generatorWrapper.setTimeoutWrapper / 2;\n          } else {\n            if (generatorWrapper.updateMaxSize > 0) {\n              return value >= generatorWrapper.updateMaxSize;\n            } else {\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n  };\n  var generateAdPlaybackData = function (generatorWrapper) {\n    var value = {};\n    var CustomMap = getAdEnvironmentInstance();\n    value.insideIframe = CustomMap.setTimeoutWrapper;\n    value.unmeasurable = generatorWrapper.uniqueIdCounter;\n    value.position = generatorWrapper.getUserAgent();\n    value.exposure = generatorWrapper.adData.zone;\n    value.documentSize = CustomMap.createDeferred;\n    value.viewportSize = new Size(CustomMap.entryIdCounter.getRectangleWidth(), CustomMap.entryIdCounter.getRectangleHeight());\n    if (generatorWrapper.createDeferred != null) {\n      value.presenceData = generatorWrapper.createDeferred;\n    }\n    value.screenShare = generatorWrapper.adData.ta;\n    return value;\n  };\n  var generateDetailedAdPlaybackData = function (generatorWrapper) {\n    var value = roundToPrecision(generatorWrapper.adData.zone, 2);\n    var CustomMap = generatorWrapper.hasOwnPropertySafe.setTimeoutWrapper;\n    var findEntry = generatorWrapper.adData;\n    var iterateEntries = getAdEventByIndex(generatorWrapper);\n    var createCircularNode = normalizeAdDuration(iterateEntries.createDeferred);\n    var entryIdCounter = normalizeAdDuration(iterateEntries.isDone);\n    var key = normalizeAdDuration(findEntry.volume);\n    var value = roundToPrecision(iterateEntries.onFulfilled, 2);\n    var entry = roundToPrecision(iterateEntries.resolvePromise, 2);\n    var currentEntry = roundToPrecision(findEntry.zone, 2);\n    var foundEntry = roundToPrecision(iterateEntries.logError, 2);\n    var resolveFunction = roundToPrecision(iterateEntries.tryCall, 2);\n    findEntry = roundToPrecision(findEntry.ta, 2);\n    generatorWrapper = createRectangle(generatorWrapper.getUserAgent());\n    generatorWrapper.roundRectangle();\n    iterateEntries = getMaxVisibility(iterateEntries, false);\n    return {\n      createTrustedURL: value,\n      removeElementsByCondition: CustomMap,\n      formatLongNumber: createCircularNode,\n      highOrderInteger: entryIdCounter,\n      reduceElements: key,\n      padNumber: value,\n      unusedVar1: entry,\n      zone: currentEntry,\n      getFormattedNumber: foundEntry,\n      calculateIntegers: resolveFunction,\n      ta: findEntry,\n      position: generatorWrapper,\n      parseAndSetBigIntegers: iterateEntries\n    };\n  };\n  var updateAdPlaybackData = function (generatorWrapper, value) {\n    ensureArraySize(generatorWrapper.entryIdCounter, value, function () {\n      return {\n        createTrustedURL: 0,\n        removeElementsByCondition: undefined,\n        formatLongNumber: -1,\n        highOrderInteger: -1,\n        reduceElements: -1,\n        padNumber: -1,\n        unusedVar1: -1,\n        zone: -1,\n        getFormattedNumber: -1,\n        calculateIntegers: -1,\n        ta: -1,\n        position: undefined,\n        parseAndSetBigIntegers: []\n      };\n    });\n    generatorWrapper.entryIdCounter[value] = generateDetailedAdPlaybackData(generatorWrapper);\n  };\n  var ensureArraySize = function (generatorWrapper, value, CustomMap) {\n    for (var findEntry = generatorWrapper.length; findEntry < value + 1;) {\n      generatorWrapper.push(CustomMap());\n      findEntry++;\n    }\n  };\n  var getAdImpressionData = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.updateFlags[value];\n    if (findEntry != null) {\n      return findEntry;\n    }\n    findEntry = verifyRequest(generatorWrapper, value);\n    var iterateEntries = findKeyInObject(function (createCircularNode) {\n      return createCircularNode == value;\n    });\n    generatorWrapper = generateAdRequestData(generatorWrapper, findEntry, findEntry, CustomMap, mappedAdEventTypes[AdEventNames[iterateEntries]]);\n    if (value == \"fully_viewable_audible_half_duration_impression\") {\n      generatorWrapper.std = \"csm\";\n    }\n    return generatorWrapper;\n  };\n  var generateImpressionDataArray = function (generatorWrapper, value, CustomMap) {\n    var findEntry = [value];\n    if (generatorWrapper != value || CustomMap != value) {\n      findEntry.unshift(generatorWrapper);\n      findEntry.push(CustomMap);\n    }\n    return findEntry;\n  };\n  var generateAdRequestData = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (generatorWrapper.uniqueIdCounter) {\n      return {\n        if: 0,\n        filterAndLinkAdContainers: 0\n      };\n    }\n    var createCircularNode = createRectangle(generatorWrapper.getUserAgent());\n    createCircularNode.roundRectangle();\n    var entryIdCounter = getAdEnvironmentInstance();\n    var key = getAdEnvironment();\n    var value = generatorWrapper.getAdManager();\n    var entry = generatorWrapper.globalObject ? generatorWrapper.globalObject.getAdName() : \"ns\";\n    var currentEntry = {};\n    if (entryIdCounter.setTimeoutWrapper) {\n      currentEntry[\"if\"] = 1;\n    } else {\n      currentEntry[\"if\"] = undefined;\n    }\n    if (generatorWrapper.handleAsync) {\n      currentEntry.sdk = generatorWrapper.handleAsync;\n    } else {\n      currentEntry.sdk = undefined;\n    }\n    currentEntry.rejectFunction = generatorWrapper.hasOwnPropertySafe;\n    currentEntry.resolveFunction = [createCircularNode.top, createCircularNode.left, createCircularNode.bottom, createCircularNode.right];\n    currentEntry.tos = calculateTotalVisibility(value.tasks, false);\n    currentEntry.mtos = getMaxVisibility(value);\n    currentEntry.mcvt = value.year.setTimeoutWrapper;\n    currentEntry.removeRelatedAdContainers = undefined;\n    currentEntry.vht = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill == 2);\n    currentEntry.mut = value.assignPolyfill.setTimeoutWrapper;\n    currentEntry.generatorWrapper = normalizeAdDuration(generatorWrapper.adData.volume);\n    currentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    if (generatorWrapper.isIphone) {\n      currentEntry.incrementPropertyGInBRepeated = 1;\n    } else {\n      currentEntry.incrementPropertyGInBRepeated = 0;\n    }\n    currentEntry.CustomMetric = value.handleThenable.entryIdCounter;\n    currentEntry.metricNames = value.handleAsync.entryIdCounter;\n    if (value.createDeferred > 0) {\n      currentEntry.assignSession = 1;\n    } else {\n      currentEntry.assignSession = 0;\n    }\n    currentEntry.audioToString = calculateTotalVisibility(value.entryIdCounter);\n    currentEntry.ssb = calculateTotalVisibility(value.toArray, false);\n    currentEntry.amtos = calculateMaxVisibility(value.entryIdCounter, false);\n    currentEntry.uac = generatorWrapper.isArrayLike;\n    currentEntry.vpt = value.setTimeoutWrapper.entryIdCounter;\n    if (entry == \"nio\") {\n      currentEntry.nio = 1;\n      currentEntry.adVerificationMeasurementSystem = \"nio\";\n    }\n    currentEntry.gmm = \"4\";\n    if (isAdTimeout(generatorWrapper, value.setTimeoutWrapper.entryIdCounter, true)) {\n      currentEntry.gdr = 1;\n    } else {\n      currentEntry.gdr = 0;\n    }\n    currentEntry.efpf = generatorWrapper.isSafari;\n    if (entry == \"gsv\" || entry == \"nis\") {\n      createCircularNode = generatorWrapper.globalObject;\n      if (createCircularNode.isDone > 0) {\n        currentEntry.nnutPlaceholder = createCircularNode.isDone;\n      }\n    }\n    currentEntry.timeCodeMethod = getAdPlaybackType(generatorWrapper);\n    currentEntry.networkMediaType = generatorWrapper.definePropertyPolyfill;\n    currentEntry.metricValidators = generatorWrapper.totalAdBufferingTime;\n    currentEntry.pixelAspectRatio = generatorWrapper.firstQuartileTime;\n    currentEntry.isVpaid = generatorWrapper.handleThenable;\n    currentEntry.duration = generatorWrapper.setTimeoutWrapper;\n    currentEntry.viewModeTime = generatorWrapper.resolvePromise;\n    currentEntry.screenDimensions = generatorWrapper.hasOwnPropertySafe.setTimeoutWrapper;\n    if (generatorWrapper.entryIdCounter.length >= 1) {\n      currentEntry.image0 = generatorWrapper.entryIdCounter[0].removeElementsByCondition;\n      currentEntry.attribute0 = [generatorWrapper.entryIdCounter[0].reduceElements];\n      currentEntry.coordinate0 = [generatorWrapper.entryIdCounter[0].zone];\n      currentEntry.subSample0 = [generatorWrapper.entryIdCounter[0].ta];\n      createCircularNode = generatorWrapper.entryIdCounter[0].position;\n      if (createCircularNode) {\n        currentEntry.position0 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.position0 = undefined;\n      }\n    }\n    if (generatorWrapper.entryIdCounter.length >= 2) {\n      currentEntry.i1 = generatorWrapper.entryIdCounter[1].removeElementsByCondition;\n      currentEntry.a1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].formatLongNumber, generatorWrapper.entryIdCounter[1].reduceElements, generatorWrapper.entryIdCounter[1].highOrderInteger);\n      currentEntry.c1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].padNumber, generatorWrapper.entryIdCounter[1].zone, generatorWrapper.entryIdCounter[1].unusedVar1);\n      currentEntry.ss1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].getFormattedNumber, generatorWrapper.entryIdCounter[1].ta, generatorWrapper.entryIdCounter[1].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[1].position;\n      if (createCircularNode) {\n        currentEntry.p1 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p1 = undefined;\n      }\n      currentEntry.mediaTimeOffset1 = generatorWrapper.entryIdCounter[1].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 3) {\n      currentEntry.i2 = generatorWrapper.entryIdCounter[2].removeElementsByCondition;\n      currentEntry.a2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].formatLongNumber, generatorWrapper.entryIdCounter[2].reduceElements, generatorWrapper.entryIdCounter[2].highOrderInteger);\n      currentEntry.c2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].padNumber, generatorWrapper.entryIdCounter[2].zone, generatorWrapper.entryIdCounter[2].unusedVar1);\n      currentEntry.ss2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].getFormattedNumber, generatorWrapper.entryIdCounter[2].ta, generatorWrapper.entryIdCounter[2].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[2].position;\n      if (createCircularNode) {\n        currentEntry.p2 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p2 = undefined;\n      }\n      currentEntry.mtos2 = generatorWrapper.entryIdCounter[2].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 4) {\n      currentEntry.i3 = generatorWrapper.entryIdCounter[3].removeElementsByCondition;\n      currentEntry.a3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].formatLongNumber, generatorWrapper.entryIdCounter[3].reduceElements, generatorWrapper.entryIdCounter[3].highOrderInteger);\n      currentEntry.c3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].padNumber, generatorWrapper.entryIdCounter[3].zone, generatorWrapper.entryIdCounter[3].unusedVar1);\n      currentEntry.ss3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].getFormattedNumber, generatorWrapper.entryIdCounter[3].ta, generatorWrapper.entryIdCounter[3].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[3].position;\n      if (createCircularNode) {\n        currentEntry.p3 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p3 = undefined;\n      }\n      currentEntry.mtos3 = generatorWrapper.entryIdCounter[3].parseAndSetBigIntegers;\n    }\n    currentEntry.checksum = statusRetriever(generatorWrapper.hasOwnPropertySafe);\n    if (value) {\n      currentEntry.browserFeatures = reportRetriever(generatorWrapper.hasOwnPropertySafe);\n      currentEntry.deviceViewport = value.setTimeoutWrapper.tasks;\n      currentEntry.deviceViewportScale = calculateAverageVisibility(value.tasks, 0.5);\n      currentEntry.deviceFullViewportScale = calculateAverageVisibility(value.tasks, 1);\n      currentEntry.defaultAudioVideoSync = calculateAverageVisibility(value.entryIdCounter, 0.5);\n      currentEntry.defaultAudioFrequencyVideoSync = calculateAverageVisibility(value.entryIdCounter, 1);\n      if (CustomMap) {\n        value.setTimeoutWrapper.tasks = 0;\n        resetVisibilityMetrics(value.tasks);\n        resetVisibilityMetrics(value.entryIdCounter);\n      }\n      if (generatorWrapper.removeUniqueId()) {\n        currentEntry.deviceTotalOffsetScale = value.handleThenable;\n        currentEntry.defaultAudioVideo = value.dispatchUnhandledRejection;\n        currentEntry.deviceTotalOffsetScaleSum = generatorWrapper.customProperty2 + 1;\n        if (CustomMap) {\n          value.handleThenable = 0;\n          value.dispatchUnhandledRejection = 0;\n          generatorWrapper.customProperty2++;\n        }\n      }\n      currentEntry.deviceAdTime = value.handleAsync.tasks;\n      currentEntry.deviceFullScreenTime = value.handleThenable.tasks;\n      if (CustomMap) {\n        value.handleAsync.tasks = 0;\n        value.handleThenable.tasks = 0;\n      }\n    }\n    currentEntry.removeRelatedAdContainers = [entryIdCounter.createDeferred.width, entryIdCounter.createDeferred.height];\n    currentEntry.browserSize = [entryIdCounter.entryIdCounter.getRectangleWidth(), entryIdCounter.entryIdCounter.getRectangleHeight()];\n    currentEntry.screenSize = [entryIdCounter.handleAsync.width, entryIdCounter.handleAsync.height];\n    currentEntry.domain = entryIdCounter.domain;\n    if (generatorWrapper.Nb) {\n      currentEntry.videoDataStream = generatorWrapper.Nb;\n    }\n    if (generatorWrapper.isDone.length > 0 || generatorWrapper.partialFunctionApplication) {\n      value = copyArray(generatorWrapper.isDone);\n      if (generatorWrapper.partialFunctionApplication) {\n        value.push(generatorWrapper.partialFunctionApplication);\n      }\n      currentEntry.pingsArray = mapElements(value, function (foundEntry) {\n        return foundEntry.toString();\n      });\n    }\n    value = mapElements(filterElements(generatorWrapper.isDone, function (foundEntry) {\n      return foundEntry.isDone();\n    }), function (foundEntry) {\n      return foundEntry.getAdId();\n    });\n    uniqueElements(value);\n    currentEntry.checksumEntities = value;\n    if (generatorWrapper.tasks) {\n      currentEntry.videoMergeError = generatorWrapper.tasks;\n    }\n    if (generatorWrapper.dispatchUnhandledRejection) {\n      currentEntry.videoMergeMark = generatorWrapper.dispatchUnhandledRejection;\n    }\n    if (generatorWrapper.tryCall) {\n      currentEntry.videoMergeIEC = generatorWrapper.tryCall;\n    }\n    if (generatorWrapper.globalObject) {\n      currentEntry.adVerificationMeasurementSystem = generatorWrapper.globalObject.getAdName();\n    } else {\n      currentEntry.adVerificationMeasurementSystem = \"ns\";\n    }\n    if (generatorWrapper.globalObject) {\n      extendObject(currentEntry, generatorWrapper.globalObject.encodeString());\n    }\n    if (findEntry) {\n      currentEntry.CustomMap = roundToPrecision(generatorWrapper.adData.zone, 2);\n      currentEntry.safeSelector = roundToPrecision(generatorWrapper.adData.ta, 2);\n    } else {\n      currentEntry.totalTimeHeld = accumulatePosition() - yearOffset;\n    }\n    currentEntry.isEdge = roundToPrecision(value.resolvePromise, 2);\n    currentEntry.isGecko = roundToPrecision(value.onFulfilled, 2);\n    currentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    currentEntry.networkVersion = normalizeAdDuration(value.createDeferred);\n    currentEntry.latestTimeElapsed = roundToPrecision(generatorWrapper.set34Clear14557Flag, 2);\n    findEntry = getAdEventByIndex(generatorWrapper, iterateEntries);\n    getMaxVisibility(value);\n    currentEntry.qualityMediaTotalOffsetScale = getMaxVisibility(findEntry);\n    currentEntry.qualityNetworkChecksum = roundToPrecis",
  "rrentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    if (generatorWrapper.isIphone) {\n      currentEntry.incrementPropertyGInBRepeated = 1;\n    } else {\n      currentEntry.incrementPropertyGInBRepeated = 0;\n    }\n    currentEntry.CustomMetric = value.handleThenable.entryIdCounter;\n    currentEntry.metricNames = value.handleAsync.entryIdCounter;\n    if (value.createDeferred > 0) {\n      currentEntry.assignSession = 1;\n    } else {\n      currentEntry.assignSession = 0;\n    }\n    currentEntry.audioToString = calculateTotalVisibility(value.entryIdCounter);\n    currentEntry.ssb = calculateTotalVisibility(value.toArray, false);\n    currentEntry.amtos = calculateMaxVisibility(value.entryIdCounter, false);\n    currentEntry.uac = generatorWrapper.isArrayLike;\n    currentEntry.vpt = value.setTimeoutWrapper.entryIdCounter;\n    if (entry == \"nio\") {\n      currentEntry.nio = 1;\n      currentEntry.adVerificationMeasurementSystem = \"nio\";\n    }\n    currentEntry.gmm = \"4\";\n    if (isAdTimeout(generatorWrapper, value.setTimeoutWrapper.entryIdCounter, true)) {\n      currentEntry.gdr = 1;\n    } else {\n      currentEntry.gdr = 0;\n    }\n    currentEntry.efpf = generatorWrapper.isSafari;\n    if (entry == \"gsv\" || entry == \"nis\") {\n      createCircularNode = generatorWrapper.globalObject;\n      if (createCircularNode.isDone > 0) {\n        currentEntry.nnutPlaceholder = createCircularNode.isDone;\n      }\n    }\n    currentEntry.timeCodeMethod = getAdPlaybackType(generatorWrapper);\n    currentEntry.networkMediaType = generatorWrapper.definePropertyPolyfill;\n    currentEntry.metricValidators = generatorWrapper.totalAdBufferingTime;\n    currentEntry.pixelAspectRatio = generatorWrapper.firstQuartileTime;\n    currentEntry.isVpaid = generatorWrapper.handleThenable;\n    currentEntry.duration = generatorWrapper.setTimeoutWrapper;\n    currentEntry.viewModeTime = generatorWrapper.resolvePromise;\n    currentEntry.screenDimensions = generatorWrapper.hasOwnPropertySafe.setTimeoutWrapper;\n    if (generatorWrapper.entryIdCounter.length >= 1) {\n      currentEntry.image0 = generatorWrapper.entryIdCounter[0].removeElementsByCondition;\n      currentEntry.attribute0 = [generatorWrapper.entryIdCounter[0].reduceElements];\n      currentEntry.coordinate0 = [generatorWrapper.entryIdCounter[0].zone];\n      currentEntry.subSample0 = [generatorWrapper.entryIdCounter[0].ta];\n      createCircularNode = generatorWrapper.entryIdCounter[0].position;\n      if (createCircularNode) {\n        currentEntry.position0 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.position0 = undefined;\n      }\n    }\n    if (generatorWrapper.entryIdCounter.length >= 2) {\n      currentEntry.i1 = generatorWrapper.entryIdCounter[1].removeElementsByCondition;\n      currentEntry.a1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].formatLongNumber, generatorWrapper.entryIdCounter[1].reduceElements, generatorWrapper.entryIdCounter[1].highOrderInteger);\n      currentEntry.c1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].padNumber, generatorWrapper.entryIdCounter[1].zone, generatorWrapper.entryIdCounter[1].unusedVar1);\n      currentEntry.ss1 = generateImpressionDataArray(generatorWrapper.entryIdCounter[1].getFormattedNumber, generatorWrapper.entryIdCounter[1].ta, generatorWrapper.entryIdCounter[1].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[1].position;\n      if (createCircularNode) {\n        currentEntry.p1 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p1 = undefined;\n      }\n      currentEntry.mediaTimeOffset1 = generatorWrapper.entryIdCounter[1].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 3) {\n      currentEntry.i2 = generatorWrapper.entryIdCounter[2].removeElementsByCondition;\n      currentEntry.a2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].formatLongNumber, generatorWrapper.entryIdCounter[2].reduceElements, generatorWrapper.entryIdCounter[2].highOrderInteger);\n      currentEntry.c2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].padNumber, generatorWrapper.entryIdCounter[2].zone, generatorWrapper.entryIdCounter[2].unusedVar1);\n      currentEntry.ss2 = generateImpressionDataArray(generatorWrapper.entryIdCounter[2].getFormattedNumber, generatorWrapper.entryIdCounter[2].ta, generatorWrapper.entryIdCounter[2].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[2].position;\n      if (createCircularNode) {\n        currentEntry.p2 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p2 = undefined;\n      }\n      currentEntry.mtos2 = generatorWrapper.entryIdCounter[2].parseAndSetBigIntegers;\n    }\n    if (generatorWrapper.entryIdCounter.length >= 4) {\n      currentEntry.i3 = generatorWrapper.entryIdCounter[3].removeElementsByCondition;\n      currentEntry.a3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].formatLongNumber, generatorWrapper.entryIdCounter[3].reduceElements, generatorWrapper.entryIdCounter[3].highOrderInteger);\n      currentEntry.c3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].padNumber, generatorWrapper.entryIdCounter[3].zone, generatorWrapper.entryIdCounter[3].unusedVar1);\n      currentEntry.ss3 = generateImpressionDataArray(generatorWrapper.entryIdCounter[3].getFormattedNumber, generatorWrapper.entryIdCounter[3].ta, generatorWrapper.entryIdCounter[3].calculateIntegers);\n      createCircularNode = generatorWrapper.entryIdCounter[3].position;\n      if (createCircularNode) {\n        currentEntry.p3 = getAdBoundsArray(createCircularNode);\n      } else {\n        currentEntry.p3 = undefined;\n      }\n      currentEntry.mtos3 = generatorWrapper.entryIdCounter[3].parseAndSetBigIntegers;\n    }\n    currentEntry.checksum = statusRetriever(generatorWrapper.hasOwnPropertySafe);\n    if (value) {\n      currentEntry.browserFeatures = reportRetriever(generatorWrapper.hasOwnPropertySafe);\n      currentEntry.deviceViewport = value.setTimeoutWrapper.tasks;\n      currentEntry.deviceViewportScale = calculateAverageVisibility(value.tasks, 0.5);\n      currentEntry.deviceFullViewportScale = calculateAverageVisibility(value.tasks, 1);\n      currentEntry.defaultAudioVideoSync = calculateAverageVisibility(value.entryIdCounter, 0.5);\n      currentEntry.defaultAudioFrequencyVideoSync = calculateAverageVisibility(value.entryIdCounter, 1);\n      if (CustomMap) {\n        value.setTimeoutWrapper.tasks = 0;\n        resetVisibilityMetrics(value.tasks);\n        resetVisibilityMetrics(value.entryIdCounter);\n      }\n      if (generatorWrapper.removeUniqueId()) {\n        currentEntry.deviceTotalOffsetScale = value.handleThenable;\n        currentEntry.defaultAudioVideo = value.dispatchUnhandledRejection;\n        currentEntry.deviceTotalOffsetScaleSum = generatorWrapper.customProperty2 + 1;\n        if (CustomMap) {\n          value.handleThenable = 0;\n          value.dispatchUnhandledRejection = 0;\n          generatorWrapper.customProperty2++;\n        }\n      }\n      currentEntry.deviceAdTime = value.handleAsync.tasks;\n      currentEntry.deviceFullScreenTime = value.handleThenable.tasks;\n      if (CustomMap) {\n        value.handleAsync.tasks = 0;\n        value.handleThenable.tasks = 0;\n      }\n    }\n    currentEntry.removeRelatedAdContainers = [entryIdCounter.createDeferred.width, entryIdCounter.createDeferred.height];\n    currentEntry.browserSize = [entryIdCounter.entryIdCounter.getRectangleWidth(), entryIdCounter.entryIdCounter.getRectangleHeight()];\n    currentEntry.screenSize = [entryIdCounter.handleAsync.width, entryIdCounter.handleAsync.height];\n    currentEntry.domain = entryIdCounter.domain;\n    if (generatorWrapper.Nb) {\n      currentEntry.videoDataStream = generatorWrapper.Nb;\n    }\n    if (generatorWrapper.isDone.length > 0 || generatorWrapper.partialFunctionApplication) {\n      value = copyArray(generatorWrapper.isDone);\n      if (generatorWrapper.partialFunctionApplication) {\n        value.push(generatorWrapper.partialFunctionApplication);\n      }\n      currentEntry.pingsArray = mapElements(value, function (foundEntry) {\n        return foundEntry.toString();\n      });\n    }\n    value = mapElements(filterElements(generatorWrapper.isDone, function (foundEntry) {\n      return foundEntry.isDone();\n    }), function (foundEntry) {\n      return foundEntry.getAdId();\n    });\n    uniqueElements(value);\n    currentEntry.checksumEntities = value;\n    if (generatorWrapper.tasks) {\n      currentEntry.videoMergeError = generatorWrapper.tasks;\n    }\n    if (generatorWrapper.dispatchUnhandledRejection) {\n      currentEntry.videoMergeMark = generatorWrapper.dispatchUnhandledRejection;\n    }\n    if (generatorWrapper.tryCall) {\n      currentEntry.videoMergeIEC = generatorWrapper.tryCall;\n    }\n    if (generatorWrapper.globalObject) {\n      currentEntry.adVerificationMeasurementSystem = generatorWrapper.globalObject.getAdName();\n    } else {\n      currentEntry.adVerificationMeasurementSystem = \"ns\";\n    }\n    if (generatorWrapper.globalObject) {\n      extendObject(currentEntry, generatorWrapper.globalObject.encodeString());\n    }\n    if (findEntry) {\n      currentEntry.CustomMap = roundToPrecision(generatorWrapper.adData.zone, 2);\n      currentEntry.safeSelector = roundToPrecision(generatorWrapper.adData.ta, 2);\n    } else {\n      currentEntry.totalTimeHeld = accumulatePosition() - yearOffset;\n    }\n    currentEntry.isEdge = roundToPrecision(value.resolvePromise, 2);\n    currentEntry.isGecko = roundToPrecision(value.onFulfilled, 2);\n    currentEntry.mediaVersion = normalizeAdDuration(value.isDone);\n    currentEntry.networkVersion = normalizeAdDuration(value.createDeferred);\n    currentEntry.latestTimeElapsed = roundToPrecision(generatorWrapper.set34Clear14557Flag, 2);\n    findEntry = getAdEventByIndex(generatorWrapper, iterateEntries);\n    getMaxVisibility(value);\n    currentEntry.qualityMediaTotalOffsetScale = getMaxVisibility(findEntry);\n    currentEntry.qualityNetworkChecksum = roundToPrecision(findEntry.onFulfilled, 2);\n    currentEntry.qualityMediaVersion = normalizeAdDuration(findEntry.isDone);\n    currentEntry.qualityNetworkVersion = normalizeAdDuration(findEntry.createDeferred);\n    if (findEntry.createDeferred > 0) {\n      currentEntry.qualityAdScore = 1;\n    } else {\n      currentEntry.qualityAdScore = 0;\n    }\n    currentEntry.getTopMostAccessibleWindow = generatorWrapper.constructReflect;\n    if (!currentEntry.adVerificationMeasurementSystem) {\n      currentEntry.adVerificationMeasurementSystem = \"geo\";\n    }\n    currentEntry.playerSizeMethod = value.updateMaxSize.entryIdCounter;\n    currentEntry.playerSizeValue = value.updateMaxSize.getAdStateValue();\n    currentEntry.playerSizeFullValue = value.definePropertyPolyfill.getAdStateValue();\n    currentEntry.playerSizeAttribute = value.createIterator.getAdStateValue();\n    key = serializeAdStates(key.AdEnvironmentConfig);\n    if (key.length) {\n      currentEntry.videoElementId = key;\n    }\n    if (generatorWrapper.createDeferred) {\n      extendObject(currentEntry, getPerformanceData(generatorWrapper.createDeferred));\n    }\n    currentEntry.adVerificationAdSystem = generatorWrapper.isIos();\n    currentEntry.filterAndLinkAdContainers = generatorWrapper.identityFunction();\n    currentEntry.ensureQueryIdAdState = zeroReset(generatorWrapper);\n    return currentEntry;\n  };\n  var verifyRequest = function (generatorWrapper, value) {\n    if (containsElement(httpProtocol, value)) {\n      return true;\n    }\n    var CustomMap = generatorWrapper.keyArray[value];\n    if (undefined !== CustomMap) {\n      generatorWrapper.keyArray[value] = true;\n      return !CustomMap;\n    } else {\n      return false;\n    }\n  };\n  AdProcessor.prototype.identityFunction = function () {\n    if (this.uniqueIdCounter) {\n      return 2;\n    } else {\n      if (checkAdQueueTimeout(this)) {\n        return 5;\n      } else {\n        if (this.removeUniqueId()) {\n          return 4;\n        } else {\n          return 3;\n        }\n      }\n    }\n  };\n  AdProcessor.prototype.isIos = function () {\n    if (this.sliceArguments) {\n      if (this.getAdManager().handleAsync.setTimeoutWrapper >= 2000) {\n        return 4;\n      } else {\n        return 3;\n      }\n    } else {\n      return 2;\n    }\n  };\n  var zeroReset = function (generatorWrapper) {\n    var value = generatorWrapper.year.toString(10).padStart(2, \"0\");\n    value = \"\" + generatorWrapper.isFirefox + value;\n    if (generatorWrapper.year < 99) {\n      generatorWrapper.year++;\n    }\n    return value;\n  };\n  var currentDate = Date.now();\n  var checksum = function () {\n    this.entryIdCounter = {};\n    var generatorWrapper = getWindowForDocument();\n    assignSession(this, generatorWrapper, document);\n    var value = browserSize();\n    try {\n      if (value == \"1\") {\n        for (var CustomMap = generatorWrapper.parent; CustomMap != generatorWrapper.top; CustomMap = CustomMap.parent) {\n          assignSession(this, CustomMap, CustomMap.document);\n        }\n        assignSession(this, generatorWrapper.top, generatorWrapper.top.document);\n      }\n    } catch (findEntry) {}\n  };\n  var browserSize = function () {\n    var generatorWrapper = document.documentElement;\n    try {\n      if (!isAccessibleFrame(getWindowForDocument().top)) {\n        return \"2\";\n      }\n      var value = [];\n      var CustomMap = getWindowForDocument(generatorWrapper.ownerDocument);\n      for (generatorWrapper = CustomMap; generatorWrapper != CustomMap.top; generatorWrapper = generatorWrapper.parent) {\n        if (generatorWrapper.frameElement) {\n          value.push(generatorWrapper.frameElement);\n        } else {\n          break;\n        }\n      }\n      if (value && value.length != 0) {\n        return \"1\";\n      } else {\n        return \"0\";\n      }\n    } catch (findEntry) {\n      return \"2\";\n    }\n  };\n  var assignSession = function (generatorWrapper, value, CustomMap) {\n    addEventListenerWithCapture(CustomMap, \"mousedown\", function () {\n      return incrementPropertyL(generatorWrapper);\n    }, 301);\n    addEventListenerWithCapture(value, \"scroll\", function () {\n      return incrementPropertyGInB(generatorWrapper);\n    }, 302);\n    addEventListenerWithCapture(CustomMap, \"touchmove\", function () {\n      return incrementPropertyGInBRepeated(generatorWrapper);\n    }, 303);\n    addEventListenerWithCapture(CustomMap, \"mousemove\", function () {\n      return incrementPropertyO(generatorWrapper);\n    }, 304);\n    addEventListenerWithCapture(CustomMap, \"keydown\", function () {\n      return incrementPropertyJ(generatorWrapper);\n    }, 305);\n  };\n  var incrementPropertyL = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.entryIdCounter, function (value) {\n      if (!(value.setTimeoutWrapper > 100000)) {\n        ++value.setTimeoutWrapper;\n      }\n    });\n  };\n  var incrementPropertyGInB = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.entryIdCounter, function (value) {\n      if (!(value.entryIdCounter > 100000)) {\n        ++value.entryIdCounter;\n      }\n    });\n  };\n  var incrementPropertyGInBRepeated = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.entryIdCounter, function (value) {\n      if (!(value.entryIdCounter > 100000)) {\n        ++value.entryIdCounter;\n      }\n    });\n  };\n  var incrementPropertyJ = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.entryIdCounter, function (value) {\n      if (!(value.tasks > 100000)) {\n        ++value.tasks;\n      }\n    });\n  };\n  var incrementPropertyO = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.entryIdCounter, function (value) {\n      if (!(value.createDeferred > 100000)) {\n        ++value.createDeferred;\n      }\n    });\n  };\n  var screenDimensions = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  var findAdContainerByNa = function (generatorWrapper, value) {\n    return findElement(generatorWrapper.entryIdCounter, function (CustomMap) {\n      return CustomMap.constructReflect == value;\n    });\n  };\n  var findAdContainerByNb = function (generatorWrapper, value) {\n    if (value) {\n      return findElement(generatorWrapper.entryIdCounter, function (CustomMap) {\n        return CustomMap.setPrototypeOfPolyfill.trimString == value;\n      });\n    } else {\n      return null;\n    }\n  };\n  var findAdContainerByNaAndType2 = function (generatorWrapper, value) {\n    return findElement(generatorWrapper.tasks, function (CustomMap) {\n      return CustomMap.generatorYield() == 2 && CustomMap.constructReflect == value;\n    });\n  };\n  var mergeAdContainerArrays = function () {\n    var generatorWrapper = globalAdContainersManager;\n    if (generatorWrapper.entryIdCounter.length == 0) {\n      return generatorWrapper.tasks;\n    } else {\n      if (generatorWrapper.tasks.length == 0) {\n        return generatorWrapper.entryIdCounter;\n      } else {\n        return concatArrays(generatorWrapper.tasks, generatorWrapper.entryIdCounter);\n      }\n    }\n  };\n  screenDimensions.prototype.resetAdStateController = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  var removeAdContainer = function (generatorWrapper, value) {\n    if (value.generatorYield() == 1) {\n      generatorWrapper = generatorWrapper.entryIdCounter;\n    } else {\n      generatorWrapper = generatorWrapper.tasks;\n    }\n    var CustomMap = findElementIndex(generatorWrapper, function (findEntry) {\n      return findEntry == value;\n    });\n    if (-1 != CustomMap) {\n      generatorWrapper.splice(CustomMap, 1);\n      if (value.globalObject) {\n        value.globalObject.isOpera();\n      }\n      value.markAsCompleted();\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var removeRelatedAdContainers = function (generatorWrapper) {\n    var value = globalAdContainersManager;\n    if (removeAdContainer(value, generatorWrapper)) {\n      switch (generatorWrapper.generatorYield()) {\n        case 0:\n          var CustomMap = function () {\n            return null;\n          };\n        case 2:\n          CustomMap = function () {\n            return findAdContainerByNaAndType2(value, generatorWrapper.constructReflect);\n          };\n          break;\n        case 1:\n          CustomMap = function () {\n            return findAdContainerByNa(value, generatorWrapper.constructReflect);\n          };\n      }\n      for (var findEntry = CustomMap(); findEntry; findEntry = CustomMap()) {\n        removeAdContainer(value, findEntry);\n      }\n    }\n  };\n  var addUniqueAdContainers = function (generatorWrapper) {\n    var value = globalAdContainersManager;\n    generatorWrapper = filterElements(generatorWrapper, function (CustomMap) {\n      return !findAdContainerByNb(value, CustomMap.setPrototypeOfPolyfill.trimString);\n    });\n    value.entryIdCounter.push.apply(value.entryIdCounter, toArray(generatorWrapper));\n  };\n  var addBatchAdContainers = function (generatorWrapper) {\n    var value = [];\n    forEachElement(generatorWrapper, function (CustomMap) {\n      if (!someElement(globalAdContainersManager.entryIdCounter, function (findEntry) {\n        return findEntry.setPrototypeOfPolyfill.trimString === CustomMap.setPrototypeOfPolyfill.trimString && findEntry.constructReflect === CustomMap.constructReflect;\n      })) {\n        globalAdContainersManager.entryIdCounter.push(CustomMap);\n        value.push(CustomMap);\n      }\n    });\n  };\n  var globalAdContainersManager = getSingletonInstance(screenDimensions);\n  var AdInitializationState = function () {\n    this.entryIdCounter = this.tasks = null;\n  };\n  var initializeAdContainer = function (generatorWrapper, value) {\n    if (generatorWrapper.tasks == null) {\n      return false;\n    }\n    var CustomMap = function (findEntry, iterateEntries) {\n      value(findEntry, iterateEntries);\n    };\n    generatorWrapper.entryIdCounter = findElement(generatorWrapper.tasks, function (findEntry) {\n      return findEntry != null && findEntry.isPositiveInt64();\n    });\n    if (generatorWrapper.entryIdCounter) {\n      if (generatorWrapper.entryIdCounter.initialize(CustomMap)) {\n        refreshAdEnvironment(generatorWrapper.entryIdCounter.entryIdCounter);\n      } else {\n        value(generatorWrapper.entryIdCounter.entryIdCounter.isChromiumBased(), generatorWrapper.entryIdCounter);\n      }\n    }\n    return generatorWrapper.entryIdCounter != null;\n  };\n  var AdLoader = function (generatorWrapper) {\n    generatorWrapper = filterAndLinkAdContainers(generatorWrapper);\n    AdCreator.call(this, generatorWrapper.length ? generatorWrapper[generatorWrapper.length - 1] : new AdController(window, 0));\n    this.setTimeoutWrapper = generatorWrapper;\n    this.tasks = null;\n  };\n  inheritPrototype(AdLoader, AdCreator);\n  setTimeoutWrapper = AdLoader.prototype;\n  setTimeoutWrapper.getAdName = function () {\n    return (this.tasks ? this.tasks : this.entryIdCounter).getAdName();\n  };\n  setTimeoutWrapper.encodeString = function () {\n    return (this.tasks ? this.tasks : this.entryIdCounter).encodeString();\n  };\n  setTimeoutWrapper.uniqueIdProperty = function () {\n    return (this.tasks ? this.tasks : this.entryIdCounter).uniqueIdProperty();\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper) {\n    var value = false;\n    forEachElement(this.setTimeoutWrapper, function (CustomMap) {\n      if (CustomMap.initializeMraid()) {\n        value = true;\n      }\n    });\n    if (value) {\n      this.createDeferred = generatorWrapper;\n      registerAdComponent(this.entryIdCounter, this);\n    }\n    return value;\n  };\n  setTimeoutWrapper.markAsCompleted = function () {\n    forEachElement(this.setTimeoutWrapper, function (generatorWrapper) {\n      generatorWrapper.markAsCompleted();\n    });\n    AdCreator.prototype.markAsCompleted.call(this);\n  };\n  setTimeoutWrapper.isPositiveInt64 = function () {\n    return someElement(this.setTimeoutWrapper, function (generatorWrapper) {\n      return generatorWrapper.handleThenable();\n    });\n  };\n  setTimeoutWrapper.checkIntersectionObserverSupport = function () {\n    return someElement(this.setTimeoutWrapper, function (generatorWrapper) {\n      return generatorWrapper.handleThenable();\n    });\n  };\n  setTimeoutWrapper.isIE = function (generatorWrapper, value, CustomMap) {\n    return new coordinateResponder(generatorWrapper, this.entryIdCounter, value, CustomMap);\n  };\n  setTimeoutWrapper.deferError = function (generatorWrapper) {\n    this.tasks = generatorWrapper.tasks;\n  };\n  var filterAndLinkAdContainers = function (generatorWrapper) {\n    if (!generatorWrapper.length) {\n      return [];\n    }\n    generatorWrapper = filterElements(generatorWrapper, function (CustomMap) {\n      return CustomMap != null && CustomMap.handleThenable();\n    });\n    for (var value = 1; value < generatorWrapper.length; value++) {\n      registerAdComponent(generatorWrapper[value - 1], generatorWrapper[value]);\n    }\n    return generatorWrapper;\n  };\n  var intersectionObserverOptions = {\n    threshold: [0, 0.3, 0.5, 0.75, 1]\n  };\n  var AdVisibilityMonitor = function (generatorWrapper, value, CustomMap, findEntry) {\n    AdComponent.call(this, generatorWrapper, value, CustomMap, findEntry);\n    this.dispatchUnhandledRejection = this.executeCallbacks = this.isDone = this.onFulfilled = this.createDeferred = null;\n  };\n  inheritPrototype(AdVisibilityMonitor, coordinateResponder);\n  AdVisibilityMonitor.prototype.writeFieldHeader = function () {\n    var generatorWrapper = this;\n    if (!this.dispatchUnhandledRejection) {\n      this.dispatchUnhandledRejection = accumulatePosition();\n    }\n    if (So(298, function () {\n      return setupAdVisibilityMonitoring(generatorWrapper);\n    })) {\n      return true;\n    }\n    activateAdController(this.tasks, \"msf\");\n    return false;\n  };\n  AdVisibilityMonitor.prototype.isOpera = function () {\n    if (this.createDeferred && this.setTimeoutWrapper) {\n      try {\n        this.createDeferred.unobserve(this.setTimeoutWrapper);\n        if (this.onFulfilled) {\n          this.onFulfilled.unobserve(this.setTimeoutWrapper);\n          this.onFulfilled = null;\n        } else if (this.isDone) {\n          this.isDone.disconnect();\n          this.isDone = null;\n        }\n      } catch (generatorWrapper) {}\n    }\n  };\n  var getIntersectionObserverRecords = function (generatorWrapper) {\n    if (generatorWrapper.createDeferred && generatorWrapper.createDeferred.takeRecords) {\n      return generatorWrapper.createDeferred.takeRecords();\n    } else {\n      return [];\n    }\n  };\n  var setupAdVisibilityMonitoring = function (generatorWrapper) {\n    if (!generatorWrapper.setTimeoutWrapper) {\n      return false;\n    }\n    var value = generatorWrapper.setTimeoutWrapper;\n    var CustomMap = generatorWrapper.tasks.entryIdCounter.setTimeoutWrapper;\n    var findEntry = getAdEnvironment().entryIdCounter.entryIdCounter;\n    generatorWrapper.createDeferred = new CustomMap.IntersectionObserver(MonitorFunction(findEntry, function (iterateEntries) {\n      return handleVisibilityChange(generatorWrapper, iterateEntries);\n    }), intersectionObserverOptions);\n    findEntry = MonitorFunction(findEntry, function () {\n      generatorWrapper.createDeferred.unobserve(value);\n      generatorWrapper.createDeferred.observe(value);\n      handleVisibilityChange(generatorWrapper, getIntersectionObserverRecords(generatorWrapper));\n    });\n    if (CustomMap.ResizeObserver) {\n      generatorWrapper.onFulfilled = new CustomMap.ResizeObserver(findEntry);\n      generatorWrapper.onFulfilled.observe(value);\n    } else if (CustomMap.MutationObserver) {\n      generatorWrapper.isDone = new globalScope.MutationObserver(findEntry);\n      generatorWrapper.isDone.observe(value, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n    generatorWrapper.createDeferred.observe(value);\n    handleVisibilityChange(generatorWrapper, getIntersectionObserverRecords(generatorWrapper));\n    return true;\n  };\n  var handleVisibilityChange = function (generatorWrapper, value) {\n    try {\n      if (value.length) {\n        if (!generatorWrapper.executeCallbacks) {\n          generatorWrapper.executeCallbacks = accumulatePosition();\n        }\n        var CustomMap = getMostRecentEntry(value);\n        var findEntry = calculateFrameOffset(generatorWrapper.setTimeoutWrapper, generatorWrapper.tasks.entryIdCounter.setTimeoutWrapper);\n        var iterateEntries = findEntry.inheritPrototype;\n        var createCircularNode = findEntry.globalScope;\n        generatorWrapper.entryIdCounter = new handleThenable(Math.roundRectangle(createCircularNode), Math.roundRectangle(iterateEntries) + CustomMap.boundingClientRect.width, Math.roundRectangle(createCircularNode) + CustomMap.boundingClientRect.height, Math.roundRectangle(iterateEntries));\n        var entryIdCounter = convertRectToBox(CustomMap.intersectionRect);\n        generatorWrapper.handleAsync = translateRectangle(entryIdCounter, generatorWrapper.entryIdCounter.left - entryIdCounter.left, generatorWrapper.entryIdCounter.top - entryIdCounter.top);\n      }\n    } catch (key) {\n      generatorWrapper.isOpera();\n      logError(299, key);\n    }\n  };\n  var getMostRecentEntry = function (generatorWrapper) {\n    return reduceElements(generatorWrapper, function (value, CustomMap) {\n      if (value.time > CustomMap.time) {\n        return value;\n      } else {\n        return CustomMap;\n      }\n    }, generatorWrapper[0]);\n  };\n  setTimeoutWrapper = AdVisibilityMonitor.prototype;\n  setTimeoutWrapper.CustomError = function () {\n    var generatorWrapper = getIntersectionObserverRecords(this);\n    if (generatorWrapper.length > 0) {\n      handleVisibilityChange(this, generatorWrapper);\n    }\n    coordinateResponder.prototype.CustomError.call(this);\n  };\n  setTimeoutWrapper.writeBytesField = function () {};\n  setTimeoutWrapper.EnsureMutable = function () {\n    return false;\n  };\n  setTimeoutWrapper.getStringOrEmpty = function () {};\n  setTimeoutWrapper.encodeString = function () {\n    var generatorWrapper = {};\n    return Object.assign(this.tasks.encodeString(), (generatorWrapper.niot_obs = this.dispatchUnhandledRejection, generatorWrapper.niot_cbk = this.executeCallbacks, generatorWrapper));\n  };\n  setTimeoutWrapper.getAdName = function () {\n    return \"nio\";\n  };\n  var AdVisibilityProvider = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = window;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    AdCreator.call(this, new AdController(generatorWrapper, 2));\n  };\n  inheritPrototype(AdVisibilityProvider, AdCreator);\n  AdVisibilityProvider.prototype.getAdName = function () {\n    return \"nio\";\n  };\n  AdVisibilityProvider.prototype.checkIntersectionObserverSupport = function () {\n    return !getAdEnvironmentInstance().tasks && this.entryIdCounter.entryIdCounter.setTimeoutWrapper.IntersectionObserver != null;\n  };\n  AdVisibilityProvider.prototype.isIE = function (generatorWrapper, value, CustomMap) {\n    return new AdVisibilityMonitor(generatorWrapper, this.entryIdCounter, value, CustomMap);\n  };\n  var GeoLocationProvider = function () {\n    var generatorWrapper = getGeoFlag();\n    AdController.call(this, window.top, generatorWrapper, \"geo\");\n  };\n  inheritPrototype(GeoLocationProvider, AdController);\n  GeoLocationProvider.prototype.definePropertyPolyfill = function () {\n    return getAdEnvironmentInstance().entryIdCounter;\n  };\n  GeoLocationProvider.prototype.handleThenable = function () {\n    var generatorWrapper = getGeoFlag();\n    if (this.executeCallbacks !== generatorWrapper) {\n      if (this.entryIdCounter != this && generatorWrapper > this.entryIdCounter.executeCallbacks) {\n        this.entryIdCounter = this;\n        updateAdComponents(this);\n      }\n      this.executeCallbacks = generatorWrapper;\n    }\n    return generatorWrapper == 2;\n  };\n  var getGeoFlag = function () {\n    getAdEnvironment();\n    var generatorWrapper = getAdEnvironmentInstance();\n    if (generatorWrapper.setTimeoutWrapper || generatorWrapper.tasks) {\n      return 0;\n    } else {\n      return 2;\n    }\n  };\n  var EmptyClass = function () {};\n  var initAdRequestManager = function () {\n    this.done = false;\n    this.entryIdCounter = {\n      getAdElementProperty: 0,\n      createObjectOrUndefined: 0,\n      formatErrorMessage: 0,\n      zeroValueArrayCache: 0,\n      setFlag32: -1,\n      clearAdProperty: 0,\n      setAdPropertyFromObject: 0,\n      sanitizeAdElementData: 0,\n      MraidMethods: 0\n    };\n    this.handleAsync = null;\n    this.isDone = false;\n    this.setTimeoutWrapper = null;\n    this.onFulfilled = 0;\n    this.tasks = new AdSampling(this);\n  };\n  var startSampling = function () {\n    var generatorWrapper = adRequestManager;\n    if (!generatorWrapper.isDone) {\n      generatorWrapper.isDone = true;\n      setupSamplingEvent(generatorWrapper, function () {\n        return generatorWrapper.createDeferred.apply(generatorWrapper, toArray(sliceArguments.apply(0, arguments)));\n      });\n      generatorWrapper.createDeferred();\n    }\n  };\n  initAdRequestManager.prototype.performSample = function () {\n    processSamples(this, mergeAdContainerArrays(), false);\n  };\n  var resetGlobalState = function () {\n    getSingletonInstance(EmptyClass);\n    var generatorWrapper = getSingletonInstance(AdInitializationState);\n    if (generatorWrapper.entryIdCounter != null && generatorWrapper.entryIdCounter.entryIdCounter) {\n      refreshAdEnvironment(generatorWrapper.entryIdCounter.entryIdCounter);\n    } else {\n      initializeAdEnvironment(getAdEnvironmentInstance());\n    }\n  };\n  var processSamples = function (generatorWrapper, value, CustomMap) {\n    if (!generatorWrapper.done && (generatorWrapper.tasks.cancel(), value.length != 0)) {\n      generatorWrapper.setTimeoutWrapper = null;\n      try {\n        resetGlobalState();\n        var findEntry = accumulatePosition();\n        getAdEnvironment().handleAsync = findEntry;\n        if (getSingletonInstance(AdInitializationState).entryIdCounter != null) {\n          for (var iterateEntries = 0; iterateEntries < value.length; iterateEntries++) {\n            updateAdContainerState(value[iterateEntries], findEntry, CustomMap);\n          }\n        }\n        for (findEntry = 0; findEntry < value.length; findEntry++) {\n          processAdContainerMetrics(value[findEntry]);\n        }\n        ++generatorWrapper.entryIdCounter.zeroValueArrayCache;\n      } finally {\n        if (CustomMap) {\n          forEachElement(value, function (createCircularNode) {\n            createCircularNode.adData.zone = 0;\n          });\n        } else {\n          startAdSampling(generatorWrapper.tasks);\n        }\n      }\n    }\n  };\n  var setupSamplingEvent = function (generatorWrapper, value) {\n    if (!generatorWrapper.handleAsync) {\n      value = To(142, value);\n      GetEnvironment();\n      var CustomMap = getVisibilityChangeEventName(document);\n      if (CustomMap && addEventListenerWithNormalization(document, CustomMap, value, {\n        capture: false\n      })) {\n        generatorWrapper.handleAsync = value;\n      }\n    }\n  };\n  initAdRequestManager.prototype.createDeferred = function () {\n    var generatorWrapper = isAdPlayingOrMuted();\n    var value = accumulatePosition();\n    if (generatorWrapper) {\n      if (!$o) {\n        Wo = value;\n        forEachElement(globalAdContainersManager.entryIdCounter, function (CustomMap) {\n          var findEntry = CustomMap.getAdManager();\n          findEntry.totalAdBufferingTime = widthRetriever(findEntry, value, CustomMap.createObjectPolyfill != 1);\n        });\n      }\n      $o = true;\n    } else {\n      this.onFulfilled = generateTargetingValues(this, value);\n      $o = false;\n      yearOffset = value;\n      forEachElement(globalAdContainersManager.entryIdCounter, function (CustomMap) {\n        if (CustomMap.findElementIndex) {\n          CustomMap.getAdManager().settlePromise = value;\n        }\n      });\n    }\n    processSamples(this, mergeAdContainerArrays(), !generatorWrapper);\n  };\n  var processAllSamples = function () {\n    var generatorWrapper = getSingletonInstance(AdInitializationState);\n    if (generatorWrapper.entryIdCounter != null) {\n      var value = generatorWrapper.entryIdCounter;\n      forEachElement(mergeAdContainerArrays(), function (CustomMap) {\n        return replaceAdContainerContent(CustomMap, value);\n      });\n    }\n  };\n  var generateTargetingValues = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.onFulfilled;\n    if ($o) {\n      generatorWrapper += value - Wo;\n    }\n    return generatorWrapper;\n  };\n  var initializeErrorHandling = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = function () {\n        return {};\n      };\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    Po.parseBooleanOrNumber(\"av-js\");\n    Lo.entryIdCounter = 0.01;\n    Ro([function (value) {\n      var CustomMap = getAdEnvironment();\n      var findEntry = {};\n      findEntry = (findEntry.bin = CustomMap.tasks, findEntry.type = \"error\", findEntry);\n      CustomMap = getAllAdStates(CustomMap.AdEnvironmentConfig);\n      if (!adRequestManager.setTimeoutWrapper) {\n        var iterateEntries = adRequestManager;\n        var createCircularNode = window.document;\n        var entryIdCounter = Xo >= 0 ? accumulatePosition() - Xo : -1;\n        var key = accumulatePosition();\n        if (-1 == iterateEntries.entryIdCounter.setFlag32) {\n          entryIdCounter = key;\n        }\n        var value = getAdEnvironmentInstance();\n        var entry = getAdEnvironment();\n        var currentEntry = getAllAdStates(entry.AdEnvironmentConfig);\n        var foundEntry = mergeAdContainerArrays();\n        try {\n          if (foundEntry.length > 0) {\n            var resolveFunction = value.entryIdCounter;\n            if (resolveFunction) {\n              currentEntry.browserSize = [resolveFunction.getRectangleWidth(), resolveFunction.getRectangleHeight()];\n            }\n            var rejectFunction = value.createDeferred;\n            if (rejectFunction) {\n              currentEntry.removeRelatedAdContainers = [rejectFunction.width, rejectFunction.height];\n            }\n            if (window.screen) {\n              currentEntry.screenSize = [window.screen.width, window.screen.height];\n            }\n          } else {\n            currentEntry.url = encodeURIComponent(window.location.href.substring(0, 512));\n            if (createCircularNode.referrer) {\n              currentEntry.referrer = encodeURIComponent(createCircularNode.referrer.substring(0, 512));\n            }\n          }\n          currentEntry.setupMraid = entryIdCounter;\n          currentEntry.NativeViewabilityService = Xo;\n          currentEntry.bin = entry.tasks;\n          if (undefined !== window.google_osd_load_pub_page_exp) {\n            currentEntry.olpp = window.google_osd_load_pub_page_exp;\n          }\n          currentEntry.debugInfoArray = [1, iterateEntries.entryIdCounter.getAdElementProperty, iterateEntries.entryIdCounter.createObjectOrUndefined, iterateEntries.entryIdCounter.zeroValueArrayCache, iterateEntries.entryIdCounter.setFlag32, 0, iterateEntries.tasks.tasks, iterateEntries.entryIdCounter.clearAdProperty, iterateEntries.entryIdCounter.setAdPropertyFromObject, iterateEntries.entryIdCounter.sanitizeAdElementData, iterateEntries.entryIdCounter.MraidMethods, -1].join(\";\");\n          currentEntry.setTargetingValues = generateTargetingValues(iterateEntries, key);\n          if (value.tasks) {\n            currentEntry.isInApp = 1;\n          }\n          if (window !== null && window != window.top) {\n            if (foundEntry.length > 0) {\n              currentEntry.iframeLocation = encodeURIComponent(window.location.href.substring(0, 512));\n            }\n            var user = value.settlePromise;\n            currentEntry.screenDimensions = [user.getRectangleWidth(), user.getRectangleHeight()];\n          }\n        } catch (isDone) {\n          currentEntry.hasError = 1;\n        }\n        adRequestManager.setTimeoutWrapper = currentEntry;\n      }\n      rejectFunction = adRequestManager.setTimeoutWrapper;\n      resolveFunction = {};\n      for (var profileData in rejectFunction) resolveFunction[profileData] = rejectFunction[profileData];\n      profileData = getAdEnvironment().entryIdCounter;\n      if (getAdState(profileData.setTimeoutWrapper, \"prf\") == 1) {\n        rejectFunction = new AdConfig();\n        user = profileData.entryIdCounter;\n        iterateEntries = 0;\n        if (-1 < user.entryIdCounter) {\n          iterateEntries = user.setTimeoutWrapper.entryIdCounter.now() - user.entryIdCounter;\n        }\n        user = user.createDeferred + iterateEntries;\n        if (user != null && typeof user !== \"number\") {\n          throw Error(\"Value of float/double field must be a number, found \" + typeof user + \": \" + user);\n        }\n        rejectFunction = updateOrRemoveElement(rejectFunction, 1, user, 0);\n        user = profileData.entryIdCounter;\n        rejectFunction = modifyAdProperty(rejectFunction, 5, -1 < user.entryIdCounter ? user.tasks + 1 : user.tasks);\n        rejectFunction = setAdPropertyFromString(rejectFunction, 2, profileData.tasks.entryIdCounter.setTimeoutWrapper());\n        rejectFunction = setAdPropertyFromString(rejectFunction, 3, profileData.tasks.entryIdCounter.tasks());\n        profileData = setAdPropertyFromString(rejectFunction, 4, profileData.tasks.entryIdCounter.entryIdCounter());\n        rejectFunction = {};\n        profileData = (rejectFunction.pf = base64Encode(profileData.entryIdCounter()), rejectFunction);\n      } else {\n        profileData = {};\n      }\n      extendObject(resolveFunction, profileData);\n      extendObject(value, findEntry, CustomMap, resolveFunction, generatorWrapper());\n    }]);\n  };\n  var adRequestManager = getSingletonInstance(initAdRequestManager);\n  var currentWindow = null;\n  var emptyString = \"\";\n  var isBooleanFlag = false;\n  var generateUrlParams = function () {\n    var generatorWrapper = currentWindow || window;\n    if (!generatorWrapper) {\n      return \"\";\n    }\n    var value = [];\n    if (!generatorWrapper.location || !generatorWrapper.location.href) {\n      return \"\";\n    }\n    value.push(\"url=\" + encodeURIComponent(generatorWrapper.location.href.substring(0, 512)));\n    if (generatorWrapper.document && generatorWrapper.document.referrer) {\n      value.push(\"referrer=\" + encodeURIComponent(generatorWrapper.document.referrer.substring(0, 512)));\n    }\n    return value.join(\"&\");\n  };\n  function extractVersion() {\n    var generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_RC\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+\\.\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_RC\\d+$/),\n      value;\n    if (((value = generatorWrapper) == null ? undefined : value.length) == 2) {\n      return generatorWrapper[1];\n    }\n    generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/.*_(\\d{2})\\.(\\d{4})\\.\\d+_RC\\d+$/);\n    var CustomMap;\n    if (((CustomMap = generatorWrapper) == null ? undefined : CustomMap.length) == 3) {\n      return \"20\" + generatorWrapper[1] + generatorWrapper[2];\n    } else {\n      return null;\n    }\n  }\n  var determineSdkType = function () {\n    if (\"ima_html5_sdk\".includes(\"ima_html5_sdk\")) {\n      return {\n        createArrayIterator: \"ima\",\n        closureLibraryBase: null\n      };\n    } else {\n      if (\"ima_html5_sdk\".includes(\"ima_native_sdk\")) {\n        return {\n          createArrayIterator: \"nima\",\n          closureLibraryBase: null\n        };\n      } else {\n        if (\"ima_html5_sdk\".includes(\"admob-native-video-javascript\")) {\n          return {\n            createArrayIterator: \"an\",\n            closureLibraryBase: null\n          };\n        } else {\n          if (\"av.default_js_unreleased_RCxx\".includes(\"cast_js_sdk\")) {\n            return {\n              createArrayIterator: \"cast\",\n              closureLibraryBase: extractVersion()\n            };\n          } else {\n            if (\"av.default_js_unreleased_RCxx\".includes(\"youtube.player.web\")) {\n              return {\n                createArrayIterator: \"yw\",\n                closureLibraryBase: extractVersion()\n              };\n            } else {\n              if (\"av.default_js_unreleased_RCxx\".includes(\"outstream_web_client\")) {\n                return {\n                  createArrayIterator: \"out\",\n                  closureLibraryBase: extractVersion()\n                };\n              } else {\n                if (\"av.default_js_unreleased_RCxx\".includes(\"drx_rewarded_web\")) {\n                  return {\n                    createArrayIterator: \"r\",\n                    closureLibraryBase: extractVersion()\n                  };\n                } else {\n                  if (\"av.default_js_unreleased_RCxx\".includes(\"gam_native_web_video\")) {\n                    return {\n                      createArrayIterator: \"n\",\n                      closureLibraryBase: extractVersion()\n                    };\n                  } else {\n                    if (\"av.default_js_unreleased_RCxx\".includes(\"admob_interstitial_video\")) {\n                      return {\n                        createArrayIterator: \"int\",\n                        closureLibraryBase: extractVersion()\n                      };\n                    } else {\n                      return {\n                        createArrayIterator: \"j\",\n                        closureLibraryBase: null\n                      };\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  var sdkType = determineSdkType().createArrayIterator;\n  var sdkVersion = determineSdkType().closureLibraryBase;\n  var generateErrorObject = function (generatorWrapper, value) {\n    var CustomMap = {\n      sv: \"962\"\n    };\n    if (sdkVersion !== null) {\n      CustomMap.getIterator = sdkVersion;\n    }\n    CustomMap.cb = sdkType;\n    CustomMap.nas = globalAdContainersManager.entryIdCounter.length;\n    CustomMap.msg = generatorWrapper;\n    if (undefined !== value && (generatorWrapper = getMetricType(value))) {\n      CustomMap.iterateEntries = ip[generatorWrapper];\n    }\n    return CustomMap;\n  };\n  var isCustomMetricViewable = function (generatorWrapper) {\n    return generatorWrapper.lastIndexOf(\"custom_metric_viewable\", 0) == 0;\n  };\n  var getMetricType = function (generatorWrapper) {\n    var value = isCustomMetricViewable(generatorWrapper) ? \"custom_metric_viewable\" : generatorWrapper.toLowerCase();\n    return findKeyInObject(function (CustomMap) {\n      return CustomMap == value;\n    });\n  };\n  var metricNames = {\n    setElementSafeHtml: \"visible\",\n    createSchemeValidator: \"audible\",\n    hasFrameWithName: \"time\",\n    getDeviceType: \"timetype\"\n  };\n  var metricValidators = {\n    visible(generatorWrapper) {\n      return /^(100|[0-9]{1,2})$/.test(generatorWrapper);\n    },\n    audible(generatorWrapper) {\n      return generatorWrapper == \"0\" || generatorWrapper == \"1\";\n    },\n    timetype(generatorWrapper) {\n      return generatorWrapper == \"mtos\" || generatorWrapper == \"tos\";\n    },\n    time(generatorWrapper) {\n      return /^(100|[0-9]{1,2})%$/.test(generatorWrapper) || /^([0-9])+ms$/.test(generatorWrapper);\n    }\n  };\n  var ProfileMetrics = function () {\n    this.entryIdCounter = undefined;\n    this.tasks = false;\n    this.setTimeoutWrapper = 0;\n    this.createDeferred = -1;\n    this.handleAsync = \"tos\";\n  };\n  var parseCustomMetrics = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.split(\",\");\n      if (value.length > keysOfObject(metricNames).length) {\n        return null;\n      } else {\n        return reduceElements(value, function (CustomMap, findEntry) {\n          findEntry = findEntry.toLowerCase().split(\"=\");\n          if (findEntry.length != 2 || undefined === metricValidators[findEntry[0]] || !metricValidators[findEntry[0]](findEntry[1])) {\n            throw Error(\"Entry (\" + findEntry[0] + \", \" + findEntry[1] + \") is invalid.\");\n          }\n          CustomMap[findEntry[0]] = findEntry[1];\n          return CustomMap;\n        }, {});\n      }\n    } catch (CustomMap) {\n      return null;\n    }\n  };\n  var calculateMetricValue = function (generatorWrapper, value) {\n    if (undefined == generatorWrapper.entryIdCounter) {\n      return 0;\n    }\n    switch (generatorWrapper.handleAsync) {\n      case \"mtos\":\n        if (generatorWrapper.tasks) {\n          return calculateMaxVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateMaxVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n      case \"tos\":\n        if (generatorWrapper.tasks) {\n          return calculateVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n    }\n    return 0;\n  };\n  var CustomMetric = function (generatorWrapper, value, CustomMap, findEntry) {\n    yearResetter.call(this, value, findEntry);\n    this.onFulfilled = generatorWrapper;\n    this.settlePromise = CustomMap;\n  };\n  inheritPrototype(CustomMetric, yearResetter);\n  CustomMetric.prototype.getAdId = function () {\n    return this.onFulfilled;\n  };\n  CustomMetric.prototype.isDone = function () {\n    return true;\n  };\n  CustomMetric.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = generatorWrapper.getAdManager();\n    var CustomMap = generatorWrapper.getDuration();\n    return someElement(this.settlePromise, function (findEntry) {\n      if (undefined != findEntry.entryIdCounter) {\n        var iterateEntries = calculateMetricValue(findEntry, value);\n      } else {\n      ",
  "ata];\n      profileData = getAdEnvironment().entryIdCounter;\n      if (getAdState(profileData.setTimeoutWrapper, \"prf\") == 1) {\n        rejectFunction = new AdConfig();\n        user = profileData.entryIdCounter;\n        iterateEntries = 0;\n        if (-1 < user.entryIdCounter) {\n          iterateEntries = user.setTimeoutWrapper.entryIdCounter.now() - user.entryIdCounter;\n        }\n        user = user.createDeferred + iterateEntries;\n        if (user != null && typeof user !== \"number\") {\n          throw Error(\"Value of float/double field must be a number, found \" + typeof user + \": \" + user);\n        }\n        rejectFunction = updateOrRemoveElement(rejectFunction, 1, user, 0);\n        user = profileData.entryIdCounter;\n        rejectFunction = modifyAdProperty(rejectFunction, 5, -1 < user.entryIdCounter ? user.tasks + 1 : user.tasks);\n        rejectFunction = setAdPropertyFromString(rejectFunction, 2, profileData.tasks.entryIdCounter.setTimeoutWrapper());\n        rejectFunction = setAdPropertyFromString(rejectFunction, 3, profileData.tasks.entryIdCounter.tasks());\n        profileData = setAdPropertyFromString(rejectFunction, 4, profileData.tasks.entryIdCounter.entryIdCounter());\n        rejectFunction = {};\n        profileData = (rejectFunction.pf = base64Encode(profileData.entryIdCounter()), rejectFunction);\n      } else {\n        profileData = {};\n      }\n      extendObject(resolveFunction, profileData);\n      extendObject(value, findEntry, CustomMap, resolveFunction, generatorWrapper());\n    }]);\n  };\n  var adRequestManager = getSingletonInstance(initAdRequestManager);\n  var currentWindow = null;\n  var emptyString = \"\";\n  var isBooleanFlag = false;\n  var generateUrlParams = function () {\n    var generatorWrapper = currentWindow || window;\n    if (!generatorWrapper) {\n      return \"\";\n    }\n    var value = [];\n    if (!generatorWrapper.location || !generatorWrapper.location.href) {\n      return \"\";\n    }\n    value.push(\"url=\" + encodeURIComponent(generatorWrapper.location.href.substring(0, 512)));\n    if (generatorWrapper.document && generatorWrapper.document.referrer) {\n      value.push(\"referrer=\" + encodeURIComponent(generatorWrapper.document.referrer.substring(0, 512)));\n    }\n    return value.join(\"&\");\n  };\n  function extractVersion() {\n    var generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_RC\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+\\.\\d+$/) || \"av.default_js_unreleased_RCxx\".match(/_(\\d{8})_\\d+_RC\\d+$/),\n      value;\n    if (((value = generatorWrapper) == null ? undefined : value.length) == 2) {\n      return generatorWrapper[1];\n    }\n    generatorWrapper = \"av.default_js_unreleased_RCxx\".match(/.*_(\\d{2})\\.(\\d{4})\\.\\d+_RC\\d+$/);\n    var CustomMap;\n    if (((CustomMap = generatorWrapper) == null ? undefined : CustomMap.length) == 3) {\n      return \"20\" + generatorWrapper[1] + generatorWrapper[2];\n    } else {\n      return null;\n    }\n  }\n  var determineSdkType = function () {\n    if (\"ima_html5_sdk\".includes(\"ima_html5_sdk\")) {\n      return {\n        createArrayIterator: \"ima\",\n        closureLibraryBase: null\n      };\n    } else {\n      if (\"ima_html5_sdk\".includes(\"ima_native_sdk\")) {\n        return {\n          createArrayIterator: \"nima\",\n          closureLibraryBase: null\n        };\n      } else {\n        if (\"ima_html5_sdk\".includes(\"admob-native-video-javascript\")) {\n          return {\n            createArrayIterator: \"an\",\n            closureLibraryBase: null\n          };\n        } else {\n          if (\"av.default_js_unreleased_RCxx\".includes(\"cast_js_sdk\")) {\n            return {\n              createArrayIterator: \"cast\",\n              closureLibraryBase: extractVersion()\n            };\n          } else {\n            if (\"av.default_js_unreleased_RCxx\".includes(\"youtube.player.web\")) {\n              return {\n                createArrayIterator: \"yw\",\n                closureLibraryBase: extractVersion()\n              };\n            } else {\n              if (\"av.default_js_unreleased_RCxx\".includes(\"outstream_web_client\")) {\n                return {\n                  createArrayIterator: \"out\",\n                  closureLibraryBase: extractVersion()\n                };\n              } else {\n                if (\"av.default_js_unreleased_RCxx\".includes(\"drx_rewarded_web\")) {\n                  return {\n                    createArrayIterator: \"r\",\n                    closureLibraryBase: extractVersion()\n                  };\n                } else {\n                  if (\"av.default_js_unreleased_RCxx\".includes(\"gam_native_web_video\")) {\n                    return {\n                      createArrayIterator: \"n\",\n                      closureLibraryBase: extractVersion()\n                    };\n                  } else {\n                    if (\"av.default_js_unreleased_RCxx\".includes(\"admob_interstitial_video\")) {\n                      return {\n                        createArrayIterator: \"int\",\n                        closureLibraryBase: extractVersion()\n                      };\n                    } else {\n                      return {\n                        createArrayIterator: \"j\",\n                        closureLibraryBase: null\n                      };\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  var sdkType = determineSdkType().createArrayIterator;\n  var sdkVersion = determineSdkType().closureLibraryBase;\n  var generateErrorObject = function (generatorWrapper, value) {\n    var CustomMap = {\n      sv: \"962\"\n    };\n    if (sdkVersion !== null) {\n      CustomMap.getIterator = sdkVersion;\n    }\n    CustomMap.cb = sdkType;\n    CustomMap.nas = globalAdContainersManager.entryIdCounter.length;\n    CustomMap.msg = generatorWrapper;\n    if (undefined !== value && (generatorWrapper = getMetricType(value))) {\n      CustomMap.iterateEntries = ip[generatorWrapper];\n    }\n    return CustomMap;\n  };\n  var isCustomMetricViewable = function (generatorWrapper) {\n    return generatorWrapper.lastIndexOf(\"custom_metric_viewable\", 0) == 0;\n  };\n  var getMetricType = function (generatorWrapper) {\n    var value = isCustomMetricViewable(generatorWrapper) ? \"custom_metric_viewable\" : generatorWrapper.toLowerCase();\n    return findKeyInObject(function (CustomMap) {\n      return CustomMap == value;\n    });\n  };\n  var metricNames = {\n    setElementSafeHtml: \"visible\",\n    createSchemeValidator: \"audible\",\n    hasFrameWithName: \"time\",\n    getDeviceType: \"timetype\"\n  };\n  var metricValidators = {\n    visible(generatorWrapper) {\n      return /^(100|[0-9]{1,2})$/.test(generatorWrapper);\n    },\n    audible(generatorWrapper) {\n      return generatorWrapper == \"0\" || generatorWrapper == \"1\";\n    },\n    timetype(generatorWrapper) {\n      return generatorWrapper == \"mtos\" || generatorWrapper == \"tos\";\n    },\n    time(generatorWrapper) {\n      return /^(100|[0-9]{1,2})%$/.test(generatorWrapper) || /^([0-9])+ms$/.test(generatorWrapper);\n    }\n  };\n  var ProfileMetrics = function () {\n    this.entryIdCounter = undefined;\n    this.tasks = false;\n    this.setTimeoutWrapper = 0;\n    this.createDeferred = -1;\n    this.handleAsync = \"tos\";\n  };\n  var parseCustomMetrics = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.split(\",\");\n      if (value.length > keysOfObject(metricNames).length) {\n        return null;\n      } else {\n        return reduceElements(value, function (CustomMap, findEntry) {\n          findEntry = findEntry.toLowerCase().split(\"=\");\n          if (findEntry.length != 2 || undefined === metricValidators[findEntry[0]] || !metricValidators[findEntry[0]](findEntry[1])) {\n            throw Error(\"Entry (\" + findEntry[0] + \", \" + findEntry[1] + \") is invalid.\");\n          }\n          CustomMap[findEntry[0]] = findEntry[1];\n          return CustomMap;\n        }, {});\n      }\n    } catch (CustomMap) {\n      return null;\n    }\n  };\n  var calculateMetricValue = function (generatorWrapper, value) {\n    if (undefined == generatorWrapper.entryIdCounter) {\n      return 0;\n    }\n    switch (generatorWrapper.handleAsync) {\n      case \"mtos\":\n        if (generatorWrapper.tasks) {\n          return calculateMaxVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateMaxVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n      case \"tos\":\n        if (generatorWrapper.tasks) {\n          return calculateVisibilityAtThreshold(value.entryIdCounter, generatorWrapper.entryIdCounter);\n        } else {\n          return calculateVisibilityAtThreshold(value.tasks, generatorWrapper.entryIdCounter);\n        }\n    }\n    return 0;\n  };\n  var CustomMetric = function (generatorWrapper, value, CustomMap, findEntry) {\n    yearResetter.call(this, value, findEntry);\n    this.onFulfilled = generatorWrapper;\n    this.settlePromise = CustomMap;\n  };\n  inheritPrototype(CustomMetric, yearResetter);\n  CustomMetric.prototype.getAdId = function () {\n    return this.onFulfilled;\n  };\n  CustomMetric.prototype.isDone = function () {\n    return true;\n  };\n  CustomMetric.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = generatorWrapper.getAdManager();\n    var CustomMap = generatorWrapper.getDuration();\n    return someElement(this.settlePromise, function (findEntry) {\n      if (undefined != findEntry.entryIdCounter) {\n        var iterateEntries = calculateMetricValue(findEntry, value);\n      } else {\n        value: {\n          switch (findEntry.handleAsync) {\n            case \"mtos\":\n              if (findEntry.tasks) {\n                iterateEntries = value.handleAsync.setTimeoutWrapper;\n              } else {\n                iterateEntries = value.setTimeoutWrapper.entryIdCounter;\n              }\n              break value;\n            case \"tos\":\n              if (findEntry.tasks) {\n                iterateEntries = value.handleAsync.entryIdCounter;\n              } else {\n                iterateEntries = value.setTimeoutWrapper.entryIdCounter;\n              }\n              break value;\n          }\n          iterateEntries = 0;\n        }\n      }\n      if (iterateEntries == 0) {\n        findEntry = false;\n      } else {\n        if (-1 != findEntry.setTimeoutWrapper) {\n          findEntry = findEntry.setTimeoutWrapper;\n        } else if (undefined !== CustomMap && CustomMap > 0) {\n          findEntry = findEntry.createDeferred * CustomMap;\n        } else {\n          findEntry = -1;\n        }\n        findEntry = -1 != findEntry && iterateEntries >= findEntry;\n      }\n      return findEntry;\n    });\n  };\n  var AdDataParser = function () {};\n  inheritPrototype(AdDataParser, emptyFunction);\n  AdDataParser.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = new nullResetter();\n    value.entryIdCounter = processResources(generatorWrapper, adDataMapping);\n    value.tasks = processResources(generatorWrapper, additionalDataMapping);\n    return value;\n  };\n  var ViewabilityMeasurement = function (generatorWrapper) {\n    yearResetter.call(this, \"fully_viewable_audible_half_duration_impression\", generatorWrapper);\n  };\n  inheritPrototype(ViewabilityMeasurement, yearResetter);\n  ViewabilityMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    return checkAdQueueTimeout(generatorWrapper);\n  };\n  var MeasurementStrategy = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(MeasurementStrategy, abstractResponder);\n  var ViewableImpressionMeasurement = function (generatorWrapper, value) {\n    yearResetter.call(this, generatorWrapper, value);\n  };\n  inheritPrototype(ViewableImpressionMeasurement, yearResetter);\n  ViewableImpressionMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.getAdManager().removeUniqueId();\n  };\n  var MeasurableImpressionMeasurement = function (generatorWrapper) {\n    zoneResetter.call(this, \"measurable_impression\", generatorWrapper);\n  };\n  inheritPrototype(MeasurableImpressionMeasurement, zoneResetter);\n  MeasurableImpressionMeasurement.prototype.entryIdCounter = function (generatorWrapper) {\n    var value = containsElement(this.onFulfilled, getAdState(getAdEnvironment().AdEnvironmentConfig, \"ovms\"));\n    return !generatorWrapper.uniqueIdCounter && (generatorWrapper.createObjectPolyfill != 0 || value);\n  };\n  var StrategyFactory = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(StrategyFactory, MeasurementStrategy);\n  StrategyFactory.prototype.tasks = function () {\n    return new MeasurableImpressionMeasurement(this.entryIdCounter);\n  };\n  StrategyFactory.prototype.setTimeoutWrapper = function () {\n    return [new ViewableImpressionMeasurement(\"viewable_impression\", this.entryIdCounter), new ViewabilityMeasurement(this.entryIdCounter)];\n  };\n  var ViewabilityQuery = function (generatorWrapper, value, CustomMap) {\n    ExtendedAd.call(this, generatorWrapper, value, CustomMap);\n  };\n  inheritPrototype(ViewabilityQuery, ExtendedAd);\n  ViewabilityQuery.prototype.createDeferred = function () {\n    var generatorWrapper = getFromGlobalScope(\"ima.admob.getViewability\");\n    var value = getAdState(this.AdEnvironmentConfig, \"queryid\");\n    if (typeof generatorWrapper === \"function\" && value) {\n      generatorWrapper(value);\n    }\n  };\n  ViewabilityQuery.prototype.getAdName = function () {\n    return \"gsv\";\n  };\n  var ViewabilityService = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = window;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    AdCreator.call(this, new AdController(generatorWrapper, 2));\n  };\n  inheritPrototype(ViewabilityService, AdCreator);\n  ViewabilityService.prototype.getAdName = function () {\n    return \"gsv\";\n  };\n  ViewabilityService.prototype.checkIntersectionObserverSupport = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    getAdEnvironment();\n    return generatorWrapper.tasks && false;\n  };\n  ViewabilityService.prototype.isIE = function (generatorWrapper, value, CustomMap) {\n    return new ViewabilityQuery(this.entryIdCounter, value, CustomMap);\n  };\n  var NativeViewabilityQuery = function (generatorWrapper, value, CustomMap) {\n    ExtendedAd.call(this, generatorWrapper, value, CustomMap);\n  };\n  inheritPrototype(NativeViewabilityQuery, ExtendedAd);\n  NativeViewabilityQuery.prototype.createDeferred = function () {\n    var generatorWrapper = this;\n    var value = getFromGlobalScope(\"ima.bridge.getNativeViewability\");\n    var CustomMap = getAdState(this.AdEnvironmentConfig, \"queryid\");\n    if (typeof value === \"function\" && CustomMap) {\n      value(CustomMap, function (findEntry) {\n        if (isEmptyObject(findEntry)) {\n          generatorWrapper.isDone++;\n        }\n        var iterateEntries = findEntry.opt_nativeViewVisibleBounds || {};\n        var createCircularNode = findEntry.opt_nativeViewHidden;\n        generatorWrapper.entryIdCounter = convertDimensionsToBox(findEntry.opt_nativeViewBounds || {});\n        var entryIdCounter = generatorWrapper.tasks.createDeferred;\n        if (createCircularNode) {\n          entryIdCounter.entryIdCounter = createRectangle(defaultAdBounds);\n        } else {\n          entryIdCounter.entryIdCounter = convertDimensionsToBox(iterateEntries);\n        }\n        generatorWrapper.timestamp = findEntry.opt_nativeTime || -1;\n        getAdEnvironmentInstance().entryIdCounter = entryIdCounter.entryIdCounter;\n        findEntry = findEntry.opt_nativeVolume;\n        if (undefined !== findEntry) {\n          entryIdCounter.volume = findEntry;\n        }\n      });\n    }\n  };\n  NativeViewabilityQuery.prototype.getAdName = function () {\n    return \"nis\";\n  };\n  var NativeViewabilityService = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = window;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    AdCreator.call(this, new AdController(generatorWrapper, 2));\n  };\n  inheritPrototype(NativeViewabilityService, AdCreator);\n  NativeViewabilityService.prototype.getAdName = function () {\n    return \"nis\";\n  };\n  NativeViewabilityService.prototype.checkIntersectionObserverSupport = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    getAdEnvironment();\n    return generatorWrapper.tasks && false;\n  };\n  NativeViewabilityService.prototype.isIE = function (generatorWrapper, value, CustomMap) {\n    return new NativeViewabilityQuery(this.entryIdCounter, value, CustomMap);\n  };\n  var adService = function () {\n    AdController.call(this, window, 2, \"mraid\");\n    this.firstQuartileTime = 0;\n    this.logError = this.handleThenable = false;\n    this.settlePromise = null;\n    this.tasks = getMraidContext(this.setTimeoutWrapper);\n    this.createDeferred.entryIdCounter = new handleThenable(0, 0, 0, 0);\n    this.toArray = false;\n  };\n  inheritPrototype(adService, AdController);\n  adService.prototype.handleThenable = function () {\n    return this.tasks.finalizeGenerator != null;\n  };\n  adService.prototype.createIterator = function () {\n    var generatorWrapper = {};\n    if (this.firstQuartileTime) {\n      generatorWrapper.mraid = this.firstQuartileTime;\n    }\n    if (this.handleThenable) {\n      generatorWrapper.mlc = 1;\n    }\n    generatorWrapper.mtop = this.tasks.everyInObject;\n    if (this.settlePromise) {\n      generatorWrapper.mse = this.settlePromise;\n    }\n    if (this.toArray) {\n      generatorWrapper.msc = 1;\n    }\n    generatorWrapper.mcp = this.tasks.finalBrowserVersion;\n    return generatorWrapper;\n  };\n  adService.prototype.isDone = function (generatorWrapper) {\n    var value = sliceArguments.apply(1, arguments);\n    try {\n      return this.tasks.finalizeGenerator[generatorWrapper].apply(this.tasks.finalizeGenerator, value);\n    } catch (CustomMap) {\n      logError(538, CustomMap, 0.01, function (findEntry) {\n        findEntry.method = generatorWrapper;\n      });\n    }\n  };\n  var addMraidEventListener = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.isDone(\"addEventListener\", value, CustomMap);\n  };\n  adService.prototype.initializeMraid = function () {\n    var generatorWrapper = this;\n    if (this.Generator) {\n      return !this.removeElement();\n    }\n    this.Generator = true;\n    if (this.tasks.finalBrowserVersion === 2) {\n      this.settlePromise = \"ng\";\n      activateAdController(this, \"w\");\n      return false;\n    }\n    if (this.tasks.finalBrowserVersion === 1) {\n      this.settlePromise = \"mm\";\n      activateAdController(this, \"w\");\n      return false;\n    }\n    getAdEnvironmentInstance().executeCallbacks = true;\n    if (this.setTimeoutWrapper.document.readyState && this.setTimeoutWrapper.document.readyState == \"complete\") {\n      setupMraid(this);\n    } else {\n      addEventListenerWithCapture(this.setTimeoutWrapper, \"load\", function () {\n        GetEnvironment().setTimeout(To(292, function () {\n          return setupMraid(generatorWrapper);\n        }), 100);\n      }, 292);\n    }\n    return true;\n  };\n  var setupMraid = function (generatorWrapper) {\n    getAdEnvironment().createDeferred = !!generatorWrapper.isDone(\"isViewable\");\n    addMraidEventListener(generatorWrapper, \"viewableChange\", enableManualVideoAdBreaks);\n    if (generatorWrapper.isDone(\"getState\") === \"loading\") {\n      addMraidEventListener(generatorWrapper, \"ready\", onMraidReady);\n    } else {\n      checkMraidFeatures(generatorWrapper);\n    }\n  };\n  var checkMraidFeatures = function (generatorWrapper) {\n    if (typeof generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR === \"string\") {\n      generatorWrapper.handleThenable = true;\n      startMraidMeasurement(generatorWrapper);\n    } else {\n      generatorWrapper.tasks.finalBrowserVersion = 3;\n      generatorWrapper.settlePromise = \"nc\";\n      activateAdController(generatorWrapper, \"w\");\n    }\n  };\n  var startMraidMeasurement = function (generatorWrapper) {\n    generatorWrapper.logError = false;\n    var value = getAdState(getAdEnvironment().AdEnvironmentConfig, \"rmmt\") == 1;\n    var CustomMap = !!generatorWrapper.isDone(\"isViewable\");\n    if (value ? !CustomMap : 1) {\n      GetEnvironment().setTimeout(To(524, function () {\n        if (!generatorWrapper.logError) {\n          removeMraidEventListener(generatorWrapper);\n          logError(540, Error());\n          generatorWrapper.settlePromise = \"mt\";\n          activateAdController(generatorWrapper, \"w\");\n        }\n      }), 500);\n    }\n    configureMraidExperiments(generatorWrapper);\n    addMraidEventListener(generatorWrapper, generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR, initializeAdDisplayContainer);\n  };\n  var configureMraidExperiments = function (generatorWrapper) {\n    var value = getAdState(getAdEnvironment().AdEnvironmentConfig, \"sneio\") == 1;\n    var CustomMap = undefined !== generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_1;\n    var findEntry = undefined !== generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_2;\n    if (value = value && findEntry) {\n      generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_2 = true;\n    }\n    if (CustomMap) {\n      generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR_EXP_1 = !value;\n    }\n  };\n  var removeMraidEventListener = function (generatorWrapper) {\n    generatorWrapper.isDone(\"removeEventListener\", generatorWrapper.tasks.finalizeGenerator.AFMA_LIDAR, initializeAdDisplayContainer);\n    generatorWrapper.handleThenable = false;\n  };\n  adService.prototype.updateMaxSize = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = getDimensionProperty(this, \"getMaxSize\");\n    generatorWrapper.entryIdCounter = new handleThenable(0, value.width, value.height, 0);\n  };\n  adService.prototype.totalAdBufferingTime = function () {\n    getAdEnvironmentInstance().handleAsync = getDimensionProperty(this, \"getScreenSize\");\n  };\n  var getDimensionProperty = function (generatorWrapper, value) {\n    if (generatorWrapper.isDone(\"getState\") === \"loading\") {\n      return new Size(-1, -1);\n    }\n    value = generatorWrapper.isDone(value);\n    if (!value) {\n      return new Size(-1, -1);\n    }\n    generatorWrapper = parseInt(value.width, 10);\n    value = parseInt(value.height, 10);\n    if (isNaN(generatorWrapper) || isNaN(value)) {\n      return new Size(-1, -1);\n    } else {\n      return new Size(generatorWrapper, value);\n    }\n  };\n  adService.prototype.markAsCompleted = function () {\n    removeMraidEventListener(this);\n    AdController.prototype.markAsCompleted.call(this);\n  };\n  var onMraidReady = function () {\n    try {\n      var generatorWrapper = getSingletonInstance(adService);\n      generatorWrapper.isDone(\"removeEventListener\", \"ready\", onMraidReady);\n      checkMraidFeatures(generatorWrapper);\n    } catch (value) {\n      logError(541, value);\n    }\n  };\n  var initializeAdDisplayContainer = function (generatorWrapper, value) {\n    try {\n      var CustomMap = getSingletonInstance(adService);\n      CustomMap.logError = true;\n      var findEntry = generatorWrapper ? new handleThenable(generatorWrapper.globalScope, generatorWrapper.inheritPrototype + generatorWrapper.width, generatorWrapper.globalScope + generatorWrapper.height, generatorWrapper.inheritPrototype) : new handleThenable(0, 0, 0, 0);\n      var iterateEntries = accumulatePosition();\n      var createCircularNode = isAdPlayingOrMuted();\n      var entryIdCounter = new AdEvent(iterateEntries, createCircularNode, CustomMap);\n      entryIdCounter.entryIdCounter = findEntry;\n      entryIdCounter.volume = value;\n      CustomMap.deferError(entryIdCounter);\n    } catch (key) {\n      logError(542, key);\n    }\n  };\n  var enableManualVideoAdBreaks = function (generatorWrapper) {\n    var value = getAdEnvironment();\n    var CustomMap = getSingletonInstance(adService);\n    if (generatorWrapper && !value.createDeferred) {\n      value.createDeferred = true;\n      CustomMap.toArray = true;\n      if (CustomMap.settlePromise) {\n        activateAdController(CustomMap, \"w\", true);\n      }\n    }\n  };\n  var FeatureToggle = new function (generatorWrapper, value) {\n    this.key = generatorWrapper;\n    if (undefined === value) {\n      this.defaultValue = false;\n    } else {\n      this.defaultValue = value;\n    }\n    this.valueType = \"boolean\";\n  }(\"45378663\");\n  var AdEventReporter = function () {\n    this.setTimeoutWrapper = this.Generator = false;\n    this.entryIdCounter = this.tasks = null;\n    var generatorWrapper = {};\n    this.handleThenable = (generatorWrapper.startTimer = this.applyArrayOrObjectTransformation, generatorWrapper.firstquartile = this.getTransformation, generatorWrapper.midpoint = this.createTransformation, generatorWrapper.thirdquartile = this.float64Transformation, generatorWrapper.complete = this.generateTransformationFunction, generatorWrapper.hasError = this.objectTransformationFallback, generatorWrapper.pause = this.frozenArray, generatorWrapper.resume = this.transformElement, generatorWrapper.skip = this.applyBooleanTransformation, generatorWrapper.viewable_impression = this.getFromGlobalScope, generatorWrapper.mute = this.filterElements, generatorWrapper.unmute = this.filterElements, generatorWrapper.fullscreen = this.objectTransformationInstance, generatorWrapper.exitfullscreen = this.cleanupSymbol, generatorWrapper.fully_viewable_audible_half_duration_impression = this.getFromGlobalScope, generatorWrapper.measurable_impression = this.getFromGlobalScope, generatorWrapper.abandon = this.frozenArray, generatorWrapper.engagedview = this.getFromGlobalScope, generatorWrapper.impression = this.getFromGlobalScope, generatorWrapper.creativeview = this.getFromGlobalScope, generatorWrapper.progress = this.filterElements, generatorWrapper.custom_metric_viewable = this.getFromGlobalScope, generatorWrapper.bufferstart = this.frozenArray, generatorWrapper.bufferfinish = this.transformElement, generatorWrapper.audio_measurable = this.getFromGlobalScope, generatorWrapper.audio_audible = this.getFromGlobalScope, generatorWrapper);\n    generatorWrapper = {};\n    this.updateMaxSize = (generatorWrapper.overlay_resize = this.applyStringOrNumberTransformation, generatorWrapper.abandon = this.setRawBitFlags, generatorWrapper.closeCache = this.setRawBitFlags, generatorWrapper.collapse = this.setRawBitFlags, generatorWrapper.overlay_unmeasurable_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_unmeasurable_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_viewable_immediate_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_viewable_immediate_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_unviewable_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_unviewable_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper.overlay_viewable_end_of_session_impression = function (value) {\n      return getAdImpressionData(value, \"overlay_viewable_end_of_session_impression\", isAdPlayingOrMuted());\n    }, generatorWrapper);\n    getAdEnvironment().tasks = 3;\n    initializeAdSdk(this);\n  };\n  AdEventReporter.prototype.handleAsync = function (generatorWrapper) {\n    updateVisibilityState(generatorWrapper, false);\n    removeRelatedAdContainers(generatorWrapper);\n  };\n  AdEventReporter.prototype.settlePromise = function () {};\n  var Et = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.isDone(null, findEntry, true, value);\n    generatorWrapper.handleAsync = CustomMap;\n    addUniqueAdContainers([generatorWrapper]);\n    return generatorWrapper;\n  };\n  AdEventReporter.prototype.isDone = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = this;\n    generatorWrapper = new AdProcessor(window, generatorWrapper, CustomMap ? value : -1, 7, this.generateSymbol(), this.booleanArrayCache());\n    generatorWrapper.constructReflect = findEntry;\n    ensureQueryIdAdState(generatorWrapper.AdEnvironmentConfig);\n    updateAdStateValue(generatorWrapper.AdEnvironmentConfig, \"queryid\", generatorWrapper.constructReflect);\n    generatorWrapper.throwIfFlag2(\"\");\n    configureAdStateHandlers(generatorWrapper, function () {\n      return iterateEntries.logError.apply(iterateEntries, toArray(sliceArguments.apply(0, arguments)));\n    }, function () {\n      return iterateEntries.tryCall.apply(iterateEntries, toArray(sliceArguments.apply(0, arguments)));\n    });\n    if (findEntry = getSingletonInstance(AdInitializationState).entryIdCounter) {\n      replaceAdContainerContent(generatorWrapper, findEntry);\n    }\n    if (generatorWrapper.setPrototypeOfPolyfill.trimString) {\n      getSingletonInstance(EmptyClass);\n    }\n    return generatorWrapper;\n  };\n  var processAdTrackingInfo = function (generatorWrapper, value, CustomMap) {\n    filterInvalidAdRequests(value);\n    var findEntry = generatorWrapper.entryIdCounter;\n    forEachElement(value, function (iterateEntries) {\n      var createCircularNode = mapElements(iterateEntries.setTimeoutWrapper, function (entryIdCounter) {\n        var key = parseCustomMetrics(entryIdCounter);\n        if (key == null) {\n          entryIdCounter = null;\n        } else {\n          entryIdCounter = new ProfileMetrics();\n          if (key.visible != null) {\n            entryIdCounter.entryIdCounter = key.visible / 100;\n          }\n          if (key.audible != null) {\n            entryIdCounter.tasks = key.audible == 1;\n          }\n          if (key.time != null) {\n            var value = key.timetype == \"mtos\" ? \"mtos\" : \"tos\";\n            var entry = endsWith(key.time, \"%\") ? \"%\" : \"ms\";\n            key = parseInt(key.time, 10);\n            if (entry == \"%\") {\n              key /= 100;\n            }\n            if (entry == \"ms\") {\n              entryIdCounter.setTimeoutWrapper = key;\n              entryIdCounter.createDeferred = -1;\n            } else {\n              entryIdCounter.setTimeoutWrapper = -1;\n              entryIdCounter.createDeferred = key;\n            }\n            if (undefined === value) {\n              entryIdCounter.handleAsync = \"tos\";\n            } else {\n              entryIdCounter.handleAsync = value;\n            }\n          }\n        }\n        return entryIdCounter;\n      });\n      if (!someElement(createCircularNode, function (entryIdCounter) {\n        return entryIdCounter == null;\n      })) {\n        addToAdQueue(CustomMap, new CustomMetric(iterateEntries.writeBytes, iterateEntries.entryIdCounter, createCircularNode, findEntry));\n      }\n    });\n  };\n  var getDefaultAdProviders = function () {\n    var generatorWrapper = [];\n    var value = getAdEnvironment();\n    generatorWrapper.push(getSingletonInstance(GeoLocationProvider));\n    if (getAdState(value.AdEnvironmentConfig, \"mvp_lv\")) {\n      generatorWrapper.push(getSingletonInstance(adService));\n    }\n    value = [new ViewabilityService(), new NativeViewabilityService()];\n    value.push(new AdLoader(generatorWrapper));\n    value.push(new AdVisibilityProvider(window));\n    return value;\n  };\n  var initializeAdReporting = function (generatorWrapper) {\n    if (!generatorWrapper.Generator) {\n      generatorWrapper.Generator = true;\n      try {\n        var value = accumulatePosition();\n        var CustomMap = getAdEnvironment();\n        var findEntry = getAdEnvironmentInstance();\n        Xo = value;\n        CustomMap.setTimeoutWrapper = 79463069;\n        if (generatorWrapper.tasks !== \"o\") {\n          currentWindow = getTopAccessibleContext(window);\n        }\n        if (isAdUtilityAvailable()) {\n          adRequestManager.entryIdCounter.createObjectOrUndefined = 0;\n          adRequestManager.entryIdCounter.setFlag32 = accumulatePosition() - value;\n          var iterateEntries = getDefaultAdProviders();\n          var createCircularNode = getSingletonInstance(AdInitializationState);\n          createCircularNode.tasks = iterateEntries;\n          if (initializeAdContainer(createCircularNode, function () {\n            resetAdProviders();\n          })) {\n            if (!adRequestManager.done) {\n              processAllSamples();\n              registerAdComponent(createCircularNode.entryIdCounter.entryIdCounter, generatorWrapper);\n              startSampling();\n            }\n          } else if (findEntry.setTimeoutWrapper) {\n            resetAdProviders();\n          } else {\n            startSampling();\n          }\n        } else {\n          isBooleanFlag = true;\n        }\n      } catch (entryIdCounter) {\n        globalAdContainersManager.resetAdStateController();\n        throw entryIdCounter;\n      }\n    }\n  };\n  var finalizeAdReporting = function (generatorWrapper) {\n    adRequestManager.tasks.cancel();\n    emptyString = generatorWrapper;\n    adRequestManager.done = true;\n  };\n  var getAdReportingMode = function (generatorWrapper) {\n    if (generatorWrapper.tasks) {\n      return generatorWrapper.tasks;\n    }\n    var value = getSingletonInstance(AdInitializationState).entryIdCounter;\n    if (value) {\n      switch (value.getAdName()) {\n        case \"nis\":\n          generatorWrapper.tasks = \"n\";\n          break;\n        case \"gsv\":\n          generatorWrapper.tasks = \"m\";\n      }\n    }\n    if (!generatorWrapper.tasks) {\n      generatorWrapper.tasks = \"h\";\n    }\n    return generatorWrapper.tasks;\n  };\n  var reportAdEvent = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.entryIdCounter == null) {\n      value.Nb |= 4;\n      return false;\n    }\n    generatorWrapper = generatorWrapper.entryIdCounter.report(CustomMap, value);\n    value.Nb |= generatorWrapper;\n    return generatorWrapper == 0;\n  };\n  AdEventReporter.prototype.isAndroid = function (generatorWrapper) {\n    switch (generatorWrapper.uniqueIdProperty()) {\n      case 0:\n        if (generatorWrapper = getSingletonInstance(AdInitializationState).entryIdCounter) {\n          generatorWrapper = generatorWrapper.entryIdCounter;\n          removeElement(generatorWrapper.handleAsync, this);\n          if (generatorWrapper.dispatchUnhandledRejection && this.getClosureFlagValue()) {\n            checkAdComponentsActive(generatorWrapper);\n          }\n        }\n        resetAdProviders();\n        break;\n      case 2:\n        startSampling();\n    }\n  };\n  AdEventReporter.prototype.deferError = function () {};\n  AdEventReporter.prototype.getClosureFlagValue = function () {\n    return false;\n  };\n  var resetAdProviders = function () {\n    var generatorWrapper = [new AdVisibilityProvider(window)];\n    var value = getSingletonInstance(AdInitializationState);\n    value.tasks = generatorWrapper;\n    if (initializeAdContainer(value, function () {\n      finalizeAdReporting(\"i\");\n    })) {\n      if (!adRequestManager.done) {\n        processAllSamples();\n        startSampling();\n      }\n    } else {\n      finalizeAdReporting(\"i\");\n    }\n  };\n  AdEventReporter.prototype.tryCall = function (generatorWrapper, value) {\n    generatorWrapper.uniqueIdCounter = true;\n    switch (generatorWrapper.generatorYield()) {\n      case 1:\n        reportAdStart(generatorWrapper, value);\n        break;\n      case 2:\n        this.undefinedVariable2(generatorWrapper);\n    }\n    this.parseNullableBoolean(generatorWrapper);\n  };\n  var reportAdStart = function (generatorWrapper, value) {\n    if (!generatorWrapper.isObjectOrFunction) {\n      var CustomMap = getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n      CustomMap = generatorWrapper.emptyArray.entryIdCounter(CustomMap).entryIdCounter;\n      var findEntry = {\n        writeBytes: \"lidarv\"\n      };\n      findEntry.foundEntry = value;\n      findEntry.sv = \"962\";\n      if (sdkVersion !== null) {\n        findEntry.getIterator = sdkVersion;\n      }\n      parseQueryString(CustomMap, function (iterateEntries, createCircularNode) {\n        return findEntry[iterateEntries] = iterateEntries == \"mtos\" || iterateEntries == \"tos\" ? createCircularNode : encodeURIComponent(createCircularNode);\n      });\n      value = generateUrlParams();\n      parseQueryString(value, function (iterateEntries, createCircularNode) {\n        return findEntry[iterateEntries] = encodeURIComponent(createCircularNode);\n      });\n      value = \"//pagead2.googlesyndication.com/pagead/gen_204?\" + buildQueryString(addParametersFromObject(new QueryStringBuilder(), findEntry));\n      sendAdRequest(value);\n      generatorWrapper.isObjectOrFunction = true;\n    }\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.applyArrayOrObjectTransformation = function (generatorWrapper) {\n    var value = generatorWrapper.onFulfilled(generatorWrapper);\n    if (value) {\n      value = value.volume;\n      generatorWrapper.sliceArguments = isValidOpacity(value) && value > 0;\n    }\n    updateAdPlaybackData(generatorWrapper, 0);\n    return getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.filterElements = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return this.getFromGlobalScope(generatorWrapper, value, CustomMap);\n  };\n  setTimeoutWrapper.getFromGlobalScope = function (generatorWrapper, value, CustomMap) {\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.getTransformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"firstquartile\", 1);\n  };\n  setTimeoutWrapper.createTransformation = function (generatorWrapper) {\n    generatorWrapper.toArray = true;\n    return trackAdEventByType(generatorWrapper, \"midpoint\", 2);\n  };\n  setTimeoutWrapper.float64Transformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"thirdquartile\", 3);\n  };\n  setTimeoutWrapper.generateTransformationFunction = function (generatorWrapper) {\n    var value = trackAdEventByType(generatorWrapper, \"complete\", 4);\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationFallback = function (generatorWrapper) {\n    generatorWrapper.createObjectPolyfill = 3;\n    return getAdImpressionData(generatorWrapper, \"error\", isAdPlayingOrMuted());\n  };\n  var trackAdEventByType = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    updateAdPlaybackData(generatorWrapper, CustomMap);\n    if (CustomMap != 4) {\n      ensureArraySize(generatorWrapper.handleThenable, CustomMap, generatorWrapper.base64AlphabetIndex);\n    }\n    return getAdImpressionData(generatorWrapper, value, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.transformElement = function (generatorWrapper, value, CustomMap) {\n    value = isAdPlayingOrMuted();\n    if (!(generatorWrapper.createObjectPolyfill != 2 || value)) {\n      generatorWrapper.getAdManager().settlePromise = accumulatePosition();\n    }\n    processSamples(adRequestManager, [generatorWrapper], !value);\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      generatorWrapper.createObjectPolyfill = 1;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, value);\n  };\n  setTimeoutWrapper.applyBooleanTransformation = function (generatorWrapper, value) {\n    value = this.filterElements(generatorWrapper, value || {}, \"skip\");\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationInstance = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, true);\n    return this.filterElements(generatorWrapper, value || {}, \"fullscreen\");\n  };\n  setTimeoutWrapper.cleanupSymbol = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, false);\n    return this.filterElements(generatorWrapper, value || {}, \"exitfullscreen\");\n  };\n  setTimeoutWrapper.frozenArray = function (generatorWrapper, value, CustomMap) {\n    value = generatorWrapper.getAdManager();\n    value.totalAdBufferingTime = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill != 1);\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    if (generatorWrapper.createObjectPolyfill == 1) {\n      generatorWrapper.createObjectPolyfill = 2;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.applyStringOrNumberTransformation = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return generatorWrapper.tasks();\n  };\n  setTimeoutWrapper.setRawBitFlags = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    this.TransformArguments(generatorWrapper);\n    setAdProcessorState(generatorWrapper);\n    return generatorWrapper.tasks();\n  };\n  var initializeAdSdk = function (generatorWrapper) {\n    initializeErrorHandling(function () {\n      var value = getAdSdkInfo();\n      if (generatorWrapper.tasks != null) {\n        value.sdk = generatorWrapper.tasks;\n      }\n      var CustomMap = getSingletonInstance(AdInitializationState);\n      if (CustomMap.entryIdCounter != null) {\n        value.adVerificationMeasurementSystem = CustomMap.entryIdCounter.getAdName();\n      }\n      return value;\n    });\n  };\n  var createAdElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = findAdContainerByNb(globalAdContainersManager, CustomMap);\n    if (iterateEntries !== null && iterateEntries.constructReflect !== value) {\n      generatorWrapper.handleAsync(iterateEntries);\n      iterateEntries = null;\n    }\n    if (!iterateEntries) {\n      value = generatorWrapper.isDone(CustomMap, accumulatePosition(), false, value);\n      if (globalAdContainersManager.tasks.length == 0) {\n        getAdEnvironment().setTimeoutWrapper = 79463069;\n      }\n      addBatchAdContainers([value]);\n      iterateEntries = value;\n      iterateEntries.handleAsync = getAdReportingMode(generatorWrapper);\n      if (findEntry) {\n        iterateEntries.includesString = findEntry;\n      }\n    }\n    return iterateEntries;\n  };\n  AdEventReporter.prototype.logError = function () {};\n  var validateAdProperties = function (generatorWrapper, value) {\n    value.dispatchUnhandledRejection = 0;\n    for (var CustomMap in AdEventTypes) if (generatorWrapper[CustomMap] == null) {\n      value.dispatchUnhandledRejection |= AdEventTypes[CustomMap];\n    }\n    convertAdPropertiesToMillis(generatorWrapper, \"currentTime\");\n    convertAdPropertiesToMillis(generatorWrapper, \"duration\");\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.undefinedVariable2 = function () {};\n  setTimeoutWrapper.TransformArguments = function () {};\n  setTimeoutWrapper.normalizeNumber = function () {};\n  setTimeoutWrapper.parseNullableBoolean = function () {};\n  setTimeoutWrapper.customProperty1 = function () {};\n  setTimeoutWrapper.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      return new StrategyFactory(this.entryIdCounter);\n    }\n  };\n  setTimeoutWrapper.generateSymbol = function () {\n    return new AdDataParser();\n  };\n  var convertAdPropertiesToMillis = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper[value];\n    if (undefined !== CustomMap && CustomMap > 0) {\n      generatorWrapper[value] = Math.floorRectangle(1000 * CustomMap);\n    }\n  };\n  var getAdSdkInfo = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = {};\n    var CustomMap = {};\n    var findEntry = {};\n    return Object.assign({}, (value.sv = \"962\", value), sdkVersion !== null && (CustomMap.getIterator = sdkVersion, CustomMap), (findEntry[\"if\"] = generatorWrapper.setTimeoutWrapper ? \"1\" : \"0\", findEntry.nas = String(globalAdContainersManager.entryIdCounter.length), findEntry));\n  };\n  var AudioAudibleEvent = function (generatorWrapper) {\n    yearResetter.call(this, \"audio_audible\", generatorWrapper);\n  };\n  inheritPrototype(AudioAudibleEvent, yearResetter);\n  AudioAudibleEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.isIos() == 4;\n  };\n  var AudioMeasurableEvent = function (generatorWrapper) {\n    zoneResetter.call(this, \"audio_measurable\", generatorWrapper);\n  };\n  inheritPrototype(AudioMeasurableEvent, zoneResetter);\n  AudioMeasurableEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isIos();\n    return generatorWrapper == 3 || generatorWrapper == 4;\n  };\n  var AudioEventProcessor = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(AudioEventProcessor, MeasurementStrategy);\n  AudioEventProcessor.prototype.tasks = function () {\n    return new AudioMeasurableEvent(this.entryIdCounter);\n  };\n  AudioEventProcessor.prototype.setTimeoutWrapper = function () {\n    return [new AudioAudibleEvent(this.entryIdCounter)];\n  };\n  var AdEventValidator = function () {};\n  inheritPrototype(AdEventValidator, emptyFunction);\n  AdEventValidator.prototype.entryIdCounter = function (generatorWrapper) {\n    if (generatorWrapper && (generatorWrapper.iterateEntries === 28 && (gene",
  "Builder(), findEntry));\n      sendAdRequest(value);\n      generatorWrapper.isObjectOrFunction = true;\n    }\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.applyArrayOrObjectTransformation = function (generatorWrapper) {\n    var value = generatorWrapper.onFulfilled(generatorWrapper);\n    if (value) {\n      value = value.volume;\n      generatorWrapper.sliceArguments = isValidOpacity(value) && value > 0;\n    }\n    updateAdPlaybackData(generatorWrapper, 0);\n    return getAdImpressionData(generatorWrapper, \"start\", isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.filterElements = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return this.getFromGlobalScope(generatorWrapper, value, CustomMap);\n  };\n  setTimeoutWrapper.getFromGlobalScope = function (generatorWrapper, value, CustomMap) {\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.getTransformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"firstquartile\", 1);\n  };\n  setTimeoutWrapper.createTransformation = function (generatorWrapper) {\n    generatorWrapper.toArray = true;\n    return trackAdEventByType(generatorWrapper, \"midpoint\", 2);\n  };\n  setTimeoutWrapper.float64Transformation = function (generatorWrapper) {\n    return trackAdEventByType(generatorWrapper, \"thirdquartile\", 3);\n  };\n  setTimeoutWrapper.generateTransformationFunction = function (generatorWrapper) {\n    var value = trackAdEventByType(generatorWrapper, \"complete\", 4);\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationFallback = function (generatorWrapper) {\n    generatorWrapper.createObjectPolyfill = 3;\n    return getAdImpressionData(generatorWrapper, \"error\", isAdPlayingOrMuted());\n  };\n  var trackAdEventByType = function (generatorWrapper, value, CustomMap) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    updateAdPlaybackData(generatorWrapper, CustomMap);\n    if (CustomMap != 4) {\n      ensureArraySize(generatorWrapper.handleThenable, CustomMap, generatorWrapper.base64AlphabetIndex);\n    }\n    return getAdImpressionData(generatorWrapper, value, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.transformElement = function (generatorWrapper, value, CustomMap) {\n    value = isAdPlayingOrMuted();\n    if (!(generatorWrapper.createObjectPolyfill != 2 || value)) {\n      generatorWrapper.getAdManager().settlePromise = accumulatePosition();\n    }\n    processSamples(adRequestManager, [generatorWrapper], !value);\n    if (generatorWrapper.createObjectPolyfill == 2) {\n      generatorWrapper.createObjectPolyfill = 1;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, value);\n  };\n  setTimeoutWrapper.applyBooleanTransformation = function (generatorWrapper, value) {\n    value = this.filterElements(generatorWrapper, value || {}, \"skip\");\n    setAdProcessorState(generatorWrapper);\n    return value;\n  };\n  setTimeoutWrapper.objectTransformationInstance = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, true);\n    return this.filterElements(generatorWrapper, value || {}, \"fullscreen\");\n  };\n  setTimeoutWrapper.cleanupSymbol = function (generatorWrapper, value) {\n    updateVisibilityState(generatorWrapper, false);\n    return this.filterElements(generatorWrapper, value || {}, \"exitfullscreen\");\n  };\n  setTimeoutWrapper.frozenArray = function (generatorWrapper, value, CustomMap) {\n    value = generatorWrapper.getAdManager();\n    value.totalAdBufferingTime = widthRetriever(value, accumulatePosition(), generatorWrapper.createObjectPolyfill != 1);\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    if (generatorWrapper.createObjectPolyfill == 1) {\n      generatorWrapper.createObjectPolyfill = 2;\n    }\n    return getAdImpressionData(generatorWrapper, CustomMap, isAdPlayingOrMuted());\n  };\n  setTimeoutWrapper.applyStringOrNumberTransformation = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    return generatorWrapper.tasks();\n  };\n  setTimeoutWrapper.setRawBitFlags = function (generatorWrapper) {\n    processSamples(adRequestManager, [generatorWrapper], !isAdPlayingOrMuted());\n    this.TransformArguments(generatorWrapper);\n    setAdProcessorState(generatorWrapper);\n    return generatorWrapper.tasks();\n  };\n  var initializeAdSdk = function (generatorWrapper) {\n    initializeErrorHandling(function () {\n      var value = getAdSdkInfo();\n      if (generatorWrapper.tasks != null) {\n        value.sdk = generatorWrapper.tasks;\n      }\n      var CustomMap = getSingletonInstance(AdInitializationState);\n      if (CustomMap.entryIdCounter != null) {\n        value.adVerificationMeasurementSystem = CustomMap.entryIdCounter.getAdName();\n      }\n      return value;\n    });\n  };\n  var createAdElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = findAdContainerByNb(globalAdContainersManager, CustomMap);\n    if (iterateEntries !== null && iterateEntries.constructReflect !== value) {\n      generatorWrapper.handleAsync(iterateEntries);\n      iterateEntries = null;\n    }\n    if (!iterateEntries) {\n      value = generatorWrapper.isDone(CustomMap, accumulatePosition(), false, value);\n      if (globalAdContainersManager.tasks.length == 0) {\n        getAdEnvironment().setTimeoutWrapper = 79463069;\n      }\n      addBatchAdContainers([value]);\n      iterateEntries = value;\n      iterateEntries.handleAsync = getAdReportingMode(generatorWrapper);\n      if (findEntry) {\n        iterateEntries.includesString = findEntry;\n      }\n    }\n    return iterateEntries;\n  };\n  AdEventReporter.prototype.logError = function () {};\n  var validateAdProperties = function (generatorWrapper, value) {\n    value.dispatchUnhandledRejection = 0;\n    for (var CustomMap in AdEventTypes) if (generatorWrapper[CustomMap] == null) {\n      value.dispatchUnhandledRejection |= AdEventTypes[CustomMap];\n    }\n    convertAdPropertiesToMillis(generatorWrapper, \"currentTime\");\n    convertAdPropertiesToMillis(generatorWrapper, \"duration\");\n  };\n  setTimeoutWrapper = AdEventReporter.prototype;\n  setTimeoutWrapper.undefinedVariable2 = function () {};\n  setTimeoutWrapper.TransformArguments = function () {};\n  setTimeoutWrapper.normalizeNumber = function () {};\n  setTimeoutWrapper.parseNullableBoolean = function () {};\n  setTimeoutWrapper.customProperty1 = function () {};\n  setTimeoutWrapper.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      return new StrategyFactory(this.entryIdCounter);\n    }\n  };\n  setTimeoutWrapper.generateSymbol = function () {\n    return new AdDataParser();\n  };\n  var convertAdPropertiesToMillis = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper[value];\n    if (undefined !== CustomMap && CustomMap > 0) {\n      generatorWrapper[value] = Math.floorRectangle(1000 * CustomMap);\n    }\n  };\n  var getAdSdkInfo = function () {\n    var generatorWrapper = getAdEnvironmentInstance();\n    var value = {};\n    var CustomMap = {};\n    var findEntry = {};\n    return Object.assign({}, (value.sv = \"962\", value), sdkVersion !== null && (CustomMap.getIterator = sdkVersion, CustomMap), (findEntry[\"if\"] = generatorWrapper.setTimeoutWrapper ? \"1\" : \"0\", findEntry.nas = String(globalAdContainersManager.entryIdCounter.length), findEntry));\n  };\n  var AudioAudibleEvent = function (generatorWrapper) {\n    yearResetter.call(this, \"audio_audible\", generatorWrapper);\n  };\n  inheritPrototype(AudioAudibleEvent, yearResetter);\n  AudioAudibleEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    return generatorWrapper.isIos() == 4;\n  };\n  var AudioMeasurableEvent = function (generatorWrapper) {\n    zoneResetter.call(this, \"audio_measurable\", generatorWrapper);\n  };\n  inheritPrototype(AudioMeasurableEvent, zoneResetter);\n  AudioMeasurableEvent.prototype.entryIdCounter = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.isIos();\n    return generatorWrapper == 3 || generatorWrapper == 4;\n  };\n  var AudioEventProcessor = function () {\n    MeasurementStrategy.apply(this, arguments);\n  };\n  inheritPrototype(AudioEventProcessor, MeasurementStrategy);\n  AudioEventProcessor.prototype.tasks = function () {\n    return new AudioMeasurableEvent(this.entryIdCounter);\n  };\n  AudioEventProcessor.prototype.setTimeoutWrapper = function () {\n    return [new AudioAudibleEvent(this.entryIdCounter)];\n  };\n  var AdEventValidator = function () {};\n  inheritPrototype(AdEventValidator, emptyFunction);\n  AdEventValidator.prototype.entryIdCounter = function (generatorWrapper) {\n    if (generatorWrapper && (generatorWrapper.iterateEntries === 28 && (generatorWrapper = Object.assign({}, generatorWrapper, {\n      adVerificationAdSystem: 3\n    })), generatorWrapper.filterAndLinkAdContainers === 4 || generatorWrapper.filterAndLinkAdContainers === 5)) {\n      generatorWrapper = Object.assign({}, generatorWrapper, {\n        filterAndLinkAdContainers: 3\n      });\n    }\n    var value = new nullResetter();\n    value.entryIdCounter = processResources(generatorWrapper, extendedAdDataMapping);\n    value.tasks = processResources(generatorWrapper, additionalDataMapping);\n    return value;\n  };\n  var AdEventReporter = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  AdEventReporter.prototype.report = function (generatorWrapper, value) {\n    var CustomMap = this.entryIdCounter(value);\n    if (typeof CustomMap === \"function\") {\n      var findEntry = {};\n      var iterateEntries = {};\n      findEntry = Object.assign({}, sdkVersion !== null && (findEntry.getIterator = sdkVersion, findEntry), (iterateEntries.sv = \"962\", iterateEntries.cb = sdkType, iterateEntries.iterateEntries = getAdEventTypeCode(generatorWrapper), iterateEntries));\n      iterateEntries = getAdImpressionData(value, generatorWrapper, isAdPlayingOrMuted());\n      extendObject(findEntry, iterateEntries);\n      value.updateFlags[generatorWrapper] = iterateEntries;\n      if (value.generatorYield() == 2) {\n        findEntry = buildAdRequestParams(findEntry).join(\"&\");\n      } else {\n        findEntry = value.emptyArray.entryIdCounter(findEntry).entryIdCounter;\n      }\n      try {\n        CustomMap(value.constructReflect, findEntry, generatorWrapper);\n        return 0;\n      } catch (createCircularNode) {\n        return 2;\n      }\n    } else {\n      return 1;\n    }\n  };\n  var getAdEventTypeCode = function (generatorWrapper) {\n    var value = isCustomMetricViewable(generatorWrapper) ? \"custom_metric_viewable\" : generatorWrapper;\n    generatorWrapper = findKeyInObject(function (CustomMap) {\n      return CustomMap == value;\n    });\n    return ip[generatorWrapper];\n  };\n  AdEventReporter.prototype.entryIdCounter = function () {\n    return getFromGlobalScope(this.tasks);\n  };\n  var ConditionalAdEventReporter = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n  };\n  inheritPrototype(ConditionalAdEventReporter, AdEventReporter);\n  ConditionalAdEventReporter.prototype.entryIdCounter = function (generatorWrapper) {\n    if (!generatorWrapper.includesString) {\n      return AdEventReporter.prototype.entryIdCounter.call(this, generatorWrapper);\n    }\n    if (this.setTimeoutWrapper[generatorWrapper.includesString]) {\n      return function () {};\n    }\n    logError(393, Error());\n    return null;\n  };\n  var AdManager = function () {\n    AdEventReporter.call(this);\n    this.dispatchUnhandledRejection = undefined;\n    this.handleThenable = null;\n    this.executeCallbacks = false;\n    this.createDeferred = {};\n    this.resolvePromise = 0;\n    this.onFulfilled = \"ACTIVE_VIEW_TRAFFIC_TYPE_UNSPECIFIED\";\n  };\n  inheritPrototype(AdManager, AdEventReporter);\n  AdManager.prototype.settlePromise = function (generatorWrapper, value) {\n    var CustomMap = this;\n    var findEntry = getSingletonInstance(AdInitializationState);\n    if (findEntry.entryIdCounter != null) {\n      switch (findEntry.entryIdCounter.getAdName()) {\n        case \"nis\":\n          var iterateEntries = createAdForNis(this, generatorWrapper, value);\n          break;\n        case \"gsv\":\n          iterateEntries = createAdForGsv(this, generatorWrapper, value);\n          break;\n        case \"exc\":\n          iterateEntries = createAdForExc(this, generatorWrapper);\n      }\n    }\n    if (!iterateEntries) {\n      if (value.opt_overlayAdElement) {\n        iterateEntries = undefined;\n      } else if (value.opt_adElement) {\n        iterateEntries = createAdElement(this, generatorWrapper, value.opt_adElement, value.opt_osdId);\n      }\n    }\n    if (iterateEntries && iterateEntries.generatorYield() == 1) {\n      if (iterateEntries.onFulfilled == noopFunction) {\n        iterateEntries.onFulfilled = function (createCircularNode) {\n          return CustomMap.normalizeNumber(createCircularNode);\n        };\n      }\n      configureTrackingEvents(this, iterateEntries, value);\n    }\n    return iterateEntries;\n  };\n  var configureTrackingEvents = function (generatorWrapper, value, CustomMap) {\n    CustomMap = CustomMap.opt_configurable_tracking_events;\n    if (generatorWrapper.entryIdCounter != null && Array.isArray(CustomMap)) {\n      processAdTrackingInfo(generatorWrapper, CustomMap, value);\n    }\n  };\n  AdManager.prototype.normalizeNumber = function (generatorWrapper) {\n    generatorWrapper.tasks = 0;\n    generatorWrapper.tryCall = 0;\n    if (generatorWrapper.handleAsync == \"h\" || generatorWrapper.handleAsync == \"n\") {\n      var value;\n      getAdEnvironment();\n      if (generatorWrapper.includesString && checkAdOverlay(this)) {\n        var CustomMap = this.createDeferred[generatorWrapper.includesString];\n        if (CustomMap) {\n          value = function (iterateEntries) {\n            return getOverlayAdMetadata(CustomMap, iterateEntries);\n          };\n        } else if (CustomMap !== null) {\n          logError(379, Error());\n        }\n      } else {\n        value = getFromGlobalScope(\"ima.common.getVideoMetadata\");\n      }\n      if (typeof value === \"function\") {\n        try {\n          var findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else if (generatorWrapper.handleAsync == \"b\") {\n      value = getFromGlobalScope(\"ytads.bulleit.getVideoMetadata\");\n      if (typeof value === \"function\") {\n        try {\n          findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else if (generatorWrapper.handleAsync == \"ml\") {\n      value = getFromGlobalScope(\"ima.common.getVideoMetadata\");\n      if (typeof value === \"function\") {\n        try {\n          findEntry = value(generatorWrapper.constructReflect);\n        } catch (iterateEntries) {\n          generatorWrapper.tasks |= 4;\n        }\n      } else {\n        generatorWrapper.tasks |= 2;\n      }\n    } else {\n      generatorWrapper.tasks |= 1;\n    }\n    if (!generatorWrapper.tasks) {\n      if (undefined === findEntry) {\n        generatorWrapper.tasks |= 8;\n      } else if (findEntry === null) {\n        generatorWrapper.tasks |= 16;\n      } else if (isEmptyObject(findEntry)) {\n        generatorWrapper.tasks |= 32;\n      } else if (findEntry.errorCode != null) {\n        generatorWrapper.tryCall = findEntry.errorCode;\n        generatorWrapper.tasks |= 64;\n      }\n    }\n    if (findEntry == null) {\n      findEntry = {};\n    }\n    validateAdProperties(findEntry, generatorWrapper);\n    if (isValidOpacity(findEntry.volume) && isValidOpacity(this.dispatchUnhandledRejection)) {\n      findEntry.volume *= this.dispatchUnhandledRejection;\n    }\n    return findEntry;\n  };\n  var createAdForGsv = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findAdContainerByNa(globalAdContainersManager, value);\n    if (!findEntry) {\n      findEntry = CustomMap.opt_nativeTime || -1;\n      findEntry = Et(generatorWrapper, value, getAdReportingMode(generatorWrapper), findEntry);\n      if (CustomMap.opt_osdId) {\n        findEntry.includesString = CustomMap.opt_osdId;\n      }\n    }\n    return findEntry;\n  };\n  var createAdForNis = function (generatorWrapper, value, CustomMap) {\n    var findEntry = findAdContainerByNa(globalAdContainersManager, value);\n    if (!findEntry) {\n      findEntry = Et(generatorWrapper, value, \"n\", CustomMap.opt_nativeTime || -1);\n    }\n    return findEntry;\n  };\n  var createAdForExc = function (generatorWrapper, value) {\n    var CustomMap = findAdContainerByNa(globalAdContainersManager, value);\n    if (!CustomMap) {\n      CustomMap = Et(generatorWrapper, value, \"h\", -1);\n    }\n    return CustomMap;\n  };\n  AdManager.prototype.customProperty1 = function () {\n    if (checkAdOverlay(this)) {\n      return new ConditionalAdEventReporter(\"ima.common.triggerExternalActivityEvent\", this.createDeferred);\n    }\n    var generatorWrapper = getExternalActivityEventName(this);\n    if (generatorWrapper != null) {\n      return new AdEventReporter(generatorWrapper);\n    } else {\n      return null;\n    }\n  };\n  var getExternalActivityEventName = function (generatorWrapper) {\n    getAdEnvironment();\n    switch (getAdReportingMode(generatorWrapper)) {\n      case \"b\":\n        return \"ytads.bulleit.triggerExternalActivityEvent\";\n      case \"n\":\n        return \"ima.bridge.triggerExternalActivityEvent\";\n      case \"h\":\n      case \"m\":\n      case \"ml\":\n        return \"ima.common.triggerExternalActivityEvent\";\n    }\n    return null;\n  };\n  AdManager.prototype.undefinedVariable2 = function (generatorWrapper) {\n    if (!generatorWrapper.entryIdCounter && generatorWrapper.uniqueIdCounter && reportAdEvent(this, generatorWrapper, \"overlay_unmeasurable_impression\")) {\n      generatorWrapper.entryIdCounter = true;\n    }\n  };\n  AdManager.prototype.TransformArguments = function (generatorWrapper) {\n    if (generatorWrapper.cloneOrTransform) {\n      if (generatorWrapper.removeUniqueId()) {\n        reportAdEvent(this, generatorWrapper, \"overlay_viewable_end_of_session_impression\");\n      } else {\n        reportAdEvent(this, generatorWrapper, \"overlay_unviewable_impression\");\n      }\n      generatorWrapper.cloneOrTransform = false;\n    }\n  };\n  var processAdEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    var iterateEntries = {};\n    extendObject(iterateEntries, {\n      opt_adElement: undefined,\n      opt_fullscreen: undefined\n    }, CustomMap);\n    var createCircularNode = generatorWrapper.settlePromise(value, CustomMap);\n    if (createCircularNode) {\n      CustomMap = createCircularNode.emptyArray;\n    } else {\n      CustomMap = generatorWrapper.generateSymbol();\n    }\n    if (iterateEntries.opt_bounds) {\n      return CustomMap.entryIdCounter(generateErrorObject(\"ol\", findEntry));\n    }\n    if (undefined !== findEntry) {\n      if (undefined !== getMetricType(findEntry)) {\n        if (isBooleanFlag) {\n          generatorWrapper = generateErrorObject(\"ue\", findEntry);\n        } else {\n          initializeAdReporting(generatorWrapper);\n          if (emptyString == \"i\") {\n            generatorWrapper = generateErrorObject(\"i\", findEntry);\n            generatorWrapper[\"if\"] = 0;\n          } else if (value = generatorWrapper.settlePromise(value, iterateEntries)) {\n            value: {\n              if (emptyString == \"i\") {\n                value.uniqueIdCounter = true;\n                generatorWrapper.parseNullableBoolean(value);\n              }\n              createCircularNode = iterateEntries.opt_fullscreen;\n              if (undefined !== createCircularNode) {\n                updateVisibilityState(value, !!createCircularNode);\n              }\n              var entryIdCounter;\n              if (createCircularNode = !getAdEnvironmentInstance().tasks && !isTVDevice()) {\n                GetEnvironment();\n                createCircularNode = getVisibilityStateCode(document) === 0;\n              }\n              if (entryIdCounter = createCircularNode) {\n                switch (value.generatorYield()) {\n                  case 1:\n                    reportAdStart(value, \"pv\");\n                    break;\n                  case 2:\n                    generatorWrapper.undefinedVariable2(value);\n                }\n                finalizeAdReporting(\"pv\");\n              }\n              createCircularNode = findEntry.toLowerCase();\n              if (entryIdCounter = !entryIdCounter) {\n                CustomMap: {\n                  if (getAdState(getAdEnvironment().AdEnvironmentConfig, \"ssmol\") && (entryIdCounter = generatorWrapper.setTimeoutWrapper, createCircularNode === \"loaded\")) {\n                    break CustomMap;\n                  }\n                  entryIdCounter = containsElement(fp, createCircularNode);\n                }\n              }\n              if (entryIdCounter && value.createObjectPolyfill == 0) {\n                if (emptyString != \"i\") {\n                  adRequestManager.done = false;\n                }\n                if (undefined !== iterateEntries) {\n                  entryIdCounter = iterateEntries.opt_nativeTime;\n                } else {\n                  entryIdCounter = undefined;\n                }\n                adEventTimestamp = entryIdCounter = typeof entryIdCounter === \"number\" ? entryIdCounter : accumulatePosition();\n                value.findElementIndex = true;\n                var key = isAdPlayingOrMuted();\n                value.createObjectPolyfill = 1;\n                value.keyArray = {};\n                value.keyArray.startTimer = false;\n                value.keyArray.firstquartile = false;\n                value.keyArray.midpoint = false;\n                value.keyArray.thirdquartile = false;\n                value.keyArray.complete = false;\n                value.keyArray.resume = false;\n                value.keyArray.pause = false;\n                value.keyArray.skip = false;\n                value.keyArray.mute = false;\n                value.keyArray.unmute = false;\n                value.keyArray.viewable_impression = false;\n                value.keyArray.measurable_impression = false;\n                value.keyArray.fully_viewable_audible_half_duration_impression = false;\n                value.keyArray.fullscreen = false;\n                value.keyArray.exitfullscreen = false;\n                value.customProperty2 = 0;\n                if (!key) {\n                  value.getAdManager().settlePromise = entryIdCounter;\n                }\n                processSamples(adRequestManager, [value], !key);\n              }\n              if (entryIdCounter = value.isInternetExplorer[createCircularNode]) {\n                value.hasOwnPropertySafe.reportEvent(entryIdCounter);\n              }\n              if (!getAdState(getAdEnvironment().AdEnvironmentConfig, \"fmd\")) {\n                if (containsElement(gp, createCircularNode) && value.partialFunctionApplication) {\n                  value.partialFunctionApplication.tasks(value, null);\n                }\n              }\n              switch (value.generatorYield()) {\n                case 1:\n                  var value = isCustomMetricViewable(createCircularNode) ? generatorWrapper.handleThenable.custom_metric_viewable : generatorWrapper.handleThenable[createCircularNode];\n                  break;\n                case 2:\n                  value = generatorWrapper.updateMaxSize[createCircularNode];\n              }\n              if (value && (findEntry = value.call(generatorWrapper, value, iterateEntries, findEntry), getAdState(getAdEnvironment().AdEnvironmentConfig, \"fmd\") && containsElement(gp, createCircularNode) && value.partialFunctionApplication && value.partialFunctionApplication.tasks(value, null), undefined !== findEntry)) {\n                iterateEntries = generateErrorObject(undefined, createCircularNode);\n                extendObject(iterateEntries, findEntry);\n                findEntry = iterateEntries;\n                break value;\n              }\n              findEntry = undefined;\n            }\n            if (value.createObjectPolyfill == 3) {\n              generatorWrapper.handleAsync(value);\n            }\n            generatorWrapper = findEntry;\n          } else {\n            generatorWrapper = generateErrorObject(\"nf\", findEntry);\n          }\n        }\n      } else {\n        generatorWrapper = undefined;\n      }\n    } else if (isBooleanFlag) {\n      generatorWrapper = generateErrorObject(\"ue\");\n    } else if (createCircularNode) {\n      generatorWrapper = generateErrorObject();\n      extendObject(generatorWrapper, generateAdRequestData(createCircularNode, true, false, false));\n    } else {\n      generatorWrapper = generateErrorObject(\"nf\");\n    }\n    if (typeof generatorWrapper === \"string\") {\n      return CustomMap.entryIdCounter();\n    } else {\n      return CustomMap.entryIdCounter(generatorWrapper);\n    }\n  };\n  AdManager.prototype.logError = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && generatorWrapper.generatorYield() == 1) {\n      processAdEvent(this, generatorWrapper);\n    }\n  };\n  AdManager.prototype.parseNullableBoolean = function (generatorWrapper) {\n    if (this.setTimeoutWrapper && generatorWrapper.generatorYield() == 1) {\n      processAdEvent(this, generatorWrapper);\n    }\n  };\n  var processAdEvent = function (generatorWrapper, value) {\n    var CustomMap;\n    if (value.includesString && checkAdOverlay(generatorWrapper)) {\n      var findEntry = generatorWrapper.createDeferred[value.includesString];\n      if (findEntry) {\n        CustomMap = function (createCircularNode, entryIdCounter) {\n          sendViewabilityMeasurement(findEntry, createCircularNode, entryIdCounter);\n        };\n      } else if (findEntry !== null) {\n        logError(379, Error());\n      }\n    } else {\n      CustomMap = getFromGlobalScope(\"ima.common.triggerViewabilityMeasurementUpdate\");\n    }\n    if (typeof CustomMap === \"function\") {\n      var iterateEntries = generateAdPlaybackData(value);\n      iterateEntries.nativeVolume = generatorWrapper.dispatchUnhandledRejection;\n      CustomMap(value.constructReflect, iterateEntries);\n    }\n  };\n  var checkAdOverlay = function (generatorWrapper) {\n    getAdEnvironment();\n    if (getAdReportingMode(generatorWrapper) != \"h\" && getAdReportingMode(generatorWrapper) != \"m\") {\n      return false;\n    } else {\n      return generatorWrapper.resolvePromise != 0;\n    }\n  };\n  AdManager.prototype.isDone = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (GetFlags()) {\n      var iterateEntries = getAdState(getAdEnvironment().AdEnvironmentConfig, \"mm\");\n      var createCircularNode = {};\n      if ((iterateEntries = (createCircularNode[AdMediaTypes.transformAndAddElement] = \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\", createCircularNode[AdMediaTypes.VIDEO] = \"ACTIVE_VIEW_TRAFFIC_TYPE_VIDEO\", createCircularNode)[iterateEntries]) && iterateEntries) {\n        this.onFulfilled = iterateEntries;\n      }\n      if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_UNSPECIFIED\") {\n        logError(1044, Error());\n      }\n    }\n    generatorWrapper = AdEventReporter.prototype.isDone.call(this, generatorWrapper, value, CustomMap, findEntry);\n    if (this.executeCallbacks) {\n      value = this.handleThenable;\n      if (generatorWrapper.createDeferred == null) {\n        generatorWrapper.createDeferred = new PerformanceData();\n      }\n      value.entryIdCounter[generatorWrapper.constructReflect] = generatorWrapper.createDeferred;\n      generatorWrapper.createDeferred.handleAsync = currentDate;\n    }\n    return generatorWrapper;\n  };\n  AdManager.prototype.handleAsync = function (generatorWrapper) {\n    if (generatorWrapper && generatorWrapper.generatorYield() == 1 && this.executeCallbacks) {\n      delete this.handleThenable.entryIdCounter[generatorWrapper.constructReflect];\n    }\n    return AdEventReporter.prototype.handleAsync.call(this, generatorWrapper);\n  };\n  AdManager.prototype.booleanArrayCache = function () {\n    if (!this.entryIdCounter) {\n      this.entryIdCounter = this.customProperty1();\n    }\n    if (this.entryIdCounter == null || this.setTimeoutWrapper) {\n      return new baseResponder();\n    } else {\n      if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\") {\n        return new AudioEventProcessor(this.entryIdCounter);\n      } else {\n        return new StrategyFactory(this.entryIdCounter);\n      }\n    }\n  };\n  AdManager.prototype.generateSymbol = function () {\n    if (this.onFulfilled === \"ACTIVE_VIEW_TRAFFIC_TYPE_AUDIO\") {\n      return new AdEventValidator();\n    } else {\n      return new AdDataParser();\n    }\n  };\n  var formatAdEventResult = function (generatorWrapper) {\n    var value = {};\n    value.viewability = generatorWrapper.entryIdCounter;\n    value.googleViewability = generatorWrapper.tasks;\n    return value;\n  };\n  var sendVastAdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    generatorWrapper = processAdEvent(getSingletonInstance(AdManager), value, CustomMap, generatorWrapper);\n    return formatAdEventResult(generatorWrapper);\n  };\n  var publicSendVastEvent = To(193, sendVastAdEvent, undefined, getAdSdkInfo);\n  defineNamespace(\"Goog_AdSense_Lidar_sendVastEvent\", publicSendVastEvent);\n  var getViewabilityAdEvent = To(194, function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    generatorWrapper = processAdEvent(getSingletonInstance(AdManager), generatorWrapper, value);\n    return formatAdEventResult(generatorWrapper);\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getViewability\", getViewabilityAdEvent);\n  var getUrlSignalsArray = To(195, function () {\n    return getSerializedAdFrames();\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getUrlSignalsArray\", getUrlSignalsArray);\n  var getUrlSignalsList = To(196, function () {\n    return JSON.stringify(getSerializedAdFrames());\n  });\n  defineNamespace(\"Goog_AdSense_Lidar_getUrlSignalsList\", getUrlSignalsList);\n  if (globalScope.console && typeof globalScope.console.log === \"function\") {\n    bindOrWrapFunction(globalScope.console.log, globalScope.console);\n  }\n  var getFrameElements = function (generatorWrapper) {\n    for (var value = [], CustomMap = generatorWrapper = getWindowForDocument(generatorWrapper.ownerDocument); CustomMap != generatorWrapper.top; CustomMap = CustomMap.parent) {\n      if (CustomMap.frameElement) {\n        value.push(CustomMap.frameElement);\n      } else {\n        break;\n      }\n    }\n    return value;\n  };\n  var AdEvent = function (generatorWrapper, value) {\n    this.type = generatorWrapper;\n    this.currentTarget = this.target = value;\n    this.defaultPrevented = this.tasks = false;\n  };\n  AdEvent.prototype.stopPropagation = function () {\n    this.tasks = true;\n  };\n  AdEvent.prototype.preventDefault = function () {\n    this.defaultPrevented = true;\n  };\n  var isPassiveEventSupported = function () {\n    if (!globalScope.addEventListener || !Object.defineProperty) {\n      return false;\n    }\n    var generatorWrapper = false;\n    var value = Object.defineProperty({}, \"passive\", {\n      get() {\n        generatorWrapper = true;\n      }\n    });\n    try {\n      var CustomMap = function () {};\n      globalScope.addEventListener(\"test\", CustomMap, value);\n      globalScope.removeEventListener(\"test\", CustomMap, value);\n    } catch (findEntry) {}\n    return generatorWrapper;\n  }();\n  var TouchEventProcessor = function (generatorWrapper, value) {\n    AdEvent.call(this, generatorWrapper ? generatorWrapper.type : \"\");\n    this.relatedTarget = this.currentTarget = this.target = null;\n    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\n    this.key = \"\";\n    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = false;\n    this.state = null;\n    this.pointerId = 0;\n    this.pointerType = \"\";\n    this.entryIdCounter = null;\n    if (generatorWrapper) {\n      this.initialize(generatorWrapper, value);\n    }\n  };\n  inheritPrototype(TouchEventProcessor, AdEvent);\n  var pointerTypeMap = {\n    2: \"touch\",\n    3: \"pen\",\n    4: \"mouse\"\n  };\n  TouchEventProcessor.prototype.initialize = function (generatorWrapper, value) {\n    var CustomMap = this.type = generatorWrapper.type;\n    var findEntry = generatorWrapper.changedTouches && generatorWrapper.changedTouches.length ? generatorWrapper.changedTouches[0] : null;\n    this.target = generatorWrapper.target || generatorWrapper.srcElement;\n    this.currentTarget = value;\n    if (value = generatorWrapper.relatedTarget) {\n      if (isGecko) {\n        if (!tryNoopFunction(value, \"nodeName\")) {\n          value = null;\n        }\n      }\n    } else if (CustomMap == \"mouseover\") {\n      value = generatorWrapper.fromElement;\n    } else if (CustomMap == \"mouseout\") {\n      value = generatorWrapper.toElement;\n    }\n    this.relatedTarget = value;\n    if (findEntry) {\n      if (undefined !== findEntry.clientX) {\n        this.clientX = findEntry.clientX;\n      } else {\n        this.clientX = findEntry.pageX;\n      }\n      if (undefined !== findEntry.clientY) {\n        this.clientY = findEntry.clientY;\n      } else {\n        this.clientY = findEntry.pageY;\n      }\n      this.screenX = findEntry.screenX || 0;\n      this.screenY = findEntry.screenY || 0;\n    } else {\n      if (undefined !== generatorWrapper.clientX) {\n        this.clientX = generatorWrapper.clientX;\n      } else {\n        this.clientX = generatorWrapper.pageX;\n      }\n      if (undefined !== generatorWrapper.clientY) {\n        this.clientY = generatorWrapper.clientY;\n      } else {\n        this.clientY = generatorWrapper.pageY;\n      }\n      this.screenX = generatorWrapper.screenX || 0;\n      this.screenY = generatorWrapper.screenY || 0;\n    }\n    this.button = generatorWrapper.button;\n    this.key = generatorWrapper.key || \"\";\n    this.ctrlKey = generatorWrapper.ctrlKey;\n    this.altKey = generatorWrapper.altKey;\n    this.shiftKey = generatorWrapper.shiftKey;\n    this.metaKey = generatorWrapper.metaKey;\n    this.pointerId = generatorWrapper.pointerId || 0;\n    if (typeof generatorWrapper.pointerType === \"string\") {\n      this.pointerType = generatorWrapper.pointerType;\n    } else {\n      this.pointerType = pointerTypeMap[generatorWrapper.pointerType] || \"\";\n    }\n    this.state = generatorWrapper.state;\n    this.entryIdCounter = generatorWrapper;\n    if (generatorWrapper.defaultPrevented) {\n      TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    }\n  };\n  TouchEventProcessor.prototype.stopPropagation = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.stopPropagation.call(this);\n    if (this.entryIdCounter.stopPropagation) {\n      this.entryIdCounter.stopPropagation();\n    } else {\n      this.entryIdCounter.cancelBubble = true;\n    }\n  };\n  TouchEventProcessor.prototype.preventDefault = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    var generatorWrapper = this.entryIdCounter;\n    if (generatorWrapper.preventDefault) {\n      generatorWrapper.preventDefault();\n    } else {\n      generatorWrapper.returnValue = false;\n    }\n  };\n  var isListenableKey = \"closure_listenable_\" + (1000000 * Math.random() | 0);\n  var isListenable = function (generatorWrapper) {\n    return !(!generatorWrapper || !generatorWrapper[isListenableKey]);\n  };\n  var listenerUniqueId = 0;\n  var Listener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    this.listener = generatorWrapper;\n    this.proxy = null;\n    this.src = value;\n    this.type = CustomMap;\n    this.capture = !!findEntry;\n    this.initializeBase64Encoding = iterateEntries;\n    this.key = ++listenerUniqueId;\n    this.tryNoopFunction = this.browserVersion = false;\n  };\n  var clearListener = function (generatorWrapper) {\n    generatorWrapper.tryNoopFunction = true;\n    generatorWrapper.listener = null;\n    generatorWrapper.proxy = null;\n    generatorWrapper.src = null;\n    generatorWrapper.initializeBase64Encoding = null;\n  };\n  var EventTarget = function (generatorWrapper) {\n    this.src = generatorWrapper;\n    this.entryIdCounter = {};\n    this.tasks = 0;\n  };\n  EventTarget.prototype.addParameter = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = generatorWrapper.toString();\n    generatorWrapper = this.entryIdCounter[createCircularNode];\n    if (!generatorWrapper) {\n      generatorWrapper = this.entryIdCounter[createCircularNode] = [];\n      this.tasks++;\n    }\n    var entryIdCounter = Bu(generatorWrapper, value, findEntry, iterateEntries);\n    if (-1 < entryIdCounter) {\n      value = generatorWrapper[entryIdCounter];\n      if (!CustomMap) {\n        value.browserVersion = false;\n      }\n    } else {\n      value = new Listener(value, this.src, createCircularNode, !!findEntry, iterateEntries);\n      value.browserVersion = CustomMap;\n      generatorWrapper.push(value);\n    }\n    return value;\n  };\n  EventTarget.prototype.removeElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.toString();\n    if (!(generatorWrapper in this.entryIdCounter)) {\n      return false;\n    }\n    var iterateEntries = this.entryIdCounter[generatorWrapper];\n    value = Bu(iterateEntries, value, CustomMap, findEntry);\n    if (-1 < value) {\n      clearListener(iterateEntries[value]);\n      removeElementAtIndex(iterateEntries, value);\n      if (iterateEntries.length == 0) {\n        delete this.entryIdCounter[generatorWrapper];\n        this.tasks--;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var Cu = function (generatorWrapper, value) {\n    var CustomMap = value.type;\n    if (CustomMap in generatorWrapper.entryIdCounter && removeElement(generatorWrapper.entryIdCounter[CustomMap], value)) {\n      clearListener(value);\n      if (generatorWrapper.entryIdCounter[CustomMap].length == 0) {\n        delete generatorWrapper.entryIdCounter[CustomMap];\n        generatorWrapper.tasks--;\n      }\n    }\n  };\n  EventTarget.prototype.findLastElementIndex = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = this.entryIdCounter[generatorWrapper.toString()];\n    var iterateEntries = -1;\n    if (generatorWrapper) {\n      iterateEntries = Bu(generatorWrapper, value, CustomMap, findEntry);\n    }\n    if (-1 < iterateEntries) {\n      return generatorWrapper[iterateEntries];\n    } else {\n      return null;\n    }\n  };\n  var Bu = function (generatorWrapper, value, CustomMap, findEntry) {\n    for (var iterateEntries = 0; iterateEntries < generatorWrapper.length; ++iterateEntries) {\n      var createCircularNode = generatorWrapper[iterateEntries];\n      if (!createCircularNode.tryNoopFunction && createCircularNode.listener == value && createCircularNode.capture == !!CustomMap && createCircularNode.initializeBase64Encoding == findEntry) {\n        return iterateEntries;\n      }\n    }\n    return -1;\n  };\n  var Du = \"closure_lm_\" + (1000000 * Math.random() | 0);\n  var Eu = {};\n  var Fu = 0;\n  var addPageHideListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (findEntry && findEntry.once) {\n      return Gu(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    }\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        addPageHideListener(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.window(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, false, findEntry, iterateEntries);\n    }\n  };\n  var Ju = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!value) {\n      throw Error(\"Invalid event type\");\n    }\n    var entryIdCounter = isObjectOrFunction(iterateEntries) ? !!iterateEntries.capture : !!iterateEntries;\n    var key = Ku(generatorWrapper);\n    if (!key) {\n      generatorWrapper[Du] = key = new EventTarget(generatorWrapper);\n    }\n    CustomMap = key.addParameter(value, CustomMap, findEntry, entryIdCounter, createCircularNode);\n    if (CustomMap.proxy) {\n      return CustomMap;\n    }\n    findEntry = Lu();\n    CustomMap.proxy = findEntry;\n    findEntry.src = generatorWrapper;\n    findEntry.listener = CustomMap;\n    if (generatorWrapper.addEventListener) {\n      if (!isPassiveEventSupported) {\n        iterateEntries = entryIdCounter;\n      }\n      if (undefined === iterateEntries) {\n        iterateEntries = false;\n      }\n      generatorWrapper.addEventListener(value.toString(), findEntry, iterateEntries);\n    } else if (generatorWrapper.attachEvent) {\n      generatorWrapper.attachEvent(Mu(value.toString()), findEntry);\n    } else if (generatorWrapper.addListener && generatorWrapper.removeListener) {\n      generatorWrapper.addListener(findEntry);\n    } else {\n      throw Error(\"addEventListener and attachEvent are unavailable.\");\n    }\n    Fu++;\n    return CustomMap;\n  };\n  var Lu = function () {\n    var generatorWrapper = Nu;\n    var value = function (CustomMap) {\n      return generatorWrapper.call(value.src, value.listener, CustomMap);\n    };\n    return value;\n  };\n  var Gu = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Gu(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.sortArray(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, true, findEntry, iterateEntries);\n    }\n  };\n  var Ou = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Ou(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n ",
  "ratorWrapper.altKey;\n    this.shiftKey = generatorWrapper.shiftKey;\n    this.metaKey = generatorWrapper.metaKey;\n    this.pointerId = generatorWrapper.pointerId || 0;\n    if (typeof generatorWrapper.pointerType === \"string\") {\n      this.pointerType = generatorWrapper.pointerType;\n    } else {\n      this.pointerType = pointerTypeMap[generatorWrapper.pointerType] || \"\";\n    }\n    this.state = generatorWrapper.state;\n    this.entryIdCounter = generatorWrapper;\n    if (generatorWrapper.defaultPrevented) {\n      TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    }\n  };\n  TouchEventProcessor.prototype.stopPropagation = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.stopPropagation.call(this);\n    if (this.entryIdCounter.stopPropagation) {\n      this.entryIdCounter.stopPropagation();\n    } else {\n      this.entryIdCounter.cancelBubble = true;\n    }\n  };\n  TouchEventProcessor.prototype.preventDefault = function () {\n    TouchEventProcessor.executeGeneratorAsPromise.preventDefault.call(this);\n    var generatorWrapper = this.entryIdCounter;\n    if (generatorWrapper.preventDefault) {\n      generatorWrapper.preventDefault();\n    } else {\n      generatorWrapper.returnValue = false;\n    }\n  };\n  var isListenableKey = \"closure_listenable_\" + (1000000 * Math.random() | 0);\n  var isListenable = function (generatorWrapper) {\n    return !(!generatorWrapper || !generatorWrapper[isListenableKey]);\n  };\n  var listenerUniqueId = 0;\n  var Listener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    this.listener = generatorWrapper;\n    this.proxy = null;\n    this.src = value;\n    this.type = CustomMap;\n    this.capture = !!findEntry;\n    this.initializeBase64Encoding = iterateEntries;\n    this.key = ++listenerUniqueId;\n    this.tryNoopFunction = this.browserVersion = false;\n  };\n  var clearListener = function (generatorWrapper) {\n    generatorWrapper.tryNoopFunction = true;\n    generatorWrapper.listener = null;\n    generatorWrapper.proxy = null;\n    generatorWrapper.src = null;\n    generatorWrapper.initializeBase64Encoding = null;\n  };\n  var EventTarget = function (generatorWrapper) {\n    this.src = generatorWrapper;\n    this.entryIdCounter = {};\n    this.tasks = 0;\n  };\n  EventTarget.prototype.addParameter = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = generatorWrapper.toString();\n    generatorWrapper = this.entryIdCounter[createCircularNode];\n    if (!generatorWrapper) {\n      generatorWrapper = this.entryIdCounter[createCircularNode] = [];\n      this.tasks++;\n    }\n    var entryIdCounter = Bu(generatorWrapper, value, findEntry, iterateEntries);\n    if (-1 < entryIdCounter) {\n      value = generatorWrapper[entryIdCounter];\n      if (!CustomMap) {\n        value.browserVersion = false;\n      }\n    } else {\n      value = new Listener(value, this.src, createCircularNode, !!findEntry, iterateEntries);\n      value.browserVersion = CustomMap;\n      generatorWrapper.push(value);\n    }\n    return value;\n  };\n  EventTarget.prototype.removeElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = generatorWrapper.toString();\n    if (!(generatorWrapper in this.entryIdCounter)) {\n      return false;\n    }\n    var iterateEntries = this.entryIdCounter[generatorWrapper];\n    value = Bu(iterateEntries, value, CustomMap, findEntry);\n    if (-1 < value) {\n      clearListener(iterateEntries[value]);\n      removeElementAtIndex(iterateEntries, value);\n      if (iterateEntries.length == 0) {\n        delete this.entryIdCounter[generatorWrapper];\n        this.tasks--;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var Cu = function (generatorWrapper, value) {\n    var CustomMap = value.type;\n    if (CustomMap in generatorWrapper.entryIdCounter && removeElement(generatorWrapper.entryIdCounter[CustomMap], value)) {\n      clearListener(value);\n      if (generatorWrapper.entryIdCounter[CustomMap].length == 0) {\n        delete generatorWrapper.entryIdCounter[CustomMap];\n        generatorWrapper.tasks--;\n      }\n    }\n  };\n  EventTarget.prototype.findLastElementIndex = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper = this.entryIdCounter[generatorWrapper.toString()];\n    var iterateEntries = -1;\n    if (generatorWrapper) {\n      iterateEntries = Bu(generatorWrapper, value, CustomMap, findEntry);\n    }\n    if (-1 < iterateEntries) {\n      return generatorWrapper[iterateEntries];\n    } else {\n      return null;\n    }\n  };\n  var Bu = function (generatorWrapper, value, CustomMap, findEntry) {\n    for (var iterateEntries = 0; iterateEntries < generatorWrapper.length; ++iterateEntries) {\n      var createCircularNode = generatorWrapper[iterateEntries];\n      if (!createCircularNode.tryNoopFunction && createCircularNode.listener == value && createCircularNode.capture == !!CustomMap && createCircularNode.initializeBase64Encoding == findEntry) {\n        return iterateEntries;\n      }\n    }\n    return -1;\n  };\n  var Du = \"closure_lm_\" + (1000000 * Math.random() | 0);\n  var Eu = {};\n  var Fu = 0;\n  var addPageHideListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (findEntry && findEntry.once) {\n      return Gu(generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    }\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        addPageHideListener(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.window(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, false, findEntry, iterateEntries);\n    }\n  };\n  var Ju = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!value) {\n      throw Error(\"Invalid event type\");\n    }\n    var entryIdCounter = isObjectOrFunction(iterateEntries) ? !!iterateEntries.capture : !!iterateEntries;\n    var key = Ku(generatorWrapper);\n    if (!key) {\n      generatorWrapper[Du] = key = new EventTarget(generatorWrapper);\n    }\n    CustomMap = key.addParameter(value, CustomMap, findEntry, entryIdCounter, createCircularNode);\n    if (CustomMap.proxy) {\n      return CustomMap;\n    }\n    findEntry = Lu();\n    CustomMap.proxy = findEntry;\n    findEntry.src = generatorWrapper;\n    findEntry.listener = CustomMap;\n    if (generatorWrapper.addEventListener) {\n      if (!isPassiveEventSupported) {\n        iterateEntries = entryIdCounter;\n      }\n      if (undefined === iterateEntries) {\n        iterateEntries = false;\n      }\n      generatorWrapper.addEventListener(value.toString(), findEntry, iterateEntries);\n    } else if (generatorWrapper.attachEvent) {\n      generatorWrapper.attachEvent(Mu(value.toString()), findEntry);\n    } else if (generatorWrapper.addListener && generatorWrapper.removeListener) {\n      generatorWrapper.addListener(findEntry);\n    } else {\n      throw Error(\"addEventListener and attachEvent are unavailable.\");\n    }\n    Fu++;\n    return CustomMap;\n  };\n  var Lu = function () {\n    var generatorWrapper = Nu;\n    var value = function (CustomMap) {\n      return generatorWrapper.call(value.src, value.listener, CustomMap);\n    };\n    return value;\n  };\n  var Gu = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Gu(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n      return null;\n    }\n    CustomMap = Iu(CustomMap);\n    if (isListenable(generatorWrapper)) {\n      return generatorWrapper.sortArray(value, CustomMap, isObjectOrFunction(findEntry) ? !!findEntry.capture : !!findEntry, iterateEntries);\n    } else {\n      return Ju(generatorWrapper, value, CustomMap, true, findEntry, iterateEntries);\n    }\n  };\n  var Ou = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        Ou(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n      } else {\n        findEntry = !!findEntry;\n      }\n      CustomMap = Iu(CustomMap);\n      if (isListenable(generatorWrapper)) {\n        generatorWrapper.compareValues(value, CustomMap, findEntry, iterateEntries);\n      } else if (generatorWrapper && (generatorWrapper = Ku(generatorWrapper)) && (value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries))) {\n        Pu(value);\n      }\n    }\n  };\n  var Pu = function (generatorWrapper) {\n    if (typeof generatorWrapper !== \"number\" && generatorWrapper && !generatorWrapper.tryNoopFunction) {\n      var value = generatorWrapper.src;\n      if (isListenable(value)) {\n        Cu(value.createDeferred, generatorWrapper);\n      } else {\n        var CustomMap = generatorWrapper.type;\n        var findEntry = generatorWrapper.proxy;\n        if (value.removeEventListener) {\n          value.removeEventListener(CustomMap, findEntry, generatorWrapper.capture);\n        } else if (value.detachEvent) {\n          value.detachEvent(Mu(CustomMap), findEntry);\n        } else if (value.addListener && value.removeListener) {\n          value.removeListener(findEntry);\n        }\n        Fu--;\n        if (CustomMap = Ku(value)) {\n          Cu(CustomMap, generatorWrapper);\n          if (CustomMap.tasks == 0) {\n            CustomMap.src = null;\n            value[Du] = null;\n          }\n        } else {\n          clearListener(generatorWrapper);\n        }\n      }\n    }\n  };\n  var Mu = function (generatorWrapper) {\n    if (generatorWrapper in Eu) {\n      return Eu[generatorWrapper];\n    } else {\n      return Eu[generatorWrapper] = \"on\" + generatorWrapper;\n    }\n  };\n  var Nu = function (generatorWrapper, value) {\n    if (generatorWrapper.tryNoopFunction) {\n      generatorWrapper = true;\n    } else {\n      value = new TouchEventProcessor(value, this);\n      var CustomMap = generatorWrapper.listener;\n      var findEntry = generatorWrapper.initializeBase64Encoding || generatorWrapper.src;\n      if (generatorWrapper.browserVersion) {\n        Pu(generatorWrapper);\n      }\n      generatorWrapper = CustomMap.call(findEntry, value);\n    }\n    return generatorWrapper;\n  };\n  var Ku = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper[Du];\n    if (generatorWrapper instanceof EventTarget) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var Qu = \"__closure_events_fn_\" + (1000000000 * Math.random() >>> 0);\n  var Iu = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"function\") {\n      return generatorWrapper;\n    }\n    if (!generatorWrapper[Qu]) {\n      generatorWrapper[Qu] = function (value) {\n        return generatorWrapper.handleEvent(value);\n      };\n    }\n    return generatorWrapper[Qu];\n  };\n  var AdEnvironmentConfig = function () {\n    tryCall.call(this);\n    this.createDeferred = new EventTarget(this);\n    this.isFirefox = this;\n    this.firstQuartileTime = null;\n  };\n  inheritPrototype(AdEnvironmentConfig, tryCall);\n  AdEnvironmentConfig.prototype[isListenableKey] = true;\n  setTimeoutWrapper = AdEnvironmentConfig.prototype;\n  setTimeoutWrapper.addEventListener = function (generatorWrapper, value, CustomMap, findEntry) {\n    addPageHideListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  setTimeoutWrapper.removeEventListener = function (generatorWrapper, value, CustomMap, findEntry) {\n    Ou(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  setTimeoutWrapper.dispatchEvent = function (generatorWrapper) {\n    var value,\n      CustomMap = this.firstQuartileTime;\n    if (CustomMap) {\n      for (value = []; CustomMap; CustomMap = CustomMap.firstQuartileTime) {\n        value.push(CustomMap);\n      }\n    }\n    CustomMap = this.isFirefox;\n    var findEntry = generatorWrapper.type || generatorWrapper;\n    if (typeof generatorWrapper === \"string\") {\n      generatorWrapper = new AdEvent(generatorWrapper, CustomMap);\n    } else if (generatorWrapper instanceof AdEvent) {\n      generatorWrapper.target = generatorWrapper.target || CustomMap;\n    } else {\n      var iterateEntries = generatorWrapper;\n      generatorWrapper = new AdEvent(findEntry, CustomMap);\n      extendObject(generatorWrapper, iterateEntries);\n    }\n    iterateEntries = true;\n    if (value) {\n      for (var createCircularNode = value.length - 1; !generatorWrapper.tasks && createCircularNode >= 0; createCircularNode--) {\n        var entryIdCounter = generatorWrapper.currentTarget = value[createCircularNode];\n        iterateEntries = executeListeners(entryIdCounter, findEntry, true, generatorWrapper) && iterateEntries;\n      }\n    }\n    if (!generatorWrapper.tasks) {\n      entryIdCounter = generatorWrapper.currentTarget = CustomMap;\n      iterateEntries = executeListeners(entryIdCounter, findEntry, true, generatorWrapper) && iterateEntries;\n      if (!generatorWrapper.tasks) {\n        iterateEntries = executeListeners(entryIdCounter, findEntry, false, generatorWrapper) && iterateEntries;\n      }\n    }\n    if (value) {\n      for (createCircularNode = 0; !generatorWrapper.tasks && createCircularNode < value.length; createCircularNode++) {\n        entryIdCounter = generatorWrapper.currentTarget = value[createCircularNode];\n        iterateEntries = executeListeners(entryIdCounter, findEntry, false, generatorWrapper) && iterateEntries;\n      }\n    }\n    return iterateEntries;\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    AdEnvironmentConfig.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    if (this.createDeferred) {\n      var CustomMap;\n      var generatorWrapper = this.createDeferred;\n      var value = 0;\n      for (CustomMap in generatorWrapper.entryIdCounter) {\n        for (var findEntry = generatorWrapper.entryIdCounter[CustomMap], iterateEntries = 0; iterateEntries < findEntry.length; iterateEntries++) {\n          ++value;\n          clearListener(findEntry[iterateEntries]);\n        }\n        delete generatorWrapper.entryIdCounter[CustomMap];\n        generatorWrapper.tasks--;\n      }\n    }\n    this.firstQuartileTime = null;\n  };\n  setTimeoutWrapper.window = function (generatorWrapper, value, CustomMap, findEntry) {\n    return this.createDeferred.addParameter(String(generatorWrapper), value, false, CustomMap, findEntry);\n  };\n  setTimeoutWrapper.sortArray = function (generatorWrapper, value, CustomMap, findEntry) {\n    return this.createDeferred.addParameter(String(generatorWrapper), value, true, CustomMap, findEntry);\n  };\n  setTimeoutWrapper.compareValues = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.createDeferred.removeElement(String(generatorWrapper), value, CustomMap, findEntry);\n  };\n  var executeListeners = function (generatorWrapper, value, CustomMap, findEntry) {\n    value = generatorWrapper.createDeferred.entryIdCounter[String(value)];\n    if (!value) {\n      return true;\n    }\n    value = value.concat();\n    for (var iterateEntries = true, createCircularNode = 0; createCircularNode < value.length; ++createCircularNode) {\n      var entryIdCounter = value[createCircularNode];\n      if (entryIdCounter && !entryIdCounter.tryNoopFunction && entryIdCounter.capture == CustomMap) {\n        var key = entryIdCounter.listener;\n        var value = entryIdCounter.initializeBase64Encoding || entryIdCounter.src;\n        if (entryIdCounter.browserVersion) {\n          Cu(generatorWrapper.createDeferred, entryIdCounter);\n        }\n        iterateEntries = key.call(value, findEntry) !== false && iterateEntries;\n      }\n    }\n    return iterateEntries && !findEntry.defaultPrevented;\n  };\n  AdEnvironmentConfig.prototype.findLastElementIndex = function (generatorWrapper, value, CustomMap, findEntry) {\n    return this.createDeferred.findLastElementIndex(String(generatorWrapper), value, CustomMap, findEntry);\n  };\n  var ObjectPool = function (generatorWrapper, value) {\n    this.setTimeoutWrapper = generatorWrapper;\n    this.createDeferred = value;\n    this.tasks = 0;\n    this.entryIdCounter = null;\n  };\n  ObjectPool.prototype.get = function () {\n    if (this.tasks > 0) {\n      this.tasks--;\n      var generatorWrapper = this.entryIdCounter;\n      this.entryIdCounter = generatorWrapper.next;\n      generatorWrapper.next = null;\n    } else {\n      generatorWrapper = this.setTimeoutWrapper();\n    }\n    return generatorWrapper;\n  };\n  var releaseObject = function (generatorWrapper, value) {\n    generatorWrapper.createDeferred(value);\n    if (generatorWrapper.tasks < 100) {\n      generatorWrapper.tasks++;\n      value.next = generatorWrapper.entryIdCounter;\n      generatorWrapper.entryIdCounter = value;\n    }\n  };\n  var Uu,\n    getMessageChannelMethod = function () {\n      var generatorWrapper = globalScope.MessageChannel;\n      if (typeof generatorWrapper === \"undefined\" && typeof window !== \"undefined\" && window.sendPostMessage && window.addEventListener && !handleAsync(\"Presto\")) {\n        generatorWrapper = function () {\n          var iterateEntries = createElement(document, \"IFRAME\");\n          iterateEntries.style.display = \"none\";\n          document.documentElement.appendChild(iterateEntries);\n          var createCircularNode = iterateEntries.contentWindow;\n          iterateEntries = createCircularNode.document;\n          iterateEntries.open();\n          iterateEntries.closeCache();\n          var entryIdCounter = \"callImmediate\" + Math.random();\n          var key = createCircularNode.location.protocol == \"file:\" ? \"*\" : createCircularNode.location.protocol + \"//\" + createCircularNode.location.host;\n          iterateEntries = bindOrWrapFunction(function (value) {\n            if ((key == \"*\" || value.origin == key) && value.data == entryIdCounter) {\n              this.port1.onmessage();\n            }\n          }, this);\n          createCircularNode.addEventListener(\"message\", iterateEntries, false);\n          this.port1 = {};\n          this.port2 = {\n            sendPostMessage() {\n              createCircularNode.sendPostMessage(entryIdCounter, key);\n            }\n          };\n        };\n      }\n      if (typeof generatorWrapper !== \"undefined\") {\n        var value = new generatorWrapper();\n        var CustomMap = {};\n        var findEntry = CustomMap;\n        value.port1.onmessage = function () {\n          if (undefined !== CustomMap.next) {\n            CustomMap = CustomMap.next;\n            var iterateEntries = CustomMap.createInstanceWithTemporaryData;\n            CustomMap.createInstanceWithTemporaryData = null;\n            iterateEntries();\n          }\n        };\n        return function (iterateEntries) {\n          findEntry.next = {\n            createInstanceWithTemporaryData: iterateEntries\n          };\n          findEntry = findEntry.next;\n          value.port2.sendPostMessage(0);\n        };\n      }\n      return function (iterateEntries) {\n        globalScope.setTimeout(iterateEntries, 0);\n      };\n    };\n  var TaskQueue = function () {\n    this.tasks = this.entryIdCounter = null;\n  };\n  TaskQueue.prototype.addParameter = function (generatorWrapper, value) {\n    var CustomMap = taskQueuePool.get();\n    CustomMap.set(generatorWrapper, value);\n    if (this.tasks) {\n      this.tasks.next = CustomMap;\n    } else {\n      this.entryIdCounter = CustomMap;\n    }\n    this.tasks = CustomMap;\n  };\n  TaskQueue.prototype.removeElement = function () {\n    var generatorWrapper = null;\n    if (this.entryIdCounter) {\n      generatorWrapper = this.entryIdCounter;\n      this.entryIdCounter = this.entryIdCounter.next;\n      if (!this.entryIdCounter) {\n        this.tasks = null;\n      }\n      generatorWrapper.next = null;\n    }\n    return generatorWrapper;\n  };\n  var taskQueuePool = new ObjectPool(function () {\n    return new TaskQueueNode();\n  }, function (generatorWrapper) {\n    return generatorWrapper.resetAdStateController();\n  });\n  var TaskQueueNode = function () {\n    this.next = this.entryIdCounter = this.tasks = null;\n  };\n  TaskQueueNode.prototype.set = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = value;\n    this.next = null;\n  };\n  TaskQueueNode.prototype.resetAdStateController = function () {\n    this.next = this.entryIdCounter = this.tasks = null;\n  };\n  var executeTasksMethod;\n  var tasksExecuted = false;\n  var globalTaskQueue = new TaskQueue();\n  var enqueueTask = function (generatorWrapper, value) {\n    if (!executeTasksMethod) {\n      setupExecuteTasksMethod();\n    }\n    if (!tasksExecuted) {\n      executeTasksMethod();\n      tasksExecuted = true;\n    }\n    globalTaskQueue.addParameter(generatorWrapper, value);\n  };\n  var setupExecuteTasksMethod = function () {\n    if (globalScope.Promise && globalScope.Promise.resolve) {\n      var generatorWrapper = globalScope.Promise.resolve(undefined);\n      executeTasksMethod = function () {\n        generatorWrapper.then(executeQueuedTasks);\n      };\n    } else {\n      executeTasksMethod = function () {\n        var value = executeQueuedTasks;\n        if (typeof globalScope.setImmediate !== \"function\" || globalScope.Window && globalScope.Window.prototype && globalScope.Window.prototype.setImmediate == globalScope.setImmediate) {\n          if (!Uu) {\n            Uu = getMessageChannelMethod();\n          }\n          Uu(value);\n        } else {\n          globalScope.setImmediate(value);\n        }\n      };\n    }\n  };\n  var executeQueuedTasks = function () {\n    for (var generatorWrapper; generatorWrapper = globalTaskQueue.removeElement();) {\n      try {\n        generatorWrapper.tasks.call(generatorWrapper.entryIdCounter);\n      } catch (value) {\n        deferError(value);\n      }\n      releaseObject(taskQueuePool, generatorWrapper);\n    }\n    tasksExecuted = false;\n  };\n  var isThenable = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return false;\n    }\n    try {\n      return !!generatorWrapper.$goog_Thenable;\n    } catch (value) {\n      return false;\n    }\n  };\n  var PromisePolyfill = function (generatorWrapper) {\n    this.entryIdCounter = 0;\n    this.onFulfilled = undefined;\n    this.createDeferred = this.tasks = this.setTimeoutWrapper = null;\n    this.handleAsync = this.isDone = false;\n    if (generatorWrapper != noopFunction) {\n      try {\n        var value = this;\n        generatorWrapper.call(undefined, function (CustomMap) {\n          resolveOrReject(value, 2, CustomMap);\n        }, function (CustomMap) {\n          resolveOrReject(value, 3, CustomMap);\n        });\n      } catch (CustomMap) {\n        resolveOrReject(this, 3, CustomMap);\n      }\n    }\n  };\n  var PromiseChainNode = function () {\n    this.next = this.context = this.tasks = this.setTimeoutWrapper = this.entryIdCounter = null;\n    this.createDeferred = false;\n  };\n  PromiseChainNode.prototype.resetAdStateController = function () {\n    this.context = this.tasks = this.setTimeoutWrapper = this.entryIdCounter = null;\n    this.createDeferred = false;\n  };\n  var promiseChainNodePool = new ObjectPool(function () {\n    return new PromiseChainNode();\n  }, function (generatorWrapper) {\n    generatorWrapper.resetAdStateController();\n  });\n  var createPromiseChainNode = function (generatorWrapper, value, CustomMap) {\n    var findEntry = promiseChainNodePool.get();\n    findEntry.setTimeoutWrapper = generatorWrapper;\n    findEntry.tasks = value;\n    findEntry.context = CustomMap;\n    return findEntry;\n  };\n  PromisePolyfill.prototype.then = function (generatorWrapper, value, CustomMap) {\n    return thenHelper(this, typeof generatorWrapper === \"function\" ? generatorWrapper : null, typeof value === \"function\" ? value : null, CustomMap);\n  };\n  PromisePolyfill.prototype.$goog_Thenable = true;\n  PromisePolyfill.prototype.settlePromise = function (generatorWrapper, value) {\n    return thenHelper(this, null, generatorWrapper, value);\n  };\n  PromisePolyfill.prototype.catch = PromisePolyfill.prototype.settlePromise;\n  PromisePolyfill.prototype.cancel = function (generatorWrapper) {\n    if (this.entryIdCounter == 0) {\n      var value = new CancellationError(generatorWrapper);\n      enqueueTask(function () {\n        mediaVersion(this, value);\n      }, this);\n    }\n  };\n  var mediaVersion = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter == 0) {\n      if (generatorWrapper.setTimeoutWrapper) {\n        var CustomMap = generatorWrapper.setTimeoutWrapper;\n        if (CustomMap.tasks) {\n          for (var findEntry = 0, iterateEntries = null, createCircularNode = null, entryIdCounter = CustomMap.tasks; entryIdCounter && (entryIdCounter.createDeferred || (findEntry++, entryIdCounter.entryIdCounter == generatorWrapper && (iterateEntries = entryIdCounter), !(iterateEntries && findEntry > 1))); entryIdCounter = entryIdCounter.next) {\n            if (!iterateEntries) {\n              createCircularNode = entryIdCounter;\n            }\n          }\n          if (iterateEntries) {\n            if (CustomMap.entryIdCounter == 0 && findEntry == 1) {\n              mediaVersion(CustomMap, value);\n            } else {\n              if (createCircularNode) {\n                findEntry = createCircularNode;\n                if (findEntry.next == CustomMap.createDeferred) {\n                  CustomMap.createDeferred = findEntry;\n                }\n                findEntry.next = findEntry.next.next;\n              } else {\n                networkVersion(CustomMap);\n              }\n              rejectPromiseChainNode(CustomMap, iterateEntries, 3, value);\n            }\n          }\n        }\n        generatorWrapper.setTimeoutWrapper = null;\n      } else {\n        resolveOrReject(generatorWrapper, 3, value);\n      }\n    }\n  };\n  var appendPromiseChainNode = function (generatorWrapper, value) {\n    if (!(generatorWrapper.tasks || generatorWrapper.entryIdCounter != 2 && generatorWrapper.entryIdCounter != 3)) {\n      finalizePromise(generatorWrapper);\n    }\n    if (generatorWrapper.createDeferred) {\n      generatorWrapper.createDeferred.next = value;\n    } else {\n      generatorWrapper.tasks = value;\n    }\n    generatorWrapper.createDeferred = value;\n  };\n  var thenHelper = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = createPromiseChainNode(null, null, null);\n    iterateEntries.entryIdCounter = new PromisePolyfill(function (createCircularNode, entryIdCounter) {\n      if (value) {\n        iterateEntries.setTimeoutWrapper = function (key) {\n          try {\n            var value = value.call(findEntry, key);\n            createCircularNode(value);\n          } catch (entry) {\n            entryIdCounter(entry);\n          }\n        };\n      } else {\n        iterateEntries.setTimeoutWrapper = createCircularNode;\n      }\n      if (CustomMap) {\n        iterateEntries.tasks = function (key) {\n          try {\n            var value = CustomMap.call(findEntry, key);\n            if (undefined === value && key instanceof CancellationError) {\n              entryIdCounter(key);\n            } else {\n              createCircularNode(value);\n            }\n          } catch (entry) {\n            entryIdCounter(entry);\n          }\n        };\n      } else {\n        iterateEntries.tasks = entryIdCounter;\n      }\n    });\n    iterateEntries.entryIdCounter.setTimeoutWrapper = generatorWrapper;\n    appendPromiseChainNode(generatorWrapper, iterateEntries);\n    return iterateEntries.entryIdCounter;\n  };\n  PromisePolyfill.prototype.dispatchUnhandledRejection = function (generatorWrapper) {\n    this.entryIdCounter = 0;\n    resolveOrReject(this, 2, generatorWrapper);\n  };\n  PromisePolyfill.prototype.handleThenable = function (generatorWrapper) {\n    this.entryIdCounter = 0;\n    resolveOrReject(this, 3, generatorWrapper);\n  };\n  var resolveOrReject = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.entryIdCounter == 0) {\n      if (generatorWrapper === CustomMap) {\n        value = 3;\n        CustomMap = new TypeError(\"Promise cannot resolve to itself\");\n      }\n      generatorWrapper.entryIdCounter = 1;\n      generatorWrapper: {\n        var findEntry = CustomMap;\n        var iterateEntries = generatorWrapper.dispatchUnhandledRejection;\n        var createCircularNode = generatorWrapper.handleThenable;\n        if (findEntry instanceof PromisePolyfill) {\n          appendPromiseChainNode(findEntry, createPromiseChainNode(iterateEntries || noopFunction, createCircularNode || null, generatorWrapper));\n          var entryIdCounter = true;\n        } else if (isThenable(findEntry)) {\n          findEntry.then(iterateEntries, createCircularNode, generatorWrapper);\n          entryIdCounter = true;\n        } else {\n          if (isObjectOrFunction(findEntry)) {\n            try {\n              var key = findEntry.then;\n              if (typeof key === \"function\") {\n                handleThenable(findEntry, key, iterateEntries, createCircularNode, generatorWrapper);\n                entryIdCounter = true;\n                break generatorWrapper;\n              }\n            } catch (value) {\n              createCircularNode.call(generatorWrapper, value);\n              entryIdCounter = true;\n              break generatorWrapper;\n            }\n          }\n          entryIdCounter = false;\n        }\n      }\n      if (!entryIdCounter) {\n        generatorWrapper.onFulfilled = CustomMap;\n        generatorWrapper.entryIdCounter = value;\n        generatorWrapper.setTimeoutWrapper = null;\n        finalizePromise(generatorWrapper);\n        if (!(value != 3 || CustomMap instanceof CancellationError)) {\n          reportUnhandledRejection(generatorWrapper, CustomMap);\n        }\n      }\n    }\n  };\n  var handleThenable = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = false;\n    var entryIdCounter = function (value) {\n      if (!createCircularNode) {\n        createCircularNode = true;\n        CustomMap.call(iterateEntries, value);\n      }\n    };\n    var key = function (value) {\n      if (!createCircularNode) {\n        createCircularNode = true;\n        findEntry.call(iterateEntries, value);\n      }\n    };\n    try {\n      value.call(generatorWrapper, entryIdCounter, key);\n    } catch (value) {\n      key(value);\n    }\n  };\n  var finalizePromise = function (generatorWrapper) {\n    if (!generatorWrapper.isDone) {\n      generatorWrapper.isDone = true;\n      enqueueTask(generatorWrapper.executeCallbacks, generatorWrapper);\n    }\n  };\n  var networkVersion = function (generatorWrapper) {\n    var value = null;\n    if (generatorWrapper.tasks) {\n      value = generatorWrapper.tasks;\n      generatorWrapper.tasks = value.next;\n      value.next = null;\n    }\n    if (!generatorWrapper.tasks) {\n      generatorWrapper.createDeferred = null;\n    }\n    return value;\n  };\n  PromisePolyfill.prototype.executeCallbacks = function () {\n    for (var generatorWrapper; generatorWrapper = networkVersion(this);) {\n      rejectPromiseChainNode(this, generatorWrapper, this.entryIdCounter, this.onFulfilled);\n    }\n    this.isDone = false;\n  };\n  var rejectPromiseChainNode = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (CustomMap == 3 && value.tasks && !value.createDeferred) {\n      for (; generatorWrapper && generatorWrapper.handleAsync; generatorWrapper = generatorWrapper.setTimeoutWrapper) {\n        generatorWrapper.handleAsync = false;\n      }\n    }\n    if (value.entryIdCounter) {\n      value.entryIdCounter.setTimeoutWrapper = null;\n      callHandler(value, CustomMap, findEntry);\n    } else {\n      try {\n        if (value.createDeferred) {\n          value.setTimeoutWrapper.call(value.context);\n        } else {\n          callHandler(value, CustomMap, findEntry);\n        }\n      } catch (iterateEntries) {\n        logError.call(null, iterateEntries);\n      }\n    }\n    releaseObject(promiseChainNodePool, value);\n  };\n  var callHandler = function (generatorWrapper, value, CustomMap) {\n    if (value == 2) {\n      generatorWrapper.setTimeoutWrapper.call(generatorWrapper.context, CustomMap);\n    } else if (generatorWrapper.tasks) {\n      generatorWrapper.tasks.call(generatorWrapper.context, CustomMap);\n    }\n  };\n  var reportUnhandledRejection = function (generatorWrapper, value) {\n    generatorWrapper.handleAsync = true;\n    enqueueTask(function () {\n      if (generatorWrapper.handleAsync) {\n        logError.call(null, value);\n      }\n    });\n  };\n  var logError = deferError;\n  var CancellationError = function (generatorWrapper) {\n    CustomError.call(this, generatorWrapper);\n  };\n  inheritPrototype(CancellationError, CustomError);\n  CancellationError.prototype.name = \"cancel\";\n  var Timer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = generatorWrapper || 1;\n    this.entryIdCounter = value || globalScope;\n    this.setTimeoutWrapper = bindOrWrapFunction(this.getObjectPathValue, this);\n    this.handleAsync = Date.now();\n  };\n  inheritPrototype(Timer, AdEnvironmentConfig);\n  setTimeoutWrapper = Timer.prototype;\n  setTimeoutWrapper.enabled = false;\n  setTimeoutWrapper.getType = null;\n  setTimeoutWrapper.getObjectPathValue = function () {\n    if (this.enabled) {\n      var generatorWrapper = Date.now() - this.handleAsync;\n      if (generatorWrapper > 0 && generatorWrapper < 0.8 * this.tasks) {\n        this.getType = this.entryIdCounter.setTimeout(this.setTimeoutWrapper, this.tasks - generatorWrapper);\n      } else {\n        if (this.getType) {\n          this.entryIdCounter.clearTimeout(this.getType);\n          this.getType = null;\n        }\n        this.dispatchEvent(\"tick\");\n        if (this.enabled) {\n          this.stopTimer();\n          this.startTimer();\n        }\n      }\n    }\n  };\n  setTimeoutWrapper.startTimer = function () {\n    this.enabled = true;\n    if (!this.getType) {\n      this.getType = this.entryIdCounter.setTimeout(this.setTimeoutWrapper, this.tasks);\n      this.handleAsync = Date.now();\n    }\n  };\n  setTimeoutWrapper.stopTimer = function () {\n    this.enabled = false;\n    if (this.getType) {\n      this.entryIdCounter.clearTimeout(this.getType);\n      this.getType = null;\n    }\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    Timer.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.stopTimer();\n    delete this.entryIdCounter;\n  };\n  var setAsyncTimeout = function (generatorWrapper, value, CustomMap) {\n    if (typeof generatorWrapper === \"function\") {\n      if (CustomMap) {\n        generatorWrapper = bindOrWrapFunction(generatorWrapper, CustomMap);\n      }\n    } else if (generatorWrapper && typeof generatorWrapper.handleEvent == \"function\") {\n      generatorWrapper = bindOrWrapFunction(generatorWrapper.handleEvent, generatorWrapper);\n    } else {\n      throw Error(\"Invalid listener argument\");\n    }\n    if (Number(value) > 2147483647) {\n      return -1;\n    } else {\n      return globalScope.setTimeout(generatorWrapper, value || 0);\n    }\n  };\n  var createTimerPromise = function (generatorWrapper, value) {\n    var CustomMap = null;\n    return new PromisePolyfill(function (findEntry, iterateEntries) {\n      CustomMap = setAsyncTimeout(function () {\n        findEntry(value);\n      }, generatorWrapper);\n      if (-1 == CustomMap) {\n        iterateEntries(Error(\"Failed to schedule timer.\"));\n      }\n    }).settlePromise(function (findEntry) {\n      globalScope.clearTimeout(CustomMap);\n      throw findEntry;\n    });\n  };\n  var getCurrentTimestamp = function () {\n    return Math.roundRectangle(Date.now() / 1000);\n  };\n  var SimpleStore = function () {\n    this.entryIdCounter = {};\n    return this;\n  };\n  SimpleStore.prototype.removeElement = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper in value) {\n      delete value[generatorWrapper];\n    }\n  };\n  SimpleStore.prototype.set = function (generatorWrapper, value) {\n    this.entryIdCounter[generatorWrapper] = value;\n  };\n  var setBitFlag = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter.hasStringPrototypeNormalize = getObjectPropertyOrDefault(generatorWrapper.entryIdCounter, \"eb\", 0) | value;\n  };\n  SimpleStore.prototype.get = function (generatorWrapper) {\n    return getObjectPropertyOrDefault(this.entryIdCounter, generatorWrapper, null);\n  };\n  var globalStore = null;\n  var GlobalStoreConstructor = function () {\n    this.entryIdCounter = {};\n    this.tasks = 0;\n  };\n  var getGlobalStore = function () {\n    if (!globalStore) {\n      globalStore = new GlobalStoreConstructor();\n    }\n    return globalStore;\n  };\n  var registerGlobalValue = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter[value.getAdName()] = value;\n  };\n  var GlobalValue = function (generatorWrapper, value) {\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = true;\n    this.entryIdCounter = value;\n  };\n  GlobalValue.prototype.getAdName = function () {\n    return this.createDeferred;\n  };\n  GlobalValue.prototype.getAdStateValue = function () {\n    return this.entryIdCounter;\n  };\n  GlobalValue.prototype.tasks = function () {\n    return String(this.entryIdCounter);\n  };\n  var BooleanGlobalValue = function (generatorWrapper, value) {\n    GlobalValue.call(this, String(generatorWrapper), value);\n    this.handleAsync = generatorWrapper;\n    this.entryIdCounter = !!value;\n  };\n  inheritPrototype(BooleanGlobalValue, GlobalValue);\n  BooleanGlobalValue.prototype.tasks = function () {\n    if (this.entryIdCounter) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n  var RectGlobalValue = function (generatorWrapper, value) {\n    GlobalValue.call(this, generatorWrapper, value);\n  };\n  inheritPrototype(RectGlobalValue, GlobalValue);\n  RectGlobalValue.prototype.tasks = function () {\n    if (this.entryIdCounter) {\n      return Math.roundRectangle(this.entryIdCounter.top) + \".\" + Math.roundRectangle(this.entryIdCounter.left) + \".\" + (Math.roundRectangle(this.entryIdCounter.top) + Math.roundRectangle(this.entryIdCounter.height)) + \".\" + (Math.roundRectangle(this.entryIdCounter.left) + Math.roundRectangle(this.entryIdCounter.width));\n    } else {\n      return \"\";\n    }\n  };\n  var parseRectFromString = function (generatorWrapper) {\n    if (generatorWrapper.match(/^-?[0-9]+\\.-?[0-9]+\\.-?[0-9]+\\.-?[0-9]+$/)) {\n      generatorWrapper = generatorWrapper.split(\".\");\n      var value = Number(generatorWrapper[0]);\n      var CustomMap = Number(generatorWrapper[1]);\n      return new RectGlobalValue(\"\", new RectangleDimensions(CustomMap, value, Number(generatorWrapper[3]) - CustomMap, Number(generatorWrapper[2]) - value));\n    }\n    return new RectGlobalValue(\"\", new RectangleDimensions(0, 0, 0, 0));\n  };\n  var calculateBoundingRect = function (generatorWrapper) {\n    var value = new RectangleDimensions(-Number.MAX_VALUE / 2, -Number.MAX_VALUE / 2, Number.MAX_VALUE, Number.MAX_VALUE);\n    var CustomMap = new RectangleDimensions(0, 0, 0, 0);\n    if (!generatorWrapper || generatorWrapper.length == 0) {\n      return CustomMap;\n    }\n    for (var findEntry = 0; findEntry < generatorWrapper.length; findEntry++) {\n      generatorWrapper: {\n        var iterateEntries = value;\n        var createCircularNode = generatorWrapper[findEntry];\n        var entryIdCounter = Math.max(iterateEntries.left, createCircularNode.left);\n        var key = Math.min(iterateEntries.left + iterateEntries.width, createCircularNode.left + createCircularNode.width);\n        if (entryIdCounter <= key) {\n          var value = Math.max(iterateEntries.top, createCircularNode.top);\n          createCircularNode = Math.min(iterateEntries.top + iterateEntries.height, createCircularNode.top + createCircularNode.height);\n          if (value <= createCircularNode) {\n            iterateEntries.left = entryIdCounter;\n            iterateEntries.top = value;\n            iterateEntries.width = key - entryIdCounter;\n            iterateEntries.height = createCircularNode - value;\n            iterateEntries = true;\n            break generatorWrapper;\n          }\n        }\n        iterateEntries = false;\n      }\n      if (!iterateEntries) {\n        return CustomMap;\n      }\n    }\n    return value;\n  };\n  var getElementRectangle = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.getBoundingClientRect();\n    generatorWrapper = calculateFrameOffset(generatorWrapper, value);\n    return new RectangleDimensions(Math.roundRectangle(generatorWrapper.inheritPrototype), Math.roundRectangle(generatorWrapper.globalScope), Math.roundRectangle(CustomMap.right - C",
  "apper.handleAsync) {\n        logError.call(null, value);\n      }\n    });\n  };\n  var logError = deferError;\n  var CancellationError = function (generatorWrapper) {\n    CustomError.call(this, generatorWrapper);\n  };\n  inheritPrototype(CancellationError, CustomError);\n  CancellationError.prototype.name = \"cancel\";\n  var Timer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = generatorWrapper || 1;\n    this.entryIdCounter = value || globalScope;\n    this.setTimeoutWrapper = bindOrWrapFunction(this.getObjectPathValue, this);\n    this.handleAsync = Date.now();\n  };\n  inheritPrototype(Timer, AdEnvironmentConfig);\n  setTimeoutWrapper = Timer.prototype;\n  setTimeoutWrapper.enabled = false;\n  setTimeoutWrapper.getType = null;\n  setTimeoutWrapper.getObjectPathValue = function () {\n    if (this.enabled) {\n      var generatorWrapper = Date.now() - this.handleAsync;\n      if (generatorWrapper > 0 && generatorWrapper < 0.8 * this.tasks) {\n        this.getType = this.entryIdCounter.setTimeout(this.setTimeoutWrapper, this.tasks - generatorWrapper);\n      } else {\n        if (this.getType) {\n          this.entryIdCounter.clearTimeout(this.getType);\n          this.getType = null;\n        }\n        this.dispatchEvent(\"tick\");\n        if (this.enabled) {\n          this.stopTimer();\n          this.startTimer();\n        }\n      }\n    }\n  };\n  setTimeoutWrapper.startTimer = function () {\n    this.enabled = true;\n    if (!this.getType) {\n      this.getType = this.entryIdCounter.setTimeout(this.setTimeoutWrapper, this.tasks);\n      this.handleAsync = Date.now();\n    }\n  };\n  setTimeoutWrapper.stopTimer = function () {\n    this.enabled = false;\n    if (this.getType) {\n      this.entryIdCounter.clearTimeout(this.getType);\n      this.getType = null;\n    }\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    Timer.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.stopTimer();\n    delete this.entryIdCounter;\n  };\n  var setAsyncTimeout = function (generatorWrapper, value, CustomMap) {\n    if (typeof generatorWrapper === \"function\") {\n      if (CustomMap) {\n        generatorWrapper = bindOrWrapFunction(generatorWrapper, CustomMap);\n      }\n    } else if (generatorWrapper && typeof generatorWrapper.handleEvent == \"function\") {\n      generatorWrapper = bindOrWrapFunction(generatorWrapper.handleEvent, generatorWrapper);\n    } else {\n      throw Error(\"Invalid listener argument\");\n    }\n    if (Number(value) > 2147483647) {\n      return -1;\n    } else {\n      return globalScope.setTimeout(generatorWrapper, value || 0);\n    }\n  };\n  var createTimerPromise = function (generatorWrapper, value) {\n    var CustomMap = null;\n    return new PromisePolyfill(function (findEntry, iterateEntries) {\n      CustomMap = setAsyncTimeout(function () {\n        findEntry(value);\n      }, generatorWrapper);\n      if (-1 == CustomMap) {\n        iterateEntries(Error(\"Failed to schedule timer.\"));\n      }\n    }).settlePromise(function (findEntry) {\n      globalScope.clearTimeout(CustomMap);\n      throw findEntry;\n    });\n  };\n  var getCurrentTimestamp = function () {\n    return Math.roundRectangle(Date.now() / 1000);\n  };\n  var SimpleStore = function () {\n    this.entryIdCounter = {};\n    return this;\n  };\n  SimpleStore.prototype.removeElement = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    if (generatorWrapper in value) {\n      delete value[generatorWrapper];\n    }\n  };\n  SimpleStore.prototype.set = function (generatorWrapper, value) {\n    this.entryIdCounter[generatorWrapper] = value;\n  };\n  var setBitFlag = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter.hasStringPrototypeNormalize = getObjectPropertyOrDefault(generatorWrapper.entryIdCounter, \"eb\", 0) | value;\n  };\n  SimpleStore.prototype.get = function (generatorWrapper) {\n    return getObjectPropertyOrDefault(this.entryIdCounter, generatorWrapper, null);\n  };\n  var globalStore = null;\n  var GlobalStoreConstructor = function () {\n    this.entryIdCounter = {};\n    this.tasks = 0;\n  };\n  var getGlobalStore = function () {\n    if (!globalStore) {\n      globalStore = new GlobalStoreConstructor();\n    }\n    return globalStore;\n  };\n  var registerGlobalValue = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter[value.getAdName()] = value;\n  };\n  var GlobalValue = function (generatorWrapper, value) {\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = true;\n    this.entryIdCounter = value;\n  };\n  GlobalValue.prototype.getAdName = function () {\n    return this.createDeferred;\n  };\n  GlobalValue.prototype.getAdStateValue = function () {\n    return this.entryIdCounter;\n  };\n  GlobalValue.prototype.tasks = function () {\n    return String(this.entryIdCounter);\n  };\n  var BooleanGlobalValue = function (generatorWrapper, value) {\n    GlobalValue.call(this, String(generatorWrapper), value);\n    this.handleAsync = generatorWrapper;\n    this.entryIdCounter = !!value;\n  };\n  inheritPrototype(BooleanGlobalValue, GlobalValue);\n  BooleanGlobalValue.prototype.tasks = function () {\n    if (this.entryIdCounter) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n  var RectGlobalValue = function (generatorWrapper, value) {\n    GlobalValue.call(this, generatorWrapper, value);\n  };\n  inheritPrototype(RectGlobalValue, GlobalValue);\n  RectGlobalValue.prototype.tasks = function () {\n    if (this.entryIdCounter) {\n      return Math.roundRectangle(this.entryIdCounter.top) + \".\" + Math.roundRectangle(this.entryIdCounter.left) + \".\" + (Math.roundRectangle(this.entryIdCounter.top) + Math.roundRectangle(this.entryIdCounter.height)) + \".\" + (Math.roundRectangle(this.entryIdCounter.left) + Math.roundRectangle(this.entryIdCounter.width));\n    } else {\n      return \"\";\n    }\n  };\n  var parseRectFromString = function (generatorWrapper) {\n    if (generatorWrapper.match(/^-?[0-9]+\\.-?[0-9]+\\.-?[0-9]+\\.-?[0-9]+$/)) {\n      generatorWrapper = generatorWrapper.split(\".\");\n      var value = Number(generatorWrapper[0]);\n      var CustomMap = Number(generatorWrapper[1]);\n      return new RectGlobalValue(\"\", new RectangleDimensions(CustomMap, value, Number(generatorWrapper[3]) - CustomMap, Number(generatorWrapper[2]) - value));\n    }\n    return new RectGlobalValue(\"\", new RectangleDimensions(0, 0, 0, 0));\n  };\n  var calculateBoundingRect = function (generatorWrapper) {\n    var value = new RectangleDimensions(-Number.MAX_VALUE / 2, -Number.MAX_VALUE / 2, Number.MAX_VALUE, Number.MAX_VALUE);\n    var CustomMap = new RectangleDimensions(0, 0, 0, 0);\n    if (!generatorWrapper || generatorWrapper.length == 0) {\n      return CustomMap;\n    }\n    for (var findEntry = 0; findEntry < generatorWrapper.length; findEntry++) {\n      generatorWrapper: {\n        var iterateEntries = value;\n        var createCircularNode = generatorWrapper[findEntry];\n        var entryIdCounter = Math.max(iterateEntries.left, createCircularNode.left);\n        var key = Math.min(iterateEntries.left + iterateEntries.width, createCircularNode.left + createCircularNode.width);\n        if (entryIdCounter <= key) {\n          var value = Math.max(iterateEntries.top, createCircularNode.top);\n          createCircularNode = Math.min(iterateEntries.top + iterateEntries.height, createCircularNode.top + createCircularNode.height);\n          if (value <= createCircularNode) {\n            iterateEntries.left = entryIdCounter;\n            iterateEntries.top = value;\n            iterateEntries.width = key - entryIdCounter;\n            iterateEntries.height = createCircularNode - value;\n            iterateEntries = true;\n            break generatorWrapper;\n          }\n        }\n        iterateEntries = false;\n      }\n      if (!iterateEntries) {\n        return CustomMap;\n      }\n    }\n    return value;\n  };\n  var getElementRectangle = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.getBoundingClientRect();\n    generatorWrapper = calculateFrameOffset(generatorWrapper, value);\n    return new RectangleDimensions(Math.roundRectangle(generatorWrapper.inheritPrototype), Math.roundRectangle(generatorWrapper.globalScope), Math.roundRectangle(CustomMap.right - CustomMap.left), Math.roundRectangle(CustomMap.bottom - CustomMap.top));\n  };\n  var calculateVisibilityMetrics = function (generatorWrapper, value, CustomMap) {\n    if (value && CustomMap) {\n      generatorWrapper: {\n        var findEntry = Math.max(value.left, CustomMap.left);\n        var iterateEntries = Math.min(value.left + value.width, CustomMap.left + CustomMap.width);\n        if (findEntry <= iterateEntries) {\n          var createCircularNode = Math.max(value.top, CustomMap.top);\n          var entryIdCounter = Math.min(value.top + value.height, CustomMap.top + CustomMap.height);\n          if (createCircularNode <= entryIdCounter) {\n            findEntry = new RectangleDimensions(findEntry, createCircularNode, iterateEntries - findEntry, entryIdCounter - createCircularNode);\n            break generatorWrapper;\n          }\n        }\n        findEntry = null;\n      }\n      if (findEntry) {\n        iterateEntries = findEntry.height * findEntry.width;\n      } else {\n        iterateEntries = 0;\n      }\n      if (findEntry) {\n        createCircularNode = value.height * value.width;\n      } else {\n        createCircularNode = 0;\n      }\n      if (findEntry && createCircularNode) {\n        findEntry = Math.roundRectangle(iterateEntries / createCircularNode * 100);\n      } else {\n        findEntry = 0;\n      }\n      registerGlobalValue(generatorWrapper, new GlobalValue(\"vp\", findEntry));\n      if (findEntry && findEntry > 0) {\n        iterateEntries = rectangleFromDimensions(value);\n        createCircularNode = rectangleFromDimensions(CustomMap);\n        iterateEntries = iterateEntries.top >= createCircularNode.top && iterateEntries.top < createCircularNode.bottom;\n      } else {\n        iterateEntries = false;\n      }\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(512, iterateEntries));\n      if (findEntry && findEntry > 0) {\n        iterateEntries = rectangleFromDimensions(value);\n        createCircularNode = rectangleFromDimensions(CustomMap);\n        iterateEntries = iterateEntries.bottom <= createCircularNode.bottom && iterateEntries.bottom > createCircularNode.top;\n      } else {\n        iterateEntries = false;\n      }\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(1024, iterateEntries));\n      if (findEntry && findEntry > 0) {\n        iterateEntries = rectangleFromDimensions(value);\n        createCircularNode = rectangleFromDimensions(CustomMap);\n        iterateEntries = iterateEntries.left >= createCircularNode.left && iterateEntries.left < createCircularNode.right;\n      } else {\n        iterateEntries = false;\n      }\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(2048, iterateEntries));\n      if (findEntry && findEntry > 0) {\n        value = rectangleFromDimensions(value);\n        CustomMap = rectangleFromDimensions(CustomMap);\n        CustomMap = value.right <= CustomMap.right && value.right > CustomMap.left;\n      } else {\n        CustomMap = false;\n      }\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(4096, CustomMap));\n    }\n  };\n  var VisibilityMetricsCollector = function (generatorWrapper, value) {\n    var CustomMap = 0;\n    if (getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\", \"tagged\")) {\n      CustomMap = 1;\n    }\n    var findEntry = null;\n    if (generatorWrapper) {\n      findEntry = generatorWrapper();\n    }\n    if (findEntry) {\n      generatorWrapper = getGlobalStore();\n      generatorWrapper.entryIdCounter = {};\n      var iterateEntries = new BooleanGlobalValue(32, true);\n      iterateEntries.setTimeoutWrapper = false;\n      registerGlobalValue(generatorWrapper, iterateEntries);\n      iterateEntries = getWindowForDocument().document;\n      iterateEntries = iterateEntries.visibilityState || iterateEntries.webkitVisibilityState || iterateEntries.mozVisibilityState || iterateEntries.msVisibilityState || \"\";\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(64, iterateEntries.toLowerCase().substring(iterateEntries.length - 6) != \"hidden\" ? true : false));\n      try {\n        var createCircularNode = getWindowForDocument().top;\n        try {\n          var entryIdCounter = !!createCircularNode.location.href || createCircularNode.location.href === \"\";\n        } catch (currentEntry) {\n          entryIdCounter = false;\n        }\n        if (entryIdCounter) {\n          var key = getFrameElements(findEntry);\n          var value = key && key.length != 0 ? \"1\" : \"0\";\n        } else {\n          value = \"2\";\n        }\n      } catch (currentEntry) {\n        value = \"2\";\n      }\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(256, value == \"2\"));\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(128, value == \"1\"));\n      key = entryIdCounter = getWindowForDocument().top;\n      if (value == \"2\") {\n        key = getWindowForDocument();\n      }\n      createCircularNode = getElementRectangle(findEntry, key);\n      registerGlobalValue(generatorWrapper, new RectGlobalValue(\"er\", createCircularNode));\n      try {\n        var entry = key.document && !key.document.body ? null : getViewportSize(key || window);\n      } catch (currentEntry) {\n        entry = null;\n      }\n      if (entry) {\n        key = getDocumentScrollCoordinate(getDomHelper(key.document).entryIdCounter);\n        registerGlobalValue(generatorWrapper, new BooleanGlobalValue(16384, !!key));\n        if (key) {\n          entry = new RectangleDimensions(key.inheritPrototype, key.globalScope, entry.width, entry.height);\n        } else {\n          entry = null;\n        }\n      } else {\n        entry = null;\n      }\n      registerGlobalValue(generatorWrapper, new RectGlobalValue(\"vi\", entry));\n      if (entry && value == \"1\") {\n        value = getFrameElements(findEntry);\n        findEntry = [];\n        for (key = 0; key < value.length; key++) {\n          if (iterateEntries = getElementRectangle(value[key], entryIdCounter)) {\n            findEntry.push(iterateEntries);\n          }\n        }\n        findEntry.push(entry);\n        entry = calculateBoundingRect(findEntry);\n      }\n      calculateVisibilityMetrics(generatorWrapper, createCircularNode, entry);\n      if (generatorWrapper.tasks) {\n        registerGlobalValue(generatorWrapper, new GlobalValue(\"ts\", getCurrentTimestamp() - generatorWrapper.tasks));\n      }\n      generatorWrapper.tasks = getCurrentTimestamp();\n    } else {\n      generatorWrapper = getGlobalStore();\n      generatorWrapper.entryIdCounter = {};\n      generatorWrapper.tasks = getCurrentTimestamp();\n      registerGlobalValue(generatorWrapper, new BooleanGlobalValue(32, false));\n    }\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = new SimpleStore();\n    this.entryIdCounter.set(\"ve\", 4);\n    if (CustomMap) {\n      setBitFlag(this.entryIdCounter, 1);\n    }\n    if (getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\", \"crossdomainTag\")) {\n      setBitFlag(this.entryIdCounter, 4);\n    }\n    if (getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\", \"sdkTag\")) {\n      setBitFlag(this.entryIdCounter, 8);\n    }\n    if (getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\", \"jsTag\")) {\n      setBitFlag(this.entryIdCounter, 2);\n    }\n    if (value && getObjectPropertyOrDefault(value, \"fullscreen\", false)) {\n      setBitFlag(this.entryIdCounter, 16);\n    }\n    this.tasks = value = null;\n    if (CustomMap && (CustomMap = getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\"), CustomMap.getEData)) {\n      this.tasks = CustomMap.getEData();\n      if (CustomMap = getObjectPathValue(getWindowForDocument(), \"ima\", \"video\", \"client\", \"getLastSnapshotFromTop\")) {\n        if (generatorWrapper = CustomMap()) {\n          this.tasks.extendWithDataFromTopIframe(generatorWrapper.tagstamp, generatorWrapper.playstamp, generatorWrapper.lactstamp);\n          CustomMap = this.setTimeoutWrapper;\n          value = generatorWrapper.transformArray;\n          generatorWrapper = generatorWrapper.extractHostname;\n          if (value && generatorWrapper) {\n            value = parseRectFromString(value).getAdStateValue();\n            generatorWrapper = parseRectFromString(generatorWrapper).getAdStateValue();\n            value = null;\n            if (getObjectPropertyOrDefault(CustomMap.entryIdCounter, \"er\", null)) {\n              value = getObjectPropertyOrDefault(CustomMap.entryIdCounter, \"er\", null).getAdStateValue();\n              value.top += value.top;\n              value.left += value.left;\n              registerGlobalValue(CustomMap, new RectGlobalValue(\"er\", value));\n            }\n            if (getObjectPropertyOrDefault(CustomMap.entryIdCounter, \"vi\", null)) {\n              entry = getObjectPropertyOrDefault(CustomMap.entryIdCounter, \"vi\", null).getAdStateValue();\n              entry.top += value.top;\n              entry.left += value.left;\n              findEntry = [];\n              findEntry.push(entry);\n              findEntry.push(value);\n              findEntry.push(generatorWrapper);\n              value = calculateBoundingRect(findEntry);\n              calculateVisibilityMetrics(CustomMap, value, value);\n              registerGlobalValue(CustomMap, new RectGlobalValue(\"vi\", generatorWrapper));\n            }\n          }\n        }\n      }\n      generatorWrapper: {\n        if (this.tasks) {\n          if (this.tasks.getTagLoadTimestamp) {\n            value = this.tasks.getTagLoadTimestamp();\n            break generatorWrapper;\n          }\n          if (this.tasks.getTimeSinceTagLoadSeconds) {\n            value = this.tasks.getTimeSinceTagLoadSeconds();\n            break generatorWrapper;\n          }\n        }\n        value = null;\n      }\n    }\n    CustomMap = this.entryIdCounter;\n    if (window.performance && window.performance.timing && window.performance.timing.domLoading && window.performance.timing.domLoading > 0) {\n      generatorWrapper = Math.roundRectangle(window.performance.timing.domLoading / 1000);\n    } else {\n      generatorWrapper = null;\n    }\n    CustomMap.set.call(CustomMap, \"td\", getCurrentTimestamp() - (generatorWrapper != null ? generatorWrapper : value != null ? value : getCurrentTimestamp()));\n  };\n  new Timer(200);\n  var collectAndSerializeVisibilityMetrics = function (generatorWrapper, value) {\n    try {\n      var CustomMap = new VisibilityMetricsCollector(generatorWrapper, value);\n      generatorWrapper = [];\n      var findEntry = Number(CustomMap.entryIdCounter.get(\"eb\"));\n      CustomMap.entryIdCounter.removeElement(\"eb\");\n      var iterateEntries,\n        createCircularNode = CustomMap.entryIdCounter;\n      value = [];\n      for (var entryIdCounter in createCircularNode.entryIdCounter) value.push(entryIdCounter + createCircularNode.entryIdCounter[entryIdCounter]);\n      if (iterateEntries = value.join(\"_\")) {\n        generatorWrapper.push(iterateEntries);\n      }\n      if (CustomMap.tasks) {\n        var key = CustomMap.tasks.serialize();\n        if (key) {\n          generatorWrapper.push(key);\n        }\n      }\n      var value,\n        entry = CustomMap.setTimeoutWrapper;\n      iterateEntries = findEntry;\n      createCircularNode = [];\n      if (!iterateEntries) {\n        iterateEntries = 0;\n      }\n      for (var currentEntry in entry.entryIdCounter) {\n        var foundEntry = entry.entryIdCounter[currentEntry];\n        if (foundEntry instanceof BooleanGlobalValue) {\n          if (foundEntry.getAdStateValue()) {\n            iterateEntries |= foundEntry.handleAsync;\n          }\n        } else {\n          var resolveFunction = entry.entryIdCounter[currentEntry];\n          var rejectFunction = resolveFunction.setTimeoutWrapper ? resolveFunction.tasks() : \"\";\n          if (rejectFunction) {\n            createCircularNode.push(currentEntry + rejectFunction);\n          }\n        }\n      }\n      createCircularNode.push(\"eb\" + String(iterateEntries));\n      if (value = createCircularNode.join(\"_\")) {\n        generatorWrapper.push(value);\n      }\n      CustomMap.entryIdCounter.set(\"eb\", findEntry);\n      return generatorWrapper.join(\"_\");\n    } catch (user) {\n      return \"tle;\" + truncateString(user.name, 12) + \";\" + truncateString(user.message, 40);\n    }\n  };\n  var AdSlot = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSlot, AdElement);\n  AdSlot.prototype.getAdId = function () {\n    return dispatchUnhandledRejection(this, 1);\n  };\n  var Qv = [0, enumTransformation];\n  var AdSize = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSize, AdElement);\n  AdSize.prototype.getRectangleWidth = function () {\n    return getNumericAdProperty(this, 1);\n  };\n  AdSize.prototype.getRectangleHeight = function () {\n    return getNumericAdProperty(this, 2);\n  };\n  var Sv = [0, booleanTransformation1, -1];\n  var AdParameters = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdParameters, AdElement);\n  var Uv = [0, stringOrNumberTransformation1, booleanFlagTransformation, enumTransformation, -1];\n  var Ad = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(Ad, AdElement);\n  Ad.prototype.getAdId = function () {\n    return dispatchUnhandledRejection(this, 1);\n  };\n  Ad.prototype.getRectangleSize = function () {\n    return fetchData(this, AdSize, 7);\n  };\n  Ad.prototype.containsElement = function () {\n    return fetchData(this, AdParameters, 9);\n  };\n  Ad.findGlobalObject = [4];\n  var Wv = [0, enumTransformation, stringOrNumberTransformation1, enumTransformation, arrayTransformationInstance, parsedIntegerTransformation, Qv, Sv, stringOrNumberTransformation1, Uv];\n  var AdEvent = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdEvent, AdElement);\n  var setAdEventType = function (generatorWrapper, value) {\n    return clearAdProperty(generatorWrapper, 1, value);\n  };\n  var setAdEventTimeStamp = function (generatorWrapper, value) {\n    return setAdProperty(generatorWrapper, 4, value);\n  };\n  var setAdEventAdData = function (generatorWrapper, value) {\n    return updateAdProperty(generatorWrapper, 2, value);\n  };\n  var aw = [0, parsedIntegerTransformation, booleanTransformation1, enumTransformation, booleanFlagTransformation];\n  var AdRequest = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequest, AdElement);\n  var setAdRequestType = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 1, value);\n  };\n  var addAdToAdRequest = function (generatorWrapper, value) {\n    return addElementToAd(generatorWrapper, 3, Ad, value);\n  };\n  var setAdRequestAdUnitPath = function (generatorWrapper, value) {\n    return clearAdProperty(generatorWrapper, 4, value);\n  };\n  AdRequest.findGlobalObject = [10, 3];\n  var fw = [0, enumTransformation, stringOrNumberTransformation1, arrayOfObjectsTransformationInstance, Wv, parsedIntegerTransformation, aw, booleanFlagTransformation, parsedIntegerTransformation, 2, arrayTransformationInstance];\n  var AdResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var hw = [0, parsedIntegerTransformation, booleanFlagTransformation, stringOrNumberTransformation1];\n  var AdBreak = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdBreak, AdElement);\n  var addAdRequestToAdBreak = function (generatorWrapper, value) {\n    return createAdElement(generatorWrapper, 2, AdRequest, value);\n  };\n  var setAdBreakFillType = function (generatorWrapper, value) {\n    finalizeAdAttributes(generatorWrapper, 5, value);\n  };\n  var setAdBreakId = function (generatorWrapper, value) {\n    setAdPropertyFromObject(generatorWrapper, 10, value);\n  };\n  AdBreak.findGlobalObject = [2];\n  var mw = [0, parsedIntegerTransformation, arrayOfObjectsTransformationInstance, fw, parsedIntegerTransformation, enumTransformation, aw, enumTransformation, booleanFlagTransformation, booleanTransformation1, hw, enumTransformation, -1];\n  var AdSchedule = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSchedule, AdElement);\n  var addAdBreakToAdSchedule = function (generatorWrapper) {\n    var value = new AdBreak();\n    value = clearAdProperty(value, 1, 1);\n    return createAdElement(generatorWrapper, 1, AdBreak, value);\n  };\n  AdSchedule.findGlobalObject = [1];\n  AdSchedule.prototype.entryIdCounter = serializeTransformations([0, arrayOfObjectsTransformationInstance, mw]);\n  var AdRule = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRule, AdElement);\n  var AdRuleParameters = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRuleParameters, AdElement);\n  var AdBreakTemplate = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdBreakTemplate, AdElement);\n  AdBreakTemplate.findGlobalObject = [1];\n  var AdSpot = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSpot, AdElement);\n  var getAdSpot = parseAndValidateArray(AdSpot);\n  AdSpot.findGlobalObject = [1];\n  var AdError = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdError, AdElement);\n  var createAdError = function (generatorWrapper) {\n    var value = new AdError();\n    return clearAdProperty(value, 1, generatorWrapper);\n  };\n  var xw = [0, parsedIntegerTransformation];\n  var AdErrorResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdErrorResponse, AdElement);\n  var createAdErrorResponse = function (generatorWrapper) {\n    var value = new AdErrorResponse();\n    return setAdPropertyFromObject(value, 1, generatorWrapper);\n  };\n  var setAdErrorResponseTimeStamp = function (generatorWrapper) {\n    var value = window.Date.now();\n    if (Number.isFinite(value)) {\n      value = Math.roundRectangle(value);\n    } else {\n      value = 0;\n    }\n    return updateElement(generatorWrapper, 3, convertToInt64(value));\n  };\n  AdErrorResponse.prototype.getAdErrorResponseError = function () {\n    return fetchData(this, AdError, 10);\n  };\n  AdErrorResponse.prototype.createFunctionWithArguments = function (generatorWrapper) {\n    return finalizeAdAttributes(this, 10, generatorWrapper);\n  };\n  var Bw = parseAndValidateArray(AdErrorResponse);\n  var Cw = [0, enumTransformation, -1, stringOrNumberTransformation1, booleanTransformation1, -2, stringOrNumberTransformation1, float32Transformation, booleanFlagTransformation, xw, booleanFlagTransformation];\n  var Dw = [0, 1, [0, safeIntegerTransformation, -2], -1, enumTransformation, -1, booleanFlagTransformation, [0, 3, parsedIntegerTransformation, enumTransformation], stringOrNumberTransformation1, arrayOfIntegersTransformationInstance, integerTransformation];\n  var AdRequestConfiguration = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequestConfiguration, AdElement);\n  AdRequestConfiguration.findGlobalObject = [1, 2];\n  AdRequestConfiguration.prototype.entryIdCounter = serializeTransformations([0, arrayOfObjectsTransformationInstance, Dw, arrayOfObjectsTransformationInstance, Cw]);\n  var RandomGenerator = function () {\n    this.entryIdCounter = Math.random();\n  };\n  var initializeRandomGenerator = function () {\n    var generatorWrapper = cj;\n    var value = window.google_srt;\n    if (value >= 0 && value <= 1) {\n      generatorWrapper.entryIdCounter = value;\n    }\n  };\n  var sendAdEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (((undefined === findEntry ? 0 : findEntry) ? generatorWrapper.entryIdCounter : Math.random()) < (iterateEntries || 0.01)) {\n      try {\n        if (CustomMap instanceof UrlQueryBuilder) {\n          var createCircularNode = CustomMap;\n        } else {\n          createCircularNode = new UrlQueryBuilder();\n          forEachInObject(CustomMap, function (key, value) {\n            var entry = createCircularNode;\n            var currentEntry = entry.createDeferred++;\n            addParameter(entry, currentEntry, createKeyValuePair(value, key));\n          });\n        }\n        var entryIdCounter = buildAdUrl(createCircularNode, \"https:\", \"/pagead/gen_204?id=\" + value + \"&\");\n        if (entryIdCounter) {\n          sendImageRequestWithRetry(globalScope, entryIdCounter);\n        }\n      } catch (key) {}\n    }\n  };\n  var cj,\n    Hw,\n    bj = new PerformanceMonitor(1, window);\n  (function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      cj = generatorWrapper;\n    } else {\n      cj = new RandomGenerator();\n    }\n    if (typeof window.google_srt !== \"number\") {\n      window.google_srt = Math.random();\n    }\n    initializeRandomGenerator();\n    Hw = new ErrorLogger();\n    Hw.createSigned64(function () {});\n    Hw.parseIntEnum(true);\n    if (window.document.readyState == \"complete\") {\n      if (!window.google_measure_js_timing) {\n        bj.isDone();\n      }\n    } else if (bj.setTimeoutWrapper) {\n      addEventListenerWithNormalization(window, \"load\", function () {\n        if (!window.google_measure_js_timing) {\n          bj.isDone();\n        }\n      });\n    }\n  })();\n  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2].reduce(function (generatorWrapper, value) {\n    return generatorWrapper + value;\n  });\n  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2].reduce(function (generatorWrapper, value) {\n    return generatorWrapper + value;\n  });\n  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2].reduce(function (generatorWrapper, value) {\n    return generatorWrapper + value;\n  });\n  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2].reduce(function (generatorWrapper, value) {\n    return generatorWrapper + value;\n  });\n  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2].reduce(function (generatorWrapper, value) {\n    return generatorWrapper + value;\n  });\n  var AdExtension = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdExtension, AdElement);\n  AdExtension.findGlobalObject = [3];\n  var AdExtensionParameters = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdExtensionParameters, AdElement);\n  var setAdExtensionParam = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 1, value, parseIntEnum);\n  };\n  var setAdExtensionValue = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 2, value, parseIntEnum);\n  };\n  var setAdExtensionOption = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 3, value, parseInt32);\n  };\n  var finalizeAdExtension = function (generatorWrapper, value) {\n    transformAndReplaceArray(generatorWrapper, 4, value, parseInt32);\n  };\n  AdExtensionParameters.findGlobalObject = [1, 2, 3, 4];\n  var AdManifest = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdManifest, AdElement);\n  var AdManifestVersion = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdManifestVersion, AdElement);\n  AdManifestVersion.prototype.getAdManifestVersion = function () {\n    return getNumericAdProperty(this, 1);\n  };\n  var setAdManifestVersion = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 1, value);\n  };\n  var addAdManifestExtension = function (generatorWrapper, value) {\n    return finalizeAdAttributes(generatorWrapper, 2, value);\n  };\n  var addAdManifestTemplate = function (generatorWrapper, value) {\n    return finalizeAdAttributes(generatorWrapper, 3, value);\n  };\n  var setAdManifestId = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 4, value);\n  };\n  var setAdManifestSequence = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 5, value);\n  };\n  var setAdManifestAdBreakId = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 6, value);\n  };\n  var setAdManifestFallbackIndex = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 7, optionalString(value), \"\");\n  };\n  var setAdManifestAdPolicy = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 8, value);\n  };\n  var setAdManifestDuration = function (generatorWrapper, value) {\n    return modifyAdProperty(generatorWrapper, 9, value);\n  };\n  var enableAdManifestSkippable = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 10, parseNullableBoolean(value), false);\n  };\n  var enableAdManifestVPAID = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 11, parseNullableBoolean(value), false);\n  };\n  var setAdManifestCreativeType = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 12, value, parseIntEnum);\n  };\n  var setAdManifestWrapper = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 13, value, parseIntEnum);\n  };\n  var setAdManifestLinear = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 14, value, parseIntEnum);\n  };\n  var setAdRequestParameter15 = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 15, parseNullableBoolean(value), false);\n  };\n  var setAdRequestParameter16 = function (generatorWrapper, value) {\n    return updateOrRemoveElement(generatorWrapper, 16, optionalString(value), \"\");\n  };\n  var setAdRequestParameter17 = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 17, value, parseInt32);\n  };\n  var setAdRequestParameter18 = function (generatorWrapper, value) {\n    return transformAndReplaceArray(generatorWrapper, 18, value, parseInt32);\n  };\n  var setAdRequestParameter19 = function (generatorWrapper, value) {\n    return Cf(generatorWrapper, 19, value);\n  };\n  AdManifestVersion.findGlobalObject = [12, 13, 14, 17, 18, 19];\n  var AdResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var baseCharCode = \"a\".charCodeAt();\n  var vendorIds = valuesOfObject({\n    Vh: 0,\n    Uh: 1,\n    getDomHelper: 2,\n    dashCaseFromCamel: 3,\n    getElementByIdOrDirect: 4,\n    capitalizeFirstLetter: 5,\n    attributeMappings: 6,\n    DocumentHelper: 7,\n    getDocument: 8,\n    camelCaseFromDash: 9,\n    parseInteger: 10,\n    setElementAttributes: 11\n  });\n  var purposeIds = valuesOfObject({\n    getDocumentScrollCoordinate: 0,\n    createElement: 1,\n    getViewportSize: 2\n  });\n  var BitStringReader = function (generatorWrapper) {\n    if (/[^01]/.test(generatorWrapper)) {\n      throw Error(\"Input bitstring \" + generatorWrapper + \" is malformed!\");\n    }\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = 0;\n  };\n  var decodePurposeRestrictions = function (generatorWrapper) {\n    generatorWrapper = readBits(generatorWrapper, 36);\n    var value = new AdManifest();\n    value = setAdPropertyFromString(value, 1, Math.floorRectangle(generatorWrapper / 10));\n    return modifyAdProperty(value, 2, generatorWrapper % 10 * 100000000);\n  };\n  var decodeVendor = function (generatorWrapper) {\n    return String.fromCharCode(baseCharCode + readBits(generatorWrapper, 6)) + String.fromCharCode(baseCharCode + readBits(generatorWrapper, 6));\n  };\n  var decodeVendorList = function (generatorWrapper) {\n    var value = readBits(generatorWrapper, 16);\n    if (!!readBits(generatorWrapper, 1) === true) {\n      generatorWrapper = decodeRange(generatorWrapper);\n      generatorWrapper.forEach(function (CustomMap) {\n        if (CustomMap > value) {\n          throw Error(\"ID \" + CustomMap + \" is past MaxVendorId \" + value + \"!\");\n        }\n      });\n      return generatorWrapper;\n    } else {\n      return decodeSingleVendor(generatorWrapper, value);\n    }\n  };\n  var decodeVendorConsent = function (generatorWrapper) {\n    for (var value = [], CustomMap = readBits(generatorWrapper, 12); CustomMap--;) {\n      var findEntry = readBits(generatorWrapper, 6);\n      var iterateEntries = readBits(generatorWrapper, 2);\n      var createCircularNode = decodeRange(generatorWrapper);\n      var entryIdCounter = value;\n      var key = entryIdCounter.push;\n      var value = new AdExtension();\n      findEntry = updateOrRemoveElement(value, 1, parseNullableIntEnum(findEntry), 0);\n      iterateEntries = updateOrRemoveElement(findEntry, 2, parseNullableIntEnum(iterateEntries), 0);\n      createCircularNode = transformAndReplaceArray(iterateEntries, 3, createCircularNode, parseInt32);\n      key.call(entryIdCounter, createCircularNode);\n    }\n    return value;\n  };\n  var decodeRange = function (generatorWrapper) {\n    for (var value = readBits(generatorWrapper, 12), CustomMap = []; value--;) {\n      var findEntry = !!readBits(generatorWrapper, 1) === true;\n      var iterateEntries = readBits(generatorWrapper, 16);\n      if (findEntry) {\n        for (findEntry = readBits(generatorWrapper, 16); iterateEntries <= findEntry; iterateEntries++) {\n          CustomMap.push(iterateEntries);\n        }\n      } else {\n        CustomMap.push(iterateEntries);\n      }\n    }\n    CustomMap.sort(function (createCircularNode, entryIdCounter) {\n      return createCircularNode - entryIdCounter;\n    });\n    return CustomMap;\n  };\n  var decodeSingleVendor = function (generatorWrapper, value, CustomMap) {\n    for (var findEntry = [], iterateEntries = 0; iterateEntries < value; iterateEntries++) {\n      if (readBits(generatorWrapper, 1)) {\n        var createCircularNode = iterateEntries + 1;\n        if (CustomMap && -1 === CustomMap.indexOf(createCircularNode)) {\n          throw Error(\"ID: \" + createCircularNode + \" is outside of allowed values!\");\n        }\n        findEntry.push(createCircularNode);\n      }\n    }\n    return findEntry;\n  };\n  var readBits = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter + value > generatorWrapper.tasks.length) {\n      throw Error(\"Requested length \" + value + \" is past end of string.\");\n    }\n    var CustomMap = generatorWrapper.tasks.substring(generatorWrapper.entryIdCounter, generatorWrapper.entryIdCounter + value);\n    generatorWrapper.entryIdCounter += value;\n    return parseInt(CustomMap, 2);\n  };\n  BitStringReader.prototype.skip = function (generatorWrapper) {\n    this.entryIdCounter += generatorWrapper;\n  };\n  var decodeAdBreak = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (createCircularNode) {\n        return createCircularNode.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      var CustomMap = new BitStringReader(value);\n      if (readBits(CustomMap, 3) !== 3) {\n        return null;\n      }\n      var findEntry = setAdExtensionValue(setAdExtensionParam(new AdExtensionParameters(), decodeSingleVendor(CustomMap, 24, vendorIds)), decodeSingleVendor(CustomMap, 24, vendorIds));\n      var iterateEntries = readBits(CustomMap, 6);\n      if (iterateEntries !== 0) {\n        finalizeAdExtension(setAdExtensionOption(findEntry, decodeSingleVendor(CustomMap, iterateEntries)), decodeSingleVendor(CustomMap, iterateEntries));\n      }\n      return findEntry;\n    } catch (createCircularNode) {\n      return null;\n    }\n  };\n  var decodeAdRequest = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (findEntry) {\n        return findEntry.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      var CustomMap = new BitStringReader(value);\n      return setAdRequestParameter19(setAdRequestParameter18(setAdRequestParameter17(setAdRequestParameter16(setAdRequestParameter15(setAdManifestLinear(setAdManifestWrapper(setAdManifestCreativeType(enableAdManifestVPAID(enableAdManifestSkippable(setAdManifestDuration(setAdManifestAdPolicy(setAdManifestFallbackIndex(setAdManifestAdBreakId(setAdManifestSequence(setAdManifestId(addAdManifestTemplate(addAdManifestExtension(setAdManifestVersion(new AdManifestVersion(), readBits(CustomMap, 6)), decodePurposeRestrictions(CustomMap)), decodePurposeRestrictions(CustomMap)), readBits(CustomMap, 12)), readBits(CustomMap, 12)), readBits(CustomMap, 6)), decodeVendor(CustomMap)), readBits(CustomMap, 12)), readBits(CustomMap, 6)), !!readBits(CustomMap, 1)), !!readBits(CustomMap, 1)), decodeSingleVendor(CustomMap, 12, purposeIds)), decodeSingleVendor(CustomMap, 24, vendorIds)), decodeSingleVendor(CustomMap, 24, vendorIds)), !!readBits(CustomMap, 1)), decodeVendor(CustomMap)), decodeVendorList(CustomMap)), decodeVendorList(CustomMap)), decodeVendorConsent(CustomMap));\n    } catch (findEntry) {\n      return null;\n    }\n  };\n  var decodeAdResponse = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return null;\n    }\n    var value = generatorWrapper.split(\".\");\n    if (value.length > 4) {\n      return null;\n    }\n    generatorWrapper = decodeAdRequest(value[0]);\n    if (!generatorWrapper) {\n      return null;\n    }\n    var CustomMap = new AdResponse();\n    generatorWrapper = finalizeAdAttributes(CustomMap, 1, generatorWrapper);\n    value.shift();\n    value = getIterator(value);\n    for (CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n      CustomMap = CustomMap.value;\n      switch (getAdResponseType(CustomMap)) {\n        case 1:\n        case 2:\n          break;\n        case 3:\n          CustomMap = decodeAdBreak(CustomMap);\n          if (!CustomMap) {\n            return null;\n          }\n          finalizeAdAttributes(generatorWrapper, 2, CustomMap);\n          break;\n        default:\n          return null;\n      }\n    }\n    return generatorWrapper;\n  };\n  var getAdResponseType = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (CustomMap) {\n        return CustomMap.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      return readBits(new BitStringReader(value), 3);\n    } catch (CustomMap) {\n      return -1;\n    }\n  };\n  var generateAdResponseMap = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (Array.isArray(value) && value.length !== 0) {\n      value = getIterator(value);\n      for (var findEntry = value.next(); !findEntry.done; findEntry = value.next()) {\n        findEntry = findEntry.value;\n        CustomMap[findEntry] = -1 !== generatorWrapper.indexOf(findEntry);\n      }\n    } else {\n      generatorWrapper = getIterator(generatorWrapper);\n      for (value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n        CustomMap[value.value] = true;\n      }\n    }\n    delete CustomMap[0];\n    return CustomMap;\n  };\n  var DefaultValueContainer = function (generatorWrapper) {\n    var value = undefined === value ? [] : value;\n    this.entryIdCounter",
  "ance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var baseCharCode = \"a\".charCodeAt();\n  var vendorIds = valuesOfObject({\n    Vh: 0,\n    Uh: 1,\n    getDomHelper: 2,\n    dashCaseFromCamel: 3,\n    getElementByIdOrDirect: 4,\n    capitalizeFirstLetter: 5,\n    attributeMappings: 6,\n    DocumentHelper: 7,\n    getDocument: 8,\n    camelCaseFromDash: 9,\n    parseInteger: 10,\n    setElementAttributes: 11\n  });\n  var purposeIds = valuesOfObject({\n    getDocumentScrollCoordinate: 0,\n    createElement: 1,\n    getViewportSize: 2\n  });\n  var BitStringReader = function (generatorWrapper) {\n    if (/[^01]/.test(generatorWrapper)) {\n      throw Error(\"Input bitstring \" + generatorWrapper + \" is malformed!\");\n    }\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = 0;\n  };\n  var decodePurposeRestrictions = function (generatorWrapper) {\n    generatorWrapper = readBits(generatorWrapper, 36);\n    var value = new AdManifest();\n    value = setAdPropertyFromString(value, 1, Math.floorRectangle(generatorWrapper / 10));\n    return modifyAdProperty(value, 2, generatorWrapper % 10 * 100000000);\n  };\n  var decodeVendor = function (generatorWrapper) {\n    return String.fromCharCode(baseCharCode + readBits(generatorWrapper, 6)) + String.fromCharCode(baseCharCode + readBits(generatorWrapper, 6));\n  };\n  var decodeVendorList = function (generatorWrapper) {\n    var value = readBits(generatorWrapper, 16);\n    if (!!readBits(generatorWrapper, 1) === true) {\n      generatorWrapper = decodeRange(generatorWrapper);\n      generatorWrapper.forEach(function (CustomMap) {\n        if (CustomMap > value) {\n          throw Error(\"ID \" + CustomMap + \" is past MaxVendorId \" + value + \"!\");\n        }\n      });\n      return generatorWrapper;\n    } else {\n      return decodeSingleVendor(generatorWrapper, value);\n    }\n  };\n  var decodeVendorConsent = function (generatorWrapper) {\n    for (var value = [], CustomMap = readBits(generatorWrapper, 12); CustomMap--;) {\n      var findEntry = readBits(generatorWrapper, 6);\n      var iterateEntries = readBits(generatorWrapper, 2);\n      var createCircularNode = decodeRange(generatorWrapper);\n      var entryIdCounter = value;\n      var key = entryIdCounter.push;\n      var value = new AdExtension();\n      findEntry = updateOrRemoveElement(value, 1, parseNullableIntEnum(findEntry), 0);\n      iterateEntries = updateOrRemoveElement(findEntry, 2, parseNullableIntEnum(iterateEntries), 0);\n      createCircularNode = transformAndReplaceArray(iterateEntries, 3, createCircularNode, parseInt32);\n      key.call(entryIdCounter, createCircularNode);\n    }\n    return value;\n  };\n  var decodeRange = function (generatorWrapper) {\n    for (var value = readBits(generatorWrapper, 12), CustomMap = []; value--;) {\n      var findEntry = !!readBits(generatorWrapper, 1) === true;\n      var iterateEntries = readBits(generatorWrapper, 16);\n      if (findEntry) {\n        for (findEntry = readBits(generatorWrapper, 16); iterateEntries <= findEntry; iterateEntries++) {\n          CustomMap.push(iterateEntries);\n        }\n      } else {\n        CustomMap.push(iterateEntries);\n      }\n    }\n    CustomMap.sort(function (createCircularNode, entryIdCounter) {\n      return createCircularNode - entryIdCounter;\n    });\n    return CustomMap;\n  };\n  var decodeSingleVendor = function (generatorWrapper, value, CustomMap) {\n    for (var findEntry = [], iterateEntries = 0; iterateEntries < value; iterateEntries++) {\n      if (readBits(generatorWrapper, 1)) {\n        var createCircularNode = iterateEntries + 1;\n        if (CustomMap && -1 === CustomMap.indexOf(createCircularNode)) {\n          throw Error(\"ID: \" + createCircularNode + \" is outside of allowed values!\");\n        }\n        findEntry.push(createCircularNode);\n      }\n    }\n    return findEntry;\n  };\n  var readBits = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter + value > generatorWrapper.tasks.length) {\n      throw Error(\"Requested length \" + value + \" is past end of string.\");\n    }\n    var CustomMap = generatorWrapper.tasks.substring(generatorWrapper.entryIdCounter, generatorWrapper.entryIdCounter + value);\n    generatorWrapper.entryIdCounter += value;\n    return parseInt(CustomMap, 2);\n  };\n  BitStringReader.prototype.skip = function (generatorWrapper) {\n    this.entryIdCounter += generatorWrapper;\n  };\n  var decodeAdBreak = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (createCircularNode) {\n        return createCircularNode.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      var CustomMap = new BitStringReader(value);\n      if (readBits(CustomMap, 3) !== 3) {\n        return null;\n      }\n      var findEntry = setAdExtensionValue(setAdExtensionParam(new AdExtensionParameters(), decodeSingleVendor(CustomMap, 24, vendorIds)), decodeSingleVendor(CustomMap, 24, vendorIds));\n      var iterateEntries = readBits(CustomMap, 6);\n      if (iterateEntries !== 0) {\n        finalizeAdExtension(setAdExtensionOption(findEntry, decodeSingleVendor(CustomMap, iterateEntries)), decodeSingleVendor(CustomMap, iterateEntries));\n      }\n      return findEntry;\n    } catch (createCircularNode) {\n      return null;\n    }\n  };\n  var decodeAdRequest = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (findEntry) {\n        return findEntry.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      var CustomMap = new BitStringReader(value);\n      return setAdRequestParameter19(setAdRequestParameter18(setAdRequestParameter17(setAdRequestParameter16(setAdRequestParameter15(setAdManifestLinear(setAdManifestWrapper(setAdManifestCreativeType(enableAdManifestVPAID(enableAdManifestSkippable(setAdManifestDuration(setAdManifestAdPolicy(setAdManifestFallbackIndex(setAdManifestAdBreakId(setAdManifestSequence(setAdManifestId(addAdManifestTemplate(addAdManifestExtension(setAdManifestVersion(new AdManifestVersion(), readBits(CustomMap, 6)), decodePurposeRestrictions(CustomMap)), decodePurposeRestrictions(CustomMap)), readBits(CustomMap, 12)), readBits(CustomMap, 12)), readBits(CustomMap, 6)), decodeVendor(CustomMap)), readBits(CustomMap, 12)), readBits(CustomMap, 6)), !!readBits(CustomMap, 1)), !!readBits(CustomMap, 1)), decodeSingleVendor(CustomMap, 12, purposeIds)), decodeSingleVendor(CustomMap, 24, vendorIds)), decodeSingleVendor(CustomMap, 24, vendorIds)), !!readBits(CustomMap, 1)), decodeVendor(CustomMap)), decodeVendorList(CustomMap)), decodeVendorList(CustomMap)), decodeVendorConsent(CustomMap));\n    } catch (findEntry) {\n      return null;\n    }\n  };\n  var decodeAdResponse = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return null;\n    }\n    var value = generatorWrapper.split(\".\");\n    if (value.length > 4) {\n      return null;\n    }\n    generatorWrapper = decodeAdRequest(value[0]);\n    if (!generatorWrapper) {\n      return null;\n    }\n    var CustomMap = new AdResponse();\n    generatorWrapper = finalizeAdAttributes(CustomMap, 1, generatorWrapper);\n    value.shift();\n    value = getIterator(value);\n    for (CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n      CustomMap = CustomMap.value;\n      switch (getAdResponseType(CustomMap)) {\n        case 1:\n        case 2:\n          break;\n        case 3:\n          CustomMap = decodeAdBreak(CustomMap);\n          if (!CustomMap) {\n            return null;\n          }\n          finalizeAdAttributes(generatorWrapper, 2, CustomMap);\n          break;\n        default:\n          return null;\n      }\n    }\n    return generatorWrapper;\n  };\n  var getAdResponseType = function (generatorWrapper) {\n    try {\n      var value = getBase64EncodedArray(generatorWrapper).map(function (CustomMap) {\n        return CustomMap.toString(2).padStart(8, \"0\");\n      }).join(\"\");\n      return readBits(new BitStringReader(value), 3);\n    } catch (CustomMap) {\n      return -1;\n    }\n  };\n  var generateAdResponseMap = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (Array.isArray(value) && value.length !== 0) {\n      value = getIterator(value);\n      for (var findEntry = value.next(); !findEntry.done; findEntry = value.next()) {\n        findEntry = findEntry.value;\n        CustomMap[findEntry] = -1 !== generatorWrapper.indexOf(findEntry);\n      }\n    } else {\n      generatorWrapper = getIterator(generatorWrapper);\n      for (value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n        CustomMap[value.value] = true;\n      }\n    }\n    delete CustomMap[0];\n    return CustomMap;\n  };\n  var DefaultValueContainer = function (generatorWrapper) {\n    var value = undefined === value ? [] : value;\n    this.entryIdCounter = generatorWrapper;\n    this.defaultValue = value;\n  };\n  var defaultNumericValueWrapper = new function (generatorWrapper, value) {\n    this.entryIdCounter = generatorWrapper;\n    if (undefined === value) {\n      this.defaultValue = 0;\n    } else {\n      this.defaultValue = value;\n    }\n  }(494575051);\n  var numericValueWrapperOne = new DefaultValueContainer(489560439);\n  var numericValueWrapperTwo = new DefaultValueContainer(505762507);\n  var CustomClass = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(CustomClass, AdElement);\n  var createCustomClassInstance = function (generatorWrapper) {\n    var value = new CustomClass();\n    replaceArrayIfNotArray(value, 1, parseIntEnum, generatorWrapper);\n  };\n  CustomClass.findGlobalObject = [1];\n  var urlSchemeRegex = /^((market|itms|intent|itms-appss):\\/\\/)/i;\n  var adAttributesList = \"ad_type vpos mridx pos vad_type videoad_start_delay\".split(\" \");\n  var AdDimensions = function (generatorWrapper) {\n    var value = generatorWrapper.identityFunction;\n    var CustomMap = generatorWrapper.height;\n    var findEntry = generatorWrapper.width;\n    var iterateEntries = undefined === generatorWrapper.generatorReturn ? false : generatorWrapper.generatorReturn;\n    this.compareVersions = generatorWrapper.compareVersions;\n    this.identityFunction = value;\n    this.height = CustomMap;\n    this.width = findEntry;\n    this.generatorReturn = iterateEntries;\n  };\n  AdDimensions.prototype.getRectangleHeight = function () {\n    return this.height;\n  };\n  AdDimensions.prototype.getRectangleWidth = function () {\n    return this.width;\n  };\n  var ExtendedAdDimensions = function (generatorWrapper) {\n    var value = generatorWrapper.trustedURLMarker;\n    var CustomMap = generatorWrapper.setAdProperty;\n    var findEntry = generatorWrapper.TrustedURL;\n    var iterateEntries = generatorWrapper.getNestedAdPropertyNumeric;\n    AdDimensions.call(this, {\n      compareVersions: generatorWrapper.compareVersions,\n      identityFunction: generatorWrapper.identityFunction,\n      height: generatorWrapper.height,\n      width: generatorWrapper.width,\n      generatorReturn: undefined === generatorWrapper.generatorReturn ? false : generatorWrapper.generatorReturn\n    });\n    this.createDeferred = value;\n    this.tasks = CustomMap;\n    this.setTimeoutWrapper = findEntry;\n    this.entryIdCounter = iterateEntries;\n  };\n  inheritPrototype(ExtendedAdDimensions, AdDimensions);\n  var MediaAdDimensions = function (generatorWrapper) {\n    var value = generatorWrapper.enumTransformation;\n    AdDimensions.call(this, {\n      compareVersions: generatorWrapper.compareVersions,\n      identityFunction: generatorWrapper.identityFunction,\n      height: generatorWrapper.height,\n      width: generatorWrapper.width,\n      generatorReturn: undefined === generatorWrapper.generatorReturn ? false : generatorWrapper.generatorReturn\n    });\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(MediaAdDimensions, AdDimensions);\n  MediaAdDimensions.prototype.getMediaUrl = function () {\n    return this.entryIdCounter;\n  };\n  function createInstanceWithArguments(generatorWrapper) {\n    return new (Function.prototype.bind.apply(generatorWrapper, [null].concat(toArray(sliceArguments.apply(1, arguments)))))();\n  }\n  var MessageHandler = function (generatorWrapper, value, CustomMap, findEntry) {\n    tryCall.call(this);\n    this.handleThenable = value;\n    this.dispatchUnhandledRejection = CustomMap;\n    this.onFulfilled = findEntry;\n    this.handleAsync = new Map();\n    this.resolvePromise = 0;\n    this.createDeferred = new Map();\n    this.isDone = new Map();\n    this.setTimeoutWrapper = undefined;\n    this.tasks = generatorWrapper;\n  };\n  inheritPrototype(MessageHandler, tryCall);\n  MessageHandler.prototype.getAdEnvironment = function () {\n    delete this.entryIdCounter;\n    this.handleAsync.clearAll();\n    this.createDeferred.clearAll();\n    this.isDone.clearAll();\n    if (this.setTimeoutWrapper) {\n      removeEventListenerWithNormalization(this.tasks, \"message\", this.setTimeoutWrapper);\n      delete this.setTimeoutWrapper;\n    }\n    delete this.tasks;\n    delete this.onFulfilled;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var getEffectiveMessageTarget = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      return generatorWrapper.entryIdCounter;\n    }\n    if (generatorWrapper.dispatchUnhandledRejection && generatorWrapper.dispatchUnhandledRejection(generatorWrapper.tasks)) {\n      generatorWrapper.entryIdCounter = generatorWrapper.tasks;\n    } else {\n      generatorWrapper.entryIdCounter = findFrameByName(generatorWrapper.tasks, generatorWrapper.handleThenable);\n    }\n    var value;\n    if ((value = generatorWrapper.entryIdCounter) != null) {\n      return value;\n    } else {\n      return null;\n    }\n  };\n  var invokeCallerMethod = function (generatorWrapper, value, CustomMap) {\n    if (getEffectiveMessageTarget(generatorWrapper)) {\n      if (generatorWrapper.entryIdCounter === generatorWrapper.tasks) {\n        if (value = generatorWrapper.handleAsync.get(value)) {\n          value(generatorWrapper.entryIdCounter, CustomMap);\n        }\n      } else {\n        var findEntry = generatorWrapper.createDeferred.get(value);\n        if (findEntry && findEntry.defaultSort) {\n          setupMessageListener(generatorWrapper);\n          var iterateEntries = ++generatorWrapper.resolvePromise;\n          generatorWrapper.isDone.set(iterateEntries, {\n            forEachElement: findEntry.forEachElement,\n            serializeData: findEntry.supportsBigInt(CustomMap),\n            clearFunction: value === \"addEventListener\"\n          });\n          generatorWrapper.entryIdCounter.sendPostMessage(findEntry.defaultSort(CustomMap, iterateEntries), \"*\");\n        }\n      }\n    }\n  };\n  var setupMessageListener = function (generatorWrapper) {\n    if (!generatorWrapper.setTimeoutWrapper) {\n      generatorWrapper.setTimeoutWrapper = function (value) {\n        try {\n          var CustomMap = generatorWrapper.onFulfilled ? generatorWrapper.onFulfilled(value) : undefined;\n          if (CustomMap) {\n            var findEntry = CustomMap.singletonInstance;\n            var iterateEntries = generatorWrapper.isDone.get(findEntry);\n            if (iterateEntries) {\n              if (!iterateEntries.clearFunction) {\n                generatorWrapper.isDone.delete(findEntry);\n              }\n              var createCircularNode;\n              if (!((createCircularNode = iterateEntries.forEachElement) == null)) {\n                createCircularNode.call(iterateEntries, iterateEntries.serializeData, CustomMap.payload);\n              }\n            }\n          }\n        } catch (entryIdCounter) {}\n      };\n      addEventListenerWithNormalization(generatorWrapper.tasks, \"message\", generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var addEventListenerWrapper = function (generatorWrapper, value) {\n    value = value.listener;\n    if (generatorWrapper = (0, generatorWrapper.__gpp)(\"addEventListener\", value)) {\n      value(generatorWrapper, true);\n    }\n  };\n  var removeEventListenerWrapper = function (generatorWrapper, value) {\n    (0, generatorWrapper.__gpp)(\"removeEventListener\", value.listener, value.listenerId);\n  };\n  var getDataWithCallbackWrapper = function (generatorWrapper, value) {\n    (0, generatorWrapper.__gpp)(\"getSection\", function (CustomMap) {\n      value.resetGeneratorState({\n        supportsHtml5: CustomMap != null ? CustomMap : undefined,\n        isAndroidNonChrome: CustomMap ? undefined : 4\n      });\n    }, value.apiPrefix);\n  };\n  var addEventListenerCommand = {\n    supportsBigInt(generatorWrapper) {\n      return generatorWrapper.listener;\n    },\n    defaultSort(generatorWrapper, value) {\n      generatorWrapper = {};\n      generatorWrapper.__gppCall = {\n        callId: value,\n        command: \"addEventListener\",\n        version: \"1.1\"\n      };\n      return generatorWrapper;\n    },\n    forEachElement(generatorWrapper, value) {\n      value = value.__gppReturn;\n      generatorWrapper(value.returnValue, value.success);\n    }\n  };\n  var removeEventListenerCommand = {\n    supportsBigInt(generatorWrapper) {\n      return generatorWrapper.listener;\n    },\n    defaultSort(generatorWrapper, value) {\n      var CustomMap = {};\n      CustomMap.__gppCall = {\n        callId: value,\n        command: \"removeEventListener\",\n        version: \"1.1\",\n        parameter: generatorWrapper.listenerId\n      };\n      return CustomMap;\n    },\n    forEachElement(generatorWrapper, value) {\n      value = value.__gppReturn;\n      var CustomMap = value.returnValue.data;\n      if (!(generatorWrapper == null)) {\n        generatorWrapper(CustomMap, value.success);\n      }\n    }\n  };\n  var getDataWithCallbackCommand = {\n    supportsBigInt(generatorWrapper) {\n      return generatorWrapper.resetGeneratorState;\n    },\n    defaultSort(generatorWrapper, value) {\n      var CustomMap = {};\n      CustomMap.__gppCall = {\n        callId: value,\n        command: \"getSection\",\n        version: \"1.1\",\n        parameter: generatorWrapper.apiPrefix\n      };\n      return CustomMap;\n    },\n    forEachElement(generatorWrapper, value) {\n      value = value.__gppReturn;\n      var CustomMap;\n      generatorWrapper({\n        supportsHtml5: (CustomMap = value.returnValue) != null ? CustomMap : undefined,\n        isAndroidNonChrome: value.success ? undefined : 2\n      });\n    }\n  };\n  function parseMessagePayload(generatorWrapper) {\n    var value = {};\n    if (typeof generatorWrapper.data === \"string\") {\n      value = JSON.parse(generatorWrapper.data);\n    } else {\n      value = generatorWrapper.data;\n    }\n    return {\n      payload: value,\n      singletonInstance: value.__gppReturn.callId\n    };\n  }\n  var SignalStatusManager = function (generatorWrapper, value) {\n    var CustomMap = undefined === value ? {} : value;\n    value = CustomMap.timeoutMs;\n    CustomMap = CustomMap.allowEmptyApplicableSection;\n    tryCall.call(this);\n    this.caller = new MessageHandler(generatorWrapper, \"__gppLocator\", function (findEntry) {\n      return typeof findEntry.__gpp === \"function\";\n    }, parseMessagePayload);\n    this.caller.handleAsync.set(\"addEventListener\", addEventListenerWrapper);\n    this.caller.createDeferred.set(\"addEventListener\", addEventListenerCommand);\n    this.caller.handleAsync.set(\"removeEventListener\", removeEventListenerWrapper);\n    this.caller.createDeferred.set(\"removeEventListener\", removeEventListenerCommand);\n    this.caller.handleAsync.set(\"getDataWithCallback\", getDataWithCallbackWrapper);\n    this.caller.createDeferred.set(\"getDataWithCallback\", getDataWithCallbackCommand);\n    if (value != null) {\n      this.timeoutMs = value;\n    } else {\n      this.timeoutMs = 500;\n    }\n    this.allowEmptyApplicableSection = CustomMap;\n  };\n  inheritPrototype(SignalStatusManager, tryCall);\n  SignalStatusManager.prototype.getAdEnvironment = function () {\n    this.caller.markAsCompleted();\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  SignalStatusManager.prototype.addEventListener = function (generatorWrapper) {\n    var value = this;\n    var CustomMap = clearFunction(function () {\n      generatorWrapper(signalStatusReadyErrorListenerTimeout, true);\n    });\n    var findEntry = -1 === this.timeoutMs ? undefined : setTimeout(function () {\n      CustomMap();\n    }, this.timeoutMs);\n    invokeCallerMethod(this.caller, \"addEventListener\", {\n      listener(iterateEntries, createCircularNode) {\n        clearTimeout(findEntry);\n        try {\n          var entryIdCounter;\n          if (undefined === ((entryIdCounter = iterateEntries.pingData) == null ? undefined : entryIdCounter.gppVersion) || iterateEntries.pingData.gppVersion === \"1\" || iterateEntries.pingData.gppVersion === \"1.0\") {\n            value.removeEventListener(iterateEntries.listenerId);\n            var key = {\n              eventName: \"signalStatus\",\n              data: \"ready\",\n              pingData: {\n                internalErrorState: 1,\n                gppString: \"GPP_ERROR_STRING_IS_DEPRECATED_SPEC\",\n                applicableSections: [-1]\n              }\n            };\n          } else if (!Array.isArray(iterateEntries.pingData.applicableSections) || iterateEntries.pingData.applicableSections.length === 0 && !value.allowEmptyApplicableSection) {\n            value.removeEventListener(iterateEntries.listenerId);\n            key = {\n              eventName: \"signalStatus\",\n              data: \"ready\",\n              pingData: {\n                internalErrorState: 2,\n                gppString: \"GPP_ERROR_STRING_EXPECTED_APPLICATION_SECTION_ARRAY\",\n                applicableSections: [-1]\n              }\n            };\n          } else {\n            key = iterateEntries;\n          }\n          generatorWrapper(key, createCircularNode);\n        } catch (value) {\n          if (iterateEntries == null ? 0 : iterateEntries.listenerId) {\n            try {\n              value.removeEventListener(iterateEntries.listenerId);\n            } catch (entry) {\n              generatorWrapper(signalStatusReadyErrorRemoveListener, true);\n              return;\n            }\n          }\n          generatorWrapper(signalStatusReadyErrorUnavailable, true);\n        }\n      }\n    });\n  };\n  SignalStatusManager.prototype.removeEventListener = function (generatorWrapper) {\n    invokeCallerMethod(this.caller, \"removeEventListener\", {\n      listener() {},\n      listenerId: generatorWrapper\n    });\n  };\n  var signalStatusReadyErrorUnavailable = {\n    eventName: \"signalStatus\",\n    data: \"ready\",\n    pingData: {\n      internalErrorState: 2,\n      gppString: \"GPP_ERROR_STRING_UNAVAILABLE\",\n      applicableSections: [-1]\n    },\n    listenerId: -1\n  };\n  var signalStatusReadyErrorListenerTimeout = {\n    eventName: \"signalStatus\",\n    data: \"ready\",\n    pingData: {\n      gppString: \"GPP_ERROR_STRING_LISTENER_REGISTRATION_TIMEOUT\",\n      internalErrorState: 2,\n      applicableSections: [-1]\n    },\n    listenerId: -1\n  };\n  var signalStatusReadyErrorRemoveListener = {\n    eventName: \"signalStatus\",\n    data: \"ready\",\n    pingData: {\n      gppString: \"GPP_ERROR_STRING_REMOVE_EVENT_LISTENER_ERROR\",\n      internalErrorState: 2,\n      applicableSections: [-1]\n    },\n    listenerId: -1\n  };\n  var validateSignalData = function (generatorWrapper) {\n    if (undefined !== generatorWrapper.addtlConsent && typeof generatorWrapper.addtlConsent !== \"string\") {\n      generatorWrapper.addtlConsent = undefined;\n    }\n    if (undefined !== generatorWrapper.gdprApplies && typeof generatorWrapper.gdprApplies !== \"boolean\") {\n      generatorWrapper.gdprApplies = undefined;\n    }\n    if (undefined !== generatorWrapper.tcString && typeof generatorWrapper.tcString !== \"string\" || undefined !== generatorWrapper.listenerId && typeof generatorWrapper.listenerId !== \"number\") {\n      return 2;\n    } else {\n      if (generatorWrapper.cmpStatus && generatorWrapper.cmpStatus !== \"error\") {\n        return 0;\n      } else {\n        return 3;\n      }\n    }\n  };\n  var ConsentStatusManager = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    tryCall.call(this);\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = null;\n    this.isDone = {};\n    this.onFulfilled = 0;\n    var CustomMap;\n    if ((CustomMap = value.timeoutMs) != null) {\n      this.createDeferred = CustomMap;\n    } else {\n      this.createDeferred = 500;\n    }\n    var findEntry;\n    if ((findEntry = value.getEarliestDomLoadingOrInteractiveTime) != null) {\n      this.handleAsync = findEntry;\n    } else {\n      this.handleAsync = false;\n    }\n    this.setTimeoutWrapper = null;\n  };\n  inheritPrototype(ConsentStatusManager, tryCall);\n  ConsentStatusManager.prototype.getAdEnvironment = function () {\n    this.isDone = {};\n    if (this.setTimeoutWrapper) {\n      removeEventListenerWithNormalization(this.tasks, \"message\", this.setTimeoutWrapper);\n      delete this.setTimeoutWrapper;\n    }\n    delete this.isDone;\n    delete this.tasks;\n    delete this.entryIdCounter;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var isTcfApiFunctionAvailable = function (generatorWrapper) {\n    return typeof generatorWrapper.tasks.__tcfapi === \"function\" || createElementWithAttributes(generatorWrapper) != null;\n  };\n  var waitForConsentWithTimeout = function (generatorWrapper, value) {\n    var CustomMap = {\n      internalErrorState: 0,\n      internalBlockOnErrors: generatorWrapper.handleAsync\n    };\n    var findEntry = clearFunction(function () {\n      return value(CustomMap);\n    });\n    var iterateEntries = 0;\n    if (-1 !== generatorWrapper.createDeferred) {\n      iterateEntries = setTimeout(function () {\n        iterateEntries = 0;\n        CustomMap.tcString = \"tcunavailable\";\n        CustomMap.internalErrorState = 1;\n        findEntry();\n      }, generatorWrapper.createDeferred);\n    }\n    invokeTcfApi(generatorWrapper, \"addEventListener\", function (createCircularNode) {\n      if (createCircularNode) {\n        CustomMap = createCircularNode;\n        CustomMap.internalErrorState = validateSignalData(CustomMap);\n        CustomMap.internalBlockOnErrors = generatorWrapper.handleAsync;\n        if (isGdprConsentGiven(CustomMap)) {\n          if (CustomMap.internalErrorState != 0) {\n            CustomMap.tcString = \"tcunavailable\";\n          }\n          invokeTcfApi(generatorWrapper, \"removeEventListener\", null, CustomMap.listenerId);\n          if (createCircularNode = iterateEntries) {\n            clearTimeout(createCircularNode);\n          }\n          findEntry();\n        } else if ((CustomMap.cmpStatus === \"error\" || CustomMap.internalErrorState !== 0) && (createCircularNode = iterateEntries)) {\n          clearTimeout(createCircularNode);\n        }\n      }\n    });\n  };\n  ConsentStatusManager.prototype.addEventListener = function (generatorWrapper) {\n    var value = this;\n    var CustomMap = {\n      internalBlockOnErrors: this.handleAsync\n    };\n    var findEntry = clearFunction(function () {\n      return generatorWrapper(CustomMap);\n    });\n    var iterateEntries = 0;\n    if (-1 !== this.createDeferred) {\n      iterateEntries = setTimeout(function () {\n        CustomMap.tcString = \"tcunavailable\";\n        CustomMap.internalErrorState = 1;\n        findEntry();\n      }, this.createDeferred);\n    }\n    var createCircularNode = function (entryIdCounter, key) {\n      clearTimeout(iterateEntries);\n      if (entryIdCounter) {\n        CustomMap = entryIdCounter;\n        CustomMap.internalErrorState = validateSignalData(CustomMap);\n        CustomMap.internalBlockOnErrors = value.handleAsync;\n        if (!(key && CustomMap.internalErrorState === 0)) {\n          CustomMap.tcString = \"tcunavailable\";\n          if (!key) {\n            CustomMap.internalErrorState = 3;\n          }\n        }\n      } else {\n        CustomMap.tcString = \"tcunavailable\";\n        CustomMap.internalErrorState = 3;\n      }\n      generatorWrapper(CustomMap);\n    };\n    try {\n      invokeTcfApi(this, \"addEventListener\", createCircularNode);\n    } catch (entryIdCounter) {\n      CustomMap.tcString = \"tcunavailable\";\n      CustomMap.internalErrorState = 3;\n      if (iterateEntries) {\n        clearTimeout(iterateEntries);\n        iterateEntries = 0;\n      }\n      findEntry();\n    }\n  };\n  ConsentStatusManager.prototype.removeEventListener = function (generatorWrapper) {\n    if (generatorWrapper && generatorWrapper.listenerId) {\n      invokeTcfApi(this, \"removeEventListener\", null, generatorWrapper.listenerId);\n    }\n  };\n  var checkPublisherRestrictions = function (generatorWrapper, value, CustomMap) {\n    var findEntry = undefined === findEntry ? \"755\" : findEntry;\n    generatorWrapper: {\n      if (generatorWrapper.publisher && generatorWrapper.publisher.restrictions) {\n        var iterateEntries = generatorWrapper.publisher.restrictions[value];\n        if (undefined !== iterateEntries) {\n          iterateEntries = iterateEntries[undefined === findEntry ? \"755\" : findEntry];\n          break generatorWrapper;\n        }\n      }\n      iterateEntries = undefined;\n    }\n    if (iterateEntries === 0) {\n      return false;\n    }\n    var createCircularNode = CustomMap;\n    if (CustomMap === 2) {\n      createCircularNode = 0;\n      if (iterateEntries === 2) {\n        createCircularNode = 1;\n      }\n    } else if (CustomMap === 3) {\n      createCircularNode = 1;\n      if (iterateEntries === 1) {\n        createCircularNode = 0;\n      }\n    }\n    if (createCircularNode === 0) {\n      if (generatorWrapper.purpose && generatorWrapper.vendor) {\n        if ((CustomMap = checkConsentFor(generatorWrapper.vendor.consents, undefined === findEntry ? \"755\" : findEntry)) && value === \"1\" && generatorWrapper.purposeOneTreatment && generatorWrapper.publisherCC === \"CH\") {\n          generatorWrapper = true;\n        } else {\n          generatorWrapper = CustomMap && checkConsentFor(generatorWrapper.purpose.consents, value);\n        }\n      } else {\n        generatorWrapper = true;\n      }\n    } else if (createCircularNode === 1) {\n      if (generatorWrapper.purpose && generatorWrapper.vendor) {\n        generatorWrapper = checkConsentFor(generatorWrapper.purpose.legitimateInterests, value) && checkConsentFor(generatorWrapper.vendor.legitimateInterests, undefined === findEntry ? \"755\" : findEntry);\n      } else {\n        generatorWrapper = true;\n      }\n    } else {\n      generatorWrapper = true;\n    }\n    return generatorWrapper;\n  };\n  var checkConsentFor = function (generatorWrapper, value) {\n    return !(!generatorWrapper || !generatorWrapper[value]);\n  };\n  var invokeTcfApi = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!CustomMap) {\n      CustomMap = function () {};\n    }\n    if (typeof generatorWrapper.tasks.__tcfapi === \"function\") {\n      generatorWrapper = generatorWrapper.tasks.__tcfapi;\n      generatorWrapper(value, 2, CustomMap, findEntry);\n    } else if (createElementWithAttributes(generatorWrapper)) {\n      setupMessageEventListener(generatorWrapper);\n      var iterateEntries = ++generatorWrapper.onFulfilled;\n      generatorWrapper.isDone[iterateEntries] = CustomMap;\n      if (generatorWrapper.entryIdCounter) {\n        CustomMap = {};\n        generatorWrapper.entryIdCounter.sendPostMessage((CustomMap.__tcfapiCall = {\n          command: value,\n          version: 2,\n          callId: iterateEntries,\n          parameter: findEntry\n        }, CustomMap), \"*\");\n      }\n    } else {\n      CustomMap({}, false);\n    }\n  };\n  var createElementWithAttributes = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      return generatorWrapper.entryIdCounter;\n    }\n    generatorWrapper.entryIdCounter = findFrameByName(generatorWrapper.tasks, \"__tcfapiLocator\");\n    return generatorWrapper.entryIdCounter;\n  };\n  var setupMessageEventListener = function (generatorWrapper) {\n    if (!generatorWrapper.setTimeoutWrapper) {\n      generatorWrapper.setTimeoutWrapper = function (value) {\n        try {\n          var CustomMap = (typeof value.data === \"string\" ? JSON.parse(value.data) : value.data).__tcfapiReturn;\n          generatorWrapper.isDone[CustomMap.callId](CustomMap.returnValue, CustomMap.success);\n        } catch (findEntry) {}\n      };\n      addEventListenerWithNormalization(generatorWrapper.tasks, \"message\", generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var isGdprConsentGiven = function (generatorWrapper) {\n    if (generatorWrapper.gdprApplies === false) {\n      return true;\n    }\n    if (undefined === generatorWrapper.internalErrorState) {\n      generatorWrapper.internalErrorState = validateSignalData(generatorWrapper);\n    }\n    if (generatorWrapper.cmpStatus === \"error\" || generatorWrapper.internalErrorState !== 0) {\n      if (generatorWrapper.internalBlockOnErrors) {\n        sendBeaconWithParams({\n          iterateEntries: String(generatorWrapper.internalErrorState)\n        }, \"tcfe\");\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (generatorWrapper.cmpStatus !== \"loaded\" || generatorWrapper.eventStatus !== \"tcloaded\" && generatorWrapper.eventStatus !== \"useractioncomplete\") {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  var checkSpecialFeatureConsents = function (generatorWrapper) {\n    var value = [\"2\", \"7\", \"9\", \"10\"];\n    if (generatorWrapper.gdprApplies === false) {\n      return true;\n    } else {\n      return value.every(function (CustomMap) {\n        return checkPublisherRestrictions(generatorWrapper, CustomMap, 3);\n      });\n    }\n  };\n  createCustomClassInstance([1, 8, 9, 10, 11, 12, 2, 3, 4, 5, 15, 16]);\n  createCustomClassInstance([1, 6, 7, 9, 10, 11, 12, 2, 3, 4, 5, 13, 14]);\n  createCustomClassInstance([1, 6, 7, 9, 10, 11, 12, 2, 3, 4, 5, 13, 14]);\n  new CustomClass();\n  var table = function (generatorWrapper, value) {\n    this.tasks = this.isDone = this.createDeferred = \"\";\n    this.settlePromise = null;\n    this.executeCallbacks = this.setTimeoutWrapper = \"\";\n    this.handleAsync = false;\n    var CustomMap;\n    if (generatorWrapper instanceof table) {\n      if (undefined !== value) {\n        this.handleAsync = value;\n      } else {\n        this.handleAsync = generatorWrapper.handleAsync;\n      }\n      setScheme(this, generatorWrapper.createDeferred);\n      this.isDone = generatorWrapper.isDone;\n      this.tasks = generatorWrapper.tasks;\n      setPort(this, generatorWrapper.settlePromise);\n      this.setTimeoutWrapper = generatorWrapper.setTimeoutWrapper;\n      setQueryParameters(this, my(generatorWrapper.entryIdCounter));\n      this.executeCallbacks = generatorWrapper.dispatchUnhandledRejection();\n    } else if (generatorWrapper && (CustomMap = String(generatorWrapper).match(urlRegex))) {\n      this.handleAsync = !!value;\n      setScheme(this, CustomMap[1] || \"\", true);\n      this.isDone = decodeURIConditionally(CustomMap[2] || \"\");\n      this.tasks = decodeURIConditionally(CustomMap[3] || \"\", true);\n      setPort(this, CustomMap[4]);\n      this.setTimeoutWrapper = decodeURIConditionally(CustomMap[5] || \"\", true);\n      setQueryParameters(this, CustomMap[6] || \"\", true);\n      this.executeCallbacks = decodeURIConditionally(CustomMap[7] || \"\");\n    } else {\n      this.handleAsync = !!value;\n      this.entryIdCounter = new URLParameters(null, this.handleAsync);\n    }\n  };\n  table.prototype.toString = function () {\n    var generatorWrapper = [];\n    var value = this.createDeferred;\n    if (value) {\n      generatorWrapper.push(encodeURIConditionally(value, regexForHashSlashQuestionAt, true), \":\");\n    }\n    var CustomMap = this.tasks;\n    if (CustomMap || value == \"file\") {\n      generatorWrapper.push(\"//\");\n      if (value = this.isDone) {\n        generatorWrapper.push(encodeURIConditionally(value, regexForHashSlashQuestionAt, true), \"@\");\n      }\n      generatorWrapper.push(encodeURIComponent(String(CustomMap)).replace(/%25([0-9a-fA-F]{2})/g, \"%$1\"));\n      CustomMap = this.settlePromise;\n      if (CustomMap != null) {\n        generatorWrapper.push(\":\", String(CustomMap));\n      }\n    }\n    if (CustomMap = this.setTimeoutWrapper) {\n      if (this.tasks && CustomMap.charAt(0) != \"/\") {\n        generatorWrapper.push(\"/\");\n      }\n      generatorWrapper.push(encodeURIConditionally(CustomMap, CustomMap.charAt(0) == \"/\" ? regexForHashQuestion : regexForHashColonQuestion, true));\n    }\n    if (CustomMap = this.entryIdCounter.toString()) {\n      generatorWrapper.push(\"?\", CustomMap);\n    }\n    if (CustomMap = this.dispatchUnhandledRejection()) {\n      generatorWrapper.push(\"#\", encodeURIConditionally(CustomMap, regexForHash));\n    }\n    return generatorWrapper.join(\"\");\n  };\n  table.prototype.resolve = function (generatorWrapper) {\n    var value = this.handleThenable();\n    var CustomMap = !!generatorWrapper.createDeferred;\n    if (CustomMap) {\n      setScheme(value, generatorWrapper.createDeferred);\n    } else {\n      CustomMap = !!generatorWrapper.isDone;\n    }\n    if (CustomMap) {\n      value.isDone = generatorWrapper.isDone;\n    } else {\n      CustomMap = !!generatorWrapper.tasks;\n    }\n    if (CustomMap) {\n      value.tasks = generatorWrapper.tasks;\n    } else {\n      CustomMap = generatorWrapper.settlePromise != null;\n    }\n    var findEntry = generatorWrapper.setTimeoutWrapper;\n    if (CustomMap) {\n      setPort(value, generatorWrapper.settlePromise);\n    } else if (CustomMap = !!generatorWrapper.setTimeoutWrapper) {\n      if (findEntry.charAt(0) != \"/\") {\n        if (this.tasks && !this.setTimeoutWrapper) {\n          findEntry = \"/\" + findEntry;\n        } else {\n          var iterateEntries = value.setTimeoutWrapper.lastIndexOf(\"/\");\n          if (-1 != iterateEntries) {\n            findEntry = value.setTimeoutWrapper.slice(0, iterateEntries + 1) + findEntry;\n          }\n        }\n      }\n      iterateEntries = findEntry;\n      if (iterateEntries == \"..\" || iterateEntries == \".\") {\n        findEntry = \"\";\n      } else if (includesString(iterateEntries, \"./\") || includesString(iterateEntries, \"/.\")) {\n        findEntry = iterateEntries.lastIndexOf(\"/\", 0) == 0;\n        iterateEntries = iterateEntries.split(\"/\");\n        for (var createCircularNode = [], entryIdCounter = 0; entryIdCounter < iterateEntries.length;) {\n          var key = iterateEntries[entryIdCounter++];\n          if (key == \".\") {\n            if (findEntry && entryIdCounter == iterateEntries.length) {\n              createCircularNode.push(\"\");\n            }\n          } else if (key == \"..\") {\n            if (createCircularNode.length > 1 || createCircularNode.length == 1 && createCircularNode[0] != \"\") {\n              createCircularNode.pop();\n            }\n            if (findEntry && entryIdCounter == iterateEntries.length) {\n              createCircularNode.push(\"\");\n            }\n          } else {\n            createCircularNode.push(key);\n            findEntry = true;\n          }\n        }\n        findEntry = createCircularNode.join(\"/\");\n      } else {\n        findEntry = iterateEntries;\n      }\n    }\n    if (CustomMap) {\n      value.setTimeoutWrapper = findEntry;\n    } else {\n      CustomMap = generatorWrapper.entryIdCounter.toString() !== \"\";\n    }\n    if (CustomMap) {\n      setQueryParameters(value, my(generatorWrapper.entryIdCounter));\n    } else {\n      CustomMap = !!generatorWrapper.executeCallbacks;\n    }\n    if (CustomMap) {\n      value.executeCallbacks = generatorWrapper.dispatchUnhandledRejection();\n    }\n    return value;\n  };\n  table.prototype.handleThenable = function () {\n    return new table(this);\n  };\n  var setScheme = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      generatorWrapper.createDeferred = decodeURIConditionally(value, true);\n    } else {\n      generatorWrapper.createDeferred = value;\n    }\n    if (generatorWrapper.createDeferred) {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred.replace(/:$/, \"\");\n    }\n  };\n  var setPort = function (generatorWrapper, value) {\n    if (value) {\n      value = Number(value);\n      if (isNaN(value) || value < 0) {\n        throw Error(\"Bad port number \" + value);\n      }\n      generatorWrapper.settlePromise = value;\n    } else {\n      generatorWrapper.settlePromise = null;\n    }\n  };\n  var setQueryParameters = function (generatorWrapper, value, CustomMap) {\n    if (value instanceof URLParameters) {\n      generatorWrapper.entryIdCounter = value;\n      setCaseSensitivity(generatorWrapper.entryIdCounter, generatorWrapper.handleAsync);\n    } else {\n      if (!CustomMap) {\n        value = encodeURIConditionally(value, regexForHashQuestionAt);\n      }\n      generatorWrapper.entryIdCounter = new URLParameters(value, generatorWrapper.handleAsync);\n    }\n  };\n  var setParameter = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.entryIdCounter.set(value, CustomMap);\n    return generatorWrapper;\n  };\n  table.prototype.dispatchUnhandledRejection = function () {\n    return this.executeCallbacks;\n  };\n  var createOrProcessURL = function (generatorWrapper) {\n    if (generatorWrapper instanceof table) {\n      return generatorWrapper.handleThenable();\n    } else {\n      return new table(generatorWrapper, undefined);\n    }\n  };\n  var decodeURIConditionally = function (generatorWrapper, value) {\n    if (generatorWrapper) {\n      if (value) {\n        return decodeURI(generatorWrapper.replace(/%25/g, \"%2525\"));\n      } else {\n        return decodeURIComponent(generatorWrapper);\n      }\n    } else {\n      return \"\";\n    }\n  };\n  var encodeURIConditionally =",
  "Consents = function (generatorWrapper) {\n    var value = [\"2\", \"7\", \"9\", \"10\"];\n    if (generatorWrapper.gdprApplies === false) {\n      return true;\n    } else {\n      return value.every(function (CustomMap) {\n        return checkPublisherRestrictions(generatorWrapper, CustomMap, 3);\n      });\n    }\n  };\n  createCustomClassInstance([1, 8, 9, 10, 11, 12, 2, 3, 4, 5, 15, 16]);\n  createCustomClassInstance([1, 6, 7, 9, 10, 11, 12, 2, 3, 4, 5, 13, 14]);\n  createCustomClassInstance([1, 6, 7, 9, 10, 11, 12, 2, 3, 4, 5, 13, 14]);\n  new CustomClass();\n  var table = function (generatorWrapper, value) {\n    this.tasks = this.isDone = this.createDeferred = \"\";\n    this.settlePromise = null;\n    this.executeCallbacks = this.setTimeoutWrapper = \"\";\n    this.handleAsync = false;\n    var CustomMap;\n    if (generatorWrapper instanceof table) {\n      if (undefined !== value) {\n        this.handleAsync = value;\n      } else {\n        this.handleAsync = generatorWrapper.handleAsync;\n      }\n      setScheme(this, generatorWrapper.createDeferred);\n      this.isDone = generatorWrapper.isDone;\n      this.tasks = generatorWrapper.tasks;\n      setPort(this, generatorWrapper.settlePromise);\n      this.setTimeoutWrapper = generatorWrapper.setTimeoutWrapper;\n      setQueryParameters(this, my(generatorWrapper.entryIdCounter));\n      this.executeCallbacks = generatorWrapper.dispatchUnhandledRejection();\n    } else if (generatorWrapper && (CustomMap = String(generatorWrapper).match(urlRegex))) {\n      this.handleAsync = !!value;\n      setScheme(this, CustomMap[1] || \"\", true);\n      this.isDone = decodeURIConditionally(CustomMap[2] || \"\");\n      this.tasks = decodeURIConditionally(CustomMap[3] || \"\", true);\n      setPort(this, CustomMap[4]);\n      this.setTimeoutWrapper = decodeURIConditionally(CustomMap[5] || \"\", true);\n      setQueryParameters(this, CustomMap[6] || \"\", true);\n      this.executeCallbacks = decodeURIConditionally(CustomMap[7] || \"\");\n    } else {\n      this.handleAsync = !!value;\n      this.entryIdCounter = new URLParameters(null, this.handleAsync);\n    }\n  };\n  table.prototype.toString = function () {\n    var generatorWrapper = [];\n    var value = this.createDeferred;\n    if (value) {\n      generatorWrapper.push(encodeURIConditionally(value, regexForHashSlashQuestionAt, true), \":\");\n    }\n    var CustomMap = this.tasks;\n    if (CustomMap || value == \"file\") {\n      generatorWrapper.push(\"//\");\n      if (value = this.isDone) {\n        generatorWrapper.push(encodeURIConditionally(value, regexForHashSlashQuestionAt, true), \"@\");\n      }\n      generatorWrapper.push(encodeURIComponent(String(CustomMap)).replace(/%25([0-9a-fA-F]{2})/g, \"%$1\"));\n      CustomMap = this.settlePromise;\n      if (CustomMap != null) {\n        generatorWrapper.push(\":\", String(CustomMap));\n      }\n    }\n    if (CustomMap = this.setTimeoutWrapper) {\n      if (this.tasks && CustomMap.charAt(0) != \"/\") {\n        generatorWrapper.push(\"/\");\n      }\n      generatorWrapper.push(encodeURIConditionally(CustomMap, CustomMap.charAt(0) == \"/\" ? regexForHashQuestion : regexForHashColonQuestion, true));\n    }\n    if (CustomMap = this.entryIdCounter.toString()) {\n      generatorWrapper.push(\"?\", CustomMap);\n    }\n    if (CustomMap = this.dispatchUnhandledRejection()) {\n      generatorWrapper.push(\"#\", encodeURIConditionally(CustomMap, regexForHash));\n    }\n    return generatorWrapper.join(\"\");\n  };\n  table.prototype.resolve = function (generatorWrapper) {\n    var value = this.handleThenable();\n    var CustomMap = !!generatorWrapper.createDeferred;\n    if (CustomMap) {\n      setScheme(value, generatorWrapper.createDeferred);\n    } else {\n      CustomMap = !!generatorWrapper.isDone;\n    }\n    if (CustomMap) {\n      value.isDone = generatorWrapper.isDone;\n    } else {\n      CustomMap = !!generatorWrapper.tasks;\n    }\n    if (CustomMap) {\n      value.tasks = generatorWrapper.tasks;\n    } else {\n      CustomMap = generatorWrapper.settlePromise != null;\n    }\n    var findEntry = generatorWrapper.setTimeoutWrapper;\n    if (CustomMap) {\n      setPort(value, generatorWrapper.settlePromise);\n    } else if (CustomMap = !!generatorWrapper.setTimeoutWrapper) {\n      if (findEntry.charAt(0) != \"/\") {\n        if (this.tasks && !this.setTimeoutWrapper) {\n          findEntry = \"/\" + findEntry;\n        } else {\n          var iterateEntries = value.setTimeoutWrapper.lastIndexOf(\"/\");\n          if (-1 != iterateEntries) {\n            findEntry = value.setTimeoutWrapper.slice(0, iterateEntries + 1) + findEntry;\n          }\n        }\n      }\n      iterateEntries = findEntry;\n      if (iterateEntries == \"..\" || iterateEntries == \".\") {\n        findEntry = \"\";\n      } else if (includesString(iterateEntries, \"./\") || includesString(iterateEntries, \"/.\")) {\n        findEntry = iterateEntries.lastIndexOf(\"/\", 0) == 0;\n        iterateEntries = iterateEntries.split(\"/\");\n        for (var createCircularNode = [], entryIdCounter = 0; entryIdCounter < iterateEntries.length;) {\n          var key = iterateEntries[entryIdCounter++];\n          if (key == \".\") {\n            if (findEntry && entryIdCounter == iterateEntries.length) {\n              createCircularNode.push(\"\");\n            }\n          } else if (key == \"..\") {\n            if (createCircularNode.length > 1 || createCircularNode.length == 1 && createCircularNode[0] != \"\") {\n              createCircularNode.pop();\n            }\n            if (findEntry && entryIdCounter == iterateEntries.length) {\n              createCircularNode.push(\"\");\n            }\n          } else {\n            createCircularNode.push(key);\n            findEntry = true;\n          }\n        }\n        findEntry = createCircularNode.join(\"/\");\n      } else {\n        findEntry = iterateEntries;\n      }\n    }\n    if (CustomMap) {\n      value.setTimeoutWrapper = findEntry;\n    } else {\n      CustomMap = generatorWrapper.entryIdCounter.toString() !== \"\";\n    }\n    if (CustomMap) {\n      setQueryParameters(value, my(generatorWrapper.entryIdCounter));\n    } else {\n      CustomMap = !!generatorWrapper.executeCallbacks;\n    }\n    if (CustomMap) {\n      value.executeCallbacks = generatorWrapper.dispatchUnhandledRejection();\n    }\n    return value;\n  };\n  table.prototype.handleThenable = function () {\n    return new table(this);\n  };\n  var setScheme = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      generatorWrapper.createDeferred = decodeURIConditionally(value, true);\n    } else {\n      generatorWrapper.createDeferred = value;\n    }\n    if (generatorWrapper.createDeferred) {\n      generatorWrapper.createDeferred = generatorWrapper.createDeferred.replace(/:$/, \"\");\n    }\n  };\n  var setPort = function (generatorWrapper, value) {\n    if (value) {\n      value = Number(value);\n      if (isNaN(value) || value < 0) {\n        throw Error(\"Bad port number \" + value);\n      }\n      generatorWrapper.settlePromise = value;\n    } else {\n      generatorWrapper.settlePromise = null;\n    }\n  };\n  var setQueryParameters = function (generatorWrapper, value, CustomMap) {\n    if (value instanceof URLParameters) {\n      generatorWrapper.entryIdCounter = value;\n      setCaseSensitivity(generatorWrapper.entryIdCounter, generatorWrapper.handleAsync);\n    } else {\n      if (!CustomMap) {\n        value = encodeURIConditionally(value, regexForHashQuestionAt);\n      }\n      generatorWrapper.entryIdCounter = new URLParameters(value, generatorWrapper.handleAsync);\n    }\n  };\n  var setParameter = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.entryIdCounter.set(value, CustomMap);\n    return generatorWrapper;\n  };\n  table.prototype.dispatchUnhandledRejection = function () {\n    return this.executeCallbacks;\n  };\n  var createOrProcessURL = function (generatorWrapper) {\n    if (generatorWrapper instanceof table) {\n      return generatorWrapper.handleThenable();\n    } else {\n      return new table(generatorWrapper, undefined);\n    }\n  };\n  var decodeURIConditionally = function (generatorWrapper, value) {\n    if (generatorWrapper) {\n      if (value) {\n        return decodeURI(generatorWrapper.replace(/%25/g, \"%2525\"));\n      } else {\n        return decodeURIComponent(generatorWrapper);\n      }\n    } else {\n      return \"\";\n    }\n  };\n  var encodeURIConditionally = function (generatorWrapper, value, CustomMap) {\n    if (typeof generatorWrapper === \"string\") {\n      generatorWrapper = encodeURI(generatorWrapper).replace(value, encodeCharacterAsPercentEncoded);\n      if (CustomMap) {\n        generatorWrapper = generatorWrapper.replace(/%25([0-9a-fA-F]{2})/g, \"%$1\");\n      }\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var encodeCharacterAsPercentEncoded = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.charCodeAt(0);\n    return \"%\" + (generatorWrapper >> 4 & 15).toString(16) + (generatorWrapper & 15).toString(16);\n  };\n  var regexForHashSlashQuestionAt = /[#\\/\\?@]/g;\n  var regexForHashColonQuestion = /[#\\?:]/g;\n  var regexForHashQuestion = /[#\\?]/g;\n  var regexForHashQuestionAt = /[#\\?@]/g;\n  var regexForHash = /#/g;\n  var URLParameters = function (generatorWrapper, value) {\n    this.tasks = this.entryIdCounter = null;\n    this.setTimeoutWrapper = generatorWrapper || null;\n    this.createDeferred = !!value;\n  };\n  var initializeURLParametersMap = function (generatorWrapper) {\n    if (!generatorWrapper.entryIdCounter) {\n      generatorWrapper.entryIdCounter = new Map();\n      generatorWrapper.tasks = 0;\n      if (generatorWrapper.setTimeoutWrapper) {\n        parseQueryString(generatorWrapper.setTimeoutWrapper, function (value, CustomMap) {\n          generatorWrapper.addParameter(decodeUriComponentWithSpace(value), CustomMap);\n        });\n      }\n    }\n  };\n  URLParameters.prototype.addParameter = function (generatorWrapper, value) {\n    initializeURLParametersMap(this);\n    this.setTimeoutWrapper = null;\n    generatorWrapper = normalizeParameterKey(this, generatorWrapper);\n    var CustomMap = this.entryIdCounter.get(generatorWrapper);\n    if (!CustomMap) {\n      this.entryIdCounter.set(generatorWrapper, CustomMap = []);\n    }\n    CustomMap.push(value);\n    this.tasks += 1;\n    return this;\n  };\n  URLParameters.prototype.removeElement = function (generatorWrapper) {\n    initializeURLParametersMap(this);\n    generatorWrapper = normalizeParameterKey(this, generatorWrapper);\n    if (this.entryIdCounter.has(generatorWrapper)) {\n      this.setTimeoutWrapper = null;\n      this.tasks -= this.entryIdCounter.get(generatorWrapper).length;\n      return this.entryIdCounter.delete(generatorWrapper);\n    } else {\n      return false;\n    }\n  };\n  URLParameters.prototype.clearAll = function () {\n    this.entryIdCounter = this.setTimeoutWrapper = null;\n    this.tasks = 0;\n  };\n  URLParameters.prototype.isEmpty = function () {\n    initializeURLParametersMap(this);\n    return this.tasks == 0;\n  };\n  var Cy = function (generatorWrapper, value) {\n    initializeURLParametersMap(generatorWrapper);\n    value = normalizeParameterKey(generatorWrapper, value);\n    return generatorWrapper.entryIdCounter.has(value);\n  };\n  setTimeoutWrapper = URLParameters.prototype;\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    initializeURLParametersMap(this);\n    this.entryIdCounter.forEach(function (CustomMap, findEntry) {\n      CustomMap.forEach(function (iterateEntries) {\n        generatorWrapper.call(value, iterateEntries, findEntry, this);\n      }, this);\n    }, this);\n  };\n  setTimeoutWrapper.base64AlphabetVariants = function () {\n    initializeURLParametersMap(this);\n    for (var generatorWrapper = Array.from(this.entryIdCounter.values()), value = Array.from(this.entryIdCounter.keys()), CustomMap = [], findEntry = 0; findEntry < value.length; findEntry++) {\n      for (var iterateEntries = generatorWrapper[findEntry], createCircularNode = 0; createCircularNode < iterateEntries.length; createCircularNode++) {\n        CustomMap.push(value[findEntry]);\n      }\n    }\n    return CustomMap;\n  };\n  setTimeoutWrapper.hasPlatform = function (generatorWrapper) {\n    initializeURLParametersMap(this);\n    var value = [];\n    if (typeof generatorWrapper === \"string\") {\n      if (Cy(this, generatorWrapper)) {\n        value = value.concat(this.entryIdCounter.get(normalizeParameterKey(this, generatorWrapper)));\n      }\n    } else {\n      generatorWrapper = Array.from(this.entryIdCounter.values());\n      for (var CustomMap = 0; CustomMap < generatorWrapper.length; CustomMap++) {\n        value = value.concat(generatorWrapper[CustomMap]);\n      }\n    }\n    return value;\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    initializeURLParametersMap(this);\n    this.setTimeoutWrapper = null;\n    generatorWrapper = normalizeParameterKey(this, generatorWrapper);\n    if (Cy(this, generatorWrapper)) {\n      this.tasks -= this.entryIdCounter.get(generatorWrapper).length;\n    }\n    this.entryIdCounter.set(generatorWrapper, [value]);\n    this.tasks += 1;\n    return this;\n  };\n  setTimeoutWrapper.get = function (generatorWrapper, value) {\n    if (!generatorWrapper) {\n      return value;\n    }\n    generatorWrapper = this.hasPlatform(generatorWrapper);\n    if (generatorWrapper.length > 0) {\n      return String(generatorWrapper[0]);\n    } else {\n      return value;\n    }\n  };\n  setTimeoutWrapper.toString = function () {\n    if (this.setTimeoutWrapper) {\n      return this.setTimeoutWrapper;\n    }\n    if (!this.entryIdCounter) {\n      return \"\";\n    }\n    for (var generatorWrapper = [], value = Array.from(this.entryIdCounter.keys()), CustomMap = 0; CustomMap < value.length; CustomMap++) {\n      var findEntry = value[CustomMap];\n      var iterateEntries = encodeURIComponent(String(findEntry));\n      findEntry = this.hasPlatform(findEntry);\n      for (var createCircularNode = 0; createCircularNode < findEntry.length; createCircularNode++) {\n        var entryIdCounter = iterateEntries;\n        if (findEntry[createCircularNode] !== \"\") {\n          entryIdCounter += \"=\" + encodeURIComponent(String(findEntry[createCircularNode]));\n        }\n        generatorWrapper.push(entryIdCounter);\n      }\n    }\n    return this.setTimeoutWrapper = generatorWrapper.join(\"&\");\n  };\n  var my = function (generatorWrapper) {\n    var value = new URLParameters();\n    value.setTimeoutWrapper = generatorWrapper.setTimeoutWrapper;\n    if (generatorWrapper.entryIdCounter) {\n      value.entryIdCounter = new Map(generatorWrapper.entryIdCounter);\n      value.tasks = generatorWrapper.tasks;\n    }\n    return value;\n  };\n  var normalizeParameterKey = function (generatorWrapper, value) {\n    value = String(value);\n    if (generatorWrapper.createDeferred) {\n      value = value.toLowerCase();\n    }\n    return value;\n  };\n  var setCaseSensitivity = function (generatorWrapper, value) {\n    if (value && !generatorWrapper.createDeferred) {\n      initializeURLParametersMap(generatorWrapper);\n      generatorWrapper.setTimeoutWrapper = null;\n      generatorWrapper.entryIdCounter.forEach(function (CustomMap, findEntry) {\n        var iterateEntries = findEntry.toLowerCase();\n        if (findEntry != iterateEntries) {\n          this.removeElement(findEntry);\n          this.removeElement(iterateEntries);\n          if (CustomMap.length > 0) {\n            this.setTimeoutWrapper = null;\n            this.entryIdCounter.set(normalizeParameterKey(this, iterateEntries), copyArray(CustomMap));\n            this.tasks += CustomMap.length;\n          }\n        }\n      }, generatorWrapper);\n    }\n    generatorWrapper.createDeferred = value;\n  };\n  var userAgentStringCache, isAppleDeviceCache, trustedDomainsListCache;\n  var getUserAgentString = function () {\n    if (globalScope.navigator) {\n      return globalScope.navigator.userAgent;\n    } else {\n      return \"\";\n    }\n  };\n  var isAppleDevice = includesString(getUserAgentString(), \"(iPad\") || includesString(getUserAgentString(), \"(Macintosh\") || includesString(getUserAgentString(), \"(iPod\") || includesString(getUserAgentString(), \"(iPhone\");\n  var trustedDomainsList = \"ad.doubleclick.net bid.g.doubleclick.net ggpht.com google.co.uk google.com googleads.g.doubleclick.net googleads4.g.doubleclick.net googleadservices.com googlesyndication.com googleusercontent.com gstatic.com gvt1.com prod.google.com pubads.g.doubleclick.net s0.2mdn.net static.doubleclick.net surveys.g.doubleclick.net youtube.com ytimg.com\".split(\" \");\n  var exceptionDomainsList = [\"c.googlesyndication.com\"];\n  function convertToHttpsIfApplicable(generatorWrapper, value) {\n    if (undefined === value) {\n      value = window.location.protocol;\n    } else {\n      value = value;\n    }\n    var CustomMap = false;\n    if (generatorWrapper == null || !generatorWrapper.startsWith(\"http\") || (generatorWrapper == null ? 0 : generatorWrapper.startsWith(\"https\"))) {\n      CustomMap = false;\n    } else if (matchesTrustedDomains(generatorWrapper, exceptionDomainsList)) {\n      CustomMap = false;\n    } else if (value.includes(\"https\") && matchesTrustedDomains(generatorWrapper, trustedDomainsList)) {\n      CustomMap = true;\n    }\n    if (CustomMap) {\n      generatorWrapper = new table(generatorWrapper);\n      settlePromise(resolvePromise.getAdInstance(), \"htp\", \"1\");\n      setScheme(generatorWrapper, \"https\");\n      return generatorWrapper.toString();\n    } else {\n      return generatorWrapper;\n    }\n  }\n  function isGCacheURL(generatorWrapper) {\n    if (!generatorWrapper) {\n      return false;\n    }\n    try {\n      var value = typeof generatorWrapper === \"string\" ? new table(generatorWrapper) : generatorWrapper;\n      return value.createDeferred == \"gcache\" && !!value.entryIdCounter.get(\"url\");\n    } catch (CustomMap) {\n      return false;\n    }\n  }\n  function getGCacheURL(generatorWrapper) {\n    try {\n      var value = typeof generatorWrapper === \"string\" ? new table(generatorWrapper) : generatorWrapper;\n      if (isGCacheURL(value)) {\n        var CustomMap = value.entryIdCounter.get(\"url\");\n        if (typeof CustomMap === \"undefined\") {\n          return null;\n        } else {\n          return CustomMap;\n        }\n      }\n    } catch (findEntry) {}\n    return null;\n  }\n  function matchesTrustedDomains(generatorWrapper, value) {\n    return new RegExp(\"^https?://([a-z0-9-]{1,63}\\\\.)*(\" + value.join(\"|\").replace(/\\./g, \"\\\\.\") + \")(:[0-9]+)?([/?#]|$)\", \"i\").test(generatorWrapper);\n  }\n  var popupBlockerDetectionTimestamp = -1;\n  function openURLInNewWindow(generatorWrapper, value) {\n    if (value != null) {\n      value = value;\n    } else {\n      value = \"\";\n    }\n    if (isIE) {\n      value = \"\";\n    }\n    if (!isEmptyOrWhitespace(stringifyNullable(generatorWrapper))) {\n      var CustomMap = generatorWrapper instanceof MediaSourceURL || !urlSchemeRegex.test(generatorWrapper) ? generatorWrapper : new MediaSourceURL(generatorWrapper);\n      if (CustomMap instanceof MediaSourceURL) {\n        var findEntry = CustomMap;\n      } else {\n        if (undefined === findEntry) {\n          findEntry = allowedURLSchemes;\n        } else {\n          findEntry = findEntry;\n        }\n        if (undefined === findEntry) {\n          findEntry = allowedURLSchemes;\n        } else {\n          findEntry = findEntry;\n        }\n        generatorWrapper: if (!(generatorWrapper instanceof MediaSourceURL)) {\n          for (CustomMap = 0; CustomMap < findEntry.length; ++CustomMap) {\n            var iterateEntries = findEntry[CustomMap];\n            if (iterateEntries instanceof URLSchemeValidator && iterateEntries.booleanTransformation1(generatorWrapper)) {\n              generatorWrapper = new MediaSourceURL(generatorWrapper);\n              break generatorWrapper;\n            }\n          }\n          generatorWrapper = undefined;\n        }\n        findEntry = generatorWrapper || invalidClosureURL;\n      }\n      generatorWrapper = window;\n      if (findEntry instanceof MediaSourceURL) {\n        if (findEntry instanceof MediaSourceURL) {\n          findEntry = findEntry.entryIdCounter;\n        } else {\n          throw Error(\"\");\n        }\n      } else if (safeURLPattern.test(findEntry)) {\n        findEntry = findEntry;\n      } else {\n        findEntry = undefined;\n      }\n      if (undefined !== findEntry) {\n        generatorWrapper.open(findEntry, \"_blank\", value);\n      }\n    }\n  }\n  function iterateAndExecute(generatorWrapper, value) {\n    for (var CustomMap; !(CustomMap = generatorWrapper.next()).done;) {\n      value(CustomMap.value);\n    }\n  }\n  var IteratorWithCallback = function (generatorWrapper, value) {\n    this.entryIdCounter = generatorWrapper[globalScope.Symbol.iterator]();\n    this.tasks = value;\n  };\n  IteratorWithCallback.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n  IteratorWithCallback.prototype.next = function () {\n    var generatorWrapper = this.entryIdCounter.next();\n    return {\n      value: generatorWrapper.done ? undefined : this.tasks.call(undefined, generatorWrapper.value),\n      done: generatorWrapper.done\n    };\n  };\n  var createTransformIterator = function (generatorWrapper, value) {\n    return new IteratorWithCallback(generatorWrapper, value);\n  };\n  var unionSets = function (generatorWrapper, value) {\n    var CustomMap = new Set(generatorWrapper);\n    iterateAndExecute(value[Symbol.iterator](), function (findEntry) {\n      return CustomMap.addParameter(findEntry);\n    });\n    return CustomMap;\n  };\n  var resizeObserversMap = new Map();\n  var ResizeObserverWrapper = function () {\n    this.tasks = this.entryIdCounter = null;\n  };\n  function observeElementResizeWithTimeout(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = getElementSizeIfVisible(generatorWrapper);\n    if (areSizesEqual(value, iterateEntries)) {\n      iterateEntries = setTimeout(function () {\n        return observeElementResizeWithTimeout(generatorWrapper, value, CustomMap, findEntry);\n      }, 200);\n      findEntry.tasks = iterateEntries;\n    } else {\n      cleanupResizeObserver(findEntry);\n      CustomMap(iterateEntries);\n    }\n  }\n  function observeElementResize(generatorWrapper) {\n    var findEntry;\n    var value = new ResizeObserverWrapper();\n    var CustomMap = new Promise(function (createCircularNode) {\n      var entryIdCounter = getElementSizeIfVisible(generatorWrapper);\n      if (\"ResizeObserver\" in window) {\n        var key = new ResizeObserver(function (value) {\n          window.requestAnimationFrame(function () {\n            for (var entry = new Size(0, 0), currentEntry = getIterator(value), foundEntry = currentEntry.next(); !foundEntry.done; foundEntry = currentEntry.next()) {\n              foundEntry = foundEntry.value;\n              if (foundEntry.contentBoxSize) {\n                if (Array.isArray(foundEntry.contentBoxSize)) {\n                  foundEntry = foundEntry.contentBoxSize[0];\n                } else {\n                  foundEntry = foundEntry.contentBoxSize;\n                }\n                entry.width = Math.floorRectangle(foundEntry.inlineSize);\n                entry.height = Math.floorRectangle(foundEntry.blockSize);\n              } else {\n                entry.width = Math.floorRectangle(foundEntry.contentRect.width);\n                entry.height = Math.floorRectangle(foundEntry.contentRect.height);\n              }\n              if (!areSizesEqual(entryIdCounter, entry)) {\n                cleanupResizeObserver(value);\n                return createCircularNode(entry);\n              }\n            }\n          });\n        });\n        value.entryIdCounter = key;\n        key.observe(generatorWrapper);\n      } else {\n        observeElementResizeWithTimeout(generatorWrapper, entryIdCounter, createCircularNode, value);\n      }\n    });\n    var iterateEntries = (findEntry = resizeObserversMap.get(CustomMap)) != null ? findEntry : new Set();\n    iterateEntries.addParameter(value);\n    resizeObserversMap.set(CustomMap, iterateEntries);\n    return CustomMap;\n  }\n  function waitForElementResize(generatorWrapper, value) {\n    if (undefined === value) {\n      value = new Size(1, 1);\n    } else {\n      value = value;\n    }\n    var iterateEntries;\n    var CustomMap = function (entryIdCounter) {\n      var value, currentEntry;\n      var key = observeElementResize(generatorWrapper);\n      var entry = (value = resizeObserversMap.get(entryIdCounter)) != null ? value : new Set();\n      if ((currentEntry = resizeObserversMap.get(key)) != null) {\n        value = currentEntry;\n      } else {\n        value = new Set();\n      }\n      resizeObserversMap.set(entryIdCounter, unionSets(entry, value));\n      return key;\n    };\n    var findEntry = function (entryIdCounter, key) {\n      CustomMap(entryIdCounter).then(function (value) {\n        if (value.width <= value.width && value.height <= value.height) {\n          disconnectResizeObservers(entryIdCounter);\n          return key(value);\n        } else {\n          return findEntry(entryIdCounter, key);\n        }\n      });\n    };\n    var createCircularNode = new Promise(function (entryIdCounter) {\n      iterateEntries = entryIdCounter;\n    });\n    findEntry(createCircularNode, iterateEntries);\n    return createCircularNode;\n  }\n  function disconnectResizeObservers(generatorWrapper) {\n    generatorWrapper = resizeObserversMap.get(generatorWrapper);\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      cleanupResizeObserver(value.value);\n    }\n  }\n  function cleanupResizeObserver(generatorWrapper) {\n    if (generatorWrapper.tasks) {\n      window.clearTimeout(generatorWrapper.tasks);\n    }\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper.entryIdCounter.disconnect();\n      generatorWrapper.entryIdCounter = null;\n    }\n  }\n  function ensureObjectProperty(generatorWrapper, value) {\n    return generatorWrapper && (generatorWrapper[value] || (generatorWrapper[value] = {}));\n  }\n  function exportToGlobal(generatorWrapper, value) {\n    var CustomMap;\n    if (CustomMap = undefined === CustomMap ? typeof omidExports === \"undefined\" ? null : omidExports : CustomMap) {\n      generatorWrapper = generatorWrapper.split(\".\");\n      generatorWrapper.slice(0, generatorWrapper.length - 1).reduce(ensureObjectProperty, CustomMap)[generatorWrapper[generatorWrapper.length - 1]] = value;\n    }\n  }\n  var verificationVendorsRegexMap = new Map([[2, [/^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.moatads\\.com\\/.*$/]], [3, [/^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.doubleverify\\.com\\/.*$/, /^(https?:\\/\\/|\\/\\/)?c\\.[\\w\\-]+\\.com\\/vfw\\/dv\\/.*$/, /^(https?:\\/\\/|\\/\\/)?(www\\.)?[\\w]+\\.tv\\/r\\/s\\/d\\/.*$/, /^(https?:\\/\\/|\\/\\/)?(\\w\\.?)+\\.dv\\.tech\\/.*$/]], [4, [/^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.adsafeprotected\\.com\\/.*$/]], [5, [/^https?:\\/\\/(q|cdn)\\.adrta\\.com\\/s\\/.*\\/(aa|aanf)\\.js.*$/, /^https:\\/\\/cdn\\.rta247\\.com\\/s\\/.*\\/(aa|aanf)\\.js.*$/]], [6, []], [7, [/^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.voicefive\\.com\\/.*$/, /^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.measuread\\.com\\/.*$/, /^(https?:\\/\\/|\\/\\/)?[-a-zA-Z0-9.]+\\.scorecardresearch\\.com\\/.*$/]], [8, [/^(https?:\\/\\/|\\/\\/)?s418\\.mxcdn\\.net\\/bb-serve\\/omid-meetrics.*\\.js$/]], [9, [/^(https?:\\/\\/|\\/\\/)?pagead2\\.googlesyndication\\.com\\/.*$/, /^(https?:\\/\\/|\\/\\/)?www\\.googletagservices\\.com\\/.*$/]]]);\n  exportToGlobal(\"OmidSessionClient.verificationVendorIdForScriptUrl\", function (generatorWrapper) {\n    for (var value = getIterator(verificationVendorsRegexMap.keys()), CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n      CustomMap = CustomMap.value;\n      for (var findEntry = getIterator(verificationVendorsRegexMap.get(CustomMap)), iterateEntries = findEntry.next(); !iterateEntries.done; iterateEntries = findEntry.next()) {\n        if (iterateEntries.value.test(generatorWrapper)) {\n          return CustomMap;\n        }\n      }\n    }\n    return 1;\n  });\n  exportToGlobal(\"OmidSessionClient.VerificationVendorId\", {\n    OTHER: 1,\n    MOAT: 2,\n    DOUBLEVERIFY: 3,\n    INTEGRAL_AD_SCIENCE: 4,\n    PIXELATE: 5,\n    NIELSEN: 6,\n    COMSCORE: 7,\n    MEETRICS: 8,\n    GOOGLE: 9\n  });\n  var iOSVersionRegex = /OS (\\S+) like/;\n  var androidVersionRegex = /Android ([\\d\\.]+)/;\n  function matchesUserAgentVersion(generatorWrapper, value) {\n    if (generatorWrapper = generatorWrapper.exec(getUserAgent())) {\n      generatorWrapper = generatorWrapper[1];\n    } else {\n      generatorWrapper = \"\";\n    }\n    generatorWrapper = generatorWrapper.replace(/_/g, \".\");\n    return compareVersions(generatorWrapper, value) >= 0;\n  }\n  var isTouchEnabledDevice = function () {\n    return isIpad || isMacOS && \"ontouchstart\" in document.documentElement;\n  };\n  var isIOSVersionAtLeast = function (generatorWrapper) {\n    return isIphoneIpadIpod && matchesUserAgentVersion(iOSVersionRegex, generatorWrapper);\n  };\n  var hasPlaysInlineAttribute = function (generatorWrapper) {\n    if ((generatorWrapper = undefined === generatorWrapper ? null : generatorWrapper) && typeof generatorWrapper.getAttribute === \"function\") {\n      if (generatorWrapper.getAttribute(\"playsinline\")) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n  var VideoPlaybackMonitor = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = generatorWrapper;\n    this.handleAsync = this.isDone = false;\n    this.onFulfilled = this.dispatchUnhandledRejection = 0;\n    this.entryIdCounter = new Timer(1000);\n    registerDisposable(this, this.entryIdCounter);\n    addPageHideListener(this.entryIdCounter, \"tick\", this.handleThenable, false, this);\n    addPageHideListener(this.tasks, \"pause\", this.setTimeoutWrapper, false, this);\n    addPageHideListener(this.tasks, \"playing\", this.setTimeoutWrapper, false, this);\n    addPageHideListener(this.tasks, \"ended\", this.setTimeoutWrapper, false, this);\n    addPageHideListener(this.tasks, \"timeupdate\", this.setTimeoutWrapper, false, this);\n  };\n  inheritPrototype(VideoPlaybackMonitor, AdEnvironmentConfig);\n  var getCurrentVideoTime = function (generatorWrapper) {\n    var value;\n    if ((value = generatorWrapper.tasks.currentTime) != null) {\n      return value;\n    } else {\n      return generatorWrapper.tasks.getCurrentTime();\n    }\n  };\n  VideoPlaybackMonitor.prototype.setTimeoutWrapper = function (generatorWrapper) {\n    switch (generatorWrapper.type) {\n      case \"playing\":\n        handleVideoPlaying(this);\n        break;\n      case \"pause\":\n      case \"ended\":\n        if (this.entryIdCounter.enabled) {\n          this.entryIdCounter.stopTimer();\n        }\n        break;\n      case \"timeupdate\":\n        if (!this.isDone && getCurrentVideoTime(this) > 0) {\n          this.isDone = true;\n          handleVideoPlaying(this);\n        }\n    }\n  };\n  var handleVideoPlaying = function (generatorWrapper) {\n    if (!generatorWrapper.entryIdCounter.enabled && generatorWrapper.isDone) {\n      generatorWrapper.dispatchUnhandledRejection = 1000 * getCurrentVideoTime(generatorWrapper);\n      generatorWrapper.onFulfilled = Date.now();\n      generatorWrapper.handleAsync = false;\n      generatorWrapper.entryIdCounter.startTimer();\n    }\n  };\n  VideoPlaybackMonitor.prototype.handleThenable = function () {\n    var generatorWrapper = Date.now();\n    var value = generatorWrapper - this.onFulfilled;\n    var CustomMap = 1000 * getCurrentVideoTime(this);\n    if (CustomMap - this.dispatchUnhandledRejection < 0.5 * value) {\n      if (!this.handleAsync) {\n        this.handleAsync = true;\n        this.dispatchEvent(\"playbackStalled\");\n      }\n    } else {\n      this.handleAsync = false;\n    }\n    this.dispatchUnhandledRejection = CustomMap;\n    this.onFulfilled = generatorWrapper;\n  };\n  var trustedDomainsList = \"://secure-...imrworldwide.com/ ://cdn.imrworldwide.com/ ://aksecure.imrworldwide.com/ ://[^.]*.moatads.com ://youtube[0-9]+.moatpixel.com ://pm.adsafeprotected.com/youtube ://pm.test-adsafeprotected.com/youtube ://e[0-9]+.yt.srs.doubleverify.com www.google.com/pagead/xsul www.youtube.com/pagead/slav\".split(\" \");\n  var ocrRegex = /\\bocr\\b/;\n  function isTrustedDomain(generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(generatorWrapper)) || isIE && generatorWrapper.length > 2048) {\n      return false;\n    }\n    try {\n      if (new table(generatorWrapper).dispatchUnhandledRejection().match(ocrRegex)) {\n        return true;\n      }\n    } catch (value) {}\n    return trustedDomainsList.find(function (value) {\n      return generatorWrapper.match(value) != null;\n    }) != null;\n  }\n  function matchesRegex(generatorWrapper, value) {\n    if (isEmptyOrWhitespace(value)) {\n      return false;\n    } else {\n      return new RegExp(generatorWrapper).test(value);\n    }\n  }\n  function parseQueryString(generatorWrapper) {\n    var value = {};\n    generatorWrapper.split(\",\").forEach(function (CustomMap) {\n      var findEntry = CustomMap.split(\"=\");\n      if (findEntry.length == 2) {\n        CustomMap = trimString(findEntry[0]);\n        findEntry = trimString(findEntry[1]);\n        if (CustomMap.length > 0) {\n          value[CustomMap] = findEntry;\n        }\n      }\n    });\n    return value;\n  }\n  function normalizeLanguageCode(generatorWrapper) {\n    var value = \"af am ar_eg ar_sa ar_xb ar be bg bn ca cs da de_at de_cn de el en_au en_ca en_gb en_ie en_in en_sg en_xa en_xc en_za en es_419 es_ar es_bo es_cl es_co es_cr es_do es_ec es_gt es_hn es_mx es_ni es_pa es_pe es_pr es_py es_sv es_us es_uy es_ve es et eu fa fi fil fr_ca fr_ch fr gl gsw gu he hi hr hu id in is it iw ja kn ko ln lo lt lv ml mo mr ms nb ne nl no pl pt_br pt_pt pt ro ru sk sl sr_latn sr sv sw ta te th tl tr uk ur vi zh_cn zh_hk zh_tw zh zu\".split(\" \");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.toLowerCase().replace(\"-\", \"_\");\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    }\n    if (generatorWrapper = generatorWrapper.match(/^\\w{2,3}([-_]|$)/)) {\n      generatorWrapper = generatorWrapper[0].replace(/[_-]/g, \"\");\n    } else {\n      generatorWrapper = \"\";\n    }\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var Timer = function () {\n    this.entryIdCounter = Date.now();\n  };\n  Timer.prototype.resetAdStateController = function () {\n    this.entryIdCounter = Date.now();\n  };\n  var getRemainingTime = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter + 5000 - Date.now();\n    if (generatorWrapper > 0) {\n      return generatorWrapper;\n    } else {\n      return 0;\n    }\n  };\n  var UrlRequest = function (generatorWrapper, value) {\n    this.url = generatorWrapper;\n    if (undefined === value) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = value;\n    }\n  };\n  var getErrorDescription = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case 0:\n        return \"No Error\";\n      case 1:\n        return \"Access denied to content document\";\n      case 2:\n        return \"File not found\";\n      case 3:\n        return \"Firefox silently errored\";\n      case 4:\n        return \"Application custom error\";\n      case 5:\n        return \"An exception occurred\";\n      case 6:\n        return \"Http response at 400 or 500 level\";\n      case 7:\n        return \"Request was aborted\";\n      case 8:\n        return \"Request timed out\";\n      case 9:\n        return \"The resource is not available offline\";\n      default:\n        return \"Unrecognized error code\";\n    }\n  };\n  var CustomError = function (generatorWrapper) {\n    var value = Error.call(this, generatorWrapper);\n    this.message = value.message;\n    if (\"stack\" in value) {\n      this.stack = value.stack;\n    }\n    this.errorCode = generatorWrapper;\n  };\n  inheritPrototype(CustomError, Error);\n  var EventDispatcher = function (generatorWrapper) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.tasks = {};\n  };\n  inheritPrototype(EventDispatcher, tryCall);\n  var singleElementArray = [];\n  EventDispatcher.prototype.window = function (generatorWrapper, value, CustomMap, findEntry) {\n    return addListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var addListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!Array.isArray(CustomMap)) {\n      if (CustomMap) {\n        singleElementArray[0] = CustomMap.toString();\n      }\n      CustomMap = singleElementArray;\n    }\n    for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n      var key = addPageHideListener(value, CustomMap[entryIdCounter], findEntry || generatorWrapper.handleEvent, iterateEntries || false, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!key) {\n        break;\n      }\n      generatorWrapper.tasks[key.key] = key;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.sortArray = function (generatorWrapper, value, CustomMap, findEntry) {\n    return removeListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var removeListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (Array.isArray(CustomMap)) {\n      for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n        removeListener(generatorWrapper, value, CustomMap[entryIdCounter], findEntry, iterateEntries, createCircularNode);\n      }\n    } else {\n      value = Gu(value, CustomMap, findEntry || generatorWrapper.handleEvent, iterateEntries, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!value) {\n        return generatorWrapper;\n      }\n      generatorWrapper.tasks[value.key] = value;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.compareValues = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        this.compareValues(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      CustomMap = CustomMap || this.handleEvent;\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n      } else {\n        findEntry = !!findEntry;\n      }\n      iterateEntries = iterateEntries || this.createDeferred || this;\n      CustomMap = Iu(CustomMap);\n      findEntry = !!findEntry;\n      if (isListenable(generatorWrapper)) {\n        value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n      } else if (generatorWrapper) {\n        if (generatorWrapper = Ku(generatorWrapper)) {\n          value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      if (value) {\n        Pu(value);\n        delete this.tasks[value.key];\n      }\n    }\n  };\n  var removeAllListeners = function (generatorWrapper) ",
  "filled;\n    var CustomMap = 1000 * getCurrentVideoTime(this);\n    if (CustomMap - this.dispatchUnhandledRejection < 0.5 * value) {\n      if (!this.handleAsync) {\n        this.handleAsync = true;\n        this.dispatchEvent(\"playbackStalled\");\n      }\n    } else {\n      this.handleAsync = false;\n    }\n    this.dispatchUnhandledRejection = CustomMap;\n    this.onFulfilled = generatorWrapper;\n  };\n  var trustedDomainsList = \"://secure-...imrworldwide.com/ ://cdn.imrworldwide.com/ ://aksecure.imrworldwide.com/ ://[^.]*.moatads.com ://youtube[0-9]+.moatpixel.com ://pm.adsafeprotected.com/youtube ://pm.test-adsafeprotected.com/youtube ://e[0-9]+.yt.srs.doubleverify.com www.google.com/pagead/xsul www.youtube.com/pagead/slav\".split(\" \");\n  var ocrRegex = /\\bocr\\b/;\n  function isTrustedDomain(generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(generatorWrapper)) || isIE && generatorWrapper.length > 2048) {\n      return false;\n    }\n    try {\n      if (new table(generatorWrapper).dispatchUnhandledRejection().match(ocrRegex)) {\n        return true;\n      }\n    } catch (value) {}\n    return trustedDomainsList.find(function (value) {\n      return generatorWrapper.match(value) != null;\n    }) != null;\n  }\n  function matchesRegex(generatorWrapper, value) {\n    if (isEmptyOrWhitespace(value)) {\n      return false;\n    } else {\n      return new RegExp(generatorWrapper).test(value);\n    }\n  }\n  function parseQueryString(generatorWrapper) {\n    var value = {};\n    generatorWrapper.split(\",\").forEach(function (CustomMap) {\n      var findEntry = CustomMap.split(\"=\");\n      if (findEntry.length == 2) {\n        CustomMap = trimString(findEntry[0]);\n        findEntry = trimString(findEntry[1]);\n        if (CustomMap.length > 0) {\n          value[CustomMap] = findEntry;\n        }\n      }\n    });\n    return value;\n  }\n  function normalizeLanguageCode(generatorWrapper) {\n    var value = \"af am ar_eg ar_sa ar_xb ar be bg bn ca cs da de_at de_cn de el en_au en_ca en_gb en_ie en_in en_sg en_xa en_xc en_za en es_419 es_ar es_bo es_cl es_co es_cr es_do es_ec es_gt es_hn es_mx es_ni es_pa es_pe es_pr es_py es_sv es_us es_uy es_ve es et eu fa fi fil fr_ca fr_ch fr gl gsw gu he hi hr hu id in is it iw ja kn ko ln lo lt lv ml mo mr ms nb ne nl no pl pt_br pt_pt pt ro ru sk sl sr_latn sr sv sw ta te th tl tr uk ur vi zh_cn zh_hk zh_tw zh zu\".split(\" \");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.toLowerCase().replace(\"-\", \"_\");\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    }\n    if (generatorWrapper = generatorWrapper.match(/^\\w{2,3}([-_]|$)/)) {\n      generatorWrapper = generatorWrapper[0].replace(/[_-]/g, \"\");\n    } else {\n      generatorWrapper = \"\";\n    }\n    if (value.includes(generatorWrapper)) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var Timer = function () {\n    this.entryIdCounter = Date.now();\n  };\n  Timer.prototype.resetAdStateController = function () {\n    this.entryIdCounter = Date.now();\n  };\n  var getRemainingTime = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter + 5000 - Date.now();\n    if (generatorWrapper > 0) {\n      return generatorWrapper;\n    } else {\n      return 0;\n    }\n  };\n  var UrlRequest = function (generatorWrapper, value) {\n    this.url = generatorWrapper;\n    if (undefined === value) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = value;\n    }\n  };\n  var getErrorDescription = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case 0:\n        return \"No Error\";\n      case 1:\n        return \"Access denied to content document\";\n      case 2:\n        return \"File not found\";\n      case 3:\n        return \"Firefox silently errored\";\n      case 4:\n        return \"Application custom error\";\n      case 5:\n        return \"An exception occurred\";\n      case 6:\n        return \"Http response at 400 or 500 level\";\n      case 7:\n        return \"Request was aborted\";\n      case 8:\n        return \"Request timed out\";\n      case 9:\n        return \"The resource is not available offline\";\n      default:\n        return \"Unrecognized error code\";\n    }\n  };\n  var CustomError = function (generatorWrapper) {\n    var value = Error.call(this, generatorWrapper);\n    this.message = value.message;\n    if (\"stack\" in value) {\n      this.stack = value.stack;\n    }\n    this.errorCode = generatorWrapper;\n  };\n  inheritPrototype(CustomError, Error);\n  var EventDispatcher = function (generatorWrapper) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.tasks = {};\n  };\n  inheritPrototype(EventDispatcher, tryCall);\n  var singleElementArray = [];\n  EventDispatcher.prototype.window = function (generatorWrapper, value, CustomMap, findEntry) {\n    return addListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var addListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (!Array.isArray(CustomMap)) {\n      if (CustomMap) {\n        singleElementArray[0] = CustomMap.toString();\n      }\n      CustomMap = singleElementArray;\n    }\n    for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n      var key = addPageHideListener(value, CustomMap[entryIdCounter], findEntry || generatorWrapper.handleEvent, iterateEntries || false, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!key) {\n        break;\n      }\n      generatorWrapper.tasks[key.key] = key;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.sortArray = function (generatorWrapper, value, CustomMap, findEntry) {\n    return removeListener(this, generatorWrapper, value, CustomMap, findEntry);\n  };\n  var removeListener = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (Array.isArray(CustomMap)) {\n      for (var entryIdCounter = 0; entryIdCounter < CustomMap.length; entryIdCounter++) {\n        removeListener(generatorWrapper, value, CustomMap[entryIdCounter], findEntry, iterateEntries, createCircularNode);\n      }\n    } else {\n      value = Gu(value, CustomMap, findEntry || generatorWrapper.handleEvent, iterateEntries, createCircularNode || generatorWrapper.createDeferred || generatorWrapper);\n      if (!value) {\n        return generatorWrapper;\n      }\n      generatorWrapper.tasks[value.key] = value;\n    }\n    return generatorWrapper;\n  };\n  EventDispatcher.prototype.compareValues = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (Array.isArray(value)) {\n      for (var createCircularNode = 0; createCircularNode < value.length; createCircularNode++) {\n        this.compareValues(generatorWrapper, value[createCircularNode], CustomMap, findEntry, iterateEntries);\n      }\n    } else {\n      CustomMap = CustomMap || this.handleEvent;\n      if (isObjectOrFunction(findEntry)) {\n        findEntry = !!findEntry.capture;\n      } else {\n        findEntry = !!findEntry;\n      }\n      iterateEntries = iterateEntries || this.createDeferred || this;\n      CustomMap = Iu(CustomMap);\n      findEntry = !!findEntry;\n      if (isListenable(generatorWrapper)) {\n        value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n      } else if (generatorWrapper) {\n        if (generatorWrapper = Ku(generatorWrapper)) {\n          value = generatorWrapper.findLastElementIndex(value, CustomMap, findEntry, iterateEntries);\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      if (value) {\n        Pu(value);\n        delete this.tasks[value.key];\n      }\n    }\n  };\n  var removeAllListeners = function (generatorWrapper) {\n    forEachInObject(generatorWrapper.tasks, function (value, CustomMap) {\n      if (this.tasks.hasOwnProperty(CustomMap)) {\n        Pu(value);\n      }\n    }, generatorWrapper);\n    generatorWrapper.tasks = {};\n  };\n  EventDispatcher.prototype.getAdEnvironment = function () {\n    EventDispatcher.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    removeAllListeners(this);\n  };\n  EventDispatcher.prototype.handleEvent = function () {\n    throw Error(\"EventHandler.handleEvent not implemented\");\n  };\n  var Singleton = function () {};\n  Singleton.prototype.entryIdCounter = null;\n  var getSingletonInstance = function (generatorWrapper) {\n    var value;\n    if (!(value = generatorWrapper.entryIdCounter)) {\n      value = generatorWrapper.entryIdCounter = {};\n    }\n    return value;\n  };\n  var singletonInstance,\n    SingletonBase = function () {};\n  inheritPrototype(SingletonBase, Singleton);\n  singletonInstance = new SingletonBase();\n  var HttpRequest = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.headers = new Map();\n    this.year = generatorWrapper || null;\n    this.tasks = false;\n    this.dispatchUnhandledRejection = this.entryIdCounter = null;\n    this.logError = \"\";\n    this.handleAsync = 0;\n    this.setTimeoutWrapper = this.resolvePromise = this.isDone = this.handleThenable = false;\n    this.handleThenable = 0;\n    this.onFulfilled = null;\n    this.totalAdBufferingTime = \"\";\n    this.tryCall = false;\n  };\n  inheritPrototype(HttpRequest, AdEnvironmentConfig);\n  var httpRegex = /^https?$/i;\n  var contentTypesWithPayload = [\"POST\", \"PUT\"];\n  var sendRequest = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper.entryIdCounter) {\n      throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + generatorWrapper.logError + \"; newUri=\" + value);\n    }\n    if (CustomMap) {\n      CustomMap = CustomMap.toUpperCase();\n    } else {\n      CustomMap = \"GET\";\n    }\n    generatorWrapper.logError = value;\n    generatorWrapper.handleAsync = 0;\n    generatorWrapper.handleThenable = false;\n    generatorWrapper.tasks = true;\n    generatorWrapper.entryIdCounter = new XMLHttpRequest();\n    if (generatorWrapper.year) {\n      generatorWrapper.dispatchUnhandledRejection = getSingletonInstance(generatorWrapper.year);\n    } else {\n      generatorWrapper.dispatchUnhandledRejection = getSingletonInstance(singletonInstance);\n    }\n    generatorWrapper.entryIdCounter.onreadystatechange = bindOrWrapFunction(generatorWrapper.updateMaxSize, generatorWrapper);\n    try {\n      generatorWrapper.resolvePromise = true;\n      generatorWrapper.entryIdCounter.open(CustomMap, String(value), true);\n      generatorWrapper.resolvePromise = false;\n    } catch (entryIdCounter) {\n      handleRequestError(generatorWrapper);\n      return;\n    }\n    value = findEntry || \"\";\n    findEntry = new Map(generatorWrapper.headers);\n    var iterateEntries = Array.from(findEntry.keys()).find(function (entryIdCounter) {\n      return entryIdCounter.toLowerCase() == \"content-type\";\n    });\n    var createCircularNode = globalScope.FormData && value instanceof globalScope.FormData;\n    if (!(!containsElement(contentTypesWithPayload, CustomMap) || iterateEntries || createCircularNode)) {\n      findEntry.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n    }\n    CustomMap = getIterator(findEntry);\n    for (findEntry = CustomMap.next(); !findEntry.done; findEntry = CustomMap.next()) {\n      iterateEntries = getIterator(findEntry.value);\n      findEntry = iterateEntries.next().value;\n      iterateEntries = iterateEntries.next().value;\n      generatorWrapper.entryIdCounter.setRequestHeader(findEntry, iterateEntries);\n    }\n    if (generatorWrapper.totalAdBufferingTime) {\n      generatorWrapper.entryIdCounter.responseType = generatorWrapper.totalAdBufferingTime;\n    }\n    if (\"withCredentials\" in generatorWrapper.entryIdCounter && generatorWrapper.entryIdCounter.withCredentials !== generatorWrapper.tryCall) {\n      generatorWrapper.entryIdCounter.withCredentials = generatorWrapper.tryCall;\n    }\n    try {\n      clearTimeoutIfSet(generatorWrapper);\n      if (generatorWrapper.handleThenable > 0) {\n        generatorWrapper.onFulfilled = setAsyncTimeout(generatorWrapper.definePropertyPolyfill, generatorWrapper.handleThenable, generatorWrapper);\n      }\n      generatorWrapper.isDone = true;\n      generatorWrapper.entryIdCounter.send(value);\n      generatorWrapper.isDone = false;\n    } catch (entryIdCounter) {\n      handleRequestError(generatorWrapper);\n    }\n  };\n  HttpRequest.prototype.definePropertyPolyfill = function () {\n    if (typeof closureLibraryBase != \"undefined\" && this.entryIdCounter) {\n      this.handleAsync = 8;\n      this.dispatchEvent(\"timeout\");\n      this.abort(8);\n    }\n  };\n  var handleRequestError = function (generatorWrapper) {\n    generatorWrapper.tasks = false;\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper.setTimeoutWrapper = true;\n      generatorWrapper.entryIdCounter.abort();\n      generatorWrapper.setTimeoutWrapper = false;\n    }\n    generatorWrapper.handleAsync = 5;\n    dispatchErrorEvents(generatorWrapper);\n    cleanupRequest(generatorWrapper);\n  };\n  var dispatchErrorEvents = function (generatorWrapper) {\n    if (!generatorWrapper.handleThenable) {\n      generatorWrapper.handleThenable = true;\n      generatorWrapper.dispatchEvent(\"complete\");\n      generatorWrapper.dispatchEvent(\"error\");\n    }\n  };\n  HttpRequest.prototype.abort = function (generatorWrapper) {\n    if (this.entryIdCounter && this.tasks) {\n      this.tasks = false;\n      this.setTimeoutWrapper = true;\n      this.entryIdCounter.abort();\n      this.setTimeoutWrapper = false;\n      this.handleAsync = generatorWrapper || 7;\n      this.dispatchEvent(\"complete\");\n      this.dispatchEvent(\"abort\");\n      cleanupRequest(this);\n    }\n  };\n  HttpRequest.prototype.getAdEnvironment = function () {\n    if (this.entryIdCounter) {\n      if (this.tasks) {\n        this.tasks = false;\n        this.setTimeoutWrapper = true;\n        this.entryIdCounter.abort();\n        this.setTimeoutWrapper = false;\n      }\n      cleanupRequest(this, true);\n    }\n    HttpRequest.executeGeneratorAsPromise.getAdEnvironment.call(this);\n  };\n  HttpRequest.prototype.updateMaxSize = function () {\n    if (!this.handleIteratorResult()) {\n      if (this.resolvePromise || this.isDone || this.setTimeoutWrapper) {\n        checkRequestStatus(this);\n      } else {\n        this.createIterator();\n      }\n    }\n  };\n  HttpRequest.prototype.createIterator = function () {\n    checkRequestStatus(this);\n  };\n  var checkRequestStatus = function (generatorWrapper) {\n    if (generatorWrapper.tasks && typeof closureLibraryBase != \"undefined\" && (!generatorWrapper.dispatchUnhandledRejection[1] || getRequestReadyState(generatorWrapper) != 4 || getRequestStatus(generatorWrapper) != 2)) {\n      if (generatorWrapper.isDone && getRequestReadyState(generatorWrapper) == 4) {\n        setAsyncTimeout(generatorWrapper.updateMaxSize, 0, generatorWrapper);\n      } else {\n        generatorWrapper.dispatchEvent(\"readystatechange\");\n        if (getRequestReadyState(generatorWrapper) == 4) {\n          generatorWrapper.tasks = false;\n          try {\n            var value = getRequestStatus(generatorWrapper);\n            generatorWrapper: switch (value) {\n              case 200:\n              case 201:\n              case 202:\n              case 204:\n              case 206:\n              case 304:\n              case 1223:\n                var CustomMap = true;\n                break generatorWrapper;\n              default:\n                CustomMap = false;\n            }\n            var findEntry;\n            if (!(findEntry = CustomMap)) {\n              var iterateEntries;\n              if (iterateEntries = value === 0) {\n                var createCircularNode = String(generatorWrapper.logError).match(urlRegex)[1] || null;\n                if (!createCircularNode && globalScope.self && globalScope.self.location) {\n                  createCircularNode = globalScope.self.location.protocol.slice(0, -1);\n                }\n                iterateEntries = !httpRegex.test(createCircularNode ? createCircularNode.toLowerCase() : \"\");\n              }\n              findEntry = iterateEntries;\n            }\n            if (findEntry) {\n              generatorWrapper.dispatchEvent(\"complete\");\n              generatorWrapper.dispatchEvent(\"success\");\n            } else {\n              generatorWrapper.handleAsync = 6;\n              dispatchErrorEvents(generatorWrapper);\n            }\n          } finally {\n            cleanupRequest(generatorWrapper);\n          }\n        }\n      }\n    }\n  };\n  var cleanupRequest = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter) {\n      clearTimeoutIfSet(generatorWrapper);\n      var CustomMap = generatorWrapper.entryIdCounter;\n      var findEntry = generatorWrapper.dispatchUnhandledRejection[0] ? function () {} : null;\n      generatorWrapper.entryIdCounter = null;\n      generatorWrapper.dispatchUnhandledRejection = null;\n      if (!value) {\n        generatorWrapper.dispatchEvent(\"ready\");\n      }\n      try {\n        CustomMap.onreadystatechange = findEntry;\n      } catch (iterateEntries) {}\n    }\n  };\n  var clearTimeoutIfSet = function (generatorWrapper) {\n    if (generatorWrapper.onFulfilled) {\n      globalScope.clearTimeout(generatorWrapper.onFulfilled);\n      generatorWrapper.onFulfilled = null;\n    }\n  };\n  HttpRequest.prototype.isActive = function () {\n    return !!this.entryIdCounter;\n  };\n  var getRequestReadyState = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      return generatorWrapper.entryIdCounter.readyState;\n    } else {\n      return 0;\n    }\n  };\n  var getRequestStatus = function (generatorWrapper) {\n    try {\n      if (getRequestReadyState(generatorWrapper) > 2) {\n        return generatorWrapper.entryIdCounter.status;\n      } else {\n        return -1;\n      }\n    } catch (value) {\n      return -1;\n    }\n  };\n  var parseResponse = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper: {\n        generatorWrapper = generatorWrapper.entryIdCounter.responseText;\n        if (globalScope.JSON) {\n          try {\n            var value = globalScope.JSON.parse(generatorWrapper);\n            break generatorWrapper;\n          } catch (CustomMap) {}\n        }\n        value = safeParseJSON(generatorWrapper);\n      }\n      return value;\n    }\n  };\n  var GetRequest = function () {};\n  GetRequest.prototype.get = function (generatorWrapper) {\n    return makeGetRequest({\n      url: generatorWrapper.url,\n      timeout: generatorWrapper.timeout,\n      withCredentials: undefined === generatorWrapper.withCredentials ? true : generatorWrapper.withCredentials,\n      method: \"GET\",\n      headers: undefined === generatorWrapper.headers ? {} : generatorWrapper.headers\n    });\n  };\n  var makeGetRequest = function (generatorWrapper) {\n    var value = generatorWrapper.url;\n    var CustomMap = generatorWrapper.timeout;\n    var findEntry = generatorWrapper.withCredentials;\n    var iterateEntries = generatorWrapper.method;\n    var createCircularNode = undefined === generatorWrapper.content ? undefined : generatorWrapper.content;\n    var entryIdCounter = undefined === generatorWrapper.headers ? {} : generatorWrapper.headers;\n    return makeRequest({\n      url: value,\n      timeout: CustomMap,\n      withCredentials: findEntry,\n      method: iterateEntries,\n      content: createCircularNode,\n      headers: entryIdCounter\n    }).then(function (key) {\n      return Promise.resolve(key);\n    }, function (key) {\n      if (key instanceof Error && key.message == 6 && findEntry) {\n        return makeRequest({\n          url: value,\n          timeout: CustomMap,\n          withCredentials: !findEntry,\n          method: iterateEntries,\n          content: createCircularNode,\n          headers: entryIdCounter\n        });\n      } else {\n        return Promise.reject(key);\n      }\n    });\n  };\n  var makeRequest = function (generatorWrapper) {\n    var value = generatorWrapper.url;\n    var CustomMap = generatorWrapper.timeout;\n    var findEntry = generatorWrapper.withCredentials;\n    var iterateEntries = generatorWrapper.method;\n    var createCircularNode = undefined === generatorWrapper.content ? undefined : generatorWrapper.content;\n    if (undefined === generatorWrapper.headers) {\n      generatorWrapper = {};\n    } else {\n      generatorWrapper = generatorWrapper.headers;\n    }\n    var entryIdCounter = new HttpRequest();\n    entryIdCounter.tryCall = findEntry;\n    entryIdCounter.handleThenable = Math.max(0, getRemainingTime(CustomMap));\n    for (var key in generatorWrapper) entryIdCounter.headers.set(key, generatorWrapper[key]);\n    var value = new EventDispatcher();\n    return new Promise(function (entry, currentEntry) {\n      value.sortArray(entryIdCounter, \"success\", function () {\n        generatorWrapper: {\n          if (isAppleTV()) {\n            try {\n              parseResponse(entryIdCounter);\n              var foundEntry = \"application/json\";\n              break generatorWrapper;\n            } catch (user) {\n              foundEntry = \"application/xml\";\n              break generatorWrapper;\n            }\n          }\n          if (entryIdCounter.entryIdCounter && getRequestReadyState(entryIdCounter) == 4) {\n            foundEntry = entryIdCounter.entryIdCounter.getResponseHeader(\"Content-Type\");\n            if (foundEntry === null) {\n              foundEntry = undefined;\n            } else {\n              foundEntry = foundEntry;\n            }\n          } else {\n            foundEntry = undefined;\n          }\n          foundEntry = foundEntry || \"\";\n        }\n        if (-1 != foundEntry.indexOf(\"application/json\")) {\n          try {\n            entry(parseResponse(entryIdCounter) || {});\n          } catch (user) {\n            currentEntry(new CustomError(5, getRequestStatus(entryIdCounter)));\n          }\n        } else {\n          try {\n            var resolveFunction = entryIdCounter.entryIdCounter ? entryIdCounter.entryIdCounter.responseXML : null;\n          } catch (user) {\n            resolveFunction = null;\n          }\n          if (resolveFunction == null) {\n            try {\n              var rejectFunction = entryIdCounter.entryIdCounter ? entryIdCounter.entryIdCounter.responseText : \"\";\n            } catch (user) {\n              rejectFunction = \"\";\n            }\n            if (typeof DOMParser != \"undefined\") {\n              resolveFunction = new DOMParser();\n              rejectFunction = sanitizeInput(rejectFunction);\n              resolveFunction = resolveFunction.parseFromString(unwrapSafeHtml(rejectFunction), \"application/xml\");\n            } else {\n              throw Error(\"Your browser does not support loading xml documents\");\n            }\n          }\n          entry(resolveFunction);\n        }\n        value.markAsCompleted();\n        entryIdCounter.markAsCompleted();\n      });\n      value.sortArray(entryIdCounter, [\"error\", \"timeout\"], function () {\n        currentEntry(new CustomError(entryIdCounter.handleAsync, getRequestStatus(entryIdCounter)));\n        value.markAsCompleted();\n        entryIdCounter.markAsCompleted();\n      });\n      sendRequest(entryIdCounter, convertToHttpsIfApplicable(value), iterateEntries, createCircularNode);\n    });\n  };\n  defineNamespace(\"google.javascript.ads.imalib.common.UrlLoader\", GetRequest);\n  var doubleclickRegExp = RegExp(\"ad\\\\.doubleclick\\\\.net/ddm/track(imp|clk)\");\n  function isAttributionReportingSupported() {\n    return isFeaturePolicySupported(\"attribution-reporting\");\n  }\n  var sendTrackingData = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === CustomMap) {\n      CustomMap = false;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === iterateEntries) {\n      iterateEntries = null;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    try {\n      if (undefined === findEntry ? 0 : findEntry) {\n        value = convertToHttpsIfApplicable(value, \"https\");\n      } else {\n        value = convertToHttpsIfApplicable(value);\n      }\n      if (doubleclickRegExp.test(value)) {\n        value = value.replace(\"?\", \";tpsrc=ima?\");\n        iterateEntries = iterateEntries || \"\";\n      }\n      CustomMap = CustomMap || isTrustedDomain(value);\n      var createCircularNode = iterateEntries != null && window.fetch != null;\n      if (generatorWrapper.tasks || createCircularNode) {\n        fetchWithRetry(generatorWrapper, value, CustomMap, iterateEntries);\n      } else {\n        var entryIdCounter = isAttributionReportingSupported() ? iterateEntries : null;\n        if (isAppleTV()) {\n          sendGetRequest(value);\n        } else {\n          loadImage(generatorWrapper, value, CustomMap, entryIdCounter);\n        }\n      }\n    } catch (key) {}\n  };\n  var createFetchRequestOptions = function (generatorWrapper, value) {\n    var CustomMap = {\n      keepalive: true,\n      method: \"get\",\n      redirect: \"follow\"\n    };\n    if (generatorWrapper) {\n      CustomMap.referrerPolicy = \"no-referrer\";\n    }\n    if (value) {\n      CustomMap.credentials = \"include\";\n      if (\"setAttributionReporting\" in XMLHttpRequest.prototype) {\n        CustomMap.attributionReporting = {\n          eventSourceEligible: true,\n          triggerEligible: false\n        };\n        CustomMap.mode = \"no-cors\";\n      } else {\n        CustomMap.headers = {\n          \"Attribution-Reporting-Eligible\": \"event-source\"\n        };\n      }\n    } else {\n      CustomMap.mode = \"no-cors\";\n    }\n    return CustomMap;\n  };\n  var fetchWithRetry = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === findEntry) {\n      findEntry = null;\n    } else {\n      findEntry = findEntry;\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"faa\", \"1\");\n    settlePromise(resolvePromise.getAdInstance(), \"alp\", findEntry === null ? \"0\" : \"1\");\n    var iterateEntries = isAttributionReportingSupported();\n    settlePromise(resolvePromise.getAdInstance(), \"arpa\", iterateEntries ? \"1\" : \"0\");\n    fetch(value, createFetchRequestOptions(CustomMap, findEntry === \"\" && iterateEntries)).then(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"fas\", \"1\");\n    }).catch(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"faf\", \"1\");\n      generatorWrapper.tasks = false;\n      var createCircularNode = findEntry;\n      if (isAttributionReportingSupported()) {\n        createCircularNode = createCircularNode;\n      } else {\n        createCircularNode = null;\n      }\n      if (isAppleTV()) {\n        sendGetRequest(value);\n      } else {\n        loadImage(generatorWrapper, value, CustomMap, createCircularNode);\n      }\n    });\n    if (iterateEntries && findEntry) {\n      fetch(findEntry, createFetchRequestOptions(CustomMap, true));\n    }\n  };\n  var loadImage = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = new Image();\n    var createCircularNode = (generatorWrapper.setTimeoutWrapper++).toString();\n    generatorWrapper.entryIdCounter.set(createCircularNode, iterateEntries);\n    iterateEntries.onload = iterateEntries.onerror = function () {\n      generatorWrapper.entryIdCounter.delete(createCircularNode);\n    };\n    if (CustomMap) {\n      iterateEntries.referrerPolicy = \"no-referrer\";\n    }\n    if (findEntry != null) {\n      iterateEntries.attributionSrc = findEntry;\n    }\n    iterateEntries.src = value;\n  };\n  var sendGetRequest = function (generatorWrapper) {\n    new GetRequest().get({\n      url: generatorWrapper,\n      timeout: new Timer()\n    });\n  };\n  var EventTypes = {\n    AUTOPLAY_DISALLOWED: \"autoplayDisallowed\",\n    allowedURLSchemes: \"beginFullscreen\",\n    CAN_PLAY: \"canPlay\",\n    CAN_PLAY_THROUGH: \"canPlayThrough\",\n    CLICK: \"click\",\n    DURATION_CHANGE: \"durationChange\",\n    Coordinate: \"end\",\n    Size: \"endFullscreen\",\n    ERROR: \"error\",\n    debugStringifyObject: \"focusSkipButton\",\n    LOAD_START: \"loadStart\",\n    LOADED: \"loaded\",\n    getParentElement: \"mediaLoadTimeout\",\n    containsElement: \"mediaPlaybackTimeout\",\n    PAUSE: \"pause\",\n    PLAY: \"play\",\n    PLAYING: \"playing\",\n    SEEKED: \"seeked\",\n    SEEKING: \"seeking\",\n    forEachInObject: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    STALLED: \"stalled\",\n    stringOrNull: \"start\",\n    TIME_UPDATE: \"timeUpdate\",\n    findFrameByName: \"timedMetadata\",\n    computeReferrerUrl: \"volumeChange\",\n    WAITING: \"waiting\",\n    deobfuscationId: \"windowFocusChanged\",\n    writeSafeHtmlToDocument: \"fullyLoaded\"\n  };\n  var MediaElement = function () {\n    AdEnvironmentConfig.apply(this, arguments);\n  };\n  inheritPrototype(MediaElement, AdEnvironmentConfig);\n  MediaElement.prototype.onFulfilled = function () {\n    return false;\n  };\n  MediaElement.prototype.dispatchUnhandledRejection = function () {\n    return -1;\n  };\n  MediaElement.prototype.handleThenable = function () {};\n  var itagResolutionMap = {};\n  var itagSupportsAutoplayMap = (itagResolutionMap[18] = -1, itagResolutionMap[22] = -1, itagResolutionMap[43] = 350, itagResolutionMap[44] = 350, itagResolutionMap[45] = 350, itagResolutionMap[59] = -1, itagResolutionMap[133] = 350, itagResolutionMap[134] = 350, itagResolutionMap[135] = 350, itagResolutionMap[136] = 350, itagResolutionMap[139] = 50, itagResolutionMap[140] = 50, itagResolutionMap[141] = 50, itagResolutionMap[160] = 350, itagResolutionMap[242] = 150, itagResolutionMap[243] = 150, itagResolutionMap[244] = 150, itagResolutionMap[245] = 150, itagResolutionMap[247] = 150, itagResolutionMap[249] = 50, itagResolutionMap[250] = 50, itagResolutionMap[251] = 50, itagResolutionMap[278] = 150, itagResolutionMap[342] = -1, itagResolutionMap[343] = -1, itagResolutionMap[344] = -1, itagResolutionMap[345] = -1, itagResolutionMap[346] = -1, itagResolutionMap[347] = -1, itagResolutionMap);\n  var itagFormatMap = {};\n  var itagCodecMap = (itagFormatMap[18] = false, itagFormatMap[22] = false, itagFormatMap[43] = true, itagFormatMap[44] = true, itagFormatMap[45] = true, itagFormatMap[59] = false, itagFormatMap[133] = true, itagFormatMap[134] = true, itagFormatMap[135] = true, itagFormatMap[136] = true, itagFormatMap[139] = true, itagFormatMap[140] = true, itagFormatMap[141] = true, itagFormatMap[160] = true, itagFormatMap[242] = true, itagFormatMap[243] = true, itagFormatMap[244] = true, itagFormatMap[245] = true, itagFormatMap[247] = true, itagFormatMap[249] = true, itagFormatMap[250] = true, itagFormatMap[251] = true, itagFormatMap[278] = true, itagFormatMap[342] = false, itagFormatMap[343] = false, itagFormatMap[344] = false, itagFormatMap[345] = false, itagFormatMap[346] = false, itagFormatMap[347] = false, itagFormatMap);\n  var videoFormatMappings = {};\n  var itagContainerMap = (videoFormatMappings[18] = \"video/mp4\", videoFormatMappings[22] = \"video/mp4\", videoFormatMappings[43] = \"video/webm\", videoFormatMappings[44] = \"video/webm\", videoFormatMappings[45] = \"video/webm\", videoFormatMappings[59] = \"video/mp4\", videoFormatMappings[133] = \"video/mp4\", videoFormatMappings[134] = \"video/mp4\", videoFormatMappings[135] = \"video/mp4\", videoFormatMappings[136] = \"video/mp4\", videoFormatMappings[139] = \"audio/mp4\", videoFormatMappings[140] = \"audio/mp4\", videoFormatMappings[141] = \"audio/mp4\", videoFormatMappings[160] = \"video/mp4\", videoFormatMappings[242] = \"video/webm\", videoFormatMappings[243] = \"video/webm\", videoFormatMappings[244] = \"video/webm\", videoFormatMappings[245] = \"video/webm\", videoFormatMappings[247] = \"video/webm\", videoFormatMappings[249] = \"audio/webm\", videoFormatMappings[250] = \"audio/webm\", videoFormatMappings[251] = \"audio/webm\", videoFormatMappings[278] = \"video/webm\", videoFormatMappings[342] = \"video/mp4\", videoFormatMappings[343] = \"video/mp4\", videoFormatMappings[344] = \"video/mp4\", videoFormatMappings[345] = \"video/mp4\", videoFormatMappings[346] = \"video/mp4\", videoFormatMappings[347] = \"video/mp4\", videoFormatMappings);\n  var codecMappings = {};\n  var codecMappingsInitialized = (codecMappings[18] = \"avc1.42001E, mp4a.40.2\", codecMappings[22] = \"avc1.64001F, mp4a.40.2\", codecMappings[43] = \"vp8, vorbis\", codecMappings[44] = \"vp8, vorbis\", codecMappings[45] = \"vp8, vorbis\", codecMappings[59] = \"avc1.4D001F, mp4a.40.2\", codecMappings[133] = \"avc1.4D401E\", codecMappings[134] = \"avc1.4D401E\", codecMappings[135] = \"avc1.4D401E\", codecMappings[136] = \"avc1.4D401E\", codecMappings[139] = \"mp4a.40.2\", codecMappings[140] = \"mp4a.40.2\", codecMappings[141] = \"mp4a.40.2\", codecMappings[160] = \"avc1.4D401E\", codecMappings[242] = \"vp9\", codecMappings[243] = \"vp9\", codecMappings[244] = \"vp9\", codecMappings[245] = \"vp9\", codecMappings[247] = \"vp9\", codecMappings[249] = \"opus\", codecMappings[250] = \"opus\", codecMappings[251] = \"opus\", codecMappings[278] = \"vp9\", codecMappings[342] = \"avc1.42E01E, mp4a.40.2\", codecMappings[343] = \"avc1.42E01E, mp4a.40.2\", codecMappings[344] = \"avc1.42E01E, mp4a.40.2\", codecMappings[345] = \"avc1.42E01E, mp4a.40.2\", codecMappings[346] = \"avc1.42E01E, mp4a.40.2\", codecMappings[347] = \"avc1.4D001F, mp4a.40.2\", codecMappings);\n  var itagRegex = RegExp(\"/itag/(\\\\d+)/\");\n  function getItagValue(generatorWrapper) {\n    var value = Number(getParameterFromUrl(generatorWrapper, \"itag\"));\n    if (value) {\n      return value;\n    } else {\n      if ((generatorWrapper = generatorWrapper.match(itagRegex)) && generatorWrapper.length === 2) {\n        return Number(generatorWrapper[1]);\n      } else {\n        return null;\n      }\n    }\n  }\n  function getMediaSourceString(generatorWrapper) {\n    var value = itagContainerMap[generatorWrapper];\n    generatorWrapper = codecMappingsInitialized[generatorWrapper];\n    if (value) {\n      value = stringifyNullable(value).toLowerCase();\n      if (generatorWrapper) {\n        value = value + '; codecs=\"' + stringifyNullable(generatorWrapper) + '\"';\n      } else {\n        value = value;\n      }\n    } else {\n      value = \"\";\n    }\n    return value;\n  }\n  function createCustomEvent(generatorWrapper, value) {\n    if (typeof CustomEvent === \"function\") {\n      return new CustomEvent(generatorWrapper, {\n        detail: value\n      });\n    }\n    var CustomMap = document.createEvent(\"CustomEvent\");\n    CustomMap.initCustomEvent(generatorWrapper, false, true, value);\n    return CustomMap;\n  }\n  var MediaSourceLoader = function (generatorWrapper, value) {\n    MediaElement.call(this);\n    var CustomMap = this;\n    this.tasks = value;\n    this.isDone = this.setTimeoutWrapper = this.entryIdCounter = 0;\n    this.handleAsync = null;\n    this.uri = new table(generatorWrapper);\n    this.state = 0;\n    var findEntry;\n    if ((findEntry = this.tasks) == null) {\n      this.resolvePromise = undefined;\n    } else {\n      this.resolvePromise = findEntry.initializeMraid();\n    }\n    executeOrDelayUntilDisposed(this, function () {\n      markAsCompletedWrapper(CustomMap.tasks);\n    });\n  };\n  inheritPrototype(MediaSourceLoader, MediaElement);\n  MediaSourceLoader.prototype.dispatchUnhandledRejection = function () {\n    return this.entryIdCounter;\n  };\n  MediaSourceLoader.prototype.onFulfilled = function () {\n    return this.state === 3;\n  };\n  MediaSourceLoader.prototype.handleThenable = function (generatorWrapper) {\n    if (this.state === 1) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 2;\n    } else if (this.state === 0) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 1;\n      checkAndHandleMediaSourceState(this);\n    }\n  };\n  var checkAndHandleMediaSourceState = function (generatorWrapper) {\n    wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        if (generatorWrapper.state === 2) {\n          generatorWrapper.state = 1;\n        }\n        return generatorYield(value, fetchMediaSegments(generatorWrapper), 4);\n      }\n      var CustomMap = generatorWrapper.isDone > 3;\n      if (CustomMap) {\n        if (generatorWrapper.handleAsync === null) {\n          generatorWrapper.handleAsync = 400;\n        }\n        var findEntry = createCustomEvent(\"media_source_error\", {\n          code: generatorWrapper.setTimeoutWrapper > 0 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n          message: 'Response code \"' + generatorWrapper.handleAsync + '\" with ' + generatorWrapper.entryIdCounter + \" bytes requested and \" + generatorWrapper.setTimeoutWrapper + \" bytes loaded\"\n        });\n        generatorWrapper.dispatchEvent(findEntry);\n      }\n      if (generatorWrapper.setTimeoutWrapper < generatorWrapper.entryIdCounter && generatorWrapper.state !== 3 && !CustomMap) {\n        value.entryIdCounter = 1;\n      } else {\n        if (generatorWrapper.state !== 3) {\n          generatorWrapper.state = 0;\n        }\n        value.entryIdCounter = 0;\n      }\n    });\n  };\n  var fetchMediaSegments = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          value = generatorWrapper.setTimeoutWrapper + \"-\" + (generatorWrapper.entryIdCounter - 1);\n          setParameter(generatorWrapper.uri, \"range\", value);\n          if (!generatorWrapper.tasks) {\n            CustomMap.entryIdCounter = 2;\n            break;\n          }\n          return generatorYield(CustomMap, generatorWrapper.resolvePromise, 3);\n        case 3:\n          return CustomMap.return(handleMediaSourceBuffer(generatorWrapper));\n        case 2:\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, fetchAndProcessMedia(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          generatorWrapper.isDone++;\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var handleMediaSourceBuffer = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          if (generatorWrapper.tasks) {\n            return generatorYield(CustomMap, generatorWrapper.tasks.containsElement(generatorWrapper.uri), 2);\n          } else {\n            return CustomMap.return(Promise.reject());\n          }\n        case 2:\n          if (value = CustomMap.tasks) {\n            if (value.handleGeneratorError) {\n              generatorWrapper.state = 3;\n            }\n            dispatchMediaProgressEvent(generatorWrapper, value.video);\n            return CustomMap.return();\n          }\n          CustomMap.setTimeoutWrapper = 3;\n          return generatorYield(CustomMap, fetchAndProcessMedia(generatorWrapper), 5);\n        case 5:\n          resetGeneratorState(CustomMap);\n          break;\n        case 3:\n          getGeneratorException(CustomMap);\n          generatorWrapper.isDone++;\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var fetchAndProcessMedia = function (generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key;\n    return wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        value = 0;\n        CustomMap = generatorWrapper.entryIdCounter - generatorWrapper.setTimeoutWrapper;\n        return generatorYield(value, fetch(generatorWrapper.uri.toString()), 2);\n      }\n      findEntry = value.tasks;\n      if (findEntry.status >= 400) {\n        settlePromise(resolvePromise.getAdInstance(), \"lvlfes\", findEntry.status.toString());\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      if ((iterateEntries = findEntry.body) == null) {\n        createCircularNode = undefined;\n      } else {\n        createCircularNode = iterateEntries.getReader();\n      }\n      if (!createCircularNode) {\n        logError(\"lvlmr\");\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      entryIdCounter = [];\n      key = function () {\n        var entry, currentEntry, foundEntry, resolveFunction, rejectFunction, user;\n        return wrapGeneratorToPromise(function (profileData) {\n          if (profileData.entryIdCounter == 1) {\n            return generatorYield(profileData, createCircularNode.read(), 2);\n          }\n          entry = profileData.tasks;\n          currentEntry = entry.done;\n          foundEntry = entry.value;\n          if (currentEntry) {\n            resolveFunction = value < CustomMap;\n            finalizeMediaBuffer(generatorWrapper, entryIdCounter, resolveFunction);\n            return profileData.return();\n          }\n          entryIdCounter.push(foundEntry);\n          if ((rejectFunction = foundEntry) == null) {\n            value += undefined;\n          } else {\n            value += rejectFunction.length;\n          }\n          dispatchMediaProgressEvent(generatorWrapper, (user = foundEntry) == null ? undefined : user.buffer);\n          return generatorYield(profileData, key(), 0);\n        });\n      };\n      return generatorYield(value, key(), 0);\n    });\n  };\n  var finalizeMediaBuffer = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      generatorWrapper.state = 3;\n      dispatchMediaProgressEvent(generatorWrapper, new ArrayBuffer(0));\n    }\n    var findEntry = new Uint8Array(value.reduce(function (entryIdCounter, key) {\n      return entryIdCounter + key.length;\n    }, 0));\n    var iterateEntries = 0;\n    value = getIterator(value);\n    for (var createCircularNode = value.next(); !createCircularNode.done; createCircularNode = value.next()) {\n      createCircularNode = createCircularNode.value;\n      findEntry.set(createCircularNode, iterateEntries);\n      iterateEntries += createCircularNode.length;\n    }\n    if (generatorWrapper.tasks && findEntry.buffer.byteLength > 0) {\n      generatorWrapper.tasks.isIpod(findEntry.buffer, generatorWrapper.uri, 0, CustomMap);\n    }\n  };\n  var dispatchMediaProgressEvent = function (generatorWrapper, value) {\n    if (value !== null) {\n      value = value.slice(0);\n      generatorWrapper.setTimeoutWrapper += value.byteLength;\n      generatorWrapper.dispatchEvent({\n        type: \"progress\",\n        CustomError: value\n      });\n    }\n  };\n  MediaSourceLoader.prototype.getAdEnvironment = function () {\n    var generatorWrapper;\n    if ((generatorWrapper = this.tasks) == null ? 0 : generatorWrapper.getUniqueId()) {\n      this.tasks.closeCache();\n    }\n    MediaElement.prototype.getAdEnvironment.call(this);\n  };\n  var UriParameterManager = function (generatorWrapper) {\n    this.uri = generatorWrapper;\n    this.entryIdCounter = parseUriParameters(generatorWrapper);\n  };\n  var parseUriParameters = function (generatorWrapper) {\n    return new Map(generatorWrapper.setTimeoutWrapper.split(\"/\").reduce(function (value, CustomMap, findEntry, iterateEntries) {\n      if (findEntry % 2) {\n        value.set(iterateEntries[findEntry - 1], CustomMap);\n      }\n      return value;\n    }, new Map()));\n  };\n  UriParameterManager.prototype.getAdId = function () {\n    return getParameterById(this, \"id\");\n  };\n  var getRangeStart = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.uri.entryIdCounter.get(\"range\");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.split(\"-\")[0];\n    if (!generatorWrapper || isNaN(Number(generatorWrapper))) {\n      return null;\n    } else {\n      return Number(generatorWrapper);\n    }\n  };\n  var getParameterById = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.uri.entryIdCounter.get(value);\n    if (CustomMap) {\n      return CustomMap;\n    } else {\n      if (generatorWrapper = generatorWrapper.entryIdCounter.get(value)) {\n        return generatorWrapper;\n      } else {\n        return null;\n      }\n    }\n  };\n  var EmptyFunction = function () {};\n  var trustedDomains = [\"doubleclick.net\"];\n  function isSupportedEnvironment() {\n    if (isIphone() || handleAsync(\"iPad\") || handleAsync(\"iPod\")) {\n      return false;\n    }\n    if (isAndroid()) {\n      if (undefined === trustedDomainsListCache) {\n        generatorWrapper: {\n          if (undefined === userAgentStringCache) {\n            if (isAppleDevice) {\n              var generatorWrapper = includesString(getUserAgentString(), \"Safari\");\n              var value = new table(window.location.href).entryIdCounter.hasPlatform(\"js\");\n              value: {\n                if ((value = value.length ? value[0] : \"\") && value.lastIndexOf(\"afma-\", 0) == 0) {\n                  var CustomMap = value.lastIndexOf(\"v\");\n                  if (-1 < CustomMap && (value = value.substr(CustomMap + 1).match(/^(\\d+\\.\\d+\\.\\d+|^\\d+\\.\\d+|^\\d+)(-.*)?$/))) {\n                    value = value[1];\n                    break value;\n                  }\n                }\n                value = \"0.0.0\";\n              }\n              if (!generatorWrapper || value !== \"0.0.0\") {\n                generatorWrapper = userAgentStringCache = true;\n                break generatorWrapper;\n              }\n            }\n            userAgentStringCache = false;\n          }\n          generatorWrapper = userAgentStringCache;\n        }\n        if (!generatorWrapper) {\n          if (undefined === isAppleDeviceCache) {\n            if (includesString(getUserAgentString(), \"afma-sdk-a\")) {\n              isAppleDeviceCache = true;\n            } else {\n              isAppleDeviceCache = false;\n            }\n          }\n          generatorWrapper = isAppleDeviceCache;\n        }\n        trustedDomainsListCache = generatorWrapper;\n      }\n      if (trustedDomainsListCache) {\n        return true;\n      } else {\n        if (isTablet()) {\n          return false;\n        } else {\n          return isTrustedDomain();\n        }\n      }\n    }\n    generatorWrapper = isMacOS() || (hasPlatform() ? userAgentData.platform === \"Linux\" : handleAsync(\"Linux\")) || (hasPlatform() ? userAgentData.platform === \"Windows\" : handleAsync(\"Windows\")) || (hasPlatform() ? userAgentData.platform === \"Chrome OS\" : handleAsync(\"CrOS\"));\n    if ((handleThenable(vm) || handleThenable(tm) || handleThenable(um)) && generatorWrapper && isChromiumBased()) {\n      return isTrustedDomain();\n    } else {\n      return false;\n    }\n  }\n  function isTrustedDomain() {\n    var generatorWrapper = false;\n    var value = new table(window.location.href).tasks;\n    trustedDomains.forEach(function (CustomMap) {\n      if (value.includes(CustomMap)) {\n        generatorWrapper = true;\n      }\n    });\n    return generatorWrapper;\n  }\n  var ErrorBase,\n    CustomError = function (generatorWrapper, value, CustomMap) {\n      if (typeof generatorWrapper === \"number\") {\n        var findEntry = {\n          name: getNameFromError(generatorWrapper)\n        };\n      } else {\n        findEntry = generatorWrapper;\n        generatorWrapper = getErrorFromName(generatorWrapper.name);\n      }\n      this.code = generatorWrapper;\n      this.entryIdCounter = findEntry;\n      value = \"Error \" + value + \": \" + this.getAdName();\n      if (CustomMap) {\n        value += \", \" + CustomMap;\n      }\n      CustomError.call(this, value);\n    };\n  inheritPrototype(CustomError, CustomError);\n  CustomError.prototype.getAdName = function () {\n    return this.entryIdCounter.name || \"\";\n  };\n  var ErrorCodes = {\n    getAdPropertyNumericValue: 1,\n    isMobile: 2,\n    NOT_FOUND_ERR: 3,\n    rf: 4,\n    uf: 5,\n    extractBaseUrl: 6,\n    getNumericAdProperty: 7,\n    ABORT_ERR: 8,\n    getAdPropertyValue: 9,\n    createHtmlElement: 10,\n    TIMEOUT_ERR: 11,\n    getAdProperty: 12,\n    INVALID_ACCESS_ERR: 13,\n    INVALID_STATE_ERR: 14\n  };\n  var UnknownErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyNumericValue;\n  var NotFoundErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).NOT_FOUND_ERR;\n  var ConstraintErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).rf;\n  var DataErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).uf;\n  var TransactionInactiveErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getNumericAdProperty;\n  var AbortErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).ABORT_ERR;\n  var ReadOnlyErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyValue;\n  var TimeoutErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).TIMEOUT_ERR;\n  var QuotaExceededErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdProperty;\n  var InvalidAccessErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_ACCESS_ERR;\n  var InvalidStateErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_STATE_ERR;\n  var getErrorFromName = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case \"UnknownError\":\n        return UnknownErrorCode;\n      case \"NotFoundError\":\n        return NotFoundErrorCode;\n      case \"ConstraintError\":\n        return ConstraintErrorCode;\n      case \"DataError\":\n        return DataErrorCode;\n      case \"TransactionInactiveError\":\n        return TransactionInactiveErrorCode;\n      case \"AbortError\":\n        return",
  "= 400) {\n        settlePromise(resolvePromise.getAdInstance(), \"lvlfes\", findEntry.status.toString());\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      if ((iterateEntries = findEntry.body) == null) {\n        createCircularNode = undefined;\n      } else {\n        createCircularNode = iterateEntries.getReader();\n      }\n      if (!createCircularNode) {\n        logError(\"lvlmr\");\n        generatorWrapper.handleAsync = findEntry.status;\n        return value.return(Promise.reject());\n      }\n      entryIdCounter = [];\n      key = function () {\n        var entry, currentEntry, foundEntry, resolveFunction, rejectFunction, user;\n        return wrapGeneratorToPromise(function (profileData) {\n          if (profileData.entryIdCounter == 1) {\n            return generatorYield(profileData, createCircularNode.read(), 2);\n          }\n          entry = profileData.tasks;\n          currentEntry = entry.done;\n          foundEntry = entry.value;\n          if (currentEntry) {\n            resolveFunction = value < CustomMap;\n            finalizeMediaBuffer(generatorWrapper, entryIdCounter, resolveFunction);\n            return profileData.return();\n          }\n          entryIdCounter.push(foundEntry);\n          if ((rejectFunction = foundEntry) == null) {\n            value += undefined;\n          } else {\n            value += rejectFunction.length;\n          }\n          dispatchMediaProgressEvent(generatorWrapper, (user = foundEntry) == null ? undefined : user.buffer);\n          return generatorYield(profileData, key(), 0);\n        });\n      };\n      return generatorYield(value, key(), 0);\n    });\n  };\n  var finalizeMediaBuffer = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      generatorWrapper.state = 3;\n      dispatchMediaProgressEvent(generatorWrapper, new ArrayBuffer(0));\n    }\n    var findEntry = new Uint8Array(value.reduce(function (entryIdCounter, key) {\n      return entryIdCounter + key.length;\n    }, 0));\n    var iterateEntries = 0;\n    value = getIterator(value);\n    for (var createCircularNode = value.next(); !createCircularNode.done; createCircularNode = value.next()) {\n      createCircularNode = createCircularNode.value;\n      findEntry.set(createCircularNode, iterateEntries);\n      iterateEntries += createCircularNode.length;\n    }\n    if (generatorWrapper.tasks && findEntry.buffer.byteLength > 0) {\n      generatorWrapper.tasks.isIpod(findEntry.buffer, generatorWrapper.uri, 0, CustomMap);\n    }\n  };\n  var dispatchMediaProgressEvent = function (generatorWrapper, value) {\n    if (value !== null) {\n      value = value.slice(0);\n      generatorWrapper.setTimeoutWrapper += value.byteLength;\n      generatorWrapper.dispatchEvent({\n        type: \"progress\",\n        CustomError: value\n      });\n    }\n  };\n  MediaSourceLoader.prototype.getAdEnvironment = function () {\n    var generatorWrapper;\n    if ((generatorWrapper = this.tasks) == null ? 0 : generatorWrapper.getUniqueId()) {\n      this.tasks.closeCache();\n    }\n    MediaElement.prototype.getAdEnvironment.call(this);\n  };\n  var UriParameterManager = function (generatorWrapper) {\n    this.uri = generatorWrapper;\n    this.entryIdCounter = parseUriParameters(generatorWrapper);\n  };\n  var parseUriParameters = function (generatorWrapper) {\n    return new Map(generatorWrapper.setTimeoutWrapper.split(\"/\").reduce(function (value, CustomMap, findEntry, iterateEntries) {\n      if (findEntry % 2) {\n        value.set(iterateEntries[findEntry - 1], CustomMap);\n      }\n      return value;\n    }, new Map()));\n  };\n  UriParameterManager.prototype.getAdId = function () {\n    return getParameterById(this, \"id\");\n  };\n  var getRangeStart = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.uri.entryIdCounter.get(\"range\");\n    if (!generatorWrapper) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.split(\"-\")[0];\n    if (!generatorWrapper || isNaN(Number(generatorWrapper))) {\n      return null;\n    } else {\n      return Number(generatorWrapper);\n    }\n  };\n  var getParameterById = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.uri.entryIdCounter.get(value);\n    if (CustomMap) {\n      return CustomMap;\n    } else {\n      if (generatorWrapper = generatorWrapper.entryIdCounter.get(value)) {\n        return generatorWrapper;\n      } else {\n        return null;\n      }\n    }\n  };\n  var EmptyFunction = function () {};\n  var trustedDomains = [\"doubleclick.net\"];\n  function isSupportedEnvironment() {\n    if (isIphone() || handleAsync(\"iPad\") || handleAsync(\"iPod\")) {\n      return false;\n    }\n    if (isAndroid()) {\n      if (undefined === trustedDomainsListCache) {\n        generatorWrapper: {\n          if (undefined === userAgentStringCache) {\n            if (isAppleDevice) {\n              var generatorWrapper = includesString(getUserAgentString(), \"Safari\");\n              var value = new table(window.location.href).entryIdCounter.hasPlatform(\"js\");\n              value: {\n                if ((value = value.length ? value[0] : \"\") && value.lastIndexOf(\"afma-\", 0) == 0) {\n                  var CustomMap = value.lastIndexOf(\"v\");\n                  if (-1 < CustomMap && (value = value.substr(CustomMap + 1).match(/^(\\d+\\.\\d+\\.\\d+|^\\d+\\.\\d+|^\\d+)(-.*)?$/))) {\n                    value = value[1];\n                    break value;\n                  }\n                }\n                value = \"0.0.0\";\n              }\n              if (!generatorWrapper || value !== \"0.0.0\") {\n                generatorWrapper = userAgentStringCache = true;\n                break generatorWrapper;\n              }\n            }\n            userAgentStringCache = false;\n          }\n          generatorWrapper = userAgentStringCache;\n        }\n        if (!generatorWrapper) {\n          if (undefined === isAppleDeviceCache) {\n            if (includesString(getUserAgentString(), \"afma-sdk-a\")) {\n              isAppleDeviceCache = true;\n            } else {\n              isAppleDeviceCache = false;\n            }\n          }\n          generatorWrapper = isAppleDeviceCache;\n        }\n        trustedDomainsListCache = generatorWrapper;\n      }\n      if (trustedDomainsListCache) {\n        return true;\n      } else {\n        if (isTablet()) {\n          return false;\n        } else {\n          return isTrustedDomain();\n        }\n      }\n    }\n    generatorWrapper = isMacOS() || (hasPlatform() ? userAgentData.platform === \"Linux\" : handleAsync(\"Linux\")) || (hasPlatform() ? userAgentData.platform === \"Windows\" : handleAsync(\"Windows\")) || (hasPlatform() ? userAgentData.platform === \"Chrome OS\" : handleAsync(\"CrOS\"));\n    if ((handleThenable(vm) || handleThenable(tm) || handleThenable(um)) && generatorWrapper && isChromiumBased()) {\n      return isTrustedDomain();\n    } else {\n      return false;\n    }\n  }\n  function isTrustedDomain() {\n    var generatorWrapper = false;\n    var value = new table(window.location.href).tasks;\n    trustedDomains.forEach(function (CustomMap) {\n      if (value.includes(CustomMap)) {\n        generatorWrapper = true;\n      }\n    });\n    return generatorWrapper;\n  }\n  var ErrorBase,\n    CustomError = function (generatorWrapper, value, CustomMap) {\n      if (typeof generatorWrapper === \"number\") {\n        var findEntry = {\n          name: getNameFromError(generatorWrapper)\n        };\n      } else {\n        findEntry = generatorWrapper;\n        generatorWrapper = getErrorFromName(generatorWrapper.name);\n      }\n      this.code = generatorWrapper;\n      this.entryIdCounter = findEntry;\n      value = \"Error \" + value + \": \" + this.getAdName();\n      if (CustomMap) {\n        value += \", \" + CustomMap;\n      }\n      CustomError.call(this, value);\n    };\n  inheritPrototype(CustomError, CustomError);\n  CustomError.prototype.getAdName = function () {\n    return this.entryIdCounter.name || \"\";\n  };\n  var ErrorCodes = {\n    getAdPropertyNumericValue: 1,\n    isMobile: 2,\n    NOT_FOUND_ERR: 3,\n    rf: 4,\n    uf: 5,\n    extractBaseUrl: 6,\n    getNumericAdProperty: 7,\n    ABORT_ERR: 8,\n    getAdPropertyValue: 9,\n    createHtmlElement: 10,\n    TIMEOUT_ERR: 11,\n    getAdProperty: 12,\n    INVALID_ACCESS_ERR: 13,\n    INVALID_STATE_ERR: 14\n  };\n  var UnknownErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyNumericValue;\n  var NotFoundErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).NOT_FOUND_ERR;\n  var ConstraintErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).rf;\n  var DataErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).uf;\n  var TransactionInactiveErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getNumericAdProperty;\n  var AbortErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).ABORT_ERR;\n  var ReadOnlyErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdPropertyValue;\n  var TimeoutErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).TIMEOUT_ERR;\n  var QuotaExceededErrorCode = (globalScope.entryIdCounter || globalScope.tasks || ErrorCodes).getAdProperty;\n  var InvalidAccessErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_ACCESS_ERR;\n  var InvalidStateErrorCode = (globalScope.DOMException || ErrorCodes).INVALID_STATE_ERR;\n  var getErrorFromName = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case \"UnknownError\":\n        return UnknownErrorCode;\n      case \"NotFoundError\":\n        return NotFoundErrorCode;\n      case \"ConstraintError\":\n        return ConstraintErrorCode;\n      case \"DataError\":\n        return DataErrorCode;\n      case \"TransactionInactiveError\":\n        return TransactionInactiveErrorCode;\n      case \"AbortError\":\n        return AbortErrorCode;\n      case \"ReadOnlyError\":\n        return ReadOnlyErrorCode;\n      case \"TimeoutError\":\n        return TimeoutErrorCode;\n      case \"QuotaExceededError\":\n        return QuotaExceededErrorCode;\n      case \"InvalidAccessError\":\n        return InvalidAccessErrorCode;\n      case \"InvalidStateError\":\n        return InvalidStateErrorCode;\n      default:\n        return UnknownErrorCode;\n    }\n  };\n  var getNameFromError = function (generatorWrapper) {\n    switch (generatorWrapper) {\n      case UnknownErrorCode:\n        return \"UnknownError\";\n      case NotFoundErrorCode:\n        return \"NotFoundError\";\n      case ConstraintErrorCode:\n        return \"ConstraintError\";\n      case DataErrorCode:\n        return \"DataError\";\n      case TransactionInactiveErrorCode:\n        return \"TransactionInactiveError\";\n      case AbortErrorCode:\n        return \"AbortError\";\n      case ReadOnlyErrorCode:\n        return \"ReadOnlyError\";\n      case TimeoutErrorCode:\n        return \"TimeoutError\";\n      case QuotaExceededErrorCode:\n        return \"QuotaExceededError\";\n      case InvalidAccessErrorCode:\n        return \"InvalidAccessError\";\n      case InvalidStateErrorCode:\n        return \"InvalidStateError\";\n      default:\n        return \"UnknownError\";\n    }\n  };\n  var createErrorFromRequest = function (generatorWrapper, value) {\n    if (\"error\" in generatorWrapper) {\n      return new CustomError(generatorWrapper.hasError, value);\n    } else {\n      return new CustomError({\n        name: \"UnknownError\"\n      }, value);\n    }\n  };\n  var createErrorFromException = function (generatorWrapper, value) {\n    if (\"name\" in generatorWrapper) {\n      return new CustomError(generatorWrapper, value + \": \" + generatorWrapper.message);\n    } else {\n      return new CustomError({\n        name: \"UnknownError\"\n      }, value);\n    }\n  };\n  var KeyRangeWrapper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  var IndexedDBKeyRange = globalScope.IDBKeyRange || globalScope.webkitIDBKeyRange;\n  function PromiseBase() {}\n  var Deferred = function (generatorWrapper, value) {\n    this.handleAsync = [];\n    this.resolvePromise = generatorWrapper;\n    this.handleThenable = value || null;\n    this.createDeferred = this.setTimeoutWrapper = false;\n    this.tasks = undefined;\n    this.executeCallbacks = this.logError = this.onFulfilled = false;\n    this.isDone = 0;\n    this.entryIdCounter = null;\n    this.settlePromise = 0;\n  };\n  inheritPrototype(Deferred, PromiseBase);\n  Deferred.prototype.cancel = function (generatorWrapper) {\n    if (this.setTimeoutWrapper) {\n      if (this.tasks instanceof Deferred) {\n        this.tasks.cancel();\n      }\n    } else {\n      if (this.entryIdCounter) {\n        var value = this.entryIdCounter;\n        delete this.entryIdCounter;\n        if (generatorWrapper) {\n          value.cancel(generatorWrapper);\n        } else {\n          value.settlePromise--;\n          if (value.settlePromise <= 0) {\n            value.cancel();\n          }\n        }\n      }\n      if (this.resolvePromise) {\n        this.resolvePromise.call(this.handleThenable, this);\n      } else {\n        this.executeCallbacks = true;\n      }\n      if (!this.setTimeoutWrapper) {\n        rejectPromise(this, new CanceledError(this));\n      }\n    }\n  };\n  Deferred.prototype.dispatchUnhandledRejection = function (generatorWrapper, value) {\n    this.onFulfilled = false;\n    executeCallbacks(this, generatorWrapper, value);\n  };\n  var executeCallbacks = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper.setTimeoutWrapper = true;\n    generatorWrapper.tasks = CustomMap;\n    generatorWrapper.createDeferred = !value;\n    processCallbackQueue(generatorWrapper);\n  };\n  var assertNotFired = function (generatorWrapper) {\n    if (generatorWrapper.setTimeoutWrapper) {\n      if (!generatorWrapper.executeCallbacks) {\n        throw new AlreadyCalledError(generatorWrapper);\n      }\n      generatorWrapper.executeCallbacks = false;\n    }\n  };\n  Deferred.prototype.resetGeneratorState = function (generatorWrapper) {\n    assertNotFired(this);\n    executeCallbacks(this, true, generatorWrapper);\n  };\n  var rejectPromise = function (generatorWrapper, value) {\n    assertNotFired(generatorWrapper);\n    executeCallbacks(generatorWrapper, false, value);\n  };\n  var addToCallbackQueueWithoutContext = function (generatorWrapper, value) {\n    return addToCallbackQueue(generatorWrapper, value, null);\n  };\n  var addToCallbackQueue = function (generatorWrapper, value, CustomMap, findEntry) {\n    generatorWrapper.handleAsync.push([value, CustomMap, findEntry]);\n    if (generatorWrapper.setTimeoutWrapper) {\n      processCallbackQueue(generatorWrapper);\n    }\n    return generatorWrapper;\n  };\n  Deferred.prototype.then = function (generatorWrapper, value, CustomMap) {\n    var findEntry,\n      iterateEntries,\n      createCircularNode = new PromisePolyfill(function (entryIdCounter, key) {\n        iterateEntries = entryIdCounter;\n        findEntry = key;\n      });\n    addToCallbackQueue(this, iterateEntries, function (entryIdCounter) {\n      if (entryIdCounter instanceof CanceledError) {\n        createCircularNode.cancel();\n      } else {\n        findEntry(entryIdCounter);\n      }\n      return callbackMarker;\n    }, this);\n    return createCircularNode.then(generatorWrapper, value, CustomMap);\n  };\n  Deferred.prototype.$goog_Thenable = true;\n  var hasCallbacks = function (generatorWrapper) {\n    return someElement(generatorWrapper.handleAsync, function (value) {\n      return typeof value[1] === \"function\";\n    });\n  };\n  var callbackMarker = {};\n  var processCallbackQueue = function (generatorWrapper) {\n    if (generatorWrapper.isDone && generatorWrapper.setTimeoutWrapper && hasCallbacks(generatorWrapper)) {\n      var value = generatorWrapper.isDone;\n      var CustomMap = timeoutRegistry[value];\n      if (CustomMap) {\n        globalScope.clearTimeout(CustomMap.entryIdCounter);\n        delete timeoutRegistry[value];\n      }\n      generatorWrapper.isDone = 0;\n    }\n    if (generatorWrapper.entryIdCounter) {\n      generatorWrapper.entryIdCounter.settlePromise--;\n      delete generatorWrapper.entryIdCounter;\n    }\n    value = generatorWrapper.tasks;\n    for (var findEntry = CustomMap = false; generatorWrapper.handleAsync.length && !generatorWrapper.onFulfilled;) {\n      var iterateEntries = generatorWrapper.handleAsync.shift();\n      var createCircularNode = iterateEntries[0];\n      var entryIdCounter = iterateEntries[1];\n      iterateEntries = iterateEntries[2];\n      if (createCircularNode = generatorWrapper.createDeferred ? entryIdCounter : createCircularNode) {\n        try {\n          var key = createCircularNode.call(iterateEntries || generatorWrapper.handleThenable, value);\n          if (key === callbackMarker) {\n            key = undefined;\n          }\n          if (undefined !== key) {\n            generatorWrapper.createDeferred = generatorWrapper.createDeferred && (key == value || key instanceof Error);\n            generatorWrapper.tasks = value = key;\n          }\n          if (isThenable(value) || typeof globalScope.Promise === \"function\" && value instanceof globalScope.Promise) {\n            findEntry = true;\n            generatorWrapper.onFulfilled = true;\n          }\n        } catch (value) {\n          value = value;\n          generatorWrapper.createDeferred = true;\n          if (!hasCallbacks(generatorWrapper)) {\n            CustomMap = true;\n          }\n        }\n      }\n    }\n    generatorWrapper.tasks = value;\n    if (findEntry) {\n      key = bindOrWrapFunction(generatorWrapper.dispatchUnhandledRejection, generatorWrapper, true);\n      findEntry = bindOrWrapFunction(generatorWrapper.dispatchUnhandledRejection, generatorWrapper, false);\n      if (value instanceof Deferred) {\n        addToCallbackQueue(value, key, findEntry);\n        value.logError = true;\n      } else {\n        value.then(key, findEntry);\n      }\n    }\n    if (CustomMap) {\n      value = new TimeoutError(value);\n      timeoutRegistry[value.entryIdCounter] = value;\n      generatorWrapper.isDone = value.entryIdCounter;\n    }\n  };\n  var AlreadyCalledError = function () {\n    CustomError.call(this);\n  };\n  inheritPrototype(AlreadyCalledError, CustomError);\n  AlreadyCalledError.prototype.message = \"Deferred has already fired\";\n  AlreadyCalledError.prototype.name = \"AlreadyCalledError\";\n  var CanceledError = function () {\n    CustomError.call(this);\n  };\n  inheritPrototype(CanceledError, CustomError);\n  CanceledError.prototype.message = \"Deferred was canceled\";\n  CanceledError.prototype.name = \"CanceledError\";\n  var TimeoutError = function (generatorWrapper) {\n    this.entryIdCounter = globalScope.setTimeout(bindOrWrapFunction(this.setTimeoutWrapper, this), 0);\n    this.tasks = generatorWrapper;\n  };\n  TimeoutError.prototype.setTimeoutWrapper = function () {\n    delete timeoutRegistry[this.entryIdCounter];\n    throw this.tasks;\n  };\n  var timeoutRegistry = {};\n  var CursorRequest = function () {\n    AdEnvironmentConfig.call(this);\n  };\n  inheritPrototype(CursorRequest, AdEnvironmentConfig);\n  CursorRequest.prototype.entryIdCounter = null;\n  CursorRequest.prototype.next = function (generatorWrapper) {\n    if (generatorWrapper) {\n      this.entryIdCounter[\"continue\"](generatorWrapper);\n    } else {\n      this.entryIdCounter[\"continue\"]();\n    }\n  };\n  CursorRequest.prototype.removeElement = function () {\n    var generatorWrapper = new Deferred();\n    try {\n      var value = this.entryIdCounter[\"delete\"]();\n    } catch (CustomMap) {\n      rejectPromise(generatorWrapper, createErrorFromException(CustomMap, \"deleting via cursor\"));\n      return generatorWrapper;\n    }\n    value.onsuccess = function () {\n      generatorWrapper.resetGeneratorState();\n    };\n    value.onerror = function (CustomMap) {\n      rejectPromise(generatorWrapper, createErrorFromRequest(CustomMap.target, \"deleting via cursor\"));\n    };\n    return generatorWrapper;\n  };\n  CursorRequest.prototype.getAdStateValue = function () {\n    return this.entryIdCounter.value;\n  };\n  var openCursor = function (generatorWrapper, value) {\n    var CustomMap = new CursorRequest();\n    try {\n      var findEntry = generatorWrapper.openCursor(value ? value.entryIdCounter : null);\n    } catch (iterateEntries) {\n      CustomMap.markAsCompleted();\n      throw createErrorFromException(iterateEntries, generatorWrapper.name);\n    }\n    findEntry.onsuccess = function (iterateEntries) {\n      CustomMap.entryIdCounter = iterateEntries.target.result || null;\n      if (CustomMap.entryIdCounter) {\n        CustomMap.dispatchEvent(\"n\");\n      } else {\n        CustomMap.dispatchEvent(\"c\");\n      }\n    };\n    findEntry.onerror = function () {\n      CustomMap.dispatchEvent(\"e\");\n    };\n    return CustomMap;\n  };\n  var IndexRequest = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  IndexRequest.prototype.getAdName = function () {\n    return this.entryIdCounter.name;\n  };\n  var getIndex = function (generatorWrapper, value, CustomMap) {\n    var findEntry = new Deferred();\n    try {\n      var iterateEntries = generatorWrapper.entryIdCounter.get(CustomMap);\n    } catch (createCircularNode) {\n      value += \" with key \" + debugStringifyObject(CustomMap);\n      rejectPromise(findEntry, createErrorFromException(createCircularNode, value));\n      return findEntry;\n    }\n    iterateEntries.onsuccess = function (createCircularNode) {\n      findEntry.resetGeneratorState(createCircularNode.target.result);\n    };\n    iterateEntries.onerror = function (createCircularNode) {\n      value += \" with key \" + debugStringifyObject(CustomMap);\n      rejectPromise(findEntry, createErrorFromRequest(createCircularNode.target, value));\n    };\n    return findEntry;\n  };\n  IndexRequest.prototype.get = function (generatorWrapper) {\n    return getIndex(this, \"getting from index \" + this.getAdName(), generatorWrapper);\n  };\n  var openIndexCursor = function (generatorWrapper, value) {\n    return openCursor(generatorWrapper.entryIdCounter, value);\n  };\n  var ObjectStoreRequest = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  ObjectStoreRequest.prototype.getAdName = function () {\n    return this.entryIdCounter.name;\n  };\n  var executeStoreRequest = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = new Deferred();\n    try {\n      var entryIdCounter = iterateEntries ? generatorWrapper.entryIdCounter[value](findEntry, iterateEntries) : generatorWrapper.entryIdCounter[value](findEntry);\n    } catch (key) {\n      CustomMap += debugStringifyObject(findEntry);\n      if (iterateEntries) {\n        CustomMap += \", with key \" + debugStringifyObject(iterateEntries);\n      }\n      rejectPromise(createCircularNode, createErrorFromException(key, CustomMap));\n      return createCircularNode;\n    }\n    entryIdCounter.onsuccess = function (key) {\n      createCircularNode.resetGeneratorState(key.target.result);\n    };\n    entryIdCounter.onerror = function (key) {\n      CustomMap += debugStringifyObject(findEntry);\n      if (iterateEntries) {\n        CustomMap += \", with key \" + debugStringifyObject(iterateEntries);\n      }\n      rejectPromise(createCircularNode, createErrorFromRequest(key.target, CustomMap));\n    };\n    return createCircularNode;\n  };\n  var putValue = function (generatorWrapper, value) {\n    return executeStoreRequest(generatorWrapper, \"put\", \"putting into \" + generatorWrapper.getAdName() + \" with value\", value);\n  };\n  ObjectStoreRequest.prototype.addParameter = function (generatorWrapper, value) {\n    return executeStoreRequest(this, \"add\", \"adding into \" + this.getAdName() + \" with value \", generatorWrapper, value);\n  };\n  ObjectStoreRequest.prototype.removeElement = function (generatorWrapper) {\n    var value = new Deferred();\n    try {\n      var CustomMap = this.entryIdCounter[\"delete\"](generatorWrapper instanceof KeyRangeWrapper ? generatorWrapper.entryIdCounter : generatorWrapper);\n    } catch (iterateEntries) {\n      CustomMap = \"removing from \" + this.getAdName() + \" with key \" + debugStringifyObject(generatorWrapper);\n      rejectPromise(value, createErrorFromException(iterateEntries, CustomMap));\n      return value;\n    }\n    CustomMap.onsuccess = function () {\n      value.resetGeneratorState();\n    };\n    var findEntry = this;\n    CustomMap.onerror = function (iterateEntries) {\n      var createCircularNode = \"removing from \" + findEntry.getAdName() + \" with key \" + debugStringifyObject(generatorWrapper);\n      rejectPromise(value, createErrorFromRequest(iterateEntries.target, createCircularNode));\n    };\n    return value;\n  };\n  ObjectStoreRequest.prototype.get = function (generatorWrapper) {\n    var value = new Deferred();\n    try {\n      var CustomMap = this.entryIdCounter.get(generatorWrapper);\n    } catch (iterateEntries) {\n      CustomMap = \"getting from \" + this.getAdName() + \" with key \" + debugStringifyObject(generatorWrapper);\n      rejectPromise(value, createErrorFromException(iterateEntries, CustomMap));\n      return value;\n    }\n    CustomMap.onsuccess = function (iterateEntries) {\n      value.resetGeneratorState(iterateEntries.target.result);\n    };\n    var findEntry = this;\n    CustomMap.onerror = function (iterateEntries) {\n      var createCircularNode = \"getting from \" + findEntry.getAdName() + \" with key \" + debugStringifyObject(generatorWrapper);\n      rejectPromise(value, createErrorFromRequest(iterateEntries.target, createCircularNode));\n    };\n    return value;\n  };\n  ObjectStoreRequest.prototype.clearAll = function () {\n    var generatorWrapper = \"clearing store \" + this.getAdName();\n    var value = new Deferred();\n    try {\n      var CustomMap = this.entryIdCounter.clearAll();\n    } catch (findEntry) {\n      rejectPromise(value, createErrorFromException(findEntry, generatorWrapper));\n      return value;\n    }\n    CustomMap.onsuccess = function () {\n      value.resetGeneratorState();\n    };\n    CustomMap.onerror = function (findEntry) {\n      rejectPromise(value, createErrorFromRequest(findEntry.target, generatorWrapper));\n    };\n    return value;\n  };\n  var getIndexTimestamp = function (generatorWrapper) {\n    try {\n      return new IndexRequest(generatorWrapper.entryIdCounter.index(\"timestamp\"));\n    } catch (value) {\n      throw createErrorFromException(value, \"getting index timestamp\");\n    }\n  };\n  var TransactionRequest = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.entryIdCounter = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.tasks = new EventDispatcher(this);\n    this.tasks.window(this.entryIdCounter, \"complete\", bindOrWrapFunction(this.dispatchEvent, this, \"complete\"));\n    this.tasks.window(this.entryIdCounter, \"abort\", bindOrWrapFunction(this.dispatchEvent, this, \"abort\"));\n    this.tasks.window(this.entryIdCounter, \"error\", this.fetchData);\n  };\n  inheritPrototype(TransactionRequest, AdEnvironmentConfig);\n  setTimeoutWrapper = TransactionRequest.prototype;\n  setTimeoutWrapper.fetchData = function (generatorWrapper) {\n    if (generatorWrapper.target instanceof CustomError) {\n      this.dispatchEvent({\n        type: \"error\",\n        target: generatorWrapper.target\n      });\n    } else {\n      this.dispatchEvent({\n        type: \"error\",\n        target: createErrorFromRequest(generatorWrapper.target, \"in transaction\")\n      });\n    }\n  };\n  setTimeoutWrapper.objectStore = function (generatorWrapper) {\n    try {\n      return new ObjectStoreRequest(this.entryIdCounter.objectStore(generatorWrapper));\n    } catch (value) {\n      throw createErrorFromException(value, \"getting object store \" + generatorWrapper);\n    }\n  };\n  setTimeoutWrapper.commit = function (generatorWrapper) {\n    if (this.entryIdCounter.commit || !generatorWrapper) {\n      try {\n        this.entryIdCounter.commit();\n      } catch (value) {\n        throw createErrorFromException(value, \"cannot commit the transaction\");\n      }\n    }\n  };\n  setTimeoutWrapper.wait = function () {\n    var generatorWrapper = new Deferred();\n    Gu(this, \"complete\", bindOrWrapFunction(generatorWrapper.resetGeneratorState, generatorWrapper));\n    var value = Gu(this, \"abort\", function () {\n      Pu(CustomMap);\n      rejectPromise(generatorWrapper, new CustomError(AbortErrorCode, \"waiting for transaction to complete\"));\n    });\n    var CustomMap = Gu(this, \"error\", function (iterateEntries) {\n      Pu(value);\n      rejectPromise(generatorWrapper, iterateEntries.target);\n    });\n    var findEntry = this.setTimeoutWrapper;\n    return addToCallbackQueueWithoutContext(generatorWrapper, function () {\n      return findEntry;\n    });\n  };\n  setTimeoutWrapper.abort = function () {\n    this.entryIdCounter.abort();\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    TransactionRequest.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.tasks.markAsCompleted();\n  };\n  var DatabaseRequest = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.entryIdCounter = generatorWrapper;\n    this.tasks = new EventDispatcher(this);\n    this.tasks.window(this.entryIdCounter, \"abort\", bindOrWrapFunction(this.dispatchEvent, this, \"abort\"));\n    this.tasks.window(this.entryIdCounter, \"error\", this.xf);\n    this.tasks.window(this.entryIdCounter, \"versionchange\", this.filterAdProperties);\n    this.tasks.window(this.entryIdCounter, \"close\", bindOrWrapFunction(this.dispatchEvent, this, \"close\"));\n  };\n  inheritPrototype(DatabaseRequest, AdEnvironmentConfig);\n  setTimeoutWrapper = DatabaseRequest.prototype;\n  setTimeoutWrapper.undefinedVariable1 = true;\n  setTimeoutWrapper.xf = function (generatorWrapper) {\n    generatorWrapper = (generatorWrapper = generatorWrapper.target) && generatorWrapper.hasError;\n    this.dispatchEvent({\n      type: \"error\",\n      errorCode: generatorWrapper && generatorWrapper.severity\n    });\n  };\n  setTimeoutWrapper.filterAdProperties = function (generatorWrapper) {\n    this.dispatchEvent(new zB(generatorWrapper.oldVersion, generatorWrapper.newVersion));\n  };\n  setTimeoutWrapper.closeCache = function () {\n    if (this.undefinedVariable1) {\n      this.entryIdCounter.closeCache();\n      this.undefinedVariable1 = false;\n    }\n  };\n  setTimeoutWrapper.getUniqueId = function () {\n    return this.undefinedVariable1;\n  };\n  setTimeoutWrapper.getAdName = function () {\n    return this.entryIdCounter.name;\n  };\n  setTimeoutWrapper.getAdManifestVersion = function () {\n    return Number(this.entryIdCounter.version);\n  };\n  var AB = function (generatorWrapper) {\n    var value = [\"MediaSourceVideoChunk\"];\n    try {\n      var CustomMap = generatorWrapper.entryIdCounter.transaction(value, \"readwrite\");\n      return new TransactionRequest(CustomMap, generatorWrapper);\n    } catch (findEntry) {\n      throw createErrorFromException(findEntry, \"creating transaction\");\n    }\n  };\n  DatabaseRequest.prototype.getAdEnvironment = function () {\n    DatabaseRequest.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.tasks.markAsCompleted();\n  };\n  var zB = function (generatorWrapper, value) {\n    AdEvent.call(this, \"versionchange\");\n    this.oldVersion = generatorWrapper;\n    this.newVersion = value;\n  };\n  inheritPrototype(zB, AdEvent);\n  var BB = function (generatorWrapper) {\n    var value = new Deferred();\n    if (undefined == ErrorBase) {\n      ErrorBase = globalScope.indexedDB || globalScope.mozIndexedDB || globalScope.webkitIndexedDB || globalScope.moz_indexedDB;\n    }\n    var CustomMap = ErrorBase.open(\"IndexedDbVideoChunkPersistentStorage\", 6);\n    CustomMap.onsuccess = function (findEntry) {\n      findEntry = new DatabaseRequest(findEntry.target.result);\n      value.resetGeneratorState(findEntry);\n    };\n    CustomMap.onerror = function (findEntry) {\n      rejectPromise(value, createErrorFromRequest(findEntry.target, \"opening database IndexedDbVideoChunkPersistentStorage\"));\n    };\n    CustomMap.onupgradeneeded = function (findEntry) {\n      if (generatorWrapper) {\n        var iterateEntries = new DatabaseRequest(findEntry.target.result);\n        generatorWrapper(new zB(findEntry.oldVersion, findEntry.newVersion), iterateEntries, new TransactionRequest(findEntry.target.transaction, iterateEntries));\n      }\n    };\n    CustomMap.onblocked = function () {};\n    return value;\n  };\n  var CB = function () {\n    AdEnvironmentConfig.apply(this, arguments);\n    this.entryIdCounter = null;\n  };\n  inheritPrototype(CB, AdEnvironmentConfig);\n  CB.prototype.initializeMraid = function () {\n    var generatorWrapper = this;\n    return Promise.resolve(BB(this.tasks)).then(function (value) {\n      generatorWrapper.entryIdCounter = value;\n    }, function (value) {\n      settlePromise(resolvePromise.getAdInstance(), \"codf\", value.message);\n    });\n  };\n  CB.prototype.getUniqueId = function () {\n    return this.entryIdCounter !== null && this.entryIdCounter.getUniqueId();\n  };\n  CB.prototype.closeCache = function () {\n    var generatorWrapper = this;\n    return new Promise(function (value) {\n      DB(generatorWrapper, value);\n    }).then(function () {\n      return EB();\n    }).then(function () {\n      generatorWrapper.entryIdCounter.closeCache();\n    });\n  };\n  var EB = function () {\n    var generatorWrapper;\n    if ((generatorWrapper = navigator.storage) == null ? 0 : generatorWrapper.estimate) {\n      return navigator.storage.estimate().then(function (value) {\n        settlePromise(resolvePromise.getAdInstance(), \"csue\", String(value.usage));\n      });\n    } else {\n      return Promise.resolve(undefined);\n    }\n  };\n  CB.prototype.containsElement = function (generatorWrapper) {\n    if (generatorWrapper = FB(generatorWrapper, 0)) {\n      return GB(this, HB(generatorWrapper), generatorWrapper.getBase64EncodedArray);\n    } else {\n      return Promise.resolve(null);\n    }\n  };\n  CB.prototype.isIpod = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (value = FB(value, CustomMap)) {\n      CustomMap = value.startIndex;\n      deleteVideoChunk(this, {\n        PerformanceEvent: HB(value),\n        startIndex: CustomMap,\n        isAndroidBrowser: CustomMap + generatorWrapper.byteLength - 1,\n        getBase64EncodedArray: value.getBase64EncodedArray,\n        timestamp: new Date(Date.now()),\n        handleGeneratorError: findEntry,\n        includesBrand: value.includesBrand,\n        video: generatorWrapper\n      });\n    } else {\n      Promise.resolve(undefined);\n    }\n  };\n  CB.prototype.tasks = function (generatorWrapper, value) {\n    if (value.entryIdCounter.objectStoreNames.rectangleContains(\"MediaSourceVideoChunk\")) {\n      try {\n        value.entryIdCounter.deleteObjectStore(\"MediaSourceVideoChunk\");\n      } catch (findEntry) {\n        throw createErrorFromException(findEntry, \"deleting object store MediaSourceVideoChunk\");\n      }\n    }\n    generatorWrapper = {\n      keyPath: \"cacheId\"\n    };\n    try {\n      var CustomMap = new ObjectStoreRequest(value.entryIdCounter.createObjectStore(\"MediaSourceVideoChunk\", generatorWrapper));\n    } catch (findEntry) {\n      throw createErrorFromException(findEntry, \"creating object store MediaSourceVideoChunk\");\n    }\n    value = {\n      unique: false\n    };\n    try {\n      CustomMap.entryIdCounter.createIndex(\"timestamp\", \"timestamp\", value);\n    } catch (findEntry) {\n      throw createErrorFromException(findEntry, \"creating new index timestamp with key path timestamp\");\n    }\n  };\n  var DB = function (generatorWrapper, value) {\n    var CustomMap = new Date(Date.now());\n    CustomMap.setDate(CustomMap.getDate() - 30);\n    CustomMap = new KeyRangeWrapper(IndexedDBKeyRange.upperBound(CustomMap, undefined));\n    var findEntry = openIndexCursor(getIndexTimestamp(AB(generatorWrapper.entryIdCounter).objectStore(\"MediaSourceVideoChunk\")), CustomMap);\n    var iterateEntries = findEntry.window(\"n\", function () {\n      findEntry.removeElement();\n      findEntry.next();\n    });\n    Gu(findEntry, \"c\", function () {\n      Pu(iterateEntries);\n      value();\n    });\n  };\n  var FB = function (generatorWrapper, value) {\n    var CustomMap = new UriParameterManager(generatorWrapper);\n    generatorWrapper = CustomMap.getAdId();\n    var findEntry = getParameterById(CustomMap, \"itag\");\n    var iterateEntries = getParameterById(CustomMap, \"source\");\n    var createCircularNode = getParameterById(CustomMap, \"lmt\");\n    CustomMap = getRangeStart(CustomMap);\n    var entryIdCounter = [];\n    if (generatorWrapper) {\n      if (findEntry) {\n        if (iterateEntries) {\n          if (createCircularNode) {\n            if (CustomMap === null) {\n              entryIdCounter.push(\"startIndex\");\n            }\n          } else {\n            entryIdCounter.push(\"lmt\");\n          }\n        } else {\n          entryIdCounter.push(\"source\");\n        }\n      } else {\n        entryIdCounter.push(\"itag\");\n      }\n    } else {\n      entryIdCounter.push(\"videoId\");\n    }\n    if (entryIdCounter.length > 0) {\n      settlePromise(resolvePromise.getAdInstance(), \"civp\", entryIdCounter.join(\"-\"));\n      return null;\n    } else {\n      return {\n        getTrustedTypesPolicy: generatorWrapper,\n        includesBrand: findEntry,\n        source: iterateEntries,\n        getBase64EncodedArray: createCircularNode,\n        startIndex: CustomMap + value\n      };\n    }\n  };\n  var HB = function (generatorWrapper) {\n    for (var value = [generatorWrapper.getTrustedTypesPolicy, generatorWrapper.source, generatorWrapper.startIndex].join(), CustomMap = 0, findEntry = 0; findEntry < value.length; findEntry++) {\n      CustomMap = Math.imul(31, CustomMap) + value.charCodeAt(findEntry) | 0;\n    }\n    return CustomMap.toString() + \",\" + generatorWrapper.includesBrand;\n  };\n  var GB = function (generatorWrapper, value, CustomMap) {\n    var findEntry = AB(generatorWrapper.entryIdCounter).objectStore(\"MediaSourceVideoChunk\");\n    return Promise.resolve(findEntry.get(value)).then(function (iterateEntries) {\n      if (!iterateEntries) {\n        settlePromise(resolvePromise.getAdInstance(), \"cenf\", \"1\");\n        return null;\n      }\n      if (iterateEntries.getBase64EncodedArray !== CustomMap) {\n        settlePromise(resolvePromise.getAdInstance(), \"cdl\", \"1\");\n        findEntry.removeElement(value).then(null, function (createCircularNode) {\n          settlePromise(resolvePromise.getAdInstance(), \"crdlvf\", createCircularNode.message);\n        });\n        return null;\n      }\n      settlePromise(resolvePromise.getAdInstance(), \"cefml\", \"1\");\n      return {\n        includesBrand: iterateEntries.includesBrand,\n        isAndroidBrowser: iterateEntries.isAndroidBrowser,\n        handleGeneratorError: iterateEntries.handleGeneratorError,\n        video: iterateEntries.video\n      };\n    }, function (iterateEntries) {\n      settlePromise(resolvePromise.getAdInstance(), \"cgvf\", iterateEntries.message);\n      return null;\n    });\n  };\n  var deleteVideoChunk = function (generatorWrapper, value) {\n    generatorWrapper = AB(generatorWrapper.entryIdCounter).objectStore(\"MediaSourceVideoChunk\");\n    Promise.resolve(putValue(generatorWrapper, value)).then(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"cavs\", \"1\");\n    }, function (CustomMap) {\n      settlePromise(resolvePromise.getAdInstance(), \"cavf\", CustomMap.message);\n    });\n  };\n  var VideoChunkLoader = function (generatorWrapper) {\n    MediaElement.call(this);\n    var value = this;\n    this.resolvePromise = this.tasks = this.entryIdCounter = 0;\n    this.handleAsync = this.logError = null;\n    this.uri = new table(generatorWrapper);\n    this.state = 0;\n    if (this.isDone = isSupportedEnvironment() && !isGCacheURL(this.uri)) {\n      this.setTimeoutWrapper = createInstanceWithArguments(CB);\n    } else {\n      this.setTimeoutWrapper = null;\n    }\n    executeOrDelayUntilDisposed(this, function () {\n      markAsCompletedWrapper(value.setTimeoutWrapper);\n    });\n    if (this.isDone) {\n      this.logError = this.setTimeoutWrapper.initializeMraid();\n    } else {\n      this.logError = null;\n    }\n  };\n  inheritPrototype(VideoChunkLoader, MediaElement);\n  VideoChunkLoader.prototype.dispatchUnhandledRejection = function () {\n    return this.entryIdCounter;\n  };\n  VideoChunkLoader.prototype.onFulfilled = function () {\n    return this.state === 3;\n  };\n  VideoChunkLoader.prototype.handleThenable = function (generatorWrapper) {\n    if (this.state === 1) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 2;\n    } else if (this.state === 0) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 1;\n      checkAndHandleLoadingState(this);\n    }\n  };\n  var checkAndHandleLoadingState = function (generatorWrapper) {\n    wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        if (generatorWrapper.state === 2) {\n          generatorWrapper.state = 1;\n        }\n        return generatorYield(value, loadVideoChunk(generatorWrapper), 4);\n      }\n      var CustomMap = generatorWrapper.resolvePromise > 3;\n      if (CustomMap && generatorWrapper.handleAsync !== null) {\n        var findEntry = createCustomEvent(\"media_source_error\", {\n          code: generatorWrapper.tasks > 0 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n          message: 'Response code \"' + generatorWrapper.handleAsync + '\" with ' + generatorWrapper.entryIdCounter + \" bytes requested and \" + generatorWrapper.tasks + \" bytes loaded\"\n        });\n        generatorWrapper.dispatchEvent(findEntry);\n      }\n      if (generatorWrapper.tasks < generatorWrapper.entryIdCounter && generatorWrapper.state !== 3 && !CustomMap) {\n        value.entryIdCounter = 1;\n      } else {\n        if (generatorWrapper.state !== 3) {\n          generatorWrapper.state = 0;\n        }\n        value.entryIdCounter = 0;\n      }\n    });\n  };\n  var loadVideoChunk = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          value = generatorWrapper.tasks + \"-\" + (generatorWrapper.entryIdCounter - 1);\n          setParameter(generatorWrapper.uri, \"range\", value);\n          if (!generatorWrapper.isDone) {\n            CustomMap.entryIdCounter = 2;\n            break;\n          }\n          return generatorYield(CustomMap, generatorWrapper.logError, 3);\n        case 3:\n          return CustomMap.return(loadVideoChunkFromCache(generatorWrapper));\n        case 2:\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, loadVideoChunkViaXHR(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          handleFallbackAndIncrementRetry(generatorWrapper);\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var loadVideoChunkFromCache = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          return generatorYield(CustomMap, generatorWrapper.setTimeoutWrapper.containsElement(generatorWrapper.uri), 2);\n        case 2:\n          if (value = CustomMap.tasks) {\n            if (value.handleGeneratorError) {\n              generatorWrapper.state = 3;\n            }\n            processVideoChunkData(generatorWrapper, value.video, 0);\n            CustomMap.entryIdCounter = 0;\n            break;\n          }\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, loadVideoChunkViaXHR(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          handleFallbackAndIncrementRetry(generatorWrapper);\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var handleFallbackAndIncrementRetry = function (generatorWrapper) {\n    if (handleThenable(Lm)) {\n      generatorWrapper: {\n        var value = new UriParameterManager(generatorWrapper.uri);\n        var CustomMap, findEntry;\n        if ((CustomMap = value.uri) == null ? 0 : (findEntry = CustomMap.setTimeoutWrapper) == null ? 0 : findEntry.startsWith(\"/videoplayback\")) {\n          var iterateEntries = (CustomMap = getParameterById(value, \"mn\")) ? CustomMap.split(\",\") : null;\n          findEntry = getParameterById(value, \"fvip\");\n          CustomMap = value.uri.handleThenable();\n          if (iterateEntries && findEntry) {\n            var createCircularNode = (Number(getParameterById(value, \"fallback_count\")) || 0) + 1;\n            if (iterateEntries = iterateEntries[createCircularNode]) {\n              CustomMap.tasks = \"r\" + findEntry + \"---\" + iterateEntries + \".googlevideo.com\";\n              setParameter(CustomMap, \"fallback_count\", createCircularNode);\n              value = CustomMap;\n              break generatorWrapper;\n            }\n          }\n          var entryIdCounter, key;\n          findEntry = Number(((key = (entryIdCounter = CustomMap.entryIdCounter.get(\"cmo\")) == null ? undefined : entryIdCounter.split(\"=\")) != null ? key : [])[1]) || 0;\n          if (value.uri.tasks.match(/^r{1,2}(\\d+)---(.+)\\.googlevideo.com$/)) {\n            CustomMap.tasks = \"redirector.googlevideo.com\";\n          }\n          setParameter(CustomMap, \"cmo\", \"pf=\" + (findEntry + 1));\n          value = CustomMap;\n        } else {\n          value = value.uri;\n        }\n      }\n      generatorWrapper.uri = value;\n      generatorWrapper.dispatchEvent(createCustomEvent(\"bandaid_fallback_count\"));\n    }\n    generatorWrapper.resolvePromise++;\n  };\n  var loadVideoChunkVia",
  "      if (createCircularNode) {\n            if (CustomMap === null) {\n              entryIdCounter.push(\"startIndex\");\n            }\n          } else {\n            entryIdCounter.push(\"lmt\");\n          }\n        } else {\n          entryIdCounter.push(\"source\");\n        }\n      } else {\n        entryIdCounter.push(\"itag\");\n      }\n    } else {\n      entryIdCounter.push(\"videoId\");\n    }\n    if (entryIdCounter.length > 0) {\n      settlePromise(resolvePromise.getAdInstance(), \"civp\", entryIdCounter.join(\"-\"));\n      return null;\n    } else {\n      return {\n        getTrustedTypesPolicy: generatorWrapper,\n        includesBrand: findEntry,\n        source: iterateEntries,\n        getBase64EncodedArray: createCircularNode,\n        startIndex: CustomMap + value\n      };\n    }\n  };\n  var HB = function (generatorWrapper) {\n    for (var value = [generatorWrapper.getTrustedTypesPolicy, generatorWrapper.source, generatorWrapper.startIndex].join(), CustomMap = 0, findEntry = 0; findEntry < value.length; findEntry++) {\n      CustomMap = Math.imul(31, CustomMap) + value.charCodeAt(findEntry) | 0;\n    }\n    return CustomMap.toString() + \",\" + generatorWrapper.includesBrand;\n  };\n  var GB = function (generatorWrapper, value, CustomMap) {\n    var findEntry = AB(generatorWrapper.entryIdCounter).objectStore(\"MediaSourceVideoChunk\");\n    return Promise.resolve(findEntry.get(value)).then(function (iterateEntries) {\n      if (!iterateEntries) {\n        settlePromise(resolvePromise.getAdInstance(), \"cenf\", \"1\");\n        return null;\n      }\n      if (iterateEntries.getBase64EncodedArray !== CustomMap) {\n        settlePromise(resolvePromise.getAdInstance(), \"cdl\", \"1\");\n        findEntry.removeElement(value).then(null, function (createCircularNode) {\n          settlePromise(resolvePromise.getAdInstance(), \"crdlvf\", createCircularNode.message);\n        });\n        return null;\n      }\n      settlePromise(resolvePromise.getAdInstance(), \"cefml\", \"1\");\n      return {\n        includesBrand: iterateEntries.includesBrand,\n        isAndroidBrowser: iterateEntries.isAndroidBrowser,\n        handleGeneratorError: iterateEntries.handleGeneratorError,\n        video: iterateEntries.video\n      };\n    }, function (iterateEntries) {\n      settlePromise(resolvePromise.getAdInstance(), \"cgvf\", iterateEntries.message);\n      return null;\n    });\n  };\n  var deleteVideoChunk = function (generatorWrapper, value) {\n    generatorWrapper = AB(generatorWrapper.entryIdCounter).objectStore(\"MediaSourceVideoChunk\");\n    Promise.resolve(putValue(generatorWrapper, value)).then(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"cavs\", \"1\");\n    }, function (CustomMap) {\n      settlePromise(resolvePromise.getAdInstance(), \"cavf\", CustomMap.message);\n    });\n  };\n  var VideoChunkLoader = function (generatorWrapper) {\n    MediaElement.call(this);\n    var value = this;\n    this.resolvePromise = this.tasks = this.entryIdCounter = 0;\n    this.handleAsync = this.logError = null;\n    this.uri = new table(generatorWrapper);\n    this.state = 0;\n    if (this.isDone = isSupportedEnvironment() && !isGCacheURL(this.uri)) {\n      this.setTimeoutWrapper = createInstanceWithArguments(CB);\n    } else {\n      this.setTimeoutWrapper = null;\n    }\n    executeOrDelayUntilDisposed(this, function () {\n      markAsCompletedWrapper(value.setTimeoutWrapper);\n    });\n    if (this.isDone) {\n      this.logError = this.setTimeoutWrapper.initializeMraid();\n    } else {\n      this.logError = null;\n    }\n  };\n  inheritPrototype(VideoChunkLoader, MediaElement);\n  VideoChunkLoader.prototype.dispatchUnhandledRejection = function () {\n    return this.entryIdCounter;\n  };\n  VideoChunkLoader.prototype.onFulfilled = function () {\n    return this.state === 3;\n  };\n  VideoChunkLoader.prototype.handleThenable = function (generatorWrapper) {\n    if (this.state === 1) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 2;\n    } else if (this.state === 0) {\n      this.entryIdCounter += generatorWrapper;\n      this.state = 1;\n      checkAndHandleLoadingState(this);\n    }\n  };\n  var checkAndHandleLoadingState = function (generatorWrapper) {\n    wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        if (generatorWrapper.state === 2) {\n          generatorWrapper.state = 1;\n        }\n        return generatorYield(value, loadVideoChunk(generatorWrapper), 4);\n      }\n      var CustomMap = generatorWrapper.resolvePromise > 3;\n      if (CustomMap && generatorWrapper.handleAsync !== null) {\n        var findEntry = createCustomEvent(\"media_source_error\", {\n          code: generatorWrapper.tasks > 0 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n          message: 'Response code \"' + generatorWrapper.handleAsync + '\" with ' + generatorWrapper.entryIdCounter + \" bytes requested and \" + generatorWrapper.tasks + \" bytes loaded\"\n        });\n        generatorWrapper.dispatchEvent(findEntry);\n      }\n      if (generatorWrapper.tasks < generatorWrapper.entryIdCounter && generatorWrapper.state !== 3 && !CustomMap) {\n        value.entryIdCounter = 1;\n      } else {\n        if (generatorWrapper.state !== 3) {\n          generatorWrapper.state = 0;\n        }\n        value.entryIdCounter = 0;\n      }\n    });\n  };\n  var loadVideoChunk = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          value = generatorWrapper.tasks + \"-\" + (generatorWrapper.entryIdCounter - 1);\n          setParameter(generatorWrapper.uri, \"range\", value);\n          if (!generatorWrapper.isDone) {\n            CustomMap.entryIdCounter = 2;\n            break;\n          }\n          return generatorYield(CustomMap, generatorWrapper.logError, 3);\n        case 3:\n          return CustomMap.return(loadVideoChunkFromCache(generatorWrapper));\n        case 2:\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, loadVideoChunkViaXHR(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          handleFallbackAndIncrementRetry(generatorWrapper);\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var loadVideoChunkFromCache = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      switch (CustomMap.entryIdCounter) {\n        case 1:\n          return generatorYield(CustomMap, generatorWrapper.setTimeoutWrapper.containsElement(generatorWrapper.uri), 2);\n        case 2:\n          if (value = CustomMap.tasks) {\n            if (value.handleGeneratorError) {\n              generatorWrapper.state = 3;\n            }\n            processVideoChunkData(generatorWrapper, value.video, 0);\n            CustomMap.entryIdCounter = 0;\n            break;\n          }\n          CustomMap.setTimeoutWrapper = 4;\n          return generatorYield(CustomMap, loadVideoChunkViaXHR(generatorWrapper), 6);\n        case 6:\n          resetGeneratorState(CustomMap);\n          break;\n        case 4:\n          getGeneratorException(CustomMap);\n          handleFallbackAndIncrementRetry(generatorWrapper);\n          CustomMap.entryIdCounter = 0;\n      }\n    });\n  };\n  var handleFallbackAndIncrementRetry = function (generatorWrapper) {\n    if (handleThenable(Lm)) {\n      generatorWrapper: {\n        var value = new UriParameterManager(generatorWrapper.uri);\n        var CustomMap, findEntry;\n        if ((CustomMap = value.uri) == null ? 0 : (findEntry = CustomMap.setTimeoutWrapper) == null ? 0 : findEntry.startsWith(\"/videoplayback\")) {\n          var iterateEntries = (CustomMap = getParameterById(value, \"mn\")) ? CustomMap.split(\",\") : null;\n          findEntry = getParameterById(value, \"fvip\");\n          CustomMap = value.uri.handleThenable();\n          if (iterateEntries && findEntry) {\n            var createCircularNode = (Number(getParameterById(value, \"fallback_count\")) || 0) + 1;\n            if (iterateEntries = iterateEntries[createCircularNode]) {\n              CustomMap.tasks = \"r\" + findEntry + \"---\" + iterateEntries + \".googlevideo.com\";\n              setParameter(CustomMap, \"fallback_count\", createCircularNode);\n              value = CustomMap;\n              break generatorWrapper;\n            }\n          }\n          var entryIdCounter, key;\n          findEntry = Number(((key = (entryIdCounter = CustomMap.entryIdCounter.get(\"cmo\")) == null ? undefined : entryIdCounter.split(\"=\")) != null ? key : [])[1]) || 0;\n          if (value.uri.tasks.match(/^r{1,2}(\\d+)---(.+)\\.googlevideo.com$/)) {\n            CustomMap.tasks = \"redirector.googlevideo.com\";\n          }\n          setParameter(CustomMap, \"cmo\", \"pf=\" + (findEntry + 1));\n          value = CustomMap;\n        } else {\n          value = value.uri;\n        }\n      }\n      generatorWrapper.uri = value;\n      generatorWrapper.dispatchEvent(createCustomEvent(\"bandaid_fallback_count\"));\n    }\n    generatorWrapper.resolvePromise++;\n  };\n  var loadVideoChunkViaXHR = function (generatorWrapper) {\n    return new Promise(function (value, CustomMap) {\n      var findEntry = new XMLHttpRequest();\n      var iterateEntries = 0;\n      var createCircularNode = generatorWrapper.entryIdCounter - generatorWrapper.tasks;\n      findEntry.addEventListener(\"load\", function () {\n        logError(\"lvlcl\");\n        if (findEntry.status >= 400) {\n          settlePromise(resolvePromise.getAdInstance(), \"lvlxes\", findEntry.status.toString());\n          generatorWrapper.handleAsync = findEntry.status;\n          CustomMap();\n        } else {\n          var entryIdCounter = findEntry.response;\n          if (entryIdCounter.byteLength < createCircularNode) {\n            generatorWrapper.state = 3;\n          }\n          var key = processVideoChunkData(generatorWrapper, entryIdCounter, iterateEntries);\n          iterateEntries += key;\n          if (generatorWrapper.isDone && entryIdCounter.byteLength > 0) {\n            generatorWrapper.setTimeoutWrapper.isIpod(entryIdCounter, generatorWrapper.uri, 0, entryIdCounter.byteLength < createCircularNode);\n          }\n          value();\n        }\n      });\n      findEntry.addEventListener(\"timeout\", function () {\n        logError(\"lvlct\");\n        generatorWrapper.handleAsync = findEntry.status;\n        CustomMap();\n      });\n      findEntry.addEventListener(\"error\", function () {\n        logError(\"lvlce\");\n        generatorWrapper.handleAsync = findEntry.status;\n        CustomMap();\n      });\n      findEntry.addEventListener(\"progress\", function () {\n        if (findEntry.status >= 400) {\n          generatorWrapper.handleAsync = findEntry.status;\n        } else {\n          var entryIdCounter = processVideoChunkData(generatorWrapper, findEntry.response, iterateEntries);\n          iterateEntries += entryIdCounter;\n        }\n      });\n      findEntry.responseType = \"arraybuffer\";\n      findEntry.open(\"get\", generatorWrapper.uri.toString());\n      findEntry.send(null);\n    });\n  };\n  var processVideoChunkData = function (generatorWrapper, value, CustomMap) {\n    if (value === null) {\n      return 0;\n    }\n    value = value.slice(CustomMap);\n    generatorWrapper.tasks += value.byteLength;\n    generatorWrapper.dispatchEvent({\n      type: \"progress\",\n      CustomError: value\n    });\n    return value.byteLength;\n  };\n  VideoChunkLoader.prototype.getAdEnvironment = function () {\n    if (this.isDone && this.setTimeoutWrapper.getUniqueId()) {\n      this.setTimeoutWrapper.closeCache();\n    }\n    MediaElement.prototype.getAdEnvironment.call(this);\n  };\n  var loadingThresholds = {\n    buildAdUrl: 200000,\n    addParameter: 70000,\n    validateStringPrototypeMethod: 300000,\n    serializeParameters: 5000,\n    sendImageRequestWithRetry: 5000,\n    addKeyValuePair: 6000\n  };\n  function isMediaSourceSupported() {\n    return !!window.MediaSource;\n  }\n  function isSupportedVideoType(generatorWrapper) {\n    if ([43, 44, 45].includes(generatorWrapper) && isAndroidBrowser) {\n      return false;\n    } else {\n      if (itagCodecMap[generatorWrapper]) {\n        generatorWrapper = getMediaSourceString(generatorWrapper);\n        return !!generatorWrapper && isMediaSourceSupported() && MediaSource.isTypeSupported(generatorWrapper);\n      } else {\n        return false;\n      }\n    }\n  }\n  var LoadingStrategy = function () {};\n  LoadingStrategy.prototype.parsedIntegerTransformation = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap === 0) {\n      return 1000000;\n    } else {\n      if (value - generatorWrapper < 5000) {\n        return 300000;\n      } else {\n        return 0;\n      }\n    }\n  };\n  var SourceBufferManager = function (generatorWrapper, value) {\n    var CustomMap = this;\n    this.entryIdCounter = generatorWrapper;\n    this.index = value;\n    this.tasks = [];\n    if (!this.entryIdCounter) {\n      logError(\"msms_sbf\" + this.index);\n    }\n    this.entryIdCounter.addEventListener(\"updateend\", function () {\n      executeBufferAppend(CustomMap);\n    });\n    this.entryIdCounter.addEventListener(\"error\", function () {\n      logError(\"msms_sbe\" + CustomMap.index);\n    });\n  };\n  var executeBufferAppend = function (generatorWrapper) {\n    if (generatorWrapper.tasks.length > 0 && !generatorWrapper.entryIdCounter.updating) {\n      var value = generatorWrapper.tasks.shift();\n      generatorWrapper.entryIdCounter.appendBuffer(value);\n    }\n  };\n  var CacheVideoChunkStorage = function () {\n    this.entryIdCounter = this.cache = null;\n  };\n  setTimeoutWrapper = CacheVideoChunkStorage.prototype;\n  setTimeoutWrapper.initializeMraid = function () {\n    var generatorWrapper = this;\n    return window.caches.open(\"CACHE_VIDEO_CHUNK_PERSISTENT_STORAGE\").then(function (value) {\n      generatorWrapper.cache = value;\n    }, function (value) {\n      settlePromise(resolvePromise.getAdInstance(), \"codf\", value.message);\n    });\n  };\n  setTimeoutWrapper.getUniqueId = function () {\n    return this.cache !== null;\n  };\n  setTimeoutWrapper.closeCache = function () {\n    return Promise.resolve();\n  };\n  setTimeoutWrapper.containsElement = function (generatorWrapper) {\n    var value = this;\n    generatorWrapper = generateCacheKey(this, generatorWrapper);\n    if (this.getUniqueId() && generatorWrapper) {\n      return this.cache.match(generatorWrapper).then(function (CustomMap) {\n        if (!CustomMap) {\n          settlePromise(resolvePromise.getAdInstance(), \"cenf\", \"1\");\n          return Promise.resolve(null);\n        }\n        settlePromise(resolvePromise.getAdInstance(), \"cef\", \"1\");\n        return CustomMap.arrayBuffer().then(function (findEntry) {\n          var iterateEntries = getRangeStart(value.entryIdCounter),\n            createCircularNode;\n          if (createCircularNode = value.entryIdCounter.uri.entryIdCounter.get(\"range\")) {\n            createCircularNode = createCircularNode.split(\"-\")[1];\n            if (!createCircularNode || isNaN(Number(createCircularNode))) {\n              createCircularNode = null;\n            } else {\n              createCircularNode = Number(createCircularNode);\n            }\n          } else {\n            createCircularNode = null;\n          }\n          iterateEntries = iterateEntries + findEntry.byteLength - 1;\n          createCircularNode = createCircularNode > iterateEntries;\n          return {\n            includesBrand: getParameterById(value.entryIdCounter, \"itag\"),\n            isAndroidBrowser: iterateEntries,\n            handleGeneratorError: createCircularNode,\n            video: findEntry\n          };\n        });\n      }, function (CustomMap) {\n        settlePromise(resolvePromise.getAdInstance(), \"cgvf\", CustomMap.message);\n        return Promise.resolve(null);\n      });\n    } else {\n      settlePromise(resolvePromise.getAdInstance(), \"cgvf\", \"1\");\n      return Promise.resolve(null);\n    }\n  };\n  setTimeoutWrapper.isIpod = function (generatorWrapper, value) {\n    value = generateCacheKey(this, value);\n    generatorWrapper = new Response(generatorWrapper);\n    if (this.getUniqueId() && value) {\n      this.cache.put(value, generatorWrapper).then(function () {\n        settlePromise(resolvePromise.getAdInstance(), \"cavs\", \"1\");\n      }, function (CustomMap) {\n        settlePromise(resolvePromise.getAdInstance(), \"cavf\", CustomMap.message);\n      });\n    } else {\n      settlePromise(resolvePromise.getAdInstance(), \"cavf\", \"1\");\n      Promise.resolve();\n    }\n  };\n  var generateCacheKey = function (generatorWrapper, value) {\n    generatorWrapper.entryIdCounter = new UriParameterManager(value);\n    value = generatorWrapper.entryIdCounter.getAdId();\n    var CustomMap = getParameterById(generatorWrapper.entryIdCounter, \"itag\");\n    var findEntry = getParameterById(generatorWrapper.entryIdCounter, \"source\");\n    var iterateEntries = getParameterById(generatorWrapper.entryIdCounter, \"lmt\");\n    generatorWrapper = getParameterById(generatorWrapper.entryIdCounter, \"range\");\n    if (value && CustomMap && findEntry && generatorWrapper) {\n      return new Request(\"http://url/videoplayback?id=\" + value + \"&itag=\" + CustomMap + \"&source=\" + findEntry + \"&lmt=\" + iterateEntries + \"&range=\" + generatorWrapper);\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"civp\", \"1\");\n    return null;\n  };\n  var MediaSourceManager = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    var value = this;\n    this.setTimeoutWrapper = generatorWrapper;\n    this.entryIdCounter = [];\n    this.isDone = null;\n    this.onFulfilled = 0;\n    this.handleThenable = false;\n    this.handleThenable = 0;\n    this.dispatchUnhandledRejection = [];\n    if (handleThenable(Am)) {\n      var CustomMap = null;\n      if (isSupportedEnvironment()) {\n        if (handleThenable(Cm)) {\n          CustomMap = createInstanceWithArguments(CacheVideoChunkStorage);\n        } else {\n          CustomMap = createInstanceWithArguments(CB);\n        }\n      }\n      this.handleAsync = this.setTimeoutWrapper.map(function (findEntry) {\n        return createInstanceWithArguments(MediaSourceLoader, findEntry.url, isGCacheURL(findEntry.url) ? null : CustomMap);\n      });\n    } else {\n      this.handleAsync = this.setTimeoutWrapper.map(function (findEntry) {\n        return createInstanceWithArguments(VideoChunkLoader, findEntry.url);\n      });\n    }\n    this.tasks = createInstanceWithArguments(MediaSource);\n    this.resolvePromise = function () {\n      setupSourceBuffers(value);\n    };\n    this.tasks.addEventListener(\"sourceopen\", this.resolvePromise);\n    this.logError = initializeSegmentTrackers(this);\n  };\n  inheritPrototype(MediaSourceManager, AdEnvironmentConfig);\n  var initializeSegmentTrackers = function (generatorWrapper) {\n    for (var value = [], CustomMap = 0; CustomMap < generatorWrapper.setTimeoutWrapper.length; ++CustomMap) {\n      value.push(new LoadingStrategy());\n    }\n    return value;\n  };\n  var setupSourceBuffers = function (generatorWrapper) {\n    logError(\"msms_oso\");\n    value = {\n      setErrorContext: undefined,\n      supportsUint8Array: undefined,\n      includesIgnoreCase: undefined,\n      resetGeneratorState: value.resetGeneratorState,\n      supportsBtoa: undefined\n    };\n    for (var value = {\n      resetGeneratorState: 0\n    }; value.resetGeneratorState < generatorWrapper.setTimeoutWrapper.length; ++value.resetGeneratorState) {\n      var CustomMap = generatorWrapper.setTimeoutWrapper[value.resetGeneratorState];\n      settlePromise(resolvePromise.getAdInstance(), \"msms_mime\" + value.resetGeneratorState, CustomMap.mimeType);\n      settlePromise(resolvePromise.getAdInstance(), \"msms_cs\" + value.resetGeneratorState, CustomMap.validateStringPrototypeMethod.toString());\n      if (handleThenable(Bm)) {\n        value.setErrorContext = new SourceBufferManager(generatorWrapper.tasks.addSourceBuffer(CustomMap.mimeType), value.resetGeneratorState);\n        value.supportsUint8Array = generatorWrapper.handleAsync[value.resetGeneratorState];\n        value.supportsUint8Array.window(\"progress\", function (findEntry) {\n          return function (iterateEntries) {\n            var createCircularNode = findEntry.setErrorContext;\n            var entryIdCounter = findEntry.supportsUint8Array;\n            iterateEntries = iterateEntries.CustomError;\n            if (iterateEntries.byteLength !== 0) {\n              createCircularNode.tasks.push(iterateEntries);\n              executeBufferAppend(createCircularNode);\n            }\n            if (entryIdCounter.onFulfilled()) {\n              generatorWrapper.onFulfilled++;\n              if (generatorWrapper.onFulfilled === generatorWrapper.entryIdCounter.length) {\n                endAllSourceBuffers(generatorWrapper);\n              }\n            }\n          };\n        }(value));\n        value.supportsUint8Array.window(\"media_source_error\", function (findEntry) {\n          generatorWrapper.dispatchEvent(findEntry);\n        });\n        generatorWrapper.entryIdCounter.push(value.setErrorContext.entryIdCounter);\n      } else {\n        value.includesIgnoreCase = generatorWrapper.tasks.addSourceBuffer(CustomMap.mimeType);\n        if (value.includesIgnoreCase) {\n          value.supportsBtoa = generatorWrapper.handleAsync[value.resetGeneratorState];\n          if (handleThenable(Am)) {\n            value.includesIgnoreCase.addEventListener(\"updateend\", function (findEntry) {\n              return function () {\n                if (generatorWrapper.dispatchUnhandledRejection.length > 0 && !findEntry.includesIgnoreCase.updating) {\n                  var iterateEntries = generatorWrapper.dispatchUnhandledRejection.shift();\n                  findEntry.includesIgnoreCase.appendBuffer(iterateEntries);\n                }\n              };\n            }(value));\n          }\n          value.includesIgnoreCase.addEventListener(\"error\", function (findEntry) {\n            return function () {\n              logError(\"msms_sbe\" + findEntry.resetGeneratorState);\n            };\n          }(value));\n          value.supportsBtoa.window(\"progress\", function (findEntry) {\n            return function (iterateEntries) {\n              var createCircularNode = findEntry.includesIgnoreCase;\n              var entryIdCounter = findEntry.supportsBtoa;\n              iterateEntries = iterateEntries.CustomError;\n              if (iterateEntries.byteLength !== 0) {\n                if (handleThenable(Am)) {\n                  if (createCircularNode.updating) {\n                    generatorWrapper.dispatchUnhandledRejection.push(iterateEntries);\n                  } else {\n                    createCircularNode.appendBuffer(iterateEntries);\n                  }\n                } else {\n                  createCircularNode.appendBuffer(iterateEntries);\n                }\n              }\n              if (entryIdCounter.onFulfilled()) {\n                generatorWrapper.onFulfilled++;\n                if (generatorWrapper.onFulfilled === generatorWrapper.entryIdCounter.length) {\n                  endAllSourceBuffers(generatorWrapper);\n                }\n              }\n            };\n          }(value));\n          value.supportsBtoa.window(\"media_source_error\", function (findEntry) {\n            generatorWrapper.dispatchEvent(findEntry);\n          });\n          generatorWrapper.entryIdCounter.push(value.includesIgnoreCase);\n        } else {\n          logError(\"msms_sbf\" + value.resetGeneratorState);\n        }\n      }\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"msms_ns\", generatorWrapper.entryIdCounter.length.toString());\n    generatorWrapper.handleThenable = true;\n    updateSegmentTrackers(generatorWrapper);\n  };\n  var endAllSourceBuffers = function (generatorWrapper) {\n    Promise.all(generatorWrapper.entryIdCounter.map(function (value) {\n      return new Promise(function (CustomMap) {\n        if (value.updating) {\n          value.addEventListener(\"updateend\", function () {\n            CustomMap();\n          });\n        } else {\n          CustomMap();\n        }\n      });\n    })).then(function () {\n      generatorWrapper.tasks.endOfStream();\n    });\n  };\n  var updateSegmentTrackers = function (generatorWrapper) {\n    if (generatorWrapper.handleThenable) {\n      for (var value = 0; value < generatorWrapper.setTimeoutWrapper.length; ++value) {\n        var CustomMap = generatorWrapper.handleAsync[value];\n        var findEntry = generatorWrapper.entryIdCounter[value];\n        if (findEntry.buffered.length === 0) {\n          findEntry = 0;\n        } else {\n          findEntry = 1000 * findEntry.buffered.end(0);\n        }\n        findEntry = generatorWrapper.logError[value].parsedIntegerTransformation(generatorWrapper.handleThenable, findEntry, CustomMap.dispatchUnhandledRejection());\n        if (findEntry !== 0) {\n          CustomMap.handleThenable(findEntry);\n        }\n      }\n    }\n  };\n  var generateObjectURL = function (generatorWrapper) {\n    generatorWrapper.isDone = createObjectURLWithValidation(generatorWrapper.tasks).toString();\n    return generatorWrapper.isDone;\n  };\n  MediaSourceManager.prototype.getAdEnvironment = function () {\n    if (this.isDone) {\n      window.URL.revokeObjectURL(this.isDone);\n    }\n    for (var generatorWrapper = getIterator(this.handleAsync), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value.value.markAsCompleted();\n    }\n    this.tasks.removeEventListener(\"sourceopen\", this.resolvePromise);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  MediaSourceManager.prototype.ByteArray = function (generatorWrapper) {\n    this.logError.filter(function () {\n      return false;\n    }).map(function (value) {\n      return value;\n    }).forEach(function (value) {\n      value.entryIdCounter = Object.assign({}, loadingThresholds, value.entryIdCounter, generatorWrapper);\n    });\n  };\n  var adRequestUrlPattern = RegExp(\"/pagead/conversion|/pagead/adview|/pagead/gen_204|/activeview?|csi.gstatic.com/csi|google.com/pagead/xsul|google.com/ads/measurement/l|googleads.g.doubleclick.net/pagead/ide_cookie|googleads.g.doubleclick.net/xbbe/pixel\");\n  var outstreamScriptPattern = RegExp(\"outstream.min.js\");\n  var outstreamStylePattern = RegExp(\"outstream.min.css\");\n  var fontRequestPattern = RegExp(\"fonts.gstatic.com\");\n  var videoPlaybackUrlPattern = RegExp(\"googlevideo.com/videoplayback|c.2mdn.net/videoplayback|gcdn.2mdn.net/videoplayback\");\n  var customElementsScriptPattern = RegExp(\"custom.elements.min.js\");\n  function calculateAndReportResourceTiming(generatorWrapper, value) {\n    var CustomMap = 0;\n    var findEntry = 0;\n    var iterateEntries = 0;\n    var createCircularNode = 0;\n    var entryIdCounter = 0;\n    var key = 0;\n    var value = 0;\n    var entry = false;\n    var currentEntry = false;\n    if (typeof getFromGlobalScope(\"performance.getEntriesByType\", globalScope) === \"function\" && \"transferSize\" in globalScope.PerformanceResourceTiming.prototype) {\n      var foundEntry = globalScope.performance.getEntriesByType(\"resource\");\n      foundEntry = getIterator(foundEntry);\n      for (var resolveFunction = foundEntry.next(); !resolveFunction.done; resolveFunction = foundEntry.next()) {\n        resolveFunction = resolveFunction.value;\n        if (!adRequestUrlPattern.test(resolveFunction.name)) {\n          createCircularNode += 1;\n          if (resolveFunction.transferSize) {\n            CustomMap += resolveFunction.transferSize;\n            if (resolveFunction.encodedBodySize && resolveFunction.transferSize < resolveFunction.encodedBodySize) {\n              key += 1;\n              iterateEntries += resolveFunction.encodedBodySize;\n              if (outstreamScriptPattern.test(resolveFunction.name)) {\n                entry = true;\n              }\n              if (outstreamStylePattern.test(resolveFunction.name)) {\n                currentEntry = true;\n              }\n            }\n            if (videoPlaybackUrlPattern.test(resolveFunction.name)) {\n              findEntry += resolveFunction.transferSize;\n            }\n          } else if (resolveFunction.transferSize === 0 && resolveFunction.encodedBodySize === 0) {\n            if (customElementsScriptPattern.test(resolveFunction.name)) {\n              CustomMap += 6686;\n            } else if (!fontRequestPattern.test(resolveFunction.name)) {\n              value += 1;\n              addMultipleKeyValues(resolvePromise.getAdInstance(), {\n                event_name: \"unmeasurable_asset\",\n                resource_name: resolveFunction.name,\n                encoded_body_size: resolveFunction.encodedBodySize,\n                transfer_size: resolveFunction.transferSize\n              });\n            }\n          } else {\n            entryIdCounter += 1;\n            iterateEntries += resolveFunction.encodedBodySize;\n            if (outstreamScriptPattern.test(resolveFunction.name)) {\n              entry = true;\n            }\n            if (outstreamStylePattern.test(resolveFunction.name)) {\n              currentEntry = true;\n            }\n          }\n        }\n      }\n      foundEntry = 0;\n      if (generatorWrapper.duration) {\n        for (resolveFunction = 0; resolveFunction < generatorWrapper.buffered.length; resolveFunction++) {\n          foundEntry += generatorWrapper.buffered.end(resolveFunction) - generatorWrapper.buffered.startTimer(resolveFunction);\n        }\n        foundEntry = Math.min(foundEntry, generatorWrapper.duration);\n      }\n      addMultipleKeyValues(resolvePromise.getAdInstance(), {\n        event_name: value,\n        asset_bytes: CustomMap,\n        video_bytes: findEntry,\n        cached_data_bytes: iterateEntries,\n        js_cached: entry,\n        css_cached: currentEntry,\n        num_assets: createCircularNode,\n        num_assets_cached: entryIdCounter,\n        num_assets_cache_validated: key,\n        num_assets_unmeasurable: value,\n        video_played_seconds: generatorWrapper.currentTime.toFixed(2),\n        video_muted: generatorWrapper.muted,\n        video_seconds_loaded: foundEntry.toFixed(2)\n      });\n    } else {\n      settlePromise(resolvePromise.getAdInstance(), \"error\", \"reporting_timing_not_supported\");\n    }\n  }\n  var MediaSourceConfig = function (generatorWrapper, value, CustomMap, findEntry) {\n    this.url = generatorWrapper;\n    this.mimeType = value;\n    this.validateStringPrototypeMethod = CustomMap;\n    if (undefined === findEntry) {\n      this.entryIdCounter = null;\n    } else {\n      this.entryIdCounter = findEntry;\n    }\n  };\n  function reportVideoPlaybackQuality(generatorWrapper) {\n    var value = resolvePromise.getAdInstance();\n    var CustomMap = generatorWrapper.getVideoPlaybackQuality && generatorWrapper.getVideoPlaybackQuality();\n    if (CustomMap) {\n      generatorWrapper = generatorWrapper.currentTime;\n      settlePromise(value, \"vqdf\", String(CustomMap.droppedVideoFrames));\n      settlePromise(value, \"vqtf\", String(CustomMap.totalVideoFrames));\n      settlePromise(value, \"vqfr\", String(Math.roundRectangle(CustomMap.totalVideoFrames / generatorWrapper)));\n    } else {\n      settlePromise(value, \"vqu\", \"1\");\n    }\n  }\n  var EventName = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  EventName.prototype.toString = function () {\n    return this.entryIdCounter;\n  };\n  var videoMuteEvent = new EventName(\"video_mute\");\n  var videoCaptionVisibilityEvent = new EventName(\"video_caption_visibility\");\n  var EventDispatcher = function (generatorWrapper) {\n    tryCall.call(this);\n    this.isDone = 1;\n    this.setTimeoutWrapper = [];\n    this.createDeferred = 0;\n    this.entryIdCounter = [];\n    this.tasks = {};\n    this.dispatchUnhandledRejection = !!generatorWrapper;\n  };\n  inheritPrototype(EventDispatcher, tryCall);\n  var registerEvent = function (generatorWrapper, value, CustomMap) {\n    var findEntry = videoCaptionVisibilityEvent.toString();\n    var iterateEntries = generatorWrapper.tasks[findEntry];\n    if (!iterateEntries) {\n      iterateEntries = generatorWrapper.tasks[findEntry] = [];\n    }\n    var createCircularNode = generatorWrapper.isDone;\n    generatorWrapper.entryIdCounter[createCircularNode] = findEntry;\n    generatorWrapper.entryIdCounter[createCircularNode + 1] = value;\n    generatorWrapper.entryIdCounter[createCircularNode + 2] = CustomMap;\n    generatorWrapper.isDone = createCircularNode + 3;\n    iterateEntries.push(createCircularNode);\n  };\n  var unregisterEvent = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.tasks[videoCaptionVisibilityEvent.toString()];\n    if (findEntry) {\n      var iterateEntries = generatorWrapper.entryIdCounter;\n      if (findEntry = findEntry.find(function (createCircularNode) {\n        return iterateEntries[createCircularNode + 1] == value && iterateEntries[createCircularNode + 2] == CustomMap;\n      })) {\n        generatorWrapper.handleAsync(findEntry);\n      }\n    }\n  };\n  EventDispatcher.prototype.handleAsync = function (generatorWrapper) {\n    var value = this.entryIdCounter[generatorWrapper];\n    if (value) {\n      var CustomMap = this.tasks[value];\n      if (this.createDeferred != 0) {\n        this.setTimeoutWrapper.push(generatorWrapper);\n        this.entryIdCounter[generatorWrapper + 1] = function () {};\n      } else {\n        if (CustomMap) {\n          removeElement(CustomMap, generatorWrapper);\n        }\n        delete this.entryIdCounter[generatorWrapper];\n        delete this.entryIdCounter[generatorWrapper + 1];\n        delete this.entryIdCounter[generatorWrapper + 2];\n      }\n    }\n    return !!value;\n  };\n  EventDispatcher.prototype.onFulfilled = function (generatorWrapper, value) {\n    var CustomMap = this.tasks[generatorWrapper];\n    if (CustomMap) {\n      for (var findEntry = Array(arguments.length - 1), iterateEntries = 1, createCircularNode = arguments.length; iterateEntries < createCircularNode; iterateEntries++) {\n        findEntry[iterateEntries - 1] = arguments[iterateEntries];\n      }\n      if (this.dispatchUnhandledRejection) {\n        for (iterateEntries = 0; iterateEntries < CustomMap.length; iterateEntries++) {\n          var entryIdCounter = CustomMap[iterateEntries];\n          invokeEventCallback(this.entryIdCounter[entryIdCounter + 1], this.entryIdCounter[entryIdCounter + 2], findEntry);\n        }\n      } else {\n        this.createDeferred++;\n        try {\n          iterateEntries = 0;\n          for (createCircularNode = CustomMap.length; iterateEntries < createCircularNode && !this.handleIteratorResult(); iterateEntries++) {\n            entryIdCounter = CustomMap[iterateEntries];\n            this.entryIdCounter[entryIdCounter + 1].apply(this.entryIdCounter[entryIdCounter + 2], findEntry);\n          }\n        } finally {\n          this.createDeferred--;\n          if (this.setTimeoutWrapper.length > 0 && this.createDeferred == 0) {\n            for (; CustomMap = this.setTimeoutWrapper.pop();) {\n              this.handleAsync(CustomMap);\n            }\n          }\n        }\n      }\n    }\n  };\n  var invokeEventCallback = function (generatorWrapper, value, CustomMap) {\n    enqueueTask(function () {\n      generatorWrapper.apply(value, CustomMap);\n    });\n  };\n  EventDispatcher.prototype.clearAll = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = this.tasks[generatorWrapper];\n      if (value) {\n        value.forEach(this.handleAsync, this);\n        delete this.tasks[generatorWrapper];\n      }\n    } else {\n      this.entryIdCounter.length = 0;\n      this.tasks = {};\n    }\n  };\n  EventDispatcher.prototype.getAdEnvironment = function () {\n    EventDispatcher.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.clearAll();\n    this.setTimeoutWrapper.length = 0;\n  };\n  var EventDispatcherWrapper = function (generatorWrapper) {\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(generatorWrapper);\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(EventDispatcherWrapper, tryCall);\n  EventDispatcherWrapper.prototype.clearAll = function (generatorWrapper) {\n    this.entryIdCounter.clearAll(undefined !== generatorWrapper ? generatorWrapper.toString() : undefined);\n  };\n  var BaseComponent = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(this);\n    registerDisposable(this, this.entryIdCounter);\n    this.isOperaBrowser = generatorWrapper;\n  };\n  inheritPrototype(BaseComponent, tryCall);\n  var bindComponentEvent = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.isOperaBrowser) {\n      registerEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      executeOrDelayUntilDisposed(generatorWrapper, function () {\n        unregisterEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      });\n    }\n  };\n  var CaptionVisibilityComponent = function (generatorWrapper, value) {\n    BaseComponent.call(this, value);\n    bindComponentEvent(this, function (CustomMap) {\n      if (CustomMap) {\n        generatorWrapper.entryIdCounter.mode = \"showing\";\n      } else {\n        generatorWrapper.endsWith();\n      }\n    }, this);\n  };\n  inheritPrototype(CaptionVisibilityComponent, BaseComponent);\n  var BaseSDKComponent = function () {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = new EventDispatcher(this);\n    registerDisposable(this, this.setTimeoutWrapper);\n  };\n  inheritPrototype(BaseSDKComponent, AdEnvironmentConfig);\n  var placeholderForFutureFunction = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    BaseSDKComponent.call(this);\n    generatorWrapper.setAttribute(\"crossorigin\", \"anonymous\");\n    var findEntry = createElementWithOptionalClassesAndAttributes(\"TRACK\");\n    findEntry.setAttribute(\"kind\", \"captions\");\n    findEntry.setAttribute(\"src\", value);\n    findEntry.setAttribute(\"default\", \"\");\n    generatorWrapper.appendChild(findEntry);\n    this.tasks = document.createElement(\"style\");\n    generatorWrapper.appendChild(this.tasks);\n    this.entryIdCounter = generatorWrapper.textTracks[0];\n    setupCueChangeHandler(this);\n    if (CustomMap) {\n      this.entryIdCounter.mode = \"showing\";\n    } else {\n      this.endsWith();\n    }\n  };\n  inheritPrototype(placeholderForFutureFunction, BaseSDKComponent);\n  var setupCueChangeHandler = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter;\n    document.addEventListener(\"updateCueStyles\", function (CustomMap) {\n      generatorWrapper.tasks.textContent = CustomMap.detail.style;\n    }, true);\n    value.addEventListener(\"cuechange\", function () {\n      for (var CustomMap = value.cues, findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n        var iterateEntries = CustomMap[findEntry];\n        iterateEntries.align = \"center\";\n        iterateEntries.position = \"auto\";\n      }\n    }, {\n      once: true\n    });\n  };\n  placeholderForFutureFunction.prototype.endsWith = function () {\n    this.entryIdCounter.mode = \"hidden\";\n  };\n  function setupReportingObserver(generatorWrapper, value) {\n    if (typeof ReportingObserver !== \"undefined\") {\n      var CustomMap = function (iterateEntries) {\n        iterateEntries = getIterator(iterateEntries);\n        for (var createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n          createCircularNode = createCircularNode.value;\n          if (generatorWrapper(createCircularNode)) {\n            value(createCircularNode);\n          }\n        }\n      };\n      var findEntry = new ReportingObserver(CustomMap, {\n        buffered: true\n      });\n      globalScope.addEventListener(\"pagehide\", function () {\n        CustomMap(findEntry.takeRecords(), findEntry);\n        findEntry.disconnect();\n      });\n      findEntry.observe();\n    }\n  }\n  function handleHeavyAdIntervention(generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    setupReportingObserver(function (value) {\n      return value.body && value.body.writeBytes === \"HeavyAdIntervention\";\n    }, function (value) {\n      var CustomMap = value.body.message;\n      var findEntry = resolvePromise.getAdInstance();\n      settlePromise(findEntry, \"ham\", CustomMap);\n      if (CustomMap.includes(\"CPU\")) {\n        settlePromise(findEntry, \"hacpu\", \"true\");\n      } else if (CustomMap.includes(\"network\")) {\n        settlePromise(findEntry, \"habytes\", \"true\");\n      }\n      if (generatorWrapper) {\n        generatorWrapper(value);\n      }\n    });\n  }\n  var videoAttributes = \"autoplay controls crossorigin demuxedaudiosrc demuxedvideosrc loop muted playsinline poster preload src webkit-playsinline x-webkit-airplay\".split(\" \");\n  var videoMethods = \"autoplay buffered controls crossOrigin currentSrc currentTime defaultMuted defaultPlaybackRate disablePictureInPicture disableRemotePlayback duration ended loop muted networkState onerror onwaitingforkey paused played playsinline poster preload preservesPitch mozPreservesPitch webkitPreservesPitch readyState seekable videoWidth videoHeight volume textTracks canPlayType captureStream getVideoPlaybackQuality load pause play requestPictureInPicture setSinkId oncanplay oncanplaythrough onload onplay onpause onended onfullscreenchange onfullscreenerror addEventListener dispatchEvent removeEventListener requestFullscreen\".split(\" \");\n  var mutationObserverConfig = {\n    childList: true\n  };\n  var supportsClassFields = !RegExp(\"^\\\\s*class\\\\s*\\\\{\\\\s*\\\\}\\\\s*$\").test(function () {}.toString());\n  var CustomHTMLElement = HTMLElement;\n  if (supportsClassFields) {\n    CustomHTMLElement = function () {\n      var generatorWrapper = Object.getPrototypeOf(this).constructor;\n      return globalScope.Reflect.construct(HTMLElement, [], generatorWrapper);\n    };\n    Object.setPrototypeOf(CustomHTMLElement, HTML",
  "  if (CustomMap) {\n      for (var findEntry = Array(arguments.length - 1), iterateEntries = 1, createCircularNode = arguments.length; iterateEntries < createCircularNode; iterateEntries++) {\n        findEntry[iterateEntries - 1] = arguments[iterateEntries];\n      }\n      if (this.dispatchUnhandledRejection) {\n        for (iterateEntries = 0; iterateEntries < CustomMap.length; iterateEntries++) {\n          var entryIdCounter = CustomMap[iterateEntries];\n          invokeEventCallback(this.entryIdCounter[entryIdCounter + 1], this.entryIdCounter[entryIdCounter + 2], findEntry);\n        }\n      } else {\n        this.createDeferred++;\n        try {\n          iterateEntries = 0;\n          for (createCircularNode = CustomMap.length; iterateEntries < createCircularNode && !this.handleIteratorResult(); iterateEntries++) {\n            entryIdCounter = CustomMap[iterateEntries];\n            this.entryIdCounter[entryIdCounter + 1].apply(this.entryIdCounter[entryIdCounter + 2], findEntry);\n          }\n        } finally {\n          this.createDeferred--;\n          if (this.setTimeoutWrapper.length > 0 && this.createDeferred == 0) {\n            for (; CustomMap = this.setTimeoutWrapper.pop();) {\n              this.handleAsync(CustomMap);\n            }\n          }\n        }\n      }\n    }\n  };\n  var invokeEventCallback = function (generatorWrapper, value, CustomMap) {\n    enqueueTask(function () {\n      generatorWrapper.apply(value, CustomMap);\n    });\n  };\n  EventDispatcher.prototype.clearAll = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = this.tasks[generatorWrapper];\n      if (value) {\n        value.forEach(this.handleAsync, this);\n        delete this.tasks[generatorWrapper];\n      }\n    } else {\n      this.entryIdCounter.length = 0;\n      this.tasks = {};\n    }\n  };\n  EventDispatcher.prototype.getAdEnvironment = function () {\n    EventDispatcher.executeGeneratorAsPromise.getAdEnvironment.call(this);\n    this.clearAll();\n    this.setTimeoutWrapper.length = 0;\n  };\n  var EventDispatcherWrapper = function (generatorWrapper) {\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(generatorWrapper);\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(EventDispatcherWrapper, tryCall);\n  EventDispatcherWrapper.prototype.clearAll = function (generatorWrapper) {\n    this.entryIdCounter.clearAll(undefined !== generatorWrapper ? generatorWrapper.toString() : undefined);\n  };\n  var BaseComponent = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    tryCall.call(this);\n    this.entryIdCounter = new EventDispatcher(this);\n    registerDisposable(this, this.entryIdCounter);\n    this.isOperaBrowser = generatorWrapper;\n  };\n  inheritPrototype(BaseComponent, tryCall);\n  var bindComponentEvent = function (generatorWrapper, value, CustomMap) {\n    if (generatorWrapper.isOperaBrowser) {\n      registerEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      executeOrDelayUntilDisposed(generatorWrapper, function () {\n        unregisterEvent(generatorWrapper.isOperaBrowser.entryIdCounter, value, CustomMap);\n      });\n    }\n  };\n  var CaptionVisibilityComponent = function (generatorWrapper, value) {\n    BaseComponent.call(this, value);\n    bindComponentEvent(this, function (CustomMap) {\n      if (CustomMap) {\n        generatorWrapper.entryIdCounter.mode = \"showing\";\n      } else {\n        generatorWrapper.endsWith();\n      }\n    }, this);\n  };\n  inheritPrototype(CaptionVisibilityComponent, BaseComponent);\n  var BaseSDKComponent = function () {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = new EventDispatcher(this);\n    registerDisposable(this, this.setTimeoutWrapper);\n  };\n  inheritPrototype(BaseSDKComponent, AdEnvironmentConfig);\n  var placeholderForFutureFunction = function (generatorWrapper, value, CustomMap) {\n    if (undefined === CustomMap) {\n      CustomMap = true;\n    } else {\n      CustomMap = CustomMap;\n    }\n    BaseSDKComponent.call(this);\n    generatorWrapper.setAttribute(\"crossorigin\", \"anonymous\");\n    var findEntry = createElementWithOptionalClassesAndAttributes(\"TRACK\");\n    findEntry.setAttribute(\"kind\", \"captions\");\n    findEntry.setAttribute(\"src\", value);\n    findEntry.setAttribute(\"default\", \"\");\n    generatorWrapper.appendChild(findEntry);\n    this.tasks = document.createElement(\"style\");\n    generatorWrapper.appendChild(this.tasks);\n    this.entryIdCounter = generatorWrapper.textTracks[0];\n    setupCueChangeHandler(this);\n    if (CustomMap) {\n      this.entryIdCounter.mode = \"showing\";\n    } else {\n      this.endsWith();\n    }\n  };\n  inheritPrototype(placeholderForFutureFunction, BaseSDKComponent);\n  var setupCueChangeHandler = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter;\n    document.addEventListener(\"updateCueStyles\", function (CustomMap) {\n      generatorWrapper.tasks.textContent = CustomMap.detail.style;\n    }, true);\n    value.addEventListener(\"cuechange\", function () {\n      for (var CustomMap = value.cues, findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n        var iterateEntries = CustomMap[findEntry];\n        iterateEntries.align = \"center\";\n        iterateEntries.position = \"auto\";\n      }\n    }, {\n      once: true\n    });\n  };\n  placeholderForFutureFunction.prototype.endsWith = function () {\n    this.entryIdCounter.mode = \"hidden\";\n  };\n  function setupReportingObserver(generatorWrapper, value) {\n    if (typeof ReportingObserver !== \"undefined\") {\n      var CustomMap = function (iterateEntries) {\n        iterateEntries = getIterator(iterateEntries);\n        for (var createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n          createCircularNode = createCircularNode.value;\n          if (generatorWrapper(createCircularNode)) {\n            value(createCircularNode);\n          }\n        }\n      };\n      var findEntry = new ReportingObserver(CustomMap, {\n        buffered: true\n      });\n      globalScope.addEventListener(\"pagehide\", function () {\n        CustomMap(findEntry.takeRecords(), findEntry);\n        findEntry.disconnect();\n      });\n      findEntry.observe();\n    }\n  }\n  function handleHeavyAdIntervention(generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = null;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    setupReportingObserver(function (value) {\n      return value.body && value.body.writeBytes === \"HeavyAdIntervention\";\n    }, function (value) {\n      var CustomMap = value.body.message;\n      var findEntry = resolvePromise.getAdInstance();\n      settlePromise(findEntry, \"ham\", CustomMap);\n      if (CustomMap.includes(\"CPU\")) {\n        settlePromise(findEntry, \"hacpu\", \"true\");\n      } else if (CustomMap.includes(\"network\")) {\n        settlePromise(findEntry, \"habytes\", \"true\");\n      }\n      if (generatorWrapper) {\n        generatorWrapper(value);\n      }\n    });\n  }\n  var videoAttributes = \"autoplay controls crossorigin demuxedaudiosrc demuxedvideosrc loop muted playsinline poster preload src webkit-playsinline x-webkit-airplay\".split(\" \");\n  var videoMethods = \"autoplay buffered controls crossOrigin currentSrc currentTime defaultMuted defaultPlaybackRate disablePictureInPicture disableRemotePlayback duration ended loop muted networkState onerror onwaitingforkey paused played playsinline poster preload preservesPitch mozPreservesPitch webkitPreservesPitch readyState seekable videoWidth videoHeight volume textTracks canPlayType captureStream getVideoPlaybackQuality load pause play requestPictureInPicture setSinkId oncanplay oncanplaythrough onload onplay onpause onended onfullscreenchange onfullscreenerror addEventListener dispatchEvent removeEventListener requestFullscreen\".split(\" \");\n  var mutationObserverConfig = {\n    childList: true\n  };\n  var supportsClassFields = !RegExp(\"^\\\\s*class\\\\s*\\\\{\\\\s*\\\\}\\\\s*$\").test(function () {}.toString());\n  var CustomHTMLElement = HTMLElement;\n  if (supportsClassFields) {\n    CustomHTMLElement = function () {\n      var generatorWrapper = Object.getPrototypeOf(this).constructor;\n      return globalScope.Reflect.construct(HTMLElement, [], generatorWrapper);\n    };\n    Object.setPrototypeOf(CustomHTMLElement, HTMLElement);\n    Object.setPrototypeOf(CustomHTMLElement.prototype, HTMLElement.prototype);\n  }\n  var findTrackElement = function (generatorWrapper) {\n    if (generatorWrapper !== null) {\n      generatorWrapper = getIterator(generatorWrapper);\n      for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n        value = value.value;\n        if (value.nodeName === \"TRACK\".toString()) {\n          return value;\n        }\n      }\n    }\n    return null;\n  };\n  var MediaErrorWrapper = function (generatorWrapper, value) {\n    this.code = generatorWrapper;\n    if (undefined === value) {\n      this.message = \"\";\n    } else {\n      this.message = value;\n    }\n  };\n  var MediaSrcNotSupportedError = function (generatorWrapper) {\n    MediaErrorWrapper.call(this, MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED, undefined === generatorWrapper ? \"\" : generatorWrapper);\n  };\n  inheritPrototype(MediaSrcNotSupportedError, MediaErrorWrapper);\n  var CustomVideoElement = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = false;\n    } else {\n      value = value;\n    }\n    var CustomMap = CustomHTMLElement.call(this) || this;\n    settlePromise(resolvePromise.getAdInstance(), \"ulv\", \"1\");\n    CustomMap.clearObject = value;\n    CustomMap.sa = null;\n    CustomMap.getSingletonInstance = null;\n    CustomMap.getSingletonInstance = null;\n    CustomMap.table = createElementWithOptionalClassesAndAttributes(\"VIDEO\");\n    initializeVideoElement(CustomMap);\n    CustomMap.isOperaBrowser = generatorWrapper || new EventDispatcherWrapper();\n    setupVolumeChangeListener(CustomMap);\n    CustomMap.documentMode = null;\n    initializeCustomVideoElement(CustomMap);\n    CustomMap.attachShadow({\n      mode: \"open\"\n    });\n    CustomMap.shadowRoot.appendChild(CustomMap.table);\n    handleHeavyAdIntervention(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"has\", CustomMap.src || CustomMap.bidRequest);\n      settlePromise(resolvePromise.getAdInstance(), \"hat\", String(CustomMap.table.currentTime));\n    });\n    CustomMap.defaultSigned64 = false;\n    CustomMap.DeepTransform = false;\n    CustomMap.createEmptyStringsArray = null;\n    CustomMap.appendBuffer = null;\n    CustomMap.extendObject = false;\n    CustomMap.transformWithFlags = false;\n    CustomMap.PerformanceMonitor = null;\n    CustomMap.someElement = null;\n    return CustomMap;\n  };\n  inheritPrototype(CustomVideoElement, CustomHTMLElement);\n  var loadVideoElement = function (generatorWrapper) {\n    generatorWrapper.table.load();\n    if (handleThenable(Nm)) {\n      generatorWrapper.table.dispatchEvent(new Event(\"canplaythrough\"));\n    }\n  };\n  CustomVideoElement.prototype.attributeChangedCallback = function (generatorWrapper, value, CustomMap) {\n    switch (generatorWrapper) {\n      case \"src\":\n        updateSrcAttribute(this, CustomMap);\n        break;\n      case \"demuxedaudiosrc\":\n      case \"demuxedvideosrc\":\n        updateDemuxedSources(this);\n        break;\n      case \"muted\":\n        if (CustomMap === \"\") {\n          this.table[generatorWrapper] = true;\n        } else {\n          this.table[generatorWrapper] = !!CustomMap;\n        }\n        syncAttributeWithVideoElement(this, generatorWrapper, CustomMap);\n        break;\n      default:\n        syncAttributeWithVideoElement(this, generatorWrapper, CustomMap);\n    }\n  };\n  CustomVideoElement.prototype.ByteArray = function (generatorWrapper) {\n    this.someElement = generatorWrapper;\n    var value;\n    if (!((value = this.sa) == null)) {\n      value.ByteArray(generatorWrapper);\n    }\n  };\n  var syncAttributeWithVideoElement = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap !== generatorWrapper.table.getAttribute(value)) {\n      if (CustomMap === null) {\n        generatorWrapper.table.removeAttribute(value);\n      } else {\n        generatorWrapper.table.setAttribute(value, CustomMap);\n      }\n    }\n  };\n  var removeTimeUpdateListener = function (generatorWrapper) {\n    if (generatorWrapper.sa) {\n      generatorWrapper.table.removeEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n      generatorWrapper.sa.markAsCompleted();\n      generatorWrapper.sa = null;\n    }\n  };\n  var dispatchMediaError = function (generatorWrapper, value) {\n    generatorWrapper.getSingletonInstance = value;\n    generatorWrapper.table.dispatchEvent(new Event(\"error\"));\n  };\n  var initializeVideoElement = function (generatorWrapper) {\n    proxyVideoProperties(generatorWrapper);\n    defineErrorProperty(generatorWrapper);\n    generatorWrapper.table.addEventListener(\"loadedmetadata\", function () {\n      generatorWrapper.appendBuffer = waitForElementResize(generatorWrapper);\n      generatorWrapper.appendBuffer.then(function (value) {\n        var CustomMap = generatorWrapper.table.videoWidth;\n        var findEntry = generatorWrapper.table.videoHeight;\n        var iterateEntries = value.width;\n        var createCircularNode = value.height;\n        if (CustomMap > 0 && findEntry > 0 && iterateEntries > 0 && createCircularNode > 0) {\n          value = value.width / value.height;\n          CustomMap /= findEntry;\n          if (Math.min(CustomMap, value) / Math.max(CustomMap, value) >= 0.97) {\n            CustomMap = \"cover\";\n          } else {\n            CustomMap = \"contain\";\n          }\n        } else {\n          CustomMap = null;\n        }\n        if (CustomMap !== null) {\n          applyStyleOrRemove(generatorWrapper.table, {\n            \"object-fit\": CustomMap\n          });\n        }\n      });\n    });\n    generatorWrapper.table.addEventListener(\"play\", function () {\n      if (!generatorWrapper.DeepTransform) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_play\");\n        generatorWrapper.DeepTransform = true;\n      }\n    });\n    generatorWrapper.table.addEventListener(\"pause\", function () {\n      if (!generatorWrapper.defaultSigned64) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_pause\");\n        reportVideoPlaybackQuality(generatorWrapper.table);\n        generatorWrapper.defaultSigned64 = true;\n      }\n    });\n    addPageHideListener(globalScope, \"pagehide\", function () {\n      if (!generatorWrapper.defaultSigned64) {\n        calculateAndReportResourceTiming(generatorWrapper.table, \"first_pause\");\n        reportVideoPlaybackQuality(generatorWrapper.table);\n        generatorWrapper.defaultSigned64 = true;\n      }\n    });\n    generatorWrapper.table.addEventListener(\"stalled\", function () {\n      settlePromise(resolvePromise.getAdInstance(), \"ves\", \"1\");\n    });\n    new VideoPlaybackMonitor(generatorWrapper.table).window(\"playbackStalled\", function () {\n      return settlePromise(resolvePromise.getAdInstance(), \"pbs\", \"1\");\n    });\n    generatorWrapper.table.addEventListener(\"media_source_error\", function (value) {\n      removeTimeUpdateListener(generatorWrapper);\n      value = value.detail;\n      dispatchMediaError(generatorWrapper, new MediaErrorWrapper(value.code, value.message));\n    });\n    resetVideoSize(generatorWrapper);\n  };\n  var initializeCustomVideoElement = function (generatorWrapper) {\n    var value = findTrackElement(generatorWrapper.childNodes);\n    if (value) {\n      processSrcAttribute(generatorWrapper, value);\n    }\n    if (generatorWrapper.documentMode === null) {\n      setupMutationObserver(generatorWrapper);\n    }\n  };\n  var setupMutationObserver = function (generatorWrapper) {\n    if (globalScope.MutationObserver) {\n      var value = new MutationObserver(function (CustomMap) {\n        CustomMap = getIterator(CustomMap);\n        for (var findEntry = CustomMap.next(); !findEntry.done; findEntry = CustomMap.next()) {\n          findEntry = findEntry.value;\n          if (findEntry.type === \"childList\" && (findEntry = findTrackElement(findEntry.addedNodes))) {\n            processSrcAttribute(generatorWrapper, findEntry);\n            value.disconnect();\n            break;\n          }\n        }\n      });\n      value.observe(generatorWrapper, mutationObserverConfig);\n    }\n  };\n  var setupVolumeChangeListener = function (generatorWrapper) {\n    generatorWrapper.table.addEventListener(\"volumechange\", function () {\n      generatorWrapper.isOperaBrowser.entryIdCounter.onFulfilled(videoMuteEvent.toString(), generatorWrapper.table.muted);\n      if (!generatorWrapper.clearObject) {\n        generatorWrapper.isOperaBrowser.entryIdCounter.onFulfilled(videoCaptionVisibilityEvent.toString(), generatorWrapper.table.muted);\n      }\n    });\n  };\n  var processSrcAttribute = function (generatorWrapper, value) {\n    if (generatorWrapper.documentMode === null && value.hasAttribute(\"src\")) {\n      var CustomMap = value.getAttribute(\"src\");\n      generatorWrapper.documentMode = new placeholderForFutureFunction(generatorWrapper.table, CustomMap, value.hasAttribute(\"default\"));\n      new CaptionVisibilityComponent(generatorWrapper.documentMode, generatorWrapper.isOperaBrowser);\n      if (CustomMap.includes(\"kind=asr\")) {\n        settlePromise(resolvePromise.getAdInstance(), \"act\", \"1\");\n      }\n    }\n  };\n  var updateSrcAttribute = function (generatorWrapper, value) {\n    if (value !== generatorWrapper.getSingletonInstance) {\n      generatorWrapper.getSingletonInstance = value;\n      if (generatorWrapper.extendObject && value && isGCacheURL(value)) {\n        value = getGCacheURL(value);\n      }\n      var CustomMap = value ? getItagValue(value) : null;\n      var findEntry = !!CustomMap && isSupportedVideoType(CustomMap);\n      settlePromise(resolvePromise.getAdInstance(), \"umsem\", findEntry ? \"1\" : \"0\");\n      if (findEntry) {\n        value = createInstanceWithArguments(MediaSourceConfig, value, getMediaSourceString(CustomMap), 1000 * itagSupportsAutoplayMap[CustomMap], null);\n        generatorWrapper.sa = createInstanceWithArguments(MediaSourceManager, [value]);\n        if (generatorWrapper.someElement) {\n          generatorWrapper.sa.ByteArray(generatorWrapper.someElement);\n        }\n        generatorWrapper.sa.window(\"media_source_error\", function (iterateEntries) {\n          iterateEntries = createCustomEvent(\"media_source_error\", iterateEntries.detail);\n          generatorWrapper.table.dispatchEvent(iterateEntries);\n        });\n        generatorWrapper.createEmptyStringsArray = function () {\n          var iterateEntries = generatorWrapper.sa;\n          iterateEntries.handleThenable = 1000 * generatorWrapper.table.currentTime;\n          updateSegmentTrackers(iterateEntries);\n        };\n        generatorWrapper.table.addEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n        syncAttributeWithVideoElement(generatorWrapper, \"src\", generateObjectURL(generatorWrapper.sa));\n      } else {\n        removeTimeUpdateListener(generatorWrapper);\n        syncAttributeWithVideoElement(generatorWrapper, \"src\", value);\n      }\n      if (!generatorWrapper.transformWithFlags) {\n        loadVideoElement(generatorWrapper);\n      }\n    }\n  };\n  var updateDemuxedSources = function (generatorWrapper) {\n    if (generatorWrapper.src) {\n      dispatchMediaError(generatorWrapper, new MediaErrorWrapper(MediaError.MEDIA_ERR_ABORTED, \"Setting demuxed src after src is already set.\"));\n    }\n    if (!generatorWrapper.unknownVariable && !generatorWrapper.bidRequest && generatorWrapper.sa) {\n      removeTimeUpdateListener(generatorWrapper);\n      syncAttributeWithVideoElement(generatorWrapper, \"src\", null);\n      loadVideoElement(generatorWrapper);\n    } else if (generatorWrapper.unknownVariable && generatorWrapper.bidRequest) {\n      var value = getItagValue(isGCacheURL(generatorWrapper.bidRequest) ? getGCacheURL(generatorWrapper.bidRequest) : generatorWrapper.bidRequest);\n      var CustomMap = getItagValue(isGCacheURL(generatorWrapper.unknownVariable) ? getGCacheURL(generatorWrapper.unknownVariable) : generatorWrapper.unknownVariable);\n      if (value && isSupportedVideoType(value)) {\n        if (CustomMap && isSupportedVideoType(CustomMap)) {\n          var findEntry = !!value && isSupportedVideoType(value) && !!CustomMap && isSupportedVideoType(CustomMap);\n          settlePromise(resolvePromise.getAdInstance(), \"umsed\", findEntry ? \"1\" : \"0\");\n          value = createInstanceWithArguments(MediaSourceConfig, generatorWrapper.bidRequest, getMediaSourceString(value), -1, null);\n          CustomMap = createInstanceWithArguments(MediaSourceConfig, generatorWrapper.unknownVariable, getMediaSourceString(CustomMap), -1, null);\n          generatorWrapper.sa = createInstanceWithArguments(MediaSourceManager, [value, CustomMap]);\n          if (generatorWrapper.someElement) {\n            generatorWrapper.sa.ByteArray(generatorWrapper.someElement);\n          }\n          generatorWrapper.sa.window(\"media_source_error\", function (iterateEntries) {\n            iterateEntries = createCustomEvent(\"media_source_error\", iterateEntries.detail);\n            generatorWrapper.table.dispatchEvent(iterateEntries);\n          });\n          generatorWrapper.createEmptyStringsArray = function () {\n            var iterateEntries = generatorWrapper.sa;\n            iterateEntries.handleThenable = 1000 * generatorWrapper.table.currentTime;\n            updateSegmentTrackers(iterateEntries);\n          };\n          generatorWrapper.table.addEventListener(\"timeupdate\", generatorWrapper.createEmptyStringsArray);\n          syncAttributeWithVideoElement(generatorWrapper, \"src\", generateObjectURL(generatorWrapper.sa));\n          if (!generatorWrapper.transformWithFlags) {\n            loadVideoElement(generatorWrapper);\n          }\n        } else {\n          dispatchMediaError(generatorWrapper, new MediaSrcNotSupportedError('Audio itag \"' + CustomMap + '\" not supported.'));\n        }\n      } else {\n        dispatchMediaError(generatorWrapper, new MediaSrcNotSupportedError('Video itag \"' + value + '\" not supported.'));\n      }\n    }\n  };\n  var proxyVideoProperties = function (generatorWrapper) {\n    findEntry = {\n      bindOrWrapFunction: undefined,\n      getAdStateValue: undefined\n    };\n    for (var value = getIterator(videoMethods), CustomMap = value.next(), findEntry = {}; !CustomMap.done; CustomMap = value.next()) {\n      findEntry.bindOrWrapFunction = CustomMap.value;\n      if (findEntry.bindOrWrapFunction in generatorWrapper.table) {\n        if (typeof generatorWrapper.table[findEntry.bindOrWrapFunction] === \"function\") {\n          findEntry.getAdStateValue = generatorWrapper.table[findEntry.bindOrWrapFunction].bind(generatorWrapper.table);\n          Object.defineProperty(generatorWrapper, findEntry.bindOrWrapFunction, {\n            set: function (iterateEntries) {\n              return function (createCircularNode) {\n                generatorWrapper.table[iterateEntries.bindOrWrapFunction] = createCircularNode;\n              };\n            }(findEntry),\n            get: function (iterateEntries) {\n              return function () {\n                return iterateEntries.getAdStateValue;\n              };\n            }(findEntry)\n          });\n        } else {\n          Object.defineProperty(generatorWrapper, findEntry.bindOrWrapFunction, {\n            set: function (iterateEntries) {\n              return function (createCircularNode) {\n                generatorWrapper.table[iterateEntries.bindOrWrapFunction] = createCircularNode;\n              };\n            }(findEntry),\n            get: function (iterateEntries) {\n              return function () {\n                return generatorWrapper.table[iterateEntries.bindOrWrapFunction];\n              };\n            }(findEntry)\n          });\n        }\n      }\n    }\n  };\n  var defineErrorProperty = function (generatorWrapper) {\n    Object.defineProperty(generatorWrapper, \"error\", {\n      set() {},\n      get() {\n        if (generatorWrapper.table.hasError) {\n          return generatorWrapper.table.hasError;\n        } else {\n          return generatorWrapper.getSingletonInstance;\n        }\n      }\n    });\n  };\n  var resetVideoSize = function (generatorWrapper) {\n    generatorWrapper.table.style.width = getFullSize();\n    generatorWrapper.table.style.height = getFullSize();\n  };\n  CustomVideoElement.prototype.disconnectedCallback = function () {\n    if (this.appendBuffer) {\n      disconnectResizeObservers(this.appendBuffer);\n    }\n    if (CustomHTMLElement.prototype.disconnectedCallback) {\n      CustomHTMLElement.prototype.disconnectedCallback.call(this);\n    }\n  };\n  globalObject.Object.defineProperties(CustomVideoElement.prototype, {\n    unknownVariable: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"demuxedaudiosrc\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"demuxedaudiosrc\");\n      }\n    },\n    bidRequest: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"demuxedvideosrc\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"demuxedvideosrc\");\n      }\n    },\n    src: {\n      configurable: true,\n      enumerable: true,\n      set(generatorWrapper) {\n        this.setAttribute(\"src\", generatorWrapper);\n      },\n      get() {\n        return this.getAttribute(\"src\");\n      }\n    }\n  });\n  globalObject.Object.defineProperties(CustomVideoElement, {\n    observedAttributes: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return videoAttributes;\n      }\n    }\n  });\n  if (globalScope.customElements) {\n    if (!globalScope.customElements.get(\"lima-video\")) {\n      globalScope.customElements.define(\"lima-video\", CustomVideoElement);\n    }\n  }\n  function initializeVideoComponent() {\n    var generatorWrapper = createInstanceWithArguments(CB);\n    generatorWrapper.initializeMraid().then(function () {\n      var value = createCustomEvent(\"initialized\");\n      generatorWrapper.dispatchEvent(value);\n    });\n    return generatorWrapper;\n  }\n  var AdLoader = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    tryCall.call(this);\n    this.handleThenable = generatorWrapper;\n    this.tasks = CustomMap;\n    this.createDeferred = iterateEntries;\n    this.createIterator = this.updateMaxSize = this.isFirefox = this.dispatchUnhandledRejection = this.setTimeoutWrapper = this.isObjectOrFunction = 0;\n    this.onFulfilled = [];\n    this.handleThenable = false;\n    this.definePropertyPolyfill = this.toArray = this.firstQuartileTime = null;\n    this.wrapGeneratorToPromise = false;\n    this.isSafari = this.logError = this.handleAsync = this.sliceArguments = this.isArrayLike = null;\n    this.handleGeneratorError = false;\n    this.resolvePromise = new table(value.url);\n    this.validateStringPrototypeMethod = value.validateStringPrototypeMethod;\n    this.assignPolyfill = findEntry;\n    if (!(this.tryCall = value.entryIdCounter)) {\n      this.resolvePromise.entryIdCounter.removeElement(\"alr\");\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"sl_dv\" + this.createDeferred, (this.tryCall !== null).toString());\n    this.totalAdBufferingTime = !this.tryCall;\n    this.entryIdCounter = new XMLHttpRequest();\n    this.year = 0.1;\n    if (this.isDone = isSupportedEnvironment() && !isGCacheURL(this.resolvePromise)) {\n      this.handleAsync = initializeVideoComponent();\n      registerDisposable(this, this.handleAsync);\n    }\n    setupChunkLoaderEvents(this);\n  };\n  inheritPrototype(AdLoader, tryCall);\n  var dispatchMediaSourceError = function (generatorWrapper, value) {\n    value = createCustomEvent(\"media_source_error\", value);\n    generatorWrapper.handleThenable.dispatchEvent(value);\n  };\n  var handleChunkLoadError = function (generatorWrapper, value) {\n    dispatchMediaSourceError(generatorWrapper, {\n      code: generatorWrapper.setTimeoutWrapper > 1 ? MediaError.MEDIA_ERR_NETWORK : MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED,\n      message: value\n    });\n  };\n  var setupChunkLoaderEvents = function (generatorWrapper) {\n    generatorWrapper.firstQuartileTime = function () {\n      handleChunkLoadResponse(generatorWrapper);\n      if (generatorWrapper.totalAdBufferingTime) {\n        var value = generatorWrapper.entryIdCounter.responseText;\n        generatorWrapper.handleThenable = !value || value.length < generatorWrapper.validateStringPrototypeMethod;\n        generatorWrapper.updateMaxSize = 0;\n        logError(\"sl_cc\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n        generatorWrapper.dispatchUnhandledRejection++;\n        processSourceBuffer(generatorWrapper);\n      }\n    };\n    generatorWrapper.toArray = function () {\n      handleChunkLoadResponse(generatorWrapper);\n    };\n    generatorWrapper.definePropertyPolyfill = function () {\n      logError(\"sl_ec\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n      handleChunkLoadError(generatorWrapper, \"Failed to load chunk \" + generatorWrapper.setTimeoutWrapper + \" for stream \" + generatorWrapper.createDeferred);\n    };\n    generatorWrapper.entryIdCounter.addEventListener(\"load\", generatorWrapper.firstQuartileTime);\n    generatorWrapper.entryIdCounter.addEventListener(\"progress\", generatorWrapper.toArray);\n    generatorWrapper.entryIdCounter.addEventListener(\"error\", generatorWrapper.definePropertyPolyfill);\n    generatorWrapper.tasks.addEventListener(\"updateend\", function () {\n      if (generatorWrapper.tasks.buffered.length) {\n        generatorWrapper.isFirefox = generatorWrapper.tasks.buffered.end(0);\n        if (generatorWrapper.isDone) {\n          if (generatorWrapper.handleGeneratorError && !generatorWrapper.tasks.updating && generatorWrapper.setTimeoutWrapper === generatorWrapper.dispatchUnhandledRejection) {\n            logError(\"sl_lc\" + generatorWrapper.createDeferred);\n            generatorWrapper.assignPolyfill();\n          }\n        } else if (generatorWrapper.handleThenable && !generatorWrapper.tasks.updating && generatorWrapper.setTimeoutWrapper === generatorWrapper.dispatchUnhandledRejection) {\n          logError(\"sl_lc\" + generatorWrapper.createDeferred);\n          generatorWrapper.assignPolyfill();\n        }\n      }\n      if (!generatorWrapper.wrapGeneratorToPromise && generatorWrapper.handleThenable.buffered.length > 1) {\n        settlePromise(resolvePromise.getAdInstance(), \"dbr\", \"1\");\n        generatorWrapper.wrapGeneratorToPromise = true;\n      }\n    });\n    generatorWrapper.tasks.addEventListener(\"update\", function () {\n      if (generatorWrapper.onFulfilled.length && !generatorWrapper.tasks.updating) {\n        generatorWrapper.tasks.appendBuffer(generatorWrapper.onFulfilled.shift());\n      }\n    });\n    generatorWrapper.tasks.addEventListener(\"error\", function () {\n      logError(\"msb_err\" + generatorWrapper.createDeferred);\n      dispatchMediaSourceError(generatorWrapper, {\n        code: MediaError.MEDIA_ERR_DECODE,\n        message: \"Error on SourceBuffer \" + generatorWrapper.createDeferred\n      });\n    });\n    if (generatorWrapper.isDone) {\n      if (generatorWrapper.handleAsync.getUniqueId()) {\n        processAdRequest(generatorWrapper);\n      } else {\n        generatorWrapper.isArrayLike = addPageHideListener(generatorWrapper.handleAsync, \"initialized\", function () {\n          processAdRequest(generatorWrapper);\n        });\n      }\n      generatorWrapper.sliceArguments = addPageHideListener(generatorWrapper.handleAsync, \"get_video_succeeded\", function () {\n        processSourceBuffer(generatorWrapper);\n      });\n    } else {\n      processAdRequest(generatorWrapper);\n    }\n  };\n  var handleAdRequestFailure = function (generatorWrapper) {\n    logError(\"sl_rc\" + generatorWrapper.createDeferred + \"_\" + generatorWrapper.setTimeoutWrapper);\n    var value = createAdRequestUrl(generatorWrapper);\n    generatorWrapper.entryIdCounter.open(\"get\", value);\n    generatorWrapper.entryIdCounter.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    generatorWrapper.entryIdCounter.send(null);\n    if (generatorWrapper.isDone) {\n      generatorWrapper.logError = null;\n      generatorWrapper.isSafari = value;\n    }\n  };\n  var handleChunkLoadResponse = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter.status >= 400) {\n      handleChunkLoadError(generatorWrapper, 'Response code \"' + generatorWrapper.entryIdCounter.status + '\" on loading chunk ' + generatorWrapper.setTimeoutWrapper + \" for stream \" + generatorWrapper.createDeferred);\n    } else {\n      if (!generatorWrapper.totalAdBufferingTime) {\n        var value = generatorWrapper.entryIdCounter.getResponseHeader(\"content-type\");\n        if (value && value.indexOf(\"text/plain\") >= 0) {\n          if (generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE) {\n            generatorWrapper.resolvePromise = new table(generatorWrapper.entryIdCounter.response);\n            generatorWrapper.setTimeoutWrapper = 0;\n            generatorWrapper.dispatchUnhandledRejection = 0;\n            generatorWrapper.isObjectOrFunction++;\n            processAdRequest(generatorWrapper);\n          }\n          return;\n        }\n        generatorWrapper.totalAdBufferingTime = true;\n        logError(\"sl_redc\" + generatorWrapper.createDeferred);\n        settlePromise(resolvePromise.getAdInstance(), \"sl_tr\" + generatorWrapper.createDeferred, generatorWrapper.isObjectOrFunction.toString());\n      }\n      generatorWrapper.resolvePromise.entryIdCounter.removeElement(\"alr\");\n      if (generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.LOADING || generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE) {\n        value = createBufferFromArrayResponse(generatorWrapper, generatorWrapper.updateMaxSize);\n        generatorWrapper.updateMaxSize = generatorWrapper.entryIdCounter.response.length;\n        generatorWrapper.createIterator += value.byteLength;\n        processVideoAd(generatorWrapper, value);\n      }\n      if (generatorWrapper.isDone && generatorWrapper.entryIdCounter.readyState === XMLHttpRequest.DONE && (value = createBufferFromArrayResponse(generatorWrapper, 0), value.byteLength > 0)) {\n        var CustomMap = generatorWrapper.entryIdCounter.responseText;\n        generatorWrapper.handleGeneratorError = !CustomMap || CustomMap.length < generatorWrapper.validateStringPrototypeMethod;\n        generatorWrapper.handleAsync.isIpod(value, new table(generatorWrapper.isSafari), 0, generatorWrapper.handleGeneratorError);\n      }\n    }\n  };\n  var processVideoAd = function (generatorWrapper, value) {\n    if (value.byteLength > 0) {\n      if (generatorWrapper.tasks.updating || generatorWrapper.onFulfilled.length) {\n        generatorWrapper.onFulfilled.push(value);\n      } else {\n        generatorWrapper.tasks.appendBuffer(value);\n      }\n    }\n  };\n  var createBufferFromArrayResponse = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.entryIdCounter.response;\n    for (var CustomMap = new Uint8Array(generatorWrapper.length - value), findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n      CustomMap[findEntry] = generatorWrapper.charCodeAt(findEntry + value) & 255;\n    }\n    return CustomMap.buffer;\n  };\n  var processSourceBuffer = function (generatorWrapper) {\n    var value = popupBlockerDetectionTimestamp;\n    if (-1 !== value && value < generatorWrapper.createIterator + generatorWrapper.validateStringPrototypeMethod) {\n      generatorWrapper.handleThenable.pause();\n      popupBlockerDetectionTimestamp = -1;\n      value = false;\n    } else {\n      value = generatorWrapper.dispatchUnhandledRejection === generatorWrapper.setTimeoutWrapper && !generatorWrapper.tasks.updating && !generatorWrapper.onFulfilled.length;\n      if (generatorWrapper.isDone) {\n        value = !generatorWrapper.handleGeneratorError && value && generatorWrapper.handleThenable.currentTime >= generatorWrapper.year;\n      } else {\n        value = !generatorWrapper.handleThenable && value && generatorWrapper.handleThenable.currentTime >= generatorWrapper.year;\n      }\n    }\n    if (value) {\n      generatorWrapper.year = generatorWrapper.isFirefox + 0.1;\n      processAdRequest(generatorWrapper);\n    }\n  };\n  var createAdRequestUrl = function (generatorWrapper) {\n    var value = generatorWrapper.isDone && generatorWrapper.logError ? generatorWrapper.logError + 1 : generatorWrapper.setTimeoutWrapper * generatorWrapper.validateStringPrototypeMethod;\n    return setParameter(generatorWrapper.resolvePromise, \"range\", value + \"-\" + (value + generatorWrapper.validateStringPrototypeMethod - 1)).toString();\n  };\n  var processAdRequest = function (generatorWrapper) {\n    if (generatorWrapper.isDone) {\n      var value = new table(createAdRequestUrl(generatorWrapper));\n      generatorWrapper.handleAsync.containsElement(value).then(function (CustomMap) {\n        if (CustomMap) {\n          generatorWrapper.logError = Number(CustomMap.isAndroidBrowser);\n          generatorWrapper.handleGeneratorError = CustomMap.handleGeneratorError;\n          processVideoAd(generatorWrapper, CustomMap.video);\n          CustomMap = createCustomEvent(\"get_video_succeeded\");\n          generatorWrapper.handleAsync.dispatchEvent(CustomMap);\n          generatorWrapper.dispatchUnhandledRejection++;\n        } else {\n          handleAdRequestFailure(generatorWrapper);\n        }\n        generatorWrapper.setTimeoutWrapper++;\n      });\n    } else {\n      handleAdRequestFailure(generatorWrapper);\n      generatorWrapper.setTimeoutWrapper++;\n    }\n  };\n  AdLoader.prototype.getAdEnvironment = function () {\n    if (this.isDone && this.handleAsync.getUniqueId()) {\n      this.handleAsync.closeCache();\n    }\n    this.entryIdCounter.removeEventListener(\"load\", this.firstQuartileTime);\n    this.entryIdCounter.removeEventListener(\"progress\", this.toArray);\n    this.entryIdCounter.removeEventListener(\"error\", this.definePropertyPolyfill);\n    Pu(this.isArrayLike);\n    Pu(this.sliceArguments);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var MediaSourceManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    var CustomMap = this;\n    this.handleAsync = generatorWrapper;\n    this.handleThenable = value;\n    this.entryIdCounter = new MediaSource();\n    this.dispatchUnhandledRejection = [];\n    this.setTimeoutWrapper = [];\n    this.tasks = this.createDeferred = null;\n    this.isDone = false;\n    this.onFulfilled = function () {\n      initializeMediaSource(CustomMap);\n    };\n    this.entryIdCounter.addEventListener(\"sourceopen\", this.onFulfilled);\n  };\n  inheritPrototype(MediaSourceManager, tryCall);\n  var removeTimeUpdateListener = function (generatorWrapper) {\n    if (generatorWrapper.createDeferred) {\n      generatorWrapper.handleAsync.removeEventListener(\"timeupdate\", generatorWrapper.createDeferred);\n    }\n  };\n  var initializeMediaSource = function (generatorWrapper) {\n    logError(\"msmsw_oso\");\n    generatorWrapper.createDeferred = function () {\n      if (!generatorWrapper.isDone) {\n        for (var iterateEntries = getIterator(generatorWrapper.setTimeoutWrapper), createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n          processSourceBuffer(createCircularNode.value);\n        }\n      }\n    };\n    generatorWrapper.handleAsync.addEventListener(\"timeupdate\", generatorWrapper.createDeferred);\n    for (var value = 0; value < generatorWrapper.handleThenable.length; value++) {\n      var CustomMap = generatorWrapper.handleThenable[value];\n      settlePromise(resolvePromise.getAdInstance(), \"msmsw_mime\" + value, CustomMap.mimeType);\n      settlePromise(resolvePromise.getAdInstance(), \"msmsw_cs\" + value, CustomMap.validateStringPrototypeMethod.toString());\n      var findEntry = generatorWrapper.entryIdCounter.addSourceBuffer(CustomMap.mimeType);\n      if (findEntry) {\n        generatorWrapper.dispatchUnhandledRejection.push(findEntry);\n        CustomMap = createInstanceWithArguments(AdLoader, generatorWrapper.handleAsync, CustomMap, findEntry, function () {\n          generatorWrapper: if (!generatorWrapper.isDone) {\n            for (var iterateEntries = getIterator(generatorWrapper.setTimeoutWrapper), createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n              createCircularNode = createCircularNode.value;\n              if (createCircularNode.isDone ? !createCircularNode.handleGeneratorError || createCircularNode.tasks.updating || createCircularNode.onFulfilled.length : !createCircularNode.handleThenable || createCircularNode.tasks.updating || createCircularNode.onFulfilled.length) {\n                break generatorWrapper;\n              }\n            }\n            generatorWrapper.entryIdCounter.endOfStream();\n            generatorWrapper.isDone = true;\n            removeTimeUpdateListener(generatorWrapper);\n          }\n        }, value);\n        generatorWrapper.setTimeoutWrapper.push(CustomMap);\n      } else {\n        logError(\"msmsw_sbf\" + value);\n      }\n    }\n    settlePromise(resolvePromise.getAdInstance(), \"msmsw_ns\", generatorWrapper.dispatchUnhandledRejection.length.toString());\n  };\n  MediaSourceManager.prototype.getAdEnvironment = function () {\n    if (this.tasks) {\n      window.URL.revokeObjectURL(this.tasks);\n    }\n    for (var generatorWrapper = getIterator(this.setTimeoutWrapper), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value.value.markAsCompleted();\n    }\n    removeTimeUpdateListener(this);\n    this.entryIdCounter.removeEventListener(\"sourceopen\", this.onFulfilled);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  RegExp.prototype.hasOwnProperty(\"sticky\");\n  var uuidCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n  var generateUUID = function () {\n    for (var generatorWrapper = Array(36), value = 0, CustomMap, findEntry = 0; findEntry < 36; findEntry++) {\n      if (findEntry == 8 || findEntry == 13 || findEntry == 18 || findEntry == 23) {\n        generatorWrapper[findEntry] = \"-\";\n      } else if (findEntry == 14) {\n        generatorWrapper[findEntry] = \"4\";\n      } else {\n        if (value <= 2) {\n          value = 33554432 + 16777216 * Math.random() | 0;\n        }\n        CustomMap = value & 15;\n        value >>= 4;\n        generatorWrapper[findEntry] = uuidCharacters[findEntry == 19 ? CustomMap & 3 | 8 : CustomMap];\n      }\n    }\n    return generatorWrapper.join(\"\");\n  };\n  var CustomUri = function (generatorWrapper) {\n    table.call(this, generatorWrapper);\n    this.onFulfilled = new Map();\n    generatorWrapper = this.setTimeoutWrapper;\n    var value = generatorWrapper.indexOf(\";\");\n    var CustomMap = null;\n    if (value >= 0) {\n      this.setTimeoutWrapper = generatorWrapper.substring(0, value);\n      CustomMap = generatorWrapper.substring(value + 1);\n    } else {\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n    parseUriParameters(this, CustomMap);\n  };\n  inheritPrototype(CustomUri, table);\n  CustomUri.prototype.toString = function () {\n    return buildUriString(this, table.prototype.toString.call(this));\n  };\n  CustomUri.prototype.dispatchUnhandledRejection = function () {\n    return \"\";\n  };\n  var parseUriParameters = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(value))) {\n      value.split(\";\").forEach(function (CustomMap) {\n        var findEntry = CustomMap.indexOf(\"=\");\n        if (!(findEntry <= 0)) {\n          var iterateEntries = decodeUriComponentWithSpace(CustomMap.substring(0, findEntry));\n          CustomMap = decodeUriComponentWithSpace(CustomMap.substring(findEntry + 1));\n          findEntry = generatorWrapper.onFulfilled.get(iterateEntries);\n          if (findEntry != null) {\n            if (!findEntry.includes(CustomMap)) {\n              findEntry.push(CustomMap);\n            }\n          } else {\n            findEntry = [stringifyNullable(CustomMap)];\n          }\n          generatorWrapper.onFulfilled.set(iterateEntries, findEntry);\n        }\n      }, generatorWrapper);\n    }\n  };\n  var getOrdParameter = function (generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.onFulfilled.get(\"ord\");\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var setOrdParameter = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      value = value.map(stringifyNullable);\n      generatorWrapper.onFulfilled.set(\"ord\", value);\n    }\n  };\n  var buildUriString = function (generatorWrapper, value) {\n    value = [stringifyNullable(value)];\n    value.push.apply(value, toArray(getUriParameters(generatorWrapper)));\n    return value.join(\";\");\n  };\n  var getUriParameters = function (generatorWrapper) {\n    var value = getOrdParameter(generatorWrapper);\n    if (value == null) {\n      value = [stringifyNullable(Date.now())];\n    } else if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      generatorWrapper.onFulfilled.delete(\"ord\");\n    }\n    var CustomMap = [];\n    generatorWrapper.onFulfilled.forEach(function (findEntry, iterateEntries) {\n      findEntry.forEach(function (createCircularNode) {\n        CustomMap.push(iterateEntries + \"=\" + createCircularNode);\n      });\n    });\n    CustomMap.push(\"ord=\" + value[0]);\n    setOrdParameter(generatorWrapper, value);\n    return CustomMap;\n  };\n  CustomUri.prototype.handleThenable = function () {\n    return new CustomUri(this.toString());\n  };\n  function isDoubleClickAd(generatorWrapper) {\n    var value = new CustomUri(generatorWrapper);\n    generatorWrapper = value.tasks;\n    value = buildUriString(value, value.setTimeoutWrapper);\n    return !endsWith(generatorWrapper, \".g.doubleclick.net\") && (endsWith(generatorWrapper, \"doubleclick.net\") || endsWith(generatorWrapper, \"pagead2.googlesyndication.com\")) && matchesRegex(\"/(ad|pfad)[x|i|j]?/\", value);\n  }\n  function isBidRequest(generatorWrapper) {\n    return new table(generatorWrapper).tasks == \"bid.g.doubleclick.net\";\n  }\n  function isGoogleAdsRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"googleads.g.doubleclick.net\") && matchesRegex(\"/pagead/(live/)?ads\", value);\n  }\n  function isGampadRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"doubleclick.net\") && matchesRegex(\"/gampad/(live/)?ads\", value);\n  }\n  function isAdvRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return generatorWrapper.tasks === \"ad.doubleclick.net\" && matchesRegex(\"/dv3/adv\", value);\n  }\n  var updateMaxSize = {\n    DEPRECATED_ERROR_CODE: -1,\n    VAST_MALFORMED_RESPONSE: 100,\n    VAST_SCHEMA_VALIDATION_ERROR: 101,\n    VAST_UNSUPPORTED_VERSION: 102,\n    VAST_TRAFFICKING_ERROR: 200,\n    VAST_UNEXPECTED_LINEARITY: 201,\n    VAST_UNEXPECTED_DURATION_ERROR: 202,\n    VAST_WRAPPER_ERROR: 300,\n    VAST_LOAD_TIMEOUT: 301,\n    VAST_TOO_MANY_REDIRECTS: 302,\n    VAST_NO_ADS_AFTER_WRAPPER: 303,\n    VIDEO_PLAY_ERROR: 400,\n    VAST_MEDIA_LOAD_TIMEOUT: 402,\n    VAST_LINEAR_ASSET_MISMATCH: 403,\n    VAST_PROBLEM_DISPLAYING_MEDIA_FILE: 405,\n    OVERLAY_AD_PLAYING_FAILED: 500,\n    NONLINEAR_DIMENSIONS_ERROR: 501,\n    OVERLAY_AD_LOADING_FAILED: 502,\n    VAST_NONLINEAR_ASSET_MISMATCH: 503,\n    COMPANION_REQUIRED_ERROR: 602,\n    COMPANION_AD_LOADING_FAILED: 603,\n    UNKNOWN_ERROR: 900,\n    VPAID_ERROR: 901,\n    FAILED_TO_REQUEST_ADS: 1005,\n    VAST_ASSET_NOT_FOUND: 1007,\n    VAST_EMPTY_RESPONSE: 1009,\n    UNKNOWN_AD_RESPONSE: 1010,\n    UNSUPPORTED_LOCALE: 1011,\n    ADS_REQUEST_NETWORK_ERROR: 1012,\n    INVALID_AD_TAG: 1013,\n    PROTECTED_AUDIENCE_API_ERROR: 1014,\n    STREAM_INITIALIZATION_FAILED: 1020,\n    ASSET_FALLBACK_FAILED: 1021,\n    INVALID_ARGUMENTS: 1101,\n    NATIVE_MESSAGE_ERROR: 1204,\n    AUTOPLAY_DISALLOWED: 1205,\n    CONSENT_MANAGEMENT_PROVIDER_NOT_READY: 1300,\n    isSecureContext: 2002\n  };\n  updateMaxSize[-1] = \"DEPRECATED_ERROR_CODE\";\n  updateMaxSize[100] = \"VAST_MALFORMED_RESPONSE\";\n  updateMaxSize[101] = \"VAST_SCHEMA_VALIDATION_ERROR\";\n  updateMaxSize[102] = \"VAST_UNSUPPORTED_VERSION\";\n  updateMaxSize[200] = \"VAST_TRAFFICKING_ERROR\";\n  updateMaxSize[201] = \"VAST_UNEXPECTED_LINEARITY\";\n  updateMaxSize[202] = \"VAST_UNEXPECTED_DURATION_ERROR\";\n  updateMaxSize[300] = \"VAST_WRAPPER_ERROR\";\n  updateMaxSize[301] = \"VAST_LOAD_TIMEOUT\";\n  updateMaxSize[302] = \"VAST_TOO_MANY_REDIRECTS\";\n  updateMaxSize[303] = \"VAST_NO_ADS_AFTER_WRAPPER\";\n  updateMaxSize[400] = \"VIDEO_PLAY_ERROR\";\n  updateMaxSize[402] = \"VAST_MEDIA_LOAD_TIMEOUT\";\n  updateMaxSize[403] = \"VAST_LINEAR_ASSET_MISMATCH\";\n  updateMaxSize[405] = \"VAST_PROBLEM_DISPLAYING_MEDIA_FILE\";\n  updateMaxSize[500] = \"OVERLAY_AD_PLAYING_FAILED\";\n  updateMaxSize[501] = \"NONLINEAR_DIMENSIONS_ERROR\";\n  updateMaxSize[502] = \"OVERLAY_AD_LOADING_FAILED\";\n  updateMaxSize[503] = \"VAST_NONLINEAR_ASSET_MISMATCH\";\n  updateMaxSize[602] = \"COMPANION_REQUIRED_ERROR\";\n  updateMaxSize[603] = \"COMPANION_AD_LOADING_FAILED\";\n  updateMaxSize[900] = \"UNKNOWN_ERROR\";\n  updateMaxSize[901] = \"VPAID_ERROR\";\n  updateMaxSize[1005] = \"FAILED_TO_REQUEST_ADS\";\n  updateMaxSize[1007] = \"VAST_ASSET_NOT_FOUND\";\n  updateMaxSize[1009] = \"VAST_EMPTY_RESPONSE\";\n  updateMaxSize[1010] = \"UNKNOWN_AD_RESPONSE\";\n  updateMaxSize[1011] = \"UNSUPPORTED_LOCALE\";\n  updateMaxSize[1012] = \"ADS_REQUEST_NETWORK_ERROR\";\n  updateMaxSize[1013] = \"INVALID_AD_TAG\";\n  updateMaxSize[1014] = \"PROTECTED_AUDIENCE_API_ERROR\";\n  updateMaxSize[1020] = \"STREAM_INITIALIZATION_FAILED\";\n  updateMaxSize[1021] = \"ASSET_FALLBACK_FAILED\";\n  updateMaxSize[1101] = \"INVALID_ARGUMENTS\";\n  updateMaxSize[1204] = \"NATIVE_MESSAGE_ERROR\";\n  updateMaxSize[1205] = \"AUTOPLAY_DISALLOWED\";\n  updateMaxSize[1300] = \"CONSENT_MANAGEMENT_PROVIDER_NOT_READY\";\n  updateMaxSize[2002] = \"SUPPORTED_ADS_NOT_FOUND\";\n  var AdError = function (generatorWrapper, value, CustomMap) {\n    var findEntry = Error.call(this);\n    this.message = findEntry.message;\n    if (\"stack\" in findEntry) {\n      this.stack = findEntry.stack;\n    }\n    this.type = generatorWrapper;\n    this.errorMessage = value;\n    this.errorCode = CustomMap;\n    this.createUnsigned64 = this.entryIdCounter = null;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  setTimeoutWrapper.getInnerError = function () {\n    return this.entryIdCounter;\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    if (this.errorCode < 1000) {\n      return this.errorCode;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  var carJsUrl = identityFunction([\"https://imasdk.googleapis.com/js/sdkloader/car.js\"]);\n  createSafeHtmlFromTemplate(carJsUrl);\n  function identifyAdServer(generatorWrapper) {\n    if (generatorWrapper) {\n   ",
  "function () {\n    if (this.tasks) {\n      window.URL.revokeObjectURL(this.tasks);\n    }\n    for (var generatorWrapper = getIterator(this.setTimeoutWrapper), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value.value.markAsCompleted();\n    }\n    removeTimeUpdateListener(this);\n    this.entryIdCounter.removeEventListener(\"sourceopen\", this.onFulfilled);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  RegExp.prototype.hasOwnProperty(\"sticky\");\n  var uuidCharacters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n  var generateUUID = function () {\n    for (var generatorWrapper = Array(36), value = 0, CustomMap, findEntry = 0; findEntry < 36; findEntry++) {\n      if (findEntry == 8 || findEntry == 13 || findEntry == 18 || findEntry == 23) {\n        generatorWrapper[findEntry] = \"-\";\n      } else if (findEntry == 14) {\n        generatorWrapper[findEntry] = \"4\";\n      } else {\n        if (value <= 2) {\n          value = 33554432 + 16777216 * Math.random() | 0;\n        }\n        CustomMap = value & 15;\n        value >>= 4;\n        generatorWrapper[findEntry] = uuidCharacters[findEntry == 19 ? CustomMap & 3 | 8 : CustomMap];\n      }\n    }\n    return generatorWrapper.join(\"\");\n  };\n  var CustomUri = function (generatorWrapper) {\n    table.call(this, generatorWrapper);\n    this.onFulfilled = new Map();\n    generatorWrapper = this.setTimeoutWrapper;\n    var value = generatorWrapper.indexOf(\";\");\n    var CustomMap = null;\n    if (value >= 0) {\n      this.setTimeoutWrapper = generatorWrapper.substring(0, value);\n      CustomMap = generatorWrapper.substring(value + 1);\n    } else {\n      this.setTimeoutWrapper = generatorWrapper;\n    }\n    parseUriParameters(this, CustomMap);\n  };\n  inheritPrototype(CustomUri, table);\n  CustomUri.prototype.toString = function () {\n    return buildUriString(this, table.prototype.toString.call(this));\n  };\n  CustomUri.prototype.dispatchUnhandledRejection = function () {\n    return \"\";\n  };\n  var parseUriParameters = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(value))) {\n      value.split(\";\").forEach(function (CustomMap) {\n        var findEntry = CustomMap.indexOf(\"=\");\n        if (!(findEntry <= 0)) {\n          var iterateEntries = decodeUriComponentWithSpace(CustomMap.substring(0, findEntry));\n          CustomMap = decodeUriComponentWithSpace(CustomMap.substring(findEntry + 1));\n          findEntry = generatorWrapper.onFulfilled.get(iterateEntries);\n          if (findEntry != null) {\n            if (!findEntry.includes(CustomMap)) {\n              findEntry.push(CustomMap);\n            }\n          } else {\n            findEntry = [stringifyNullable(CustomMap)];\n          }\n          generatorWrapper.onFulfilled.set(iterateEntries, findEntry);\n        }\n      }, generatorWrapper);\n    }\n  };\n  var getOrdParameter = function (generatorWrapper) {\n    if (isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.onFulfilled.get(\"ord\");\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  };\n  var setOrdParameter = function (generatorWrapper, value) {\n    if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      value = value.map(stringifyNullable);\n      generatorWrapper.onFulfilled.set(\"ord\", value);\n    }\n  };\n  var buildUriString = function (generatorWrapper, value) {\n    value = [stringifyNullable(value)];\n    value.push.apply(value, toArray(getUriParameters(generatorWrapper)));\n    return value.join(\";\");\n  };\n  var getUriParameters = function (generatorWrapper) {\n    var value = getOrdParameter(generatorWrapper);\n    if (value == null) {\n      value = [stringifyNullable(Date.now())];\n    } else if (!isEmptyOrWhitespace(stringifyNullable(\"ord\"))) {\n      generatorWrapper.onFulfilled.delete(\"ord\");\n    }\n    var CustomMap = [];\n    generatorWrapper.onFulfilled.forEach(function (findEntry, iterateEntries) {\n      findEntry.forEach(function (createCircularNode) {\n        CustomMap.push(iterateEntries + \"=\" + createCircularNode);\n      });\n    });\n    CustomMap.push(\"ord=\" + value[0]);\n    setOrdParameter(generatorWrapper, value);\n    return CustomMap;\n  };\n  CustomUri.prototype.handleThenable = function () {\n    return new CustomUri(this.toString());\n  };\n  function isDoubleClickAd(generatorWrapper) {\n    var value = new CustomUri(generatorWrapper);\n    generatorWrapper = value.tasks;\n    value = buildUriString(value, value.setTimeoutWrapper);\n    return !endsWith(generatorWrapper, \".g.doubleclick.net\") && (endsWith(generatorWrapper, \"doubleclick.net\") || endsWith(generatorWrapper, \"pagead2.googlesyndication.com\")) && matchesRegex(\"/(ad|pfad)[x|i|j]?/\", value);\n  }\n  function isBidRequest(generatorWrapper) {\n    return new table(generatorWrapper).tasks == \"bid.g.doubleclick.net\";\n  }\n  function isGoogleAdsRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"googleads.g.doubleclick.net\") && matchesRegex(\"/pagead/(live/)?ads\", value);\n  }\n  function isGampadRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return endsWith(generatorWrapper.tasks, \"doubleclick.net\") && matchesRegex(\"/gampad/(live/)?ads\", value);\n  }\n  function isAdvRequest(generatorWrapper) {\n    generatorWrapper = new table(generatorWrapper);\n    var value = generatorWrapper.setTimeoutWrapper;\n    return generatorWrapper.tasks === \"ad.doubleclick.net\" && matchesRegex(\"/dv3/adv\", value);\n  }\n  var updateMaxSize = {\n    DEPRECATED_ERROR_CODE: -1,\n    VAST_MALFORMED_RESPONSE: 100,\n    VAST_SCHEMA_VALIDATION_ERROR: 101,\n    VAST_UNSUPPORTED_VERSION: 102,\n    VAST_TRAFFICKING_ERROR: 200,\n    VAST_UNEXPECTED_LINEARITY: 201,\n    VAST_UNEXPECTED_DURATION_ERROR: 202,\n    VAST_WRAPPER_ERROR: 300,\n    VAST_LOAD_TIMEOUT: 301,\n    VAST_TOO_MANY_REDIRECTS: 302,\n    VAST_NO_ADS_AFTER_WRAPPER: 303,\n    VIDEO_PLAY_ERROR: 400,\n    VAST_MEDIA_LOAD_TIMEOUT: 402,\n    VAST_LINEAR_ASSET_MISMATCH: 403,\n    VAST_PROBLEM_DISPLAYING_MEDIA_FILE: 405,\n    OVERLAY_AD_PLAYING_FAILED: 500,\n    NONLINEAR_DIMENSIONS_ERROR: 501,\n    OVERLAY_AD_LOADING_FAILED: 502,\n    VAST_NONLINEAR_ASSET_MISMATCH: 503,\n    COMPANION_REQUIRED_ERROR: 602,\n    COMPANION_AD_LOADING_FAILED: 603,\n    UNKNOWN_ERROR: 900,\n    VPAID_ERROR: 901,\n    FAILED_TO_REQUEST_ADS: 1005,\n    VAST_ASSET_NOT_FOUND: 1007,\n    VAST_EMPTY_RESPONSE: 1009,\n    UNKNOWN_AD_RESPONSE: 1010,\n    UNSUPPORTED_LOCALE: 1011,\n    ADS_REQUEST_NETWORK_ERROR: 1012,\n    INVALID_AD_TAG: 1013,\n    PROTECTED_AUDIENCE_API_ERROR: 1014,\n    STREAM_INITIALIZATION_FAILED: 1020,\n    ASSET_FALLBACK_FAILED: 1021,\n    INVALID_ARGUMENTS: 1101,\n    NATIVE_MESSAGE_ERROR: 1204,\n    AUTOPLAY_DISALLOWED: 1205,\n    CONSENT_MANAGEMENT_PROVIDER_NOT_READY: 1300,\n    isSecureContext: 2002\n  };\n  updateMaxSize[-1] = \"DEPRECATED_ERROR_CODE\";\n  updateMaxSize[100] = \"VAST_MALFORMED_RESPONSE\";\n  updateMaxSize[101] = \"VAST_SCHEMA_VALIDATION_ERROR\";\n  updateMaxSize[102] = \"VAST_UNSUPPORTED_VERSION\";\n  updateMaxSize[200] = \"VAST_TRAFFICKING_ERROR\";\n  updateMaxSize[201] = \"VAST_UNEXPECTED_LINEARITY\";\n  updateMaxSize[202] = \"VAST_UNEXPECTED_DURATION_ERROR\";\n  updateMaxSize[300] = \"VAST_WRAPPER_ERROR\";\n  updateMaxSize[301] = \"VAST_LOAD_TIMEOUT\";\n  updateMaxSize[302] = \"VAST_TOO_MANY_REDIRECTS\";\n  updateMaxSize[303] = \"VAST_NO_ADS_AFTER_WRAPPER\";\n  updateMaxSize[400] = \"VIDEO_PLAY_ERROR\";\n  updateMaxSize[402] = \"VAST_MEDIA_LOAD_TIMEOUT\";\n  updateMaxSize[403] = \"VAST_LINEAR_ASSET_MISMATCH\";\n  updateMaxSize[405] = \"VAST_PROBLEM_DISPLAYING_MEDIA_FILE\";\n  updateMaxSize[500] = \"OVERLAY_AD_PLAYING_FAILED\";\n  updateMaxSize[501] = \"NONLINEAR_DIMENSIONS_ERROR\";\n  updateMaxSize[502] = \"OVERLAY_AD_LOADING_FAILED\";\n  updateMaxSize[503] = \"VAST_NONLINEAR_ASSET_MISMATCH\";\n  updateMaxSize[602] = \"COMPANION_REQUIRED_ERROR\";\n  updateMaxSize[603] = \"COMPANION_AD_LOADING_FAILED\";\n  updateMaxSize[900] = \"UNKNOWN_ERROR\";\n  updateMaxSize[901] = \"VPAID_ERROR\";\n  updateMaxSize[1005] = \"FAILED_TO_REQUEST_ADS\";\n  updateMaxSize[1007] = \"VAST_ASSET_NOT_FOUND\";\n  updateMaxSize[1009] = \"VAST_EMPTY_RESPONSE\";\n  updateMaxSize[1010] = \"UNKNOWN_AD_RESPONSE\";\n  updateMaxSize[1011] = \"UNSUPPORTED_LOCALE\";\n  updateMaxSize[1012] = \"ADS_REQUEST_NETWORK_ERROR\";\n  updateMaxSize[1013] = \"INVALID_AD_TAG\";\n  updateMaxSize[1014] = \"PROTECTED_AUDIENCE_API_ERROR\";\n  updateMaxSize[1020] = \"STREAM_INITIALIZATION_FAILED\";\n  updateMaxSize[1021] = \"ASSET_FALLBACK_FAILED\";\n  updateMaxSize[1101] = \"INVALID_ARGUMENTS\";\n  updateMaxSize[1204] = \"NATIVE_MESSAGE_ERROR\";\n  updateMaxSize[1205] = \"AUTOPLAY_DISALLOWED\";\n  updateMaxSize[1300] = \"CONSENT_MANAGEMENT_PROVIDER_NOT_READY\";\n  updateMaxSize[2002] = \"SUPPORTED_ADS_NOT_FOUND\";\n  var AdError = function (generatorWrapper, value, CustomMap) {\n    var findEntry = Error.call(this);\n    this.message = findEntry.message;\n    if (\"stack\" in findEntry) {\n      this.stack = findEntry.stack;\n    }\n    this.type = generatorWrapper;\n    this.errorMessage = value;\n    this.errorCode = CustomMap;\n    this.createUnsigned64 = this.entryIdCounter = null;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  setTimeoutWrapper.getInnerError = function () {\n    return this.entryIdCounter;\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    if (this.errorCode < 1000) {\n      return this.errorCode;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  var carJsUrl = identityFunction([\"https://imasdk.googleapis.com/js/sdkloader/car.js\"]);\n  createSafeHtmlFromTemplate(carJsUrl);\n  function identifyAdServer(generatorWrapper) {\n    if (generatorWrapper) {\n      if (isGoogleAdsRequest(generatorWrapper)) {\n        return \"adsense\";\n      } else {\n        if (isBidRequest(generatorWrapper)) {\n          return \"dbm\";\n        } else {\n          if (isDoubleClickAd(generatorWrapper)) {\n            return \"dcm\";\n          } else {\n            if (isAdvRequest(generatorWrapper)) {\n              return \"dv3\";\n            } else {\n              if (isGampadRequest(generatorWrapper)) {\n                return \"xfp\";\n              } else {\n                return \"thirdparty\";\n              }\n            }\n          }\n        }\n      }\n    } else {\n      return \"\";\n    }\n  }\n  function extractPublisherId(generatorWrapper) {\n    if (generatorWrapper === \"\") {\n      return null;\n    }\n    generatorWrapper = new table(generatorWrapper);\n    var value;\n    if (value = generatorWrapper.entryIdCounter.get(\"slotname\") || generatorWrapper.entryIdCounter.get(\"iu\")) {\n      if ((value = /\\/(\\d+)(?:,\\d+){0,2}\\//.exec(value)) && value.length === 2) {\n        value = value[1];\n      } else {\n        value = null;\n      }\n    } else {\n      value = null;\n    }\n    if (!value) {\n      var CustomMap;\n      if (generatorWrapper = (CustomMap = generatorWrapper.entryIdCounter.get(\"client\")) != null ? CustomMap : \"\") {\n        value = generatorWrapper;\n      } else {\n        value = null;\n      }\n    }\n    return value;\n  }\n  function extractSlotNameOrIdFromUrl(generatorWrapper, value) {\n    try {\n      var CustomMap = new URL(generatorWrapper);\n      return CustomMap.searchParams.get(\"slotname\") || CustomMap.searchParams.get(\"iu\") || \"\";\n    } catch (findEntry) {\n      if (!(value == null)) {\n        value(findEntry);\n      }\n    }\n    return \"\";\n  }\n  var PrivacySettings = function (generatorWrapper) {\n    var value = {};\n    value = (value.IABUSPrivacy_String = \"uspString\", value.IABTCF_gdprApplies = \"gdprApplies\", value.IABTCF_TCString = \"tcString\", value.IABTCF_AddtlConsent = \"addtlConsent\", value.IABGPP_HDR_GppString = \"gppString\", value.IABGPP_GppSID = \"gppSid\", value);\n    for (var CustomMap in value) if (generatorWrapper[CustomMap] != null) {\n      generatorWrapper[value[CustomMap]] = generatorWrapper[CustomMap];\n      delete generatorWrapper[CustomMap];\n    }\n    CustomMap = generatorWrapper.uspString;\n    if (typeof CustomMap === \"string\") {\n      this.uspString = CustomMap;\n    } else {\n      this.uspString = \"\";\n    }\n    CustomMap = generatorWrapper.gdprApplies;\n    if (typeof CustomMap === \"boolean\") {\n      if (CustomMap) {\n        this.tasks = \"1\";\n      } else {\n        this.tasks = \"0\";\n      }\n    } else if (typeof CustomMap !== \"number\" || CustomMap !== 1 && CustomMap !== 0) {\n      if (typeof CustomMap !== \"string\" || CustomMap !== \"1\" && CustomMap !== \"0\") {\n        this.tasks = \"\";\n      } else if (CustomMap === \"1\") {\n        this.tasks = \"1\";\n      } else {\n        this.tasks = \"0\";\n      }\n    } else if (CustomMap === 1) {\n      this.tasks = \"1\";\n    } else {\n      this.tasks = \"0\";\n    }\n    CustomMap = generatorWrapper.tcString;\n    if (typeof CustomMap === \"string\") {\n      this.entryIdCounter = CustomMap;\n    } else {\n      this.entryIdCounter = \"\";\n    }\n    if (!/^[\\.\\w_-]*$/.test(this.entryIdCounter)) {\n      this.entryIdCounter = encodeURIComponent(this.entryIdCounter);\n    }\n    generatorWrapper = generatorWrapper.gppString;\n    if (typeof generatorWrapper === \"string\") {\n      this.gppString = generatorWrapper;\n    } else {\n      this.gppString = \"\";\n    }\n  };\n  var ConfigSettings = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  var isBooleanConfigEnabled = function (generatorWrapper, value) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, value) && (generatorWrapper = generatorWrapper.entryIdCounter[value], typeof generatorWrapper === \"boolean\")) {\n      return generatorWrapper;\n    } else {\n      return false;\n    }\n  };\n  var getVideoElementFakeDuration = function (generatorWrapper) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, \"videoElementFakeDuration\") && (generatorWrapper = generatorWrapper.entryIdCounter.videoElementFakeDuration, typeof generatorWrapper === \"number\")) {\n      return generatorWrapper;\n    } else {\n      return NaN;\n    }\n  };\n  var getForcedExperimentIds = function (generatorWrapper) {\n    if (hasOwnPropertySafe(generatorWrapper.entryIdCounter, \"forceExperimentIds\")) {\n      generatorWrapper = generatorWrapper.entryIdCounter.forceExperimentIds;\n      var value = [];\n      var CustomMap = 0;\n      if (Array.isArray(generatorWrapper)) {\n        generatorWrapper.forEach(function (findEntry) {\n          if (typeof findEntry === \"number\") {\n            value[CustomMap++] = findEntry;\n          }\n        });\n      }\n      return value;\n    }\n    return null;\n  };\n  var adType = function () {\n    this.handleThenable = \"always\";\n    this.updateMaxSize = 4;\n    this.executeCallbacks = null;\n    this.handleAsync = 1;\n    this.entryIdCounter = 0;\n    this.createDeferred = true;\n    this.locale = \"en\";\n    this.setTimeoutWrapper = null;\n    this.tasks = false;\n    this.createIterator = this.year = \"\";\n    this.onFulfilled = null;\n    this.definePropertyPolyfill = this.totalAdBufferingTime = -1;\n    this.isDone = \"\";\n    this.handleThenable = false;\n    this.logError = true;\n    this.dispatchUnhandledRejection = generateUUID();\n    this.tryCall = {};\n    this.settlePromise = \"\";\n    this.resolvePromise = 0;\n    try {\n      this.firstQuartileTime = getAdFrames()[0];\n    } catch (generatorWrapper) {}\n  };\n  var sanitizePlayerTypeOrVersion = function (generatorWrapper) {\n    generatorWrapper = stringifyNullable(generatorWrapper);\n    if (!isEmptyOrWhitespace(generatorWrapper)) {\n      generatorWrapper = generatorWrapper.substring(0, 20);\n    }\n    return generatorWrapper;\n  };\n  setTimeoutWrapper = adType.prototype;\n  setTimeoutWrapper.setCompanionBackfill = function (generatorWrapper) {\n    this.handleThenable = generatorWrapper;\n  };\n  setTimeoutWrapper.getCompanionBackfill = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.setNumRedirects = function (generatorWrapper) {\n    this.updateMaxSize = generatorWrapper;\n  };\n  setTimeoutWrapper.getNumRedirects = function () {\n    return this.updateMaxSize;\n  };\n  setTimeoutWrapper.setPpid = function (generatorWrapper) {\n    this.executeCallbacks = generatorWrapper;\n  };\n  setTimeoutWrapper.getPpid = function () {\n    return this.executeCallbacks;\n  };\n  setTimeoutWrapper.setVpaidAllowed = function (generatorWrapper) {\n    if (typeof generatorWrapper === \"boolean\") {\n      if (generatorWrapper) {\n        this.handleAsync = 1;\n      } else {\n        this.handleAsync = 0;\n      }\n    }\n  };\n  setTimeoutWrapper.setVpaidMode = function (generatorWrapper) {\n    this.handleAsync = generatorWrapper;\n  };\n  setTimeoutWrapper.getTransformationGroup = function () {\n    return this.handleAsync;\n  };\n  setTimeoutWrapper.setAutoPlayAdBreaks = function (generatorWrapper) {\n    this.createDeferred = generatorWrapper;\n  };\n  setTimeoutWrapper.float32Transformation = function () {\n    return this.createDeferred;\n  };\n  setTimeoutWrapper.removeEventListenerWithNormalization = function (generatorWrapper) {\n    this.tasks = generatorWrapper;\n  };\n  setTimeoutWrapper.transformationsSymbol = function () {\n    return this.tasks;\n  };\n  setTimeoutWrapper.setLocale = function (generatorWrapper) {\n    if (generatorWrapper = normalizeLanguageCode(generatorWrapper)) {\n      this.locale = generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.getLocale = function () {\n    return this.locale;\n  };\n  setTimeoutWrapper.setPlayerType = function (generatorWrapper) {\n    this.year = sanitizePlayerTypeOrVersion(generatorWrapper);\n  };\n  setTimeoutWrapper.getPlayerType = function () {\n    return this.year;\n  };\n  setTimeoutWrapper.setPlayerVersion = function (generatorWrapper) {\n    this.createIterator = sanitizePlayerTypeOrVersion(generatorWrapper);\n  };\n  setTimeoutWrapper.getPlayerVersion = function () {\n    return this.createIterator;\n  };\n  var getConfigSettingsInstance = function (generatorWrapper) {\n    if (generatorWrapper.onFulfilled == null) {\n      var value = {};\n      var CustomMap = new table(getWindowForDocument().location.href).entryIdCounter;\n      if (Cy(CustomMap, \"tcnfp\")) {\n        try {\n          value = JSON.parse(CustomMap.get(\"tcnfp\"));\n        } catch (findEntry) {}\n      }\n      generatorWrapper.onFulfilled = new ConfigSettings(value);\n    }\n    return generatorWrapper.onFulfilled;\n  };\n  setTimeoutWrapper = adType.prototype;\n  setTimeoutWrapper.forEachInObject = function (generatorWrapper) {\n    this.totalAdBufferingTime = generatorWrapper;\n  };\n  setTimeoutWrapper.filterObject = function (generatorWrapper) {\n    this.definePropertyPolyfill = generatorWrapper;\n  };\n  setTimeoutWrapper.setDisableCustomPlaybackForIOS10Plus = function (generatorWrapper) {\n    this.handleThenable = generatorWrapper;\n  };\n  setTimeoutWrapper.getDisableCustomPlaybackForIOS10Plus = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.isCookiesEnabled = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.setCookiesEnabled = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      this.logError = generatorWrapper;\n    }\n  };\n  setTimeoutWrapper.setSessionId = function (generatorWrapper) {\n    this.dispatchUnhandledRejection = generatorWrapper;\n  };\n  setTimeoutWrapper.addEventListenerWithNormalization = function () {};\n  setTimeoutWrapper.applyTransformations = function () {\n    return true;\n  };\n  setTimeoutWrapper.setFeatureFlags = function (generatorWrapper) {\n    this.tryCall = generatorWrapper;\n  };\n  setTimeoutWrapper.getFeatureFlags = function () {\n    return this.tryCall;\n  };\n  var generateAdDisplayRequestConfig = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    var CustomMap = {};\n    if (value != null) {\n      CustomMap.activeViewPushUpdates = value;\n    }\n    CustomMap.activityMonitorMode = generatorWrapper.entryIdCounter;\n    CustomMap.adsToken = generatorWrapper.isDone;\n    CustomMap.autoPlayAdBreaks = generatorWrapper.createDeferred;\n    CustomMap.companionBackfill = generatorWrapper.getCompanionBackfill();\n    CustomMap.cookiesEnabled = generatorWrapper.isCookiesEnabled();\n    CustomMap.disableCustomPlaybackForIOS10Plus = generatorWrapper.getDisableCustomPlaybackForIOS10Plus();\n    CustomMap.engagementDetection = true;\n    CustomMap.isFunctionalTest = false;\n    CustomMap.isVpaidAdapter = generatorWrapper.tasks;\n    CustomMap[\"1pJar\"] = \"\";\n    CustomMap.numRedirects = generatorWrapper.getNumRedirects();\n    CustomMap.pageCorrelator = generatorWrapper.totalAdBufferingTime;\n    CustomMap.persistentStateCorrelator = getMasterOrGlobalCorrelator();\n    CustomMap.playerType = generatorWrapper.getPlayerType();\n    CustomMap.playerVersion = generatorWrapper.getPlayerVersion();\n    CustomMap.ppid = generatorWrapper.getPpid();\n    CustomMap.privacyControls = \"\";\n    CustomMap.reportMediaRequests = false;\n    CustomMap.sessionId = generatorWrapper.dispatchUnhandledRejection;\n    CustomMap.streamCorrelator = generatorWrapper.definePropertyPolyfill;\n    CustomMap.testingConfig = getConfigSettingsInstance(generatorWrapper).entryIdCounter;\n    CustomMap.urlSignals = generatorWrapper.firstQuartileTime;\n    CustomMap.vpaidMode = generatorWrapper.handleAsync;\n    CustomMap.featureFlags = generatorWrapper.getFeatureFlags();\n    CustomMap.cookieDeprecationLabel = generatorWrapper.settlePromise;\n    CustomMap.cookieDeprecationLabelStatus = generatorWrapper.resolvePromise;\n    return CustomMap;\n  };\n  adType.prototype.getFeatureFlags = adType.prototype.getFeatureFlags;\n  adType.prototype.setFeatureFlags = adType.prototype.setFeatureFlags;\n  adType.prototype.getDisableFlashAds = adType.prototype.applyTransformations;\n  adType.prototype.setDisableFlashAds = adType.prototype.addEventListenerWithNormalization;\n  adType.prototype.setSessionId = adType.prototype.setSessionId;\n  adType.prototype.setCookiesEnabled = adType.prototype.setCookiesEnabled;\n  adType.prototype.isCookiesEnabled = adType.prototype.isCookiesEnabled;\n  adType.prototype.getDisableCustomPlaybackForIOS10Plus = adType.prototype.getDisableCustomPlaybackForIOS10Plus;\n  adType.prototype.setDisableCustomPlaybackForIOS10Plus = adType.prototype.setDisableCustomPlaybackForIOS10Plus;\n  adType.prototype.setStreamCorrelator = adType.prototype.filterObject;\n  adType.prototype.setPageCorrelator = adType.prototype.forEachInObject;\n  adType.prototype.getPlayerVersion = adType.prototype.getPlayerVersion;\n  adType.prototype.setPlayerVersion = adType.prototype.setPlayerVersion;\n  adType.prototype.getPlayerType = adType.prototype.getPlayerType;\n  adType.prototype.setPlayerType = adType.prototype.setPlayerType;\n  adType.prototype.getLocale = adType.prototype.getLocale;\n  adType.prototype.setLocale = adType.prototype.setLocale;\n  adType.prototype.getIsVpaidAdapter = adType.prototype.transformationsSymbol;\n  adType.prototype.setIsVpaidAdapter = adType.prototype.removeEventListenerWithNormalization;\n  adType.prototype.isAutoPlayAdBreaks = adType.prototype.float32Transformation;\n  adType.prototype.setAutoPlayAdBreaks = adType.prototype.setAutoPlayAdBreaks;\n  adType.prototype.getVpaidMode = adType.prototype.getTransformationGroup;\n  adType.prototype.setVpaidMode = adType.prototype.setVpaidMode;\n  adType.prototype.setVpaidAllowed = adType.prototype.setVpaidAllowed;\n  adType.prototype.getPpid = adType.prototype.getPpid;\n  adType.prototype.setPpid = adType.prototype.setPpid;\n  adType.prototype.getNumRedirects = adType.prototype.getNumRedirects;\n  adType.prototype.setNumRedirects = adType.prototype.setNumRedirects;\n  adType.prototype.getCompanionBackfill = adType.prototype.getCompanionBackfill;\n  adType.prototype.setCompanionBackfill = adType.prototype.setCompanionBackfill;\n  var imaSdkInstanceSingleton = new adType();\n  var AdRequestBuilder = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequestBuilder, AdElement);\n  AdRequestBuilder.findGlobalObject = [10];\n  function parseUrlParameters(generatorWrapper) {\n    var value = {};\n    new table(generatorWrapper).entryIdCounter.forEach(function (CustomMap, findEntry) {\n      value[findEntry] = CustomMap;\n    });\n    return value;\n  }\n  var AdRequest = function (generatorWrapper, value) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = {};\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    var CustomMap = {};\n    generatorWrapper = getIterator(Object.entries(generatorWrapper));\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      var iterateEntries = getIterator(findEntry.value);\n      findEntry = iterateEntries.next().value;\n      iterateEntries = iterateEntries.next().value;\n      if (iterateEntries != null) {\n        CustomMap[findEntry] = String(iterateEntries);\n      }\n    }\n    this.entryIdCounter = CustomMap;\n    this.tasks = new PrivacySettings(value);\n  };\n  var generateAdRequest = function (generatorWrapper, value) {\n    if (!(isGoogleAdsRequest(generatorWrapper) || isDoubleClickAd(generatorWrapper) || isGampadRequest(generatorWrapper) || isBidRequest(generatorWrapper) || isAdvRequest(generatorWrapper))) {\n      var CustomMap = new table(generatorWrapper);\n      var findEntry = CustomMap.setTimeoutWrapper;\n      if (CustomMap.tasks === \"pubads.g.doubleclick.net\") {\n        if (!matchesRegex(\"/ssai/\", findEntry)) {\n          matchesRegex(\"/ondemand/\", findEntry);\n        }\n      }\n    }\n    return new AdRequest(parseUrlParameters(generatorWrapper), value);\n  };\n  var processGdprConsent = function (generatorWrapper) {\n    var value = generatorWrapper.tasks.entryIdCounter;\n    var CustomMap = getPropertyValue(generatorWrapper, \"gdpr_consent\");\n    if (value && value !== \"tcunavailable\") {\n      value = value;\n    } else if (value === \"tcunavailable\") {\n      value = CustomMap || value;\n    } else {\n      value = CustomMap || \"\";\n    }\n    if (value === \"tcunavailable\") {\n      return null;\n    }\n    var findEntry;\n    generatorWrapper = isGdprApplicable(generatorWrapper);\n    if ((CustomMap = decodeAdResponse(value)) && value) {\n      var iterateEntries = fetchData(CustomMap, AdManifestVersion, 1);\n      CustomMap = fetchData(CustomMap, AdExtensionParameters, 2) || new AdExtensionParameters();\n      var createCircularNode = getNumericAdProperty(iterateEntries, 9);\n      var entryIdCounter = getNumericAdProperty(iterateEntries, 4);\n      var key = getNumericAdProperty(iterateEntries, 5);\n      var value = getBooleanAdProperty(iterateEntries, 10);\n      var entry = getBooleanAdProperty(iterateEntries, 11);\n      var currentEntry = dispatchUnhandledRejection(iterateEntries, 16);\n      var foundEntry = getBooleanAdProperty(iterateEntries, 15);\n      var resolveFunction = {\n        consents: generateAdResponseMap(transformArrayElements(iterateEntries, 13, parseNullableInt), vendorIds),\n        legitimateInterests: generateAdResponseMap(transformArrayElements(iterateEntries, 14, parseNullableInt), vendorIds)\n      };\n      var rejectFunction = {\n        consents: generateAdResponseMap(transformArrayElements(iterateEntries, 17, parseNullableInt32)),\n        legitimateInterests: generateAdResponseMap(transformArrayElements(iterateEntries, 18, parseNullableInt32))\n      };\n      var user = generateAdResponseMap(transformArrayElements(iterateEntries, 12, parseNullableInt), purposeIds);\n      var profileData = parseData(iterateEntries, AdExtension, 19);\n      iterateEntries = {};\n      profileData = getIterator(profileData);\n      for (var isDone = profileData.next(); !isDone.done; isDone = profileData.next()) {\n        isDone = isDone.value;\n        var stream = getAdPropertyNumeric(isDone, 1);\n        iterateEntries[stream] = iterateEntries[stream] || {};\n        var keyArray = transformArrayElements(isDone, 3, parseNullableInt32);\n        keyArray = getIterator(keyArray);\n        for (var getAdManager = keyArray.next(); !getAdManager.done; getAdManager = keyArray.next()) {\n          iterateEntries[stream][getAdManager.value] = getAdPropertyNumeric(isDone, 2);\n        }\n      }\n      value = {\n        tcString: value,\n        tcfPolicyVersion: createCircularNode,\n        gdprApplies: generatorWrapper,\n        cmpId: entryIdCounter,\n        cmpVersion: key,\n        isServiceSpecific: value,\n        useNonStandardStacks: entry,\n        publisherCC: currentEntry,\n        purposeOneTreatment: foundEntry,\n        purpose: resolveFunction,\n        vendor: rejectFunction,\n        specialFeatureOptins: user,\n        publisher: {\n          restrictions: iterateEntries,\n          consents: generateAdResponseMap(transformArrayElements(CustomMap, 1, parseNullableInt), vendorIds),\n          legitimateInterests: generateAdResponseMap(transformArrayElements(CustomMap, 2, parseNullableInt), vendorIds),\n          customPurposes: {\n            consents: generateAdResponseMap(transformArrayElements(CustomMap, 3, parseNullableInt32)),\n            legitimateInterests: generateAdResponseMap(transformArrayElements(CustomMap, 4, parseNullableInt32))\n          }\n        }\n      };\n    } else {\n      value = null;\n    }\n    if ((findEntry = value) != null) {\n      return findEntry;\n    } else {\n      return null;\n    }\n  };\n  var getPropertyValue = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter.hasOwnProperty(value)) {\n      return generatorWrapper.entryIdCounter[value];\n    }\n  };\n  var isLimitedAdsMode = function (generatorWrapper) {\n    var value;\n    if (!(value = isLimitedAdsModeEnabled(generatorWrapper))) {\n      if (isGdprApplicable(generatorWrapper)) {\n        generatorWrapper = processGdprConsent(generatorWrapper);\n        if (value = !!generatorWrapper) {\n          var CustomMap = undefined === CustomMap ? {} : CustomMap;\n          if (isGdprConsentGiven(generatorWrapper)) {\n            if (generatorWrapper.gdprApplies === false) {\n              value = true;\n            } else if (generatorWrapper.tcString === \"tcunavailable\") {\n              value = !CustomMap.EnhancedMap;\n            } else if ((CustomMap.EnhancedMap || undefined !== generatorWrapper.gdprApplies || CustomMap.createKeyValuePair) && (CustomMap.EnhancedMap || typeof generatorWrapper.tcString === \"string\" && generatorWrapper.tcString.length)) {\n              value = checkPublisherRestrictions(generatorWrapper, \"1\", 0);\n            } else {\n              value = true;\n            }\n          } else {\n            value = false;\n          }\n        }\n        CustomMap = value;\n      } else {\n        CustomMap = true;\n      }\n      value = !CustomMap;\n    }\n    return value;\n  };\n  var isLimitedAdsModeEnabled = function (generatorWrapper) {\n    generatorWrapper = getPropertyValue(generatorWrapper, \"ltd\");\n    return generatorWrapper === \"1\" || generatorWrapper === \"true\";\n  };\n  var isGdprApplicable = function (generatorWrapper) {\n    var value = getPropertyValue(generatorWrapper, \"gdpr\");\n    generatorWrapper = generatorWrapper.tasks.tasks;\n    value = (generatorWrapper === \"1\" || generatorWrapper === \"0\" ? generatorWrapper : undefined !== value ? value : \"\").toLowerCase();\n    return value === \"true\" || value === \"1\";\n  };\n  var buildAdRequest = function (generatorWrapper) {\n    var value = new AdRequestBuilder();\n    var CustomMap = !isLimitedAdsMode(generatorWrapper);\n    CustomMap = setAdProperty(value, 5, CustomMap);\n    if (isGdprApplicable(generatorWrapper)) {\n      generatorWrapper = processGdprConsent(generatorWrapper);\n      generatorWrapper = !!generatorWrapper && !checkSpecialFeatureConsents(generatorWrapper);\n    } else {\n      generatorWrapper = false;\n    }\n    setAdProperty(CustomMap, 8, generatorWrapper);\n    return value;\n  };\n  var UserAgentData = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(UserAgentData, AdElement);\n  UserAgentData.prototype.getAdManifestVersion = function () {\n    return dispatchUnhandledRejection(this, 2);\n  };\n  var HighEntropyValues = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(HighEntropyValues, AdElement);\n  var setArchitecture = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 2, value);\n  };\n  var setBitness = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 3, value);\n  };\n  var setIsMobile = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 4, value);\n  };\n  var setModel = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 5, value);\n  };\n  var setPlatform = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 9, value);\n  };\n  var setPlatformVersion = function (generatorWrapper, value) {\n    return Cf(generatorWrapper, 10, value);\n  };\n  var setUaFullVersion = function (generatorWrapper, value) {\n    return setAdProperty(generatorWrapper, 11, value);\n  };\n  var setFullVersionList = function (generatorWrapper, value) {\n    return setAdPropertyFromObject(generatorWrapper, 1, value);\n  };\n  var setWow64 = function (generatorWrapper, value) {\n    return setAdProperty(generatorWrapper, 7, value);\n  };\n  HighEntropyValues.findGlobalObject = [10, 6];\n  var highEntropyKeys = \"platform platformVersion architecture model uaFullVersion bitness fullVersionList wow64\".split(\" \");\n  function getGoogleTagData(generatorWrapper) {\n    var value;\n    if ((value = generatorWrapper.google_tag_data) != null) {\n      return value;\n    } else {\n      return generatorWrapper.google_tag_data = {};\n    }\n  }\n  function supportsUserAgentData(generatorWrapper) {\n    var value, CustomMap;\n    return typeof ((value = generatorWrapper.navigator) == null ? undefined : (CustomMap = value.userAgentData) == null ? undefined : CustomMap.getHighEntropyValues) === \"function\";\n  }\n  function getHighEntropyValues() {\n    var generatorWrapper = window;\n    if (!supportsUserAgentData(generatorWrapper)) {\n      return null;\n    }\n    var value = getGoogleTagData(generatorWrapper);\n    if (value.uach_promise) {\n      return value.uach_promise;\n    }\n    generatorWrapper = generatorWrapper.navigator.userAgentData.getHighEntropyValues(highEntropyKeys).then(function (CustomMap) {\n      if (!(value.uach != null)) {\n        value.uach = CustomMap;\n      }\n      return CustomMap;\n    });\n    return value.uach_promise = generatorWrapper;\n  }\n  function buildUserAgentData(generatorWrapper) {\n    var value;\n    return setUaFullVersion(setPlatformVersion(setModel(setArchitecture(setFullVersionList(setIsMobile(setWow64(setPlatform(setBitness(new HighEntropyValues(), generatorWrapper.architecture || \"\"), generatorWrapper.bitness || \"\"), generatorWrapper.mobile || false), generatorWrapper.model || \"\"), generatorWrapper.platform || \"\"), generatorWrapper.platformVersion || \"\"), generatorWrapper.uaFullVersion || \"\"), ((value = generatorWrapper.fullVersionList) == null ? undefined : value.map(function (CustomMap) {\n      var findEntry = new UserAgentData();\n      findEntry = setAdPropertyFromObject(findEntry, 1, CustomMap.brand);\n      return setAdPropertyFromObject(findEntry, 2, CustomMap.version);\n    })) || []), generatorWrapper.wow64 || false);\n  }\n  function fetchAndProcessUACH() {\n    var generatorWrapper, value;\n    if ((value = (generatorWrapper = getHighEntropyValues()) == null ? undefined : generatorWrapper.then(function (CustomMap) {\n      return buildUserAgentData(CustomMap);\n    })) != null) {\n      return value;\n    } else {\n      return null;\n    }\n  }\n  var AppSignals = function () {\n    this.appName = null;\n    new AdRequest();\n    this.secureSignals = null;\n    generateUUID();\n    this.deviceId = \"\";\n    this.entryIdCounter = this.referrer = this.integerTransformation = null;\n    new QueryData();\n    fetchProcessedUACH(this);\n  };\n  var getSDKVersion = function () {\n    AppSignals.getAdInstance();\n    var generatorWrapper = \"h.3.641.0\";\n    if (imaSdkInstanceSingleton.tasks) {\n      generatorWrapper += \"/vpaid_adapter\";\n    }\n    return generatorWrapper;\n  };\n  var fetchProcessedUACH = function (generatorWrapper) {\n    var value = fetchAndProcessUACH();\n    if (value) {\n      value.then(function (CustomMap) {\n        if (CustomMap == null) {\n          CustomMap = null;\n        } else {\n          CustomMap = serializeData(CustomMap);\n          for (var findEntry = [], iterateEntries = 0, createCircularNode = 0; createCircularNode < CustomMap.length; createCircularNode++) {\n            var entryIdCounter = CustomMap.charCodeAt(createCircularNode);\n            if (entryIdCounter > 255) {\n              findEntry[iterateEntries++] = entryIdCounter & 255;\n              entryIdCounter >>= 8;\n            }\n            findEntry[iterateEntries++] = entryIdCounter;\n          }\n          CustomMap = base64Encode(findEntry, 3);\n        }\n        generatorWrapper.entryIdCounter = CustomMap;\n      });\n    }\n  };\n  AppSignals.getAdInstance = function () {\n    return getSingletonInstance(AppSignals);\n  };\n  var shouldUseCustomPlayback = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = false;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    var value = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (value && isBooleanConfigEnabled(value, \"forceCustomPlayback\") || imaSdkInstanceSingleton.tasks) {\n      return true;\n    }\n    if (isTouchEnabledDevice() && generatorWrapper) {\n      return false;\n    }\n    generatorWrapper = generatorWrapper && (isTouchEnabledDevice() || isIOSVersionAtLeast(10)) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus();\n    if ((isIphone || isIpod) && !generatorWrapper || isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var isCustomPlaybackAllowed = function (generatorWrapper) {\n    if (generatorWrapper === null) {\n      return false;\n    } else {\n      if (imaSdkInstanceSingleton.tasks) {\n        return true;\n      } else {\n        if (isIphoneIpadIpod || isTouchEnabledDevice()) {\n          if (hasPlaysInlineAttribute(generatorWrapper)) {\n            if (isTouchEnabledDevice() || isIOSVersionAtLeast(10) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus()) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        } else {\n          if (isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    }\n  };\n  var isOnScreenDetectionEnabled = function () {\n    var generatorWrapper = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (generatorWrapper && isBooleanConfigEnabled(generatorWrapper, \"disableOnScreenDetection\")) {\n      return false;\n    } else {\n      return !isAppleTV();\n    }\n  };\n  var isTVOSOrAndroidTV = function () {\n    return getDeviceType() === 1 || getDeviceType() === 2;\n  };\n  var getDeviceType = function () {\n    AppSignals.getAdInstance();\n    switch (0) {\n      case 1:\n        return 3;\n      case 2:\n        return 1;\n    }\n    AppSignals.getAdInstance();\n    AppSignals.getAdInstance();\n    if ((AppSignals.getAdInstance(), null) === \"tvos\") {\n      return 1;\n    } else {\n      if (isTVDevice()) {\n        return 2;\n      } else {\n        return 0;\n      }\n    }\n  };\n  var stripUrlPrefix = function (generatorWrapper, value) {\n    if (generatorWrapper.indexOf(value) == 0) {\n      return generatorWrapper.substr(value.length);\n    } else {\n      return null;\n    }\n  };\n  function getEffectiveUrl() {\n    if (isAppleTV()) {\n      return window.location.href;\n    }\n    var generatorWrapper = computeReferrerUrl();\n    var value = generatorWrapper.tasks;\n    var CustomMap = generatorWrapper.entryIdCounter;\n    generatorWrapper = generatorWrapper.setTimeoutWrapper;\n    var findEntry = null;\n    if (generatorWrapper) {\n      try {\n        var iterateEntries = createOrProcessURL(generatorWrapper.url);\n        var createCircularNode = iterateEntries.setTimeoutWrapper;\n        var entryIdCounter = stripUrlPrefix(createCircularNode, \"/v/\");\n        if (!entryIdCounter) {\n          entryIdCounter = stripUrlPrefix(createCircularNode, \"/a/\");\n        }\n        if (!entryIdCounter) {\n          throw Error(\"Can not extract standalone amp url.\");\n        }\n        var key = stripUrlPrefix(\"/\" + entryIdCounter, \"/s/\");\n        var value = my(iterateEntries.entryIdCounter);\n        value.removeElement(\"amp_js_v\");\n        value.removeElement(\"amp_lite\");\n        var entry = key ? createOrProcessURL(\"https://\" + key) : createOrProcessURL(\"http://\" + entryIdCounter);\n        setQueryParameters(entry, value);\n        findEntry = entry.toString();\n      } catch (currentEntry) {\n        findEntry = null;\n      }\n    }\n    if (findEntry) {\n      return findEntry;\n    } else {\n      if (value && value.url) {\n        return value.url;\n      } else {\n        if (CustomMap && CustomMap.url) {\n          return CustomMap.url;\n        } else {\n          return \"\";\n        }\n      }\n    }\n  }\n  function isAmpPage() {\n    var generatorWrapper = collectAncestorOrigins();\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value = value.value;\n      if (value.url && value.url.includes(\"amp=1\")) {\n        return true;\n      }\n    }\n    if (window.context != null) {\n      generatorWrapper = Number(window.context.ampcontextVersion);\n      if (isNaN(generatorWrapper)) {\n        return false;\n      } else {\n        return Math.floorRectangle(generatorWrapper) > 0;\n      }\n    } else {\n      return computeReferrerUrl().setTimeoutWrapper != null;\n    }\n  }\n  function getAncestorOrigins() {\n    var generatorWrapper = getWindowForDocument().location.ancestorOrigins;\n    if (generatorWrapper) {\n      if (generatorWrapper.length > 0) {\n        return [].concat(toArray(generatorWrapper)).join(\",\");\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n  function getParentPageUrl() {\n    var generatorWrapper = getWindowForDocument();\n    var value = document;\n    return new table(generatorWrapper.parent === generatorWrapper ? generatorWrapper.location.href : value.referrer);\n  }\n  function truncateUrl(generatorWrapper, value) {\n    setParameter(generatorWrapper, \"url\", \"\");\n    try {\n      var CustomMap = 2083 - generatorWrapper.toString().length - 1;\n      if (CustomMap <= 0) {\n        return generatorWrapper.toString();\n      }\n      for (var findEntry = value.slice(0, CustomMap), iterateEntries = encodeURIComponent(findEntry), createCircularNode = CustomMap; createCircularNode > 0 && iterateEntries.length > CustomMap;) {\n        findEntry = value.slice(0, createCircularNode--);\n        iterateEntries = encodeURIComponent(findEntry);\n      }\n      setParameter(generatorWrapper, \"url\", findEntry);\n    } catch (entryIdCounter) {}\n    return generatorWrapper.toString();\n  }\n  var totalAdBufferingTime = {};\n  var defineAdEventTypes = (totalAdBufferingTime.creativeView = \"creativeview\", totalAdBufferingTime.startTimer = \"start\", totalAdBufferingTime.midpoint = \"midpoint\", totalAdBufferingTime.firstQuartile = \"firstquartile\", totalAdBufferingTime.thirdQuartile = \"thirdquartile\", totalAdBufferingTime.complete = \"complete\", totalAdBufferingTime.mute = \"mute\", totalAdBufferingTime.unmute = \"unmute\", totalAdBufferingTime.pause = \"pause\", totalAdBufferingTime.rewind = \"rewind\", totalAdBufferingTime.resume = \"resume\", totalAdBufferingTime.fullscreen = \"fullscreen\", totalAdBufferingTime.exitFullscreen = \"exitfullscreen\", totalAdBufferingTime.expandRectangle = \"expand\", totalAdBufferingTime.collapse = \"collapse\", totalAdBufferingTime.closeCache = \"close\", totalAdBufferingTime.acceptInvitation = \"acceptinvitation\", totalAdBufferingTime.adCanPlay = \"adCanPlay\", totalAdBufferingTime.adStarted = \"adStarted\", totalAdBufferingTime.abandon = \"abandon\", totalAdBufferingTime.acceptInvitationLinear = \"acceptinvitationlinear\", totalAdBufferingTime.engagedView = \"engagedview\", totalAdBufferingTime.instreamAdComplete = \"instreamAdComplete\", totalAdBufferingTime.skipShown = \"skipshown\", totalAdBufferingTime.skippableStateChanged = \"skippableStateChanged\", totalAdBufferingTime.skip = \"skip\", totalAdBufferingTime.progress = \"progress\", totalAdBufferingTime.publisher_invoked_skip = \"PUBLISHER_INVOKED_SKIP\", totalAdBufferingTime.annotation_start = \"annotation_start\", totalAdBufferingTime.annotation_click = \"annotation_click\", totalAdBufferingTime.annotation_close = \"annotation_close\", totalAdBufferingTime.cta_annotation_shown = \"cta_annotation_shown\", totalAdBufferingTime.cta_annotation_clicked = \"cta_annotation_clicked\", totalAdBufferingTime.cta_annotation_closed = \"cta_annotation_closed\", totalAdBufferingTime.replay = \"replay\", totalAdBufferingTime.stopTimer = \"stop\", totalAdBufferingTime.autoplayDisallowed = \"autoplayDisallowed\", totalAdBufferingTime.hasError = \"error\", totalAdBufferingTime.mediaLoadTimeout = \"mediaLoadTimeout\", totalAdBufferingTime.linearChanged = \"linearChanged\", totalAdBufferingTime.click = \"click\", totalAdBufferingTime.contentPauseRequested = \"contentPauseRequested\", totalAdBufferingTime.contentResumeRequested = \"contentResumeRequested\", totalAdBufferingTime.discardAdBreak = \"discardAdBreak\", totalAdBufferingTime.updateAdsRenderingSettings = \"updateAdsRenderingSettings\", totalAdBufferingTime.durationChange = \"durationChange\", totalAdBufferingTime.expandedChanged = \"expandedChanged\", totalAdBufferingTime.autoClose = \"autoClose\", totalAdBufferingTime.userClose = ",
  "r entryIdCounter = CustomMap.charCodeAt(createCircularNode);\n            if (entryIdCounter > 255) {\n              findEntry[iterateEntries++] = entryIdCounter & 255;\n              entryIdCounter >>= 8;\n            }\n            findEntry[iterateEntries++] = entryIdCounter;\n          }\n          CustomMap = base64Encode(findEntry, 3);\n        }\n        generatorWrapper.entryIdCounter = CustomMap;\n      });\n    }\n  };\n  AppSignals.getAdInstance = function () {\n    return getSingletonInstance(AppSignals);\n  };\n  var shouldUseCustomPlayback = function (generatorWrapper) {\n    if (undefined === generatorWrapper) {\n      generatorWrapper = false;\n    } else {\n      generatorWrapper = generatorWrapper;\n    }\n    var value = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (value && isBooleanConfigEnabled(value, \"forceCustomPlayback\") || imaSdkInstanceSingleton.tasks) {\n      return true;\n    }\n    if (isTouchEnabledDevice() && generatorWrapper) {\n      return false;\n    }\n    generatorWrapper = generatorWrapper && (isTouchEnabledDevice() || isIOSVersionAtLeast(10)) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus();\n    if ((isIphone || isIpod) && !generatorWrapper || isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var isCustomPlaybackAllowed = function (generatorWrapper) {\n    if (generatorWrapper === null) {\n      return false;\n    } else {\n      if (imaSdkInstanceSingleton.tasks) {\n        return true;\n      } else {\n        if (isIphoneIpadIpod || isTouchEnabledDevice()) {\n          if (hasPlaysInlineAttribute(generatorWrapper)) {\n            if (isTouchEnabledDevice() || isIOSVersionAtLeast(10) && imaSdkInstanceSingleton.getDisableCustomPlaybackForIOS10Plus()) {\n              return false;\n            } else {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        } else {\n          if (isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)) || isTVOSOrAndroidTV()) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    }\n  };\n  var isOnScreenDetectionEnabled = function () {\n    var generatorWrapper = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (generatorWrapper && isBooleanConfigEnabled(generatorWrapper, \"disableOnScreenDetection\")) {\n      return false;\n    } else {\n      return !isAppleTV();\n    }\n  };\n  var isTVOSOrAndroidTV = function () {\n    return getDeviceType() === 1 || getDeviceType() === 2;\n  };\n  var getDeviceType = function () {\n    AppSignals.getAdInstance();\n    switch (0) {\n      case 1:\n        return 3;\n      case 2:\n        return 1;\n    }\n    AppSignals.getAdInstance();\n    AppSignals.getAdInstance();\n    if ((AppSignals.getAdInstance(), null) === \"tvos\") {\n      return 1;\n    } else {\n      if (isTVDevice()) {\n        return 2;\n      } else {\n        return 0;\n      }\n    }\n  };\n  var stripUrlPrefix = function (generatorWrapper, value) {\n    if (generatorWrapper.indexOf(value) == 0) {\n      return generatorWrapper.substr(value.length);\n    } else {\n      return null;\n    }\n  };\n  function getEffectiveUrl() {\n    if (isAppleTV()) {\n      return window.location.href;\n    }\n    var generatorWrapper = computeReferrerUrl();\n    var value = generatorWrapper.tasks;\n    var CustomMap = generatorWrapper.entryIdCounter;\n    generatorWrapper = generatorWrapper.setTimeoutWrapper;\n    var findEntry = null;\n    if (generatorWrapper) {\n      try {\n        var iterateEntries = createOrProcessURL(generatorWrapper.url);\n        var createCircularNode = iterateEntries.setTimeoutWrapper;\n        var entryIdCounter = stripUrlPrefix(createCircularNode, \"/v/\");\n        if (!entryIdCounter) {\n          entryIdCounter = stripUrlPrefix(createCircularNode, \"/a/\");\n        }\n        if (!entryIdCounter) {\n          throw Error(\"Can not extract standalone amp url.\");\n        }\n        var key = stripUrlPrefix(\"/\" + entryIdCounter, \"/s/\");\n        var value = my(iterateEntries.entryIdCounter);\n        value.removeElement(\"amp_js_v\");\n        value.removeElement(\"amp_lite\");\n        var entry = key ? createOrProcessURL(\"https://\" + key) : createOrProcessURL(\"http://\" + entryIdCounter);\n        setQueryParameters(entry, value);\n        findEntry = entry.toString();\n      } catch (currentEntry) {\n        findEntry = null;\n      }\n    }\n    if (findEntry) {\n      return findEntry;\n    } else {\n      if (value && value.url) {\n        return value.url;\n      } else {\n        if (CustomMap && CustomMap.url) {\n          return CustomMap.url;\n        } else {\n          return \"\";\n        }\n      }\n    }\n  }\n  function isAmpPage() {\n    var generatorWrapper = collectAncestorOrigins();\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      value = value.value;\n      if (value.url && value.url.includes(\"amp=1\")) {\n        return true;\n      }\n    }\n    if (window.context != null) {\n      generatorWrapper = Number(window.context.ampcontextVersion);\n      if (isNaN(generatorWrapper)) {\n        return false;\n      } else {\n        return Math.floorRectangle(generatorWrapper) > 0;\n      }\n    } else {\n      return computeReferrerUrl().setTimeoutWrapper != null;\n    }\n  }\n  function getAncestorOrigins() {\n    var generatorWrapper = getWindowForDocument().location.ancestorOrigins;\n    if (generatorWrapper) {\n      if (generatorWrapper.length > 0) {\n        return [].concat(toArray(generatorWrapper)).join(\",\");\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n  function getParentPageUrl() {\n    var generatorWrapper = getWindowForDocument();\n    var value = document;\n    return new table(generatorWrapper.parent === generatorWrapper ? generatorWrapper.location.href : value.referrer);\n  }\n  function truncateUrl(generatorWrapper, value) {\n    setParameter(generatorWrapper, \"url\", \"\");\n    try {\n      var CustomMap = 2083 - generatorWrapper.toString().length - 1;\n      if (CustomMap <= 0) {\n        return generatorWrapper.toString();\n      }\n      for (var findEntry = value.slice(0, CustomMap), iterateEntries = encodeURIComponent(findEntry), createCircularNode = CustomMap; createCircularNode > 0 && iterateEntries.length > CustomMap;) {\n        findEntry = value.slice(0, createCircularNode--);\n        iterateEntries = encodeURIComponent(findEntry);\n      }\n      setParameter(generatorWrapper, \"url\", findEntry);\n    } catch (entryIdCounter) {}\n    return generatorWrapper.toString();\n  }\n  var totalAdBufferingTime = {};\n  var defineAdEventTypes = (totalAdBufferingTime.creativeView = \"creativeview\", totalAdBufferingTime.startTimer = \"start\", totalAdBufferingTime.midpoint = \"midpoint\", totalAdBufferingTime.firstQuartile = \"firstquartile\", totalAdBufferingTime.thirdQuartile = \"thirdquartile\", totalAdBufferingTime.complete = \"complete\", totalAdBufferingTime.mute = \"mute\", totalAdBufferingTime.unmute = \"unmute\", totalAdBufferingTime.pause = \"pause\", totalAdBufferingTime.rewind = \"rewind\", totalAdBufferingTime.resume = \"resume\", totalAdBufferingTime.fullscreen = \"fullscreen\", totalAdBufferingTime.exitFullscreen = \"exitfullscreen\", totalAdBufferingTime.expandRectangle = \"expand\", totalAdBufferingTime.collapse = \"collapse\", totalAdBufferingTime.closeCache = \"close\", totalAdBufferingTime.acceptInvitation = \"acceptinvitation\", totalAdBufferingTime.adCanPlay = \"adCanPlay\", totalAdBufferingTime.adStarted = \"adStarted\", totalAdBufferingTime.abandon = \"abandon\", totalAdBufferingTime.acceptInvitationLinear = \"acceptinvitationlinear\", totalAdBufferingTime.engagedView = \"engagedview\", totalAdBufferingTime.instreamAdComplete = \"instreamAdComplete\", totalAdBufferingTime.skipShown = \"skipshown\", totalAdBufferingTime.skippableStateChanged = \"skippableStateChanged\", totalAdBufferingTime.skip = \"skip\", totalAdBufferingTime.progress = \"progress\", totalAdBufferingTime.publisher_invoked_skip = \"PUBLISHER_INVOKED_SKIP\", totalAdBufferingTime.annotation_start = \"annotation_start\", totalAdBufferingTime.annotation_click = \"annotation_click\", totalAdBufferingTime.annotation_close = \"annotation_close\", totalAdBufferingTime.cta_annotation_shown = \"cta_annotation_shown\", totalAdBufferingTime.cta_annotation_clicked = \"cta_annotation_clicked\", totalAdBufferingTime.cta_annotation_closed = \"cta_annotation_closed\", totalAdBufferingTime.replay = \"replay\", totalAdBufferingTime.stopTimer = \"stop\", totalAdBufferingTime.autoplayDisallowed = \"autoplayDisallowed\", totalAdBufferingTime.hasError = \"error\", totalAdBufferingTime.mediaLoadTimeout = \"mediaLoadTimeout\", totalAdBufferingTime.linearChanged = \"linearChanged\", totalAdBufferingTime.click = \"click\", totalAdBufferingTime.contentPauseRequested = \"contentPauseRequested\", totalAdBufferingTime.contentResumeRequested = \"contentResumeRequested\", totalAdBufferingTime.discardAdBreak = \"discardAdBreak\", totalAdBufferingTime.updateAdsRenderingSettings = \"updateAdsRenderingSettings\", totalAdBufferingTime.durationChange = \"durationChange\", totalAdBufferingTime.expandedChanged = \"expandedChanged\", totalAdBufferingTime.autoClose = \"autoClose\", totalAdBufferingTime.userClose = \"userClose\", totalAdBufferingTime.userRecall = \"userRecall\", totalAdBufferingTime.prefetched = \"prefetched\", totalAdBufferingTime.loaded = \"loaded\", totalAdBufferingTime.initialize = \"init\", totalAdBufferingTime.allAdsCompleted = \"allAdsCompleted\", totalAdBufferingTime.adMetadata = \"adMetadata\", totalAdBufferingTime.adBreakReady = \"adBreakReady\", totalAdBufferingTime.adBreakFetchError = \"adBreakFetchError\", totalAdBufferingTime.log = \"log\", totalAdBufferingTime.volumeChange = \"volumeChange\", totalAdBufferingTime.companionBackfill = \"companionBackfill\", totalAdBufferingTime.companionInitialized = \"companionInitialized\", totalAdBufferingTime.companionImpression = \"companionImpression\", totalAdBufferingTime.companionClick = \"companionClick\", totalAdBufferingTime.impression = \"impression\", totalAdBufferingTime.interaction = \"interaction\", totalAdBufferingTime.adProgress = \"adProgress\", totalAdBufferingTime.adBuffering = \"adBuffering\", totalAdBufferingTime.trackingUrlPinged = \"trackingUrlPinged\", totalAdBufferingTime.measurable_impression = \"measurable_impression\", totalAdBufferingTime.custom_metric_viewable = \"custom_metric_viewable\", totalAdBufferingTime.viewable_impression = \"viewable_impression\", totalAdBufferingTime.fully_viewable_audible_half_duration_impression = \"fully_viewable_audible_half_duration_impression\", totalAdBufferingTime.audio_audible = \"audio_audible\", totalAdBufferingTime.audio_measurable = \"audio_measurable\", totalAdBufferingTime.overlay_resize = \"overlay_resize\", totalAdBufferingTime.overlay_unmeasurable_impression = \"overlay_unmeasurable_impression\", totalAdBufferingTime.overlay_unviewable_impression = \"overlay_unviewable_impression\", totalAdBufferingTime.overlay_viewable_immediate_impression = \"overlay_viewable_immediate_impression\", totalAdBufferingTime.overlay_viewable_end_of_session_impression = \"overlay_viewable_end_of_session_impression\", totalAdBufferingTime.externalActivityEvent = \"externalActivityEvent\", totalAdBufferingTime.adEvent = \"adEvent\", totalAdBufferingTime.configure = \"configure\", totalAdBufferingTime.remainingTime = \"remainingTime\", totalAdBufferingTime.destroy = \"destroy\", totalAdBufferingTime.resize = \"resize\", totalAdBufferingTime.volume = \"volume\", totalAdBufferingTime.authorIconClicked = \"videoAuthorIconClicked\", totalAdBufferingTime.authorNameClicked = \"videoAuthorClicked\", totalAdBufferingTime.videoClicked = \"videoClicked\", totalAdBufferingTime.videoIconClicked = \"videoIconClicked\", totalAdBufferingTime.learnMoreClicked = \"videoLearnMoreClicked\", totalAdBufferingTime.muteClicked = \"videoMuteClicked\", totalAdBufferingTime.titleClicked = \"videoTitleClicked\", totalAdBufferingTime.videoSkipClicked = \"SKIPPED\", totalAdBufferingTime.unmuteClicked = \"videoUnmuteClicked\", totalAdBufferingTime.vpaidEvent = \"vpaidEvent\", totalAdBufferingTime.show_ad = \"show_ad\", totalAdBufferingTime.video_card_endcap_collapse = \"video_card_endcap_collapse\", totalAdBufferingTime.video_card_endcap_dismiss = \"video_card_endcap_dismiss\", totalAdBufferingTime.video_card_endcap_impression = \"video_card_endcap_impression\", totalAdBufferingTime.mediaUrlPinged = \"mediaUrlPinged\", totalAdBufferingTime.breakStart = \"breakstart\", totalAdBufferingTime.breakEnd = \"breakend\", totalAdBufferingTime.omidReady = \"omidReady\", totalAdBufferingTime.omidUnavailable = \"omidUnavailable\", totalAdBufferingTime.omidAdSessionCompleted = \"omidAdSessionCompleted\", totalAdBufferingTime.omidAdSessionAbandoned = \"omidAdSessionAbandoned\", totalAdBufferingTime.verificationNotExecuted = \"verificationNotExecuted\", totalAdBufferingTime.loadStart = \"loadStart\", totalAdBufferingTime.seeked = \"seeked\", totalAdBufferingTime.seeking = \"seeking\", totalAdBufferingTime);\n  var NetworkManager = new function () {\n    this.entryIdCounter = new Map();\n    this.setTimeoutWrapper = 0;\n    this.tasks = window.fetch != null;\n  }();\n  function sendRequest(generatorWrapper) {\n    var value = undefined === value ? NetworkManager : value;\n    var CustomMap = undefined === CustomMap ? null : CustomMap;\n    generatorWrapper = new UrlRequest(generatorWrapper, CustomMap ? CustomMap : CustomMap);\n    var findEntry = undefined === findEntry ? false : findEntry;\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    if (generatorWrapper.entryIdCounter != null || iterateEntries) {\n      sendTrackingData(value, generatorWrapper.url, findEntry, iterateEntries, generatorWrapper.entryIdCounter);\n    } else {\n      sendTrackingData(value, generatorWrapper.url, findEntry);\n    }\n  }\n  var markAsCompleted = function () {\n    this.setTimeoutWrapper = Math.random() < 0.01;\n    this.tasks = Math.floorRectangle(4503599627370496 * Math.random());\n    this.entryIdCounter = null;\n  };\n  markAsCompleted.prototype.report = function (generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    if (globalScope.G_testRunner == null && (this.setTimeoutWrapper || (undefined === CustomMap ? 0 : CustomMap))) {\n      value.lid = generatorWrapper;\n      if (getSDKVersion()) {\n        value.sdkv = getSDKVersion();\n      }\n      if (this.entryIdCounter) {\n        value.palv = this.entryIdCounter;\n      }\n      generatorWrapper = getActiveAdIds().sort().join(\",\");\n      if (!isEmptyOrWhitespace(stringifyNullable(generatorWrapper))) {\n        value.iterateEntries = generatorWrapper;\n      }\n      value = buildErrorReportParams(this, value);\n      var findEntry = new table(\"http://pagead2.googlesyndication.com/pagead/gen_204\");\n      forEachInObject(value, function (iterateEntries, createCircularNode) {\n        if (iterateEntries != null) {\n          setParameter(findEntry, createCircularNode, iterateEntries == null ? \"\" : typeof iterateEntries === \"boolean\" ? iterateEntries ? \"t\" : \"f\" : \"\" + iterateEntries);\n        }\n      }, this);\n      value = getParentPageUrl().createDeferred;\n      if (!(value !== \"http\" && value !== \"https\")) {\n        setScheme(findEntry, value);\n      }\n      value = findEntry.toString();\n      generatorWrapper = findEntry.entryIdCounter.get(\"url\");\n      if (generatorWrapper != null && isInternetExplorer() && value.length > 2083) {\n        value = truncateUrl(findEntry, generatorWrapper);\n      }\n      sendRequest(value);\n    }\n  };\n  var buildErrorReportParams = function (generatorWrapper, value) {\n    value.writeBytes = \"ima_html5\";\n    var CustomMap = getParentPageUrl();\n    value.CustomMap = generatorWrapper.tasks;\n    value.domain = CustomMap.tasks;\n    return value;\n  };\n  markAsCompleted.getAdInstance = function () {\n    return getSingletonInstance(markAsCompleted);\n  };\n  function fetchNewToken(generatorWrapper) {\n    var value = Date.now();\n    var CustomMap = {};\n    generatorWrapper = (CustomMap[\"x-afma-token-requester-type\"] = generatorWrapper, CustomMap);\n    CustomMap = \"https://pubads.g.doubleclick.net/adsid/integrator.json?aos=\" + encodeURIComponent(getAncestorOrigins());\n    return new GetRequest().get({\n      url: CustomMap,\n      withCredentials: true,\n      timeout: new Timer(),\n      headers: generatorWrapper\n    }).then(function (findEntry) {\n      var iterateEntries = Date.now();\n      findEntry = findEntry.newToken || \"\";\n      var createCircularNode = {};\n      markAsCompleted.getAdInstance().report(182, (createCircularNode.rejectFunction = iterateEntries - value, createCircularNode.aos = getAncestorOrigins(), createCircularNode));\n      return new Token(findEntry);\n    }).catch(function (findEntry) {\n      var iterateEntries = \"not instanceof Error\";\n      if (findEntry instanceof Error) {\n        iterateEntries = getErrorDescription(Number(findEntry.message));\n      }\n      findEntry = Date.now();\n      var createCircularNode = {};\n      markAsCompleted.getAdInstance().report(182, (createCircularNode.except = iterateEntries, createCircularNode.rejectFunction = findEntry - value, createCircularNode));\n      return Promise.resolve(EmptyToken);\n    });\n  }\n  var TokenManager = function () {\n    AdEnvironmentConfig.call(this);\n    this.entryIdCounter = null;\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    this.tasks = new Timer(7200000);\n    this.setTimeoutWrapper = Promise.resolve(EmptyToken);\n  };\n  inheritPrototype(TokenManager, AdEnvironmentConfig);\n  var KE = function (generatorWrapper) {\n    var value = \"requester_type_8\";\n    if (undefined === value) {\n      value = \"requester_type_9\";\n    } else {\n      value = value;\n    }\n    var CustomMap = function (findEntry) {\n      generatorWrapper.entryIdCounter = findEntry;\n      return generatorWrapper.entryIdCounter;\n    };\n    generatorWrapper.setTimeoutWrapper = fetchNewToken(value).then(CustomMap);\n    generatorWrapper.tasks = new Timer(7200000);\n    generatorWrapper.handleAsync.window(generatorWrapper.tasks, \"tick\", function () {\n      generatorWrapper.setTimeoutWrapper = fetchNewToken(value).then(CustomMap);\n    });\n    generatorWrapper.tasks.startTimer();\n    executeOrDelayUntilDisposed(generatorWrapper, function () {\n      generatorWrapper.tasks.stopTimer();\n    });\n  };\n  TokenManager.prototype.getAdId = function () {\n    var generatorWrapper = this;\n    return wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        if (generatorWrapper.entryIdCounter != null && generatorWrapper.entryIdCounter !== EmptyToken) {\n          value.entryIdCounter = 2;\n          value = undefined;\n        } else {\n          value = generatorYield(value, generatorWrapper.setTimeoutWrapper, 3);\n        }\n        return value;\n      }\n      if (value.entryIdCounter != 2) {\n        generatorWrapper.entryIdCounter = value.tasks;\n      }\n      return value.return(generatorWrapper.entryIdCounter);\n    });\n  };\n  var Token = function (generatorWrapper) {\n    this.writeBytes = generatorWrapper;\n  };\n  var EmptyToken = new Token(\"\");\n  var Message = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    this.name = generatorWrapper;\n    this.type = value;\n    this.data = CustomMap;\n    this.writeBytes = findEntry;\n    this.entryIdCounter = iterateEntries;\n  };\n  var MessageQueue = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.handleAsync = [];\n    this.tasks = false;\n    this.setTimeoutWrapper = generatorWrapper || \"goog_\" + randomInt++;\n  };\n  inheritPrototype(MessageQueue, AdEnvironmentConfig);\n  MessageQueue.prototype.connect = function () {\n    for (this.tasks = true; this.handleAsync.length !== 0;) {\n      var generatorWrapper = this.handleAsync.shift();\n      if (generatorWrapper) {\n        this.sendMessage(generatorWrapper);\n      }\n    }\n  };\n  var enqueueMessage = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (generatorWrapper.tasks) {\n      generatorWrapper.sendMessage(new Message(value, CustomMap, findEntry, iterateEntries, createCircularNode));\n    } else {\n      generatorWrapper.handleAsync.push(new Message(value, CustomMap, findEntry, iterateEntries, createCircularNode));\n    }\n  };\n  MessageQueue.prototype.sendMessage = function () {};\n  var CustomEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === iterateEntries) {\n      iterateEntries = \"\";\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    if (undefined === createCircularNode) {\n      createCircularNode = \"\";\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    AdEvent.call(this, generatorWrapper);\n    this.messageType = value;\n    this.setPrototypeOfPolyfill = CustomMap;\n    this.isAndroid = findEntry;\n    this.origin = iterateEntries;\n    this.writeBytes = createCircularNode;\n  };\n  inheritPrototype(CustomEvent, AdEvent);\n  CustomEvent.prototype.getAdId = function () {\n    return this.writeBytes;\n  };\n  CustomEvent.prototype.toString = function () {\n    return \"\";\n  };\n  var CreativeType = {\n    IMAGE: \"Image\",\n    FLASH: \"Flash\",\n    ALL: \"All\"\n  };\n  var ResourceType = {\n    HTML: \"Html\",\n    IFRAME: \"IFrame\",\n    STATIC: \"Static\",\n    ALL: \"All\"\n  };\n  var SizeCriteria = {\n    IGNORE: \"IgnoreSize\",\n    SELECT_EXACT_MATCH: \"SelectExactMatch\",\n    SELECT_NEAR_MATCH: \"SelectNearMatch\",\n    SELECT_FLUID: \"SelectFluid\"\n  };\n  var CompanionAdSelectionSettings = function () {\n    this.allowCustom = true;\n    this.creativeType = this.resourceType = \"All\";\n    this.sizeCriteria = \"SelectExactMatch\";\n    this.nearMatchPercent = 90;\n    this.adSlotIds = [];\n  };\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$companion_ad_selection_settings.CompanionAdSelectionSettings.CreativeType\", CreativeType);\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$companion_ad_selection_settings.CompanionAdSelectionSettings.ResourceType\", ResourceType);\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$companion_ad_selection_settings.CompanionAdSelectionSettings.SizeCriteria\", SizeCriteria);\n  var CompanionAdSelector = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = new CompanionAdSelectionSettings();\n    } else {\n      value = value;\n    }\n    this.entryIdCounter = generatorWrapper;\n    if (value) {\n      this.settings = value;\n    } else {\n      this.settings = new CompanionAdSelectionSettings();\n    }\n    if (isValidEnumValue(ResourceType, this.settings.resourceType)) {\n      this.resourceType = this.settings.resourceType;\n    } else {\n      this.resourceType = \"All\";\n    }\n    if (isValidEnumValue(CreativeType, this.settings.creativeType)) {\n      this.creativeType = this.settings.creativeType;\n    } else {\n      this.creativeType = \"All\";\n    }\n    if (isValidEnumValue(SizeCriteria, this.settings.sizeCriteria)) {\n      this.sizeCriteria = this.settings.sizeCriteria;\n    } else {\n      this.sizeCriteria = \"SelectExactMatch\";\n    }\n    if (this.settings.adSlotIds != null) {\n      this.adSlotIds = this.settings.adSlotIds;\n    } else {\n      this.adSlotIds = [];\n    }\n    if (typeof this.settings.nearMatchPercent === \"number\" && this.settings.nearMatchPercent > 0 && this.settings.nearMatchPercent <= 100) {\n      this.nearMatchPercent = this.settings.nearMatchPercent;\n    } else {\n      this.nearMatchPercent = 90;\n    }\n  };\n  var filterCompanionAds = function (generatorWrapper, value) {\n    var CustomMap = [];\n    value.forEach(function (findEntry) {\n      if (generatorWrapper.settings.allowCustom) {\n        if (!isEmptyOrWhitespace(findEntry.getContent()) && (isNaN(findEntry.data.sequenceNumber) || isNaN(findEntry.data.mainAdSequenceNumber) || findEntry.data.mainAdSequenceNumber === findEntry.data.sequenceNumber) && isAdEligible(generatorWrapper, findEntry)) {\n          CustomMap.push(findEntry);\n        } else {\n          findEntry = findEligibleAdVariant(generatorWrapper, findEntry);\n          if (findEntry != null && !isEmptyOrWhitespace(findEntry.getContent())) {\n            CustomMap.push(findEntry);\n          }\n        }\n      }\n    });\n    return CustomMap;\n  };\n  CompanionAdSelector.prototype.PolyfilledMap = function () {\n    return this.resourceType;\n  };\n  var isAdEligible = function (generatorWrapper, value) {\n    var CustomMap;\n    if (CustomMap = value.getContentType() !== \"Flash\") {\n      if (CustomMap = generatorWrapper.resourceType === \"All\" || generatorWrapper.resourceType === value.PolyfilledMap()) {\n        CustomMap = value.getContentType();\n        if (CustomMap == null) {\n          CustomMap = true;\n        } else {\n          CustomMap = generatorWrapper.creativeType === \"All\" || generatorWrapper.creativeType === CustomMap;\n        }\n      }\n      if (CustomMap) {\n        CustomMap = value.getAdSlotId();\n        if (generatorWrapper.adSlotIds.length === 0) {\n          CustomMap = true;\n        } else if (CustomMap != null) {\n          CustomMap = generatorWrapper.adSlotIds.includes(CustomMap);\n        } else {\n          CustomMap = false;\n        }\n      }\n    }\n    if (CustomMap) {\n      CustomMap = value.getRectangleSize();\n      if ((value = !!value.data.fluidSize) || generatorWrapper.entryIdCounter.requiresPolyfill) {\n        generatorWrapper = value && generatorWrapper.entryIdCounter.requiresPolyfill;\n      } else if (generatorWrapper.sizeCriteria === \"IgnoreSize\" || areSizesEqual(generatorWrapper.entryIdCounter.size, CustomMap)) {\n        generatorWrapper = true;\n      } else {\n        if (value = generatorWrapper.sizeCriteria === \"SelectNearMatch\") {\n          value = CustomMap.width;\n          CustomMap = CustomMap.height;\n          if (value > generatorWrapper.entryIdCounter.size.width || CustomMap > generatorWrapper.entryIdCounter.size.height || value < generatorWrapper.nearMatchPercent / 100 * generatorWrapper.entryIdCounter.size.width || CustomMap < generatorWrapper.nearMatchPercent / 100 * generatorWrapper.entryIdCounter.size.height) {\n            value = false;\n          } else {\n            value = true;\n          }\n        }\n        generatorWrapper = value;\n      }\n    } else {\n      generatorWrapper = false;\n    }\n    return generatorWrapper;\n  };\n  var findEligibleAdVariant = function (generatorWrapper, value) {\n    value = getBackupCompanions(value);\n    if (value == null) {\n      return null;\n    } else {\n      return value.find(function (CustomMap) {\n        return isAdEligible(generatorWrapper, CustomMap);\n      }) || null;\n    }\n  };\n  var isValidEnumValue = function (generatorWrapper, value) {\n    return value != null && containsValue(generatorWrapper, value);\n  };\n  var AdError = function (generatorWrapper, value) {\n    this.message = generatorWrapper;\n    this.errorCode = value;\n  };\n  AdError.prototype.getErrorCode = function () {\n    return this.errorCode;\n  };\n  AdError.prototype.getMessage = function () {\n    return this.message;\n  };\n  var errorType = new AdError(\"Failed to initialize ad playback element before starting ad playback.\", 400);\n  var aF = new AdError(\"The provided {0} information: {1} is invalid.\", 1101);\n  function createAdPlayError(generatorWrapper, value) {\n    var CustomMap = undefined === value ? null : value;\n    var findEntry = sliceArguments.apply(2, arguments);\n    if (!(CustomMap instanceof AdError)) {\n      var iterateEntries = generatorWrapper.getErrorCode();\n      var createCircularNode = generatorWrapper.getMessage();\n      if (findEntry.length > 0) {\n        for (var entryIdCounter = 0; entryIdCounter < findEntry.length; entryIdCounter++) {\n          createCircularNode = createCircularNode.replace(new RegExp(\"\\\\{\" + entryIdCounter + \"\\\\}\", \"ig\"), findEntry[entryIdCounter]);\n        }\n      }\n      findEntry = new AdError(\"adPlayError\", createCircularNode, iterateEntries);\n      findEntry.entryIdCounter = CustomMap;\n      CustomMap = findEntry;\n    }\n    return CustomMap;\n  }\n  var debugFlags = {\n    getArrayOrEmpty: false,\n    clearPerformanceMarks: false\n  };\n  var SingletonBase = function () {};\n  SingletonBase.getAdInstance = function () {\n    throw Error(\"Must be overridden\");\n  };\n  var RandomExperimentManager = function () {\n    this.entryIdCounter = 0;\n  };\n  inheritPrototype(RandomExperimentManager, SingletonBase);\n  RandomExperimentManager.userAgentData = undefined;\n  RandomExperimentManager.getAdInstance = function () {\n    if (RandomExperimentManager.userAgentData) {\n      return RandomExperimentManager.userAgentData;\n    } else {\n      return RandomExperimentManager.userAgentData = new RandomExperimentManager();\n    }\n  };\n  function logErrorEvent(generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === CustomMap) {\n      CustomMap = null;\n    } else {\n      CustomMap = CustomMap;\n    }\n    if (undefined === findEntry) {\n      findEntry = {};\n    } else {\n      findEntry = findEntry;\n    }\n    var iterateEntries = RandomExperimentManager.getAdInstance();\n    if (iterateEntries.entryIdCounter === 0) {\n      if (Math.random() < 0.001) {\n        iterateEntries.entryIdCounter = 2;\n      } else {\n        iterateEntries.entryIdCounter = 1;\n      }\n    }\n    if (iterateEntries.entryIdCounter === 2) {\n      iterateEntries = {};\n      sendBeaconWithParams(Object.assign({}, (iterateEntries.CustomMap = String(generatorWrapper), iterateEntries.isMacOS = String(generatePageViewId()), iterateEntries.em = CustomMap, iterateEntries.lid = value, iterateEntries.eids = getSingletonInstance(BaseClass).entryIdCounter().join(), iterateEntries), findEntry), \"esp\");\n    }\n  }\n  function waitForWindowLoad() {\n    var generatorWrapper = window;\n    var value = undefined === value ? function () {} : value;\n    return new Promise(function (CustomMap) {\n      var findEntry = function () {\n        CustomMap(value());\n        removeEventListenerWithNormalization(generatorWrapper, \"load\", findEntry);\n      };\n      addEventListenerWithNormalization(generatorWrapper, \"load\", findEntry);\n    });\n  }\n  var CacheManager = function () {\n    this.cache = {};\n  };\n  var getCacheManagerInstance = function () {\n    if (!cacheManagerInstance) {\n      cacheManagerInstance = new CacheManager();\n    }\n    return cacheManagerInstance;\n  };\n  var clearCacheManager = function (generatorWrapper) {\n    if (undefined !== generatorWrapper) {\n      for (var value = getIterator(Object.keys(generatorWrapper)), CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n        CustomMap = CustomMap.value;\n        if (CustomMap.startsWith(\"_GESPSK\")) {\n          try {\n            generatorWrapper.removeItem(CustomMap);\n          } catch (findEntry) {}\n        }\n      }\n    }\n    cacheManagerInstance = new CacheManager();\n  };\n  var evaluateCacheItemState = function (generatorWrapper) {\n    var value = getAdProperty(generatorWrapper, 3);\n    if (!value) {\n      return 3;\n    }\n    if (undefined === getAdPropertyValue(generatorWrapper, 2)) {\n      return 4;\n    }\n    generatorWrapper = Date.now();\n    if (generatorWrapper > value + 259200000) {\n      return 2;\n    } else {\n      if (generatorWrapper > value + 43200000) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  };\n  CacheManager.prototype.get = function (generatorWrapper, value) {\n    if (this.cache[generatorWrapper]) {\n      return {\n        forEachElementReverse: this.cache[generatorWrapper],\n        success: true\n      };\n    }\n    var CustomMap = \"\";\n    try {\n      CustomMap = value.getItem(\"_GESPSK-\" + generatorWrapper);\n    } catch (entryIdCounter) {\n      var findEntry;\n      logErrorEvent(6, generatorWrapper, (findEntry = entryIdCounter) == null ? undefined : findEntry.message);\n      return {\n        forEachElementReverse: null,\n        success: false\n      };\n    }\n    if (!CustomMap) {\n      return {\n        forEachElementReverse: null,\n        success: true\n      };\n    }\n    try {\n      var iterateEntries = Bw(CustomMap);\n      this.cache[generatorWrapper] = iterateEntries;\n      return {\n        forEachElementReverse: iterateEntries,\n        success: true\n      };\n    } catch (entryIdCounter) {\n      var createCircularNode;\n      logErrorEvent(5, generatorWrapper, (createCircularNode = entryIdCounter) == null ? undefined : createCircularNode.message);\n      return {\n        forEachElementReverse: null,\n        success: false\n      };\n    }\n  };\n  CacheManager.prototype.set = function (generatorWrapper, value) {\n    var CustomMap = getAdPropertyValue(generatorWrapper, 1);\n    var findEntry = \"_GESPSK-\" + CustomMap;\n    setAdErrorResponseTimeStamp(generatorWrapper);\n    try {\n      value.setItem(findEntry, serializeData(generatorWrapper));\n    } catch (createCircularNode) {\n      var iterateEntries;\n      logErrorEvent(7, CustomMap, (iterateEntries = createCircularNode) == null ? undefined : iterateEntries.message);\n      return false;\n    }\n    this.cache[CustomMap] = generatorWrapper;\n    return true;\n  };\n  CacheManager.prototype.removeElement = function (generatorWrapper, value) {\n    generatorWrapper = getAdPropertyValue(generatorWrapper, 1);\n    try {\n      value.removeItem(\"_GESPSK-\" + generatorWrapper);\n      delete this.cache[generatorWrapper];\n    } catch (findEntry) {\n      var CustomMap;\n      logErrorEvent(8, generatorWrapper, (CustomMap = findEntry) == null ? undefined : CustomMap.message);\n    }\n  };\n  var cacheManagerInstance = null;\n  function loadCacheItems(generatorWrapper) {\n    var value = new AdRequestConfiguration();\n    if (generatorWrapper) {\n      var CustomMap = [];\n      var findEntry = RegExp(\"^_GESPSK-(.+)$\");\n      try {\n        for (var iterateEntries = 0; iterateEntries < generatorWrapper.length; iterateEntries++) {\n          var createCircularNode = (findEntry.exec(generatorWrapper.key(iterateEntries)) || [])[1];\n          if (createCircularNode) {\n            CustomMap.push(createCircularNode);\n          }\n        }\n      } catch (value) {}\n      CustomMap = getIterator(CustomMap);\n      iterateEntries = CustomMap.next();\n      findEntry = {\n        removeElementAtIndex: undefined\n      };\n      for (findEntry = {}; !iterateEntries.done; iterateEntries = CustomMap.next()) {\n        findEntry.removeElementAtIndex = iterateEntries.value;\n        if ((iterateEntries = getCacheManagerInstance().get(findEntry.removeElementAtIndex, generatorWrapper).forEachElementReverse) && !isDataPresent(value, findEntry.removeElementAtIndex) && (createCircularNode = evaluateCacheItemState(iterateEntries), createCircularNode !== 2 && createCircularNode !== 3)) {\n          setAdProperty(iterateEntries, 9, false);\n          if ((createCircularNode = getAdPropertyValue(iterateEntries, 2)) && createCircularNode.length > 1024) {\n            var entryIdCounter = {};\n            logErrorEvent(55, findEntry.removeElementAtIndex, null, (entryIdCounter.getSessionStorageData = String(createCircularNode.length), entryIdCounter));\n            createCircularNode = iterateEntries.createFunctionWithArguments(createAdError(108));\n            updateElement(createCircularNode, 2);\n          }\n          addElementToAd(value, 2, AdErrorResponse, iterateEntries);\n          iterateEntries = getAdPropertyValue(iterateEntries, 2);\n          entryIdCounter = createCircularNode = undefined;\n          var key = {};\n          logErrorEvent(19, findEntry.removeElementAtIndex, null, (key.incrementPropertyJ = iterateEntries ? \"1\" : \"0\", key.getSessionStorageData = String((entryIdCounter = (createCircularNode = iterateEntries) == null ? undefined : createCircularNode.length) != null ? entryIdCounter : -1), key));\n        }\n      }\n    }\n    if (!parseData(value, AdErrorResponse, 2).length) {\n      return null;\n    }\n    generatorWrapper = {};\n    logErrorEvent(50, \"\", null, (generatorWrapper.mergeAdContainerArrays = String(parseData(value, AdErrorResponse, 2).length), generatorWrapper));\n    return base64Encode(value.entryIdCounter(), 3);\n  }\n  function isDataPresent(generatorWrapper, value) {\n    return parseData(generatorWrapper, AdErrorResponse, 2).some(function (CustomMap) {\n      return getAdPropertyValue(CustomMap, 1) === value && getAdPropertyValue(CustomMap, 2) != null;\n    });\n  }\n  var Deferred = function () {\n    var generatorWrapper = this;\n    this.promise = new Promise(function (value, CustomMap) {\n      generatorWrapper.resolve = value;\n      generatorWrapper.reject = CustomMap;\n    });\n  };\n  var InputError = function (generatorWrapper) {\n    generatorWrapper = Error.call(this, generatorWrapper);\n    this.message = generatorWrapper.message;\n    if (\"stack\" in generatorWrapper) {\n      this.stack = generatorWrapper.stack;\n    }\n    Object.setPrototypeOf(this, InputError.prototype);\n    this.name = \"InputError\";\n  };\n  inheritPrototype(InputError, Error);\n  var BasePromise = function () {\n    this.isEmptyOrWhitespace = false;\n  };\n  var DeferredWithResult = function () {\n    BasePromise.apply(this, arguments);\n    this.errorHandler = new Deferred();\n  };\n  inheritPrototype(DeferredWithResult, BasePromise);\n  var notifyListeners = function (generatorWrapper, value) {\n    if (!generatorWrapper.isEmptyOrWhitespace) {\n      generatorWrapper.isEmptyOrWhitespace = true;\n      generatorWrapper.adServerCatIdWrapper = value;\n      generatorWrapper.errorHandler.resolve(value);\n    }\n  };\n  globalObject.Object.defineProperties(DeferredWithResult.prototype, {\n    promise: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.errorHandler.promise;\n      }\n    },\n    processElements: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.isEmptyOrWhitespace;\n      }\n    },\n    hasError: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.undefinedFunction1;\n      }\n    }\n  });\n  var Result = function () {\n    DeferredWithResult.apply(this, arguments);\n  };\n  inheritPrototype(Result, DeferredWithResult);\n  var resolveResult = function (generatorWrapper, value) {\n    notifyListeners(generatorWrapper, value);\n  };\n  var resolveWithAnotherPromise = function (generatorWrapper, value) {\n    value.then(function (CustomMap) {\n      notifyListeners(generatorWrapper, CustomMap);\n    });\n  };\n  Result.prototype.createFunctionWithArguments = function (generatorWrapper) {\n    if (!this.isEmptyOrWhitespace) {\n      this.isEmptyOrWhitespace = true;\n      this.adServerCatIdWrapper = null;\n      this.undefinedFunction1 = generatorWrapper;\n      this.errorHandler.reject(generatorWrapper);\n    }\n  };\n  var BaseResult = function (generatorWrapper) {\n    this.isEmptyOrWhitespace = false;\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(BaseResult, BasePromise);\n  BaseResult.prototype.processElements = function () {\n    return this.entryIdCounter.isEmptyOrWhitespace;\n  };\n  globalObject.Object.defineProperties(BaseResult.prototype, {\n    hasError: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.entryIdCounter.undefinedFunction1;\n      }\n    }\n  });\n  var SuccessResult = function (generatorWrapper) {\n    BaseResult.call(this, generatorWrapper);\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(SuccessResult, BaseResult);\n  globalObject.Object.defineProperties(SuccessResult.prototype, {\n    value: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.entryIdCounter.adServerCatIdWrapper;\n      }\n    }\n  });\n  var NullableSuccessResult = function (generatorWrapper) {\n    BaseResult.call(this, generatorWrapper);\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(NullableSuccessResult, BaseResult);\n  globalObject.Object.defineProperties(NullableSuccessResult.prototype, {\n    value: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        var generatorWrapper;\n        if ((generatorWrapper = this.entryIdCounter.adServerCatIdWrapper) != null) {\n          return generatorWrapper;\n        } else {\n          return null;\n        }\n      }\n    }\n  });\n  var Notification = function () {\n    DeferredWithResult.apply(this, arguments);\n  };\n  inheritPrototype(Notification, DeferredWithResult);\n  Notification.prototype.notify = function () {\n    notifyListeners(this, null);\n  };\n  var TaskManager = function () {\n    tryCall.apply(this, arguments);\n    this.entryIdCounter = [];\n    this.tasks = [];\n    this.setTimeoutWrapper = [];\n  };\n  inheritPrototype(TaskManager, tryCall);\n  var addTask = function (generatorWrapper, value) {\n    generatorWrapper.tasks.push({\n      isIphoneIpadIpod: false,\n      setCustomProperty: value\n    });\n  };\n  TaskManager.prototype.isIphoneIpadIpod = function (generatorWrapper) {\n    var value = this.tasks.find(function (CustomMap) {\n      return CustomMap.setCustomProperty === generatorWrapper;\n    });\n    if (value) {\n      value.isIphoneIpadIpod = true;\n    }\n  };\n  TaskManager.prototype.getAdEnvironment = function () {\n    this.entryIdCounter.length = 0;\n    this.setTimeoutWrapper.length = 0;\n    this.tasks.length = 0;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  function waitForTasks(generatorWrapper, value) {\n    var CustomMap, findEntry;\n    return wrapGeneratorToPromise(function (iterateEntries) {\n      if (iterateEntries.entryIdCounter == 1) {\n        if (value) {\n          CustomMap = generatorWrapper.filter(function (createCircularNode) {\n            return !createCircularNode.isIphoneIpadIpod;\n          });\n        } else {\n          CustomMap = generatorWrapper;\n        }\n        return generatorYield(iterateEntries, Promise.all(CustomMap.map(function (createCircularNode) {\n          return createCircularN",
  "orEvent(8, generatorWrapper, (CustomMap = findEntry) == null ? undefined : CustomMap.message);\n    }\n  };\n  var cacheManagerInstance = null;\n  function loadCacheItems(generatorWrapper) {\n    var value = new AdRequestConfiguration();\n    if (generatorWrapper) {\n      var CustomMap = [];\n      var findEntry = RegExp(\"^_GESPSK-(.+)$\");\n      try {\n        for (var iterateEntries = 0; iterateEntries < generatorWrapper.length; iterateEntries++) {\n          var createCircularNode = (findEntry.exec(generatorWrapper.key(iterateEntries)) || [])[1];\n          if (createCircularNode) {\n            CustomMap.push(createCircularNode);\n          }\n        }\n      } catch (value) {}\n      CustomMap = getIterator(CustomMap);\n      iterateEntries = CustomMap.next();\n      findEntry = {\n        removeElementAtIndex: undefined\n      };\n      for (findEntry = {}; !iterateEntries.done; iterateEntries = CustomMap.next()) {\n        findEntry.removeElementAtIndex = iterateEntries.value;\n        if ((iterateEntries = getCacheManagerInstance().get(findEntry.removeElementAtIndex, generatorWrapper).forEachElementReverse) && !isDataPresent(value, findEntry.removeElementAtIndex) && (createCircularNode = evaluateCacheItemState(iterateEntries), createCircularNode !== 2 && createCircularNode !== 3)) {\n          setAdProperty(iterateEntries, 9, false);\n          if ((createCircularNode = getAdPropertyValue(iterateEntries, 2)) && createCircularNode.length > 1024) {\n            var entryIdCounter = {};\n            logErrorEvent(55, findEntry.removeElementAtIndex, null, (entryIdCounter.getSessionStorageData = String(createCircularNode.length), entryIdCounter));\n            createCircularNode = iterateEntries.createFunctionWithArguments(createAdError(108));\n            updateElement(createCircularNode, 2);\n          }\n          addElementToAd(value, 2, AdErrorResponse, iterateEntries);\n          iterateEntries = getAdPropertyValue(iterateEntries, 2);\n          entryIdCounter = createCircularNode = undefined;\n          var key = {};\n          logErrorEvent(19, findEntry.removeElementAtIndex, null, (key.incrementPropertyJ = iterateEntries ? \"1\" : \"0\", key.getSessionStorageData = String((entryIdCounter = (createCircularNode = iterateEntries) == null ? undefined : createCircularNode.length) != null ? entryIdCounter : -1), key));\n        }\n      }\n    }\n    if (!parseData(value, AdErrorResponse, 2).length) {\n      return null;\n    }\n    generatorWrapper = {};\n    logErrorEvent(50, \"\", null, (generatorWrapper.mergeAdContainerArrays = String(parseData(value, AdErrorResponse, 2).length), generatorWrapper));\n    return base64Encode(value.entryIdCounter(), 3);\n  }\n  function isDataPresent(generatorWrapper, value) {\n    return parseData(generatorWrapper, AdErrorResponse, 2).some(function (CustomMap) {\n      return getAdPropertyValue(CustomMap, 1) === value && getAdPropertyValue(CustomMap, 2) != null;\n    });\n  }\n  var Deferred = function () {\n    var generatorWrapper = this;\n    this.promise = new Promise(function (value, CustomMap) {\n      generatorWrapper.resolve = value;\n      generatorWrapper.reject = CustomMap;\n    });\n  };\n  var InputError = function (generatorWrapper) {\n    generatorWrapper = Error.call(this, generatorWrapper);\n    this.message = generatorWrapper.message;\n    if (\"stack\" in generatorWrapper) {\n      this.stack = generatorWrapper.stack;\n    }\n    Object.setPrototypeOf(this, InputError.prototype);\n    this.name = \"InputError\";\n  };\n  inheritPrototype(InputError, Error);\n  var BasePromise = function () {\n    this.isEmptyOrWhitespace = false;\n  };\n  var DeferredWithResult = function () {\n    BasePromise.apply(this, arguments);\n    this.errorHandler = new Deferred();\n  };\n  inheritPrototype(DeferredWithResult, BasePromise);\n  var notifyListeners = function (generatorWrapper, value) {\n    if (!generatorWrapper.isEmptyOrWhitespace) {\n      generatorWrapper.isEmptyOrWhitespace = true;\n      generatorWrapper.adServerCatIdWrapper = value;\n      generatorWrapper.errorHandler.resolve(value);\n    }\n  };\n  globalObject.Object.defineProperties(DeferredWithResult.prototype, {\n    promise: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.errorHandler.promise;\n      }\n    },\n    processElements: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.isEmptyOrWhitespace;\n      }\n    },\n    hasError: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.undefinedFunction1;\n      }\n    }\n  });\n  var Result = function () {\n    DeferredWithResult.apply(this, arguments);\n  };\n  inheritPrototype(Result, DeferredWithResult);\n  var resolveResult = function (generatorWrapper, value) {\n    notifyListeners(generatorWrapper, value);\n  };\n  var resolveWithAnotherPromise = function (generatorWrapper, value) {\n    value.then(function (CustomMap) {\n      notifyListeners(generatorWrapper, CustomMap);\n    });\n  };\n  Result.prototype.createFunctionWithArguments = function (generatorWrapper) {\n    if (!this.isEmptyOrWhitespace) {\n      this.isEmptyOrWhitespace = true;\n      this.adServerCatIdWrapper = null;\n      this.undefinedFunction1 = generatorWrapper;\n      this.errorHandler.reject(generatorWrapper);\n    }\n  };\n  var BaseResult = function (generatorWrapper) {\n    this.isEmptyOrWhitespace = false;\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(BaseResult, BasePromise);\n  BaseResult.prototype.processElements = function () {\n    return this.entryIdCounter.isEmptyOrWhitespace;\n  };\n  globalObject.Object.defineProperties(BaseResult.prototype, {\n    hasError: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.entryIdCounter.undefinedFunction1;\n      }\n    }\n  });\n  var SuccessResult = function (generatorWrapper) {\n    BaseResult.call(this, generatorWrapper);\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(SuccessResult, BaseResult);\n  globalObject.Object.defineProperties(SuccessResult.prototype, {\n    value: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.entryIdCounter.adServerCatIdWrapper;\n      }\n    }\n  });\n  var NullableSuccessResult = function (generatorWrapper) {\n    BaseResult.call(this, generatorWrapper);\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(NullableSuccessResult, BaseResult);\n  globalObject.Object.defineProperties(NullableSuccessResult.prototype, {\n    value: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        var generatorWrapper;\n        if ((generatorWrapper = this.entryIdCounter.adServerCatIdWrapper) != null) {\n          return generatorWrapper;\n        } else {\n          return null;\n        }\n      }\n    }\n  });\n  var Notification = function () {\n    DeferredWithResult.apply(this, arguments);\n  };\n  inheritPrototype(Notification, DeferredWithResult);\n  Notification.prototype.notify = function () {\n    notifyListeners(this, null);\n  };\n  var TaskManager = function () {\n    tryCall.apply(this, arguments);\n    this.entryIdCounter = [];\n    this.tasks = [];\n    this.setTimeoutWrapper = [];\n  };\n  inheritPrototype(TaskManager, tryCall);\n  var addTask = function (generatorWrapper, value) {\n    generatorWrapper.tasks.push({\n      isIphoneIpadIpod: false,\n      setCustomProperty: value\n    });\n  };\n  TaskManager.prototype.isIphoneIpadIpod = function (generatorWrapper) {\n    var value = this.tasks.find(function (CustomMap) {\n      return CustomMap.setCustomProperty === generatorWrapper;\n    });\n    if (value) {\n      value.isIphoneIpadIpod = true;\n    }\n  };\n  TaskManager.prototype.getAdEnvironment = function () {\n    this.entryIdCounter.length = 0;\n    this.setTimeoutWrapper.length = 0;\n    this.tasks.length = 0;\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  function waitForTasks(generatorWrapper, value) {\n    var CustomMap, findEntry;\n    return wrapGeneratorToPromise(function (iterateEntries) {\n      if (iterateEntries.entryIdCounter == 1) {\n        if (value) {\n          CustomMap = generatorWrapper.filter(function (createCircularNode) {\n            return !createCircularNode.isIphoneIpadIpod;\n          });\n        } else {\n          CustomMap = generatorWrapper;\n        }\n        return generatorYield(iterateEntries, Promise.all(CustomMap.map(function (createCircularNode) {\n          return createCircularNode.setCustomProperty.promise;\n        })), 2);\n      }\n      if (generatorWrapper.length === CustomMap.length) {\n        return iterateEntries.return();\n      }\n      findEntry = generatorWrapper.filter(function (createCircularNode) {\n        return createCircularNode.isIphoneIpadIpod;\n      });\n      return generatorYield(iterateEntries, Promise.race([Promise.all(findEntry.map(function (createCircularNode) {\n        return createCircularNode.setCustomProperty.promise;\n      })), new Promise(function (createCircularNode) {\n        setTimeout(createCircularNode, value);\n        return;\n      })]), 0);\n    });\n  }\n  var Task = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.writeBytes = generatorWrapper;\n    this.timeoutMs = value;\n    this.isDone = false;\n    this.entryIdCounter = new TaskManager();\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(Task, tryCall);\n  Task.prototype.startTimer = function () {\n    var generatorWrapper = this,\n      value,\n      CustomMap;\n    return wrapGeneratorToPromise(function (findEntry) {\n      if (findEntry.entryIdCounter == 1) {\n        if (generatorWrapper.isDone) {\n          return findEntry.return();\n        }\n        generatorWrapper.isDone = true;\n        findEntry.setTimeoutWrapper = 2;\n        return generatorYield(findEntry, waitForTasks(generatorWrapper.entryIdCounter.tasks, (value = generatorWrapper.handleThenable) != null ? value : generatorWrapper.timeoutMs), 4);\n      }\n      if (findEntry.entryIdCounter != 2) {\n        if (!generatorWrapper.handleIteratorResult()) {\n          for (var iterateEntries = 0, createCircularNode = getIterator(generatorWrapper.entryIdCounter.setTimeoutWrapper), entryIdCounter = createCircularNode.next(); !entryIdCounter.done; entryIdCounter = createCircularNode.next()) {\n            if (entryIdCounter.value.entryIdCounter.adServerCatIdWrapper == null) {\n              throw Error(\"missing input: \" + generatorWrapper.writeBytes + \"/\" + iterateEntries);\n            }\n            ++iterateEntries;\n          }\n          generatorWrapper.tasks();\n        }\n        return resetGeneratorState(findEntry);\n      }\n      CustomMap = getGeneratorException(findEntry);\n      if (generatorWrapper.handleIteratorResult()) {\n        return findEntry.return();\n      }\n      if (!(CustomMap instanceof InputError) && CustomMap instanceof Error && (generatorWrapper.handleAsync ? generatorWrapper.handleAsync(generatorWrapper.writeBytes, CustomMap) : generatorWrapper.onFulfilled(generatorWrapper.writeBytes, CustomMap), !generatorWrapper.handleAsync && generatorWrapper.entryIdCounter.entryIdCounter.length)) {\n        iterateEntries = new InputError(CustomMap.message);\n        createCircularNode = getIterator(generatorWrapper.entryIdCounter.entryIdCounter);\n        for (entryIdCounter = createCircularNode.next(); !entryIdCounter.done; entryIdCounter = createCircularNode.next()) {\n          entryIdCounter = entryIdCounter.value;\n          if (!entryIdCounter.processElements) {\n            var key = iterateEntries;\n            entryIdCounter.isEmptyOrWhitespace = true;\n            entryIdCounter.undefinedFunction1 = key;\n            entryIdCounter.errorHandler.reject(key);\n          }\n        }\n      }\n      findEntry.entryIdCounter = 0;\n    });\n  };\n  var createResult = function (generatorWrapper) {\n    var value = undefined === value ? new Result() : value;\n    generatorWrapper.entryIdCounter.entryIdCounter.push(value);\n    return value;\n  };\n  var createNotification = function (generatorWrapper) {\n    var value = undefined === value ? new Notification() : value;\n    generatorWrapper.entryIdCounter.entryIdCounter.push(value);\n    return value;\n  };\n  var addSuccessResult = function (generatorWrapper, value) {\n    addTask(generatorWrapper.entryIdCounter, value);\n    value = new SuccessResult(value);\n    generatorWrapper.entryIdCounter.setTimeoutWrapper.push(value);\n    return value;\n  };\n  var addNullableSuccessResult = function (generatorWrapper, value) {\n    addTask(generatorWrapper.entryIdCounter, value);\n    return new NullableSuccessResult(value);\n  };\n  var TaskGroup = function () {\n    tryCall.call(this);\n    this.createDeferred = [];\n    this.isDone = [];\n    this.handleAsync = {};\n    this.entryIdCounter = [];\n    this.tasks = new Deferred();\n    this.setTimeoutWrapper = {};\n  };\n  inheritPrototype(TaskGroup, tryCall);\n  var addTaskToGroup = function (generatorWrapper, value) {\n    registerDisposable(generatorWrapper, value);\n    generatorWrapper.createDeferred.push(value);\n  };\n  var addAllTasksToGroup = function (generatorWrapper, value) {\n    value = getIterator(value);\n    for (var CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n      addTaskToGroup(generatorWrapper, CustomMap.value);\n    }\n  };\n  var startTaskGroup = function (generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key, value, entry, currentEntry, foundEntry, resolveFunction;\n    wrapGeneratorToPromise(function (rejectFunction) {\n      switch (rejectFunction.entryIdCounter) {\n        case 1:\n          if (!generatorWrapper.entryIdCounter.length) {\n            rejectFunction.entryIdCounter = 2;\n            break;\n          }\n          return generatorYield(rejectFunction, Promise.all(generatorWrapper.entryIdCounter.map(function (user) {\n            return user.tasks.promise;\n          })), 2);\n        case 2:\n          value = getIterator(generatorWrapper.createDeferred);\n          for (CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n            findEntry = CustomMap.value;\n            findEntry.startTimer();\n          }\n          iterateEntries = getIterator(generatorWrapper.isDone);\n          for (createCircularNode = iterateEntries.next(); !createCircularNode.done; createCircularNode = iterateEntries.next()) {\n            entryIdCounter = createCircularNode.value;\n            startTaskGroup(entryIdCounter);\n          }\n          if (!generatorWrapper.setTimeoutWrapper) {\n            rejectFunction.entryIdCounter = 4;\n            break;\n          }\n          key = Object.keys(generatorWrapper.setTimeoutWrapper);\n          if (!key.length) {\n            rejectFunction.entryIdCounter = 4;\n            break;\n          }\n          return generatorYield(rejectFunction, Promise.all(Object.values(generatorWrapper.setTimeoutWrapper).map(function (user) {\n            return user.promise;\n          })), 6);\n        case 6:\n          value = rejectFunction.tasks;\n          entry = 0;\n          currentEntry = getIterator(key);\n          for (foundEntry = currentEntry.next(); !foundEntry.done; foundEntry = currentEntry.next()) {\n            resolveFunction = foundEntry.value;\n            generatorWrapper.handleAsync[resolveFunction] = value[entry++];\n          }\n        case 4:\n          generatorWrapper.tasks.resolve(generatorWrapper.handleAsync);\n          return rejectFunction.return(generatorWrapper.tasks.promise);\n      }\n    });\n  };\n  TaskGroup.prototype.getAdEnvironment = function () {\n    tryCall.prototype.getAdEnvironment.call(this);\n    this.createDeferred.length = 0;\n    this.isDone.length = 0;\n    this.entryIdCounter.length = 0;\n  };\n  var Task = function (generatorWrapper, value) {\n    Task.call(this, generatorWrapper);\n    this.writeBytes = generatorWrapper;\n    this.onFulfilled = value;\n  };\n  inheritPrototype(Task, Task);\n  var ParameterizedTask = function (generatorWrapper, value, CustomMap, findEntry) {\n    Task.call(this, 1041, findEntry);\n    this.storage = value;\n    this.createDeferred = addSuccessResult(this, generatorWrapper);\n    if (CustomMap) {\n      this.setTimeoutWrapper = addNullableSuccessResult(this, CustomMap);\n    }\n  };\n  inheritPrototype(ParameterizedTask, Task);\n  ParameterizedTask.prototype.tasks = function () {\n    var value, CustomMap;\n    var generatorWrapper = this.createDeferred.value;\n    var findEntry = (CustomMap = this.storage) != null ? CustomMap : (value = this.setTimeoutWrapper) == null ? undefined : value.value;\n    if (findEntry && getCacheManagerInstance().set(generatorWrapper, findEntry) && getAdPropertyValue(generatorWrapper, 2) != null) {\n      logErrorEvent(27, getAdPropertyValue(generatorWrapper, 1));\n    }\n  };\n  var NotificationTask = function (generatorWrapper, value) {\n    Task.call(this, 1094, value);\n    this.setTimeoutWrapper = createNotification(this);\n    this.createDeferred = addSuccessResult(this, generatorWrapper);\n  };\n  inheritPrototype(NotificationTask, Task);\n  NotificationTask.prototype.tasks = function () {\n    var generatorWrapper = this.createDeferred.value;\n    if (generatorWrapper) {\n      clearCacheManager(generatorWrapper);\n      this.setTimeoutWrapper.notify();\n    }\n  };\n  var DataProcessingTask = function (generatorWrapper, value) {\n    Task.call(this, 1048, value);\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = createResult(this);\n    this.dispatchUnhandledRejection = addSuccessResult(this, generatorWrapper);\n  };\n  inheritPrototype(DataProcessingTask, Task);\n  DataProcessingTask.prototype.tasks = function () {\n    var generatorWrapper = this.dispatchUnhandledRejection.value;\n    var value = function (CustomMap) {\n      var findEntry = {};\n      logErrorEvent(CustomMap, getAdPropertyValue(generatorWrapper, 1), null, (findEntry.tic = String(Math.roundRectangle((Date.now() - getAdProperty(generatorWrapper, 3)) / 60000)), findEntry));\n    };\n    switch (evaluateCacheItemState(generatorWrapper)) {\n      case 0:\n        value(24);\n        break;\n      case 1:\n        value(25);\n        notifyListeners(this.createDeferred, generatorWrapper);\n        break;\n      case 2:\n        value(26);\n        notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n        break;\n      case 3:\n        logErrorEvent(9, getAdPropertyValue(generatorWrapper, 1));\n        notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n        break;\n      case 4:\n        value(23);\n        notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n    }\n  };\n  var StorageTask = function (generatorWrapper, value, CustomMap) {\n    Task.call(this, 1027, CustomMap);\n    this.currentDocument = generatorWrapper;\n    this.storage = value;\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = createResult(this);\n  };\n  inheritPrototype(StorageTask, Task);\n  StorageTask.prototype.tasks = function () {\n    var generatorWrapper = getCacheManagerInstance().get(this.currentDocument, this.storage).forEachElementReverse;\n    if (!generatorWrapper) {\n      generatorWrapper = setAdErrorResponseTimeStamp(createAdErrorResponse(this.currentDocument));\n      var value = this.createDeferred;\n      var CustomMap = generatorWrapper.createFunctionWithArguments(createAdError(100));\n      notifyListeners(value, CustomMap);\n    }\n    notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n  };\n  var OutputTask = function (generatorWrapper, value, CustomMap) {\n    Task.call(this, 1046, CustomMap);\n    this.output = createNotification(this);\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = addSuccessResult(this, value);\n    addTask(this.entryIdCounter, generatorWrapper);\n  };\n  inheritPrototype(OutputTask, Task);\n  OutputTask.prototype.tasks = function () {\n    notifyListeners(this.setTimeoutWrapper, this.createDeferred.value);\n  };\n  var FunctionCollectorTask = function (generatorWrapper, value, CustomMap) {\n    Task.call(this, 1047, CustomMap);\n    this.collectorFunction = generatorWrapper;\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = createResult(this);\n    this.dispatchUnhandledRejection = createResult(this);\n    this.handleThenable = addSuccessResult(this, value);\n  };\n  inheritPrototype(FunctionCollectorTask, Task);\n  FunctionCollectorTask.prototype.tasks = function () {\n    var generatorWrapper = this;\n    var value = this.handleThenable.value;\n    var CustomMap = getAdPropertyValue(value, 1);\n    logErrorEvent(18, CustomMap);\n    try {\n      var findEntry = getCurrentTimeWithPerformanceTiming();\n      this.collectorFunction().then(function (iterateEntries) {\n        logErrorEvent(29, CustomMap, null, {\n          delta: String(getCurrentTimeWithPerformanceTiming() - findEntry)\n        });\n        var createCircularNode = generatorWrapper.setTimeoutWrapper;\n        var entryIdCounter = setAdPropertyFromObject(value, 2, iterateEntries);\n        notifyListeners(createCircularNode, entryIdCounter);\n        notifyListeners(generatorWrapper.dispatchUnhandledRejection, iterateEntries != null ? iterateEntries : null);\n      }).catch(function (iterateEntries) {\n        logErrorEvent(28, CustomMap, getErrorString(iterateEntries));\n        iterateEntries = generatorWrapper.createDeferred;\n        var createCircularNode = value.createFunctionWithArguments(createAdError(106));\n        notifyListeners(iterateEntries, createCircularNode);\n      });\n    } catch (iterateEntries) {\n      logErrorEvent(1, CustomMap, getErrorString(iterateEntries));\n      resolveResult(this.createDeferred, value.createFunctionWithArguments(createAdError(107)));\n    }\n  };\n  function getErrorString(generatorWrapper) {\n    if (typeof generatorWrapper === \"string\") {\n      return generatorWrapper;\n    } else {\n      if (generatorWrapper instanceof Error) {\n        return generatorWrapper.message;\n      } else {\n        return null;\n      }\n    }\n  }\n  var ValidationTask = function (generatorWrapper, value) {\n    Task.call(this, 1028, value);\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = addSuccessResult(this, generatorWrapper);\n  };\n  inheritPrototype(ValidationTask, Task);\n  ValidationTask.prototype.tasks = function () {\n    var generatorWrapper = this.createDeferred.value;\n    var value = getAdPropertyValue(generatorWrapper, 1);\n    if (!(getAdProperty(generatorWrapper, 3) != null)) {\n      logErrorEvent(35, value);\n    }\n    notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n  };\n  var StringLengthValidationTask = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    Task.call(this, 1050, iterateEntries);\n    this.handleThenable = CustomMap;\n    this.dispatchUnhandledRejection = findEntry;\n    this.setTimeoutWrapper = createResult(this);\n    this.createDeferred = addSuccessResult(this, generatorWrapper);\n    this.resolvePromise = addNullableSuccessResult(this, value);\n  };\n  inheritPrototype(StringLengthValidationTask, Task);\n  StringLengthValidationTask.prototype.tasks = function () {\n    var generatorWrapper = this.createDeferred.value;\n    var value = getAdPropertyValue(generatorWrapper, 1);\n    var CustomMap = this.resolvePromise.value;\n    if (CustomMap == null) {\n      logErrorEvent(41, value);\n      generatorWrapper.createFunctionWithArguments(createAdError(111));\n      notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n    } else if (typeof CustomMap !== \"string\") {\n      logErrorEvent(21, value);\n      value = this.setTimeoutWrapper;\n      generatorWrapper = generatorWrapper.createFunctionWithArguments(createAdError(113));\n      notifyListeners(value, generatorWrapper);\n    } else {\n      if (CustomMap.length > (/^(\\d+)$/.test(value) ? this.dispatchUnhandledRejection : this.handleThenable)) {\n        var findEntry = {};\n        logErrorEvent(12, value, null, (findEntry.getSessionStorageData = String(CustomMap.length), findEntry));\n        value = generatorWrapper.createFunctionWithArguments(createAdError(108));\n        updateElement(value, 2);\n      } else {\n        if (!CustomMap.length) {\n          logErrorEvent(20, value);\n        }\n        updateElement(generatorWrapper, 10);\n      }\n      notifyListeners(this.setTimeoutWrapper, generatorWrapper);\n    }\n  };\n  var AdOutputManager = function (generatorWrapper) {\n    Task.call(this, 1046, generatorWrapper);\n    this.output = createNotification(this);\n  };\n  inheritPrototype(AdOutputManager, Task);\n  AdOutputManager.prototype.tasks = function () {\n    var generatorWrapper = this;\n    waitForWindowLoad().then(function () {\n      generatorWrapper.output.notify();\n    });\n  };\n  function initializeAdComponents(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === createCircularNode) {\n      createCircularNode = debugFlags;\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    var entryIdCounter, key, value, entry, currentEntry, foundEntry, resolveFunction, rejectFunction, user, profileData, isDone, stream, keyArray;\n    return wrapGeneratorToPromise(function (getAdManager) {\n      if (getAdManager.entryIdCounter == 1) {\n        entryIdCounter = new TaskGroup();\n        key = new StorageTask(generatorWrapper, CustomMap, iterateEntries);\n        addTaskToGroup(entryIdCounter, key);\n        addTaskToGroup(entryIdCounter, new ParameterizedTask(key.createDeferred, undefined, findEntry, iterateEntries));\n        value = new ValidationTask(key.setTimeoutWrapper, iterateEntries);\n        addTaskToGroup(entryIdCounter, value);\n        entry = new DataProcessingTask(value.setTimeoutWrapper, iterateEntries);\n        addTaskToGroup(entryIdCounter, entry);\n        currentEntry = new FunctionCollectorTask(value, entry.setTimeoutWrapper, iterateEntries);\n        addTaskToGroup(entryIdCounter, currentEntry);\n        addTaskToGroup(entryIdCounter, new ParameterizedTask(currentEntry.createDeferred, undefined, findEntry, iterateEntries));\n        foundEntry = new StringLengthValidationTask(currentEntry.setTimeoutWrapper, currentEntry.dispatchUnhandledRejection, createCircularNode.getArrayOrEmpty ? 1024 : 300, createCircularNode.getArrayOrEmpty ? 1024 : 1000, iterateEntries);\n        addTaskToGroup(entryIdCounter, foundEntry);\n        addTaskToGroup(entryIdCounter, new ParameterizedTask(foundEntry.setTimeoutWrapper, undefined, findEntry, iterateEntries));\n        resolveFunction = new AdOutputManager(iterateEntries);\n        addTaskToGroup(entryIdCounter, resolveFunction);\n        rejectFunction = new OutputTask(resolveFunction.output, entry.createDeferred, iterateEntries);\n        addTaskToGroup(entryIdCounter, rejectFunction);\n        user = new FunctionCollectorTask(value, rejectFunction.setTimeoutWrapper, iterateEntries);\n        addTaskToGroup(entryIdCounter, user);\n        profileData = new ParameterizedTask(user.setTimeoutWrapper, undefined, findEntry, iterateEntries);\n        addTaskToGroup(entryIdCounter, profileData);\n        startTaskGroup(entryIdCounter);\n        keyArray = generatorWrapper;\n        return generatorYield(getAdManager, foundEntry.setTimeoutWrapper.promise, 2);\n      } else {\n        return getAdManager.return({\n          writeBytes: keyArray,\n          collectorGeneratedData: (stream = (isDone = getAdManager.tasks) == null ? undefined : getAdPropertyValue(isDone, 2)) != null ? stream : null\n        });\n      }\n    });\n  }\n  var AdCollector = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = debugFlags;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    Task.call(this, 1059, findEntry);\n    this.resolvePromise = value;\n    this.handleThenable = CustomMap;\n    this.createDeferred = iterateEntries;\n    this.setTimeoutWrapper = createResult(this);\n    this.logError = addSuccessResult(this, generatorWrapper);\n    this.dispatchUnhandledRejection = addNullableSuccessResult(this, CustomMap);\n  };\n  inheritPrototype(AdCollector, Task);\n  AdCollector.prototype.tasks = function () {\n    var generatorWrapper = this.dispatchUnhandledRejection.value;\n    if (generatorWrapper) {\n      var iterateEntries;\n      var value = this.logError.value;\n      var CustomMap = value.writeBytes;\n      var findEntry = value.collectorFunction;\n      if ((iterateEntries = value.networkCode) != null) {\n        value = iterateEntries;\n      } else {\n        value = CustomMap;\n      }\n      CustomMap = {};\n      logErrorEvent(42, value, null, (CustomMap.createIterator = String(Number(this.resolvePromise)), CustomMap));\n      resolveWithAnotherPromise(this.setTimeoutWrapper, initializeAdComponents(value, findEntry, generatorWrapper, this.handleThenable, this.onFulfilled, this.createDeferred));\n    }\n  };\n  var AdCollectorValidator = function (generatorWrapper, value) {\n    Task.call(this, 1057, value);\n    this.setTimeoutWrapper = generatorWrapper;\n    this.createDeferred = createResult(this);\n    this.dispatchUnhandledRejection = createResult(this);\n  };\n  inheritPrototype(AdCollectorValidator, Task);\n  AdCollectorValidator.prototype.tasks = function () {\n    if (this.setTimeoutWrapper) {\n      if (typeof this.setTimeoutWrapper !== \"object\") {\n        logErrorEvent(46, \"UNKNOWN_COLLECTOR_ID\");\n        reportError(this, \"UNKNOWN_COLLECTOR_ID\", 112);\n      } else {\n        var generatorWrapper = this.setTimeoutWrapper.writeBytes;\n        var value = this.setTimeoutWrapper.networkCode;\n        if (generatorWrapper && value) {\n          delete this.setTimeoutWrapper.writeBytes;\n          logErrorEvent(47, generatorWrapper + \";\" + value);\n        }\n        if (value != null) {\n          generatorWrapper = value;\n        } else {\n          generatorWrapper = generatorWrapper;\n        }\n        if (typeof generatorWrapper !== \"string\") {\n          value = {};\n          logErrorEvent(37, \"INVALID_COLLECTOR_ID\", null, (value.urlRegex = JSON.stringify(generatorWrapper), value));\n          reportError(this, \"INVALID_COLLECTOR_ID\", 102);\n        } else if (typeof this.setTimeoutWrapper.collectorFunction !== \"function\") {\n          logErrorEvent(14, generatorWrapper);\n          reportError(this, generatorWrapper, 105);\n        } else if (getSingletonInstance(ConfigurationManager).entryIdCounter(numericValueWrapperTwo.entryIdCounter, numericValueWrapperTwo.defaultValue).includes(generatorWrapper)) {\n          logErrorEvent(22, generatorWrapper);\n          reportError(this, generatorWrapper, 104);\n        } else {\n          notifyListeners(this.dispatchUnhandledRejection, this.setTimeoutWrapper);\n        }\n      }\n    } else {\n      logErrorEvent(39, \"UNKNOWN_COLLECTOR_ID\");\n      reportError(this, \"UNKNOWN_COLLECTOR_ID\", 110);\n    }\n  };\n  var reportError = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = generatorWrapper.createDeferred;\n    value = createAdErrorResponse(value).createFunctionWithArguments(createAdError(CustomMap));\n    notifyListeners(generatorWrapper, value);\n  };\n  var AdSignalManager = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = document;\n    if (undefined === createCircularNode) {\n      createCircularNode = document;\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    if (undefined === iterateEntries) {\n      iterateEntries = debugFlags;\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    this.entryIdCounter = value;\n    this.setTimeoutWrapper = CustomMap;\n    this.createDeferred = createCircularNode;\n    this.executeCallbacks = findEntry;\n    this.settlePromise = iterateEntries;\n    this.onFulfilled = [];\n    this.isDone = [];\n    this.handleAsync = [];\n    this.tasks = 0;\n    generatorWrapper = getIterator(generatorWrapper);\n    for (value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      this.push(value.value);\n    }\n  };\n  AdSignalManager.prototype.push = function (generatorWrapper) {\n    var value = this;\n    if (!this.setTimeoutWrapper) {\n      this.executeCallbacks();\n    }\n    var CustomMap = function (createCircularNode, entryIdCounter) {\n      invokeErrorHandlers(value, createCircularNode, entryIdCounter);\n      return;\n    };\n    generatorWrapper = new AdCollectorValidator(generatorWrapper, CustomMap);\n    var findEntry = new ParameterizedTask(generatorWrapper.createDeferred, undefined, this.entryIdCounter, CustomMap);\n    CustomMap = new AdCollector(generatorWrapper.dispatchUnhandledRejection, this.setTimeoutWrapper, this.entryIdCounter, CustomMap, this.settlePromise);\n    var iterateEntries = new TaskGroup();\n    addAllTasksToGroup(iterateEntries, [generatorWrapper, findEntry, CustomMap]);\n    startTaskGroup(iterateEntries);\n    generatorWrapper = CustomMap.setTimeoutWrapper.promise;\n    this.onFulfilled.push(generatorWrapper);\n    findEntry = getIterator(this.isDone);\n    for (CustomMap = findEntry.next(); !CustomMap.done; CustomMap = findEntry.next()) {\n      generatorWrapper.then(CustomMap.value);\n    }\n  };\n  AdSignalManager.prototype.addOnSignalResolveCallback = function (generatorWrapper) {\n    this.isDone.push(generatorWrapper);\n    for (var value = getIterator(this.onFulfilled), CustomMap = value.next(); !CustomMap.done; CustomMap = value.next()) {\n      CustomMap.value.then(generatorWrapper);\n    }\n  };\n  AdSignalManager.prototype.addErrorHandler = function (generatorWrapper) {\n    this.handleAsync.push(generatorWrapper);\n  };\n  AdSignalManager.prototype.clearAllCache = function () {\n    var generatorWrapper = this;\n    var value = this.createDeferred.currentScript instanceof HTMLScriptElement ? this.createDeferred.currentScript.src : \"\";\n    if (this.tasks === 1) {\n      var CustomMap = {};\n      logErrorEvent(49, \"\", null, (CustomMap.url = value, CustomMap));\n    } else {\n      CustomMap = String(hashString(value != null ? value : \"\"));\n      if (getSingletonInstance(ConfigurationManager).entryIdCounter(numericValueWrapperOne.entryIdCounter, numericValueWrapperOne.defaultValue).includes(CustomMap)) {\n        CustomMap = {};\n        logErrorEvent(48, \"\", null, (CustomMap.url = value, CustomMap));\n      } else {\n        var findEntry = new TaskGroup();\n        CustomMap = new NotificationTask(this.entryIdCounter, function (iterateEntries, createCircularNode) {\n          invokeErrorHandlers(generatorWrapper, iterateEntries, createCircularNode);\n          return;\n        });\n        addTaskToGroup(findEntry, CustomMap);\n        startTaskGroup(findEntry);\n        this.tasks = 1;\n        setTimeout(function () {\n          generatorWrapper.tasks = 0;\n        }, 1000 * getDefaultConfiguration());\n        findEntry = {};\n        logErrorEvent(43, \"\", null, (findEntry.url = value, findEntry));\n        return CustomMap.setTimeoutWrapper.promise;\n      }\n    }\n  };\n  var invokeErrorHandlers = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = getIterator(generatorWrapper.handleAsync);\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      findEntry = findEntry.value;\n      findEntry(value, CustomMap);\n    }\n  };\n  var AdSignalManagerProxy = function (generatorWrapper) {\n    this.push = function (value) {\n      generatorWrapper.push(value);\n    };\n    this.addOnSignalResolveCallback = function (value) {\n      generatorWrapper.addOnSignalResolveCallback(value);\n    };\n    this.addErrorHandler = function (value) {\n      generatorWrapper.addErrorHandler(value);\n    };\n    this.clearAllCache = function () {\n      generatorWrapper.clearAllCache();\n    };\n  };\n  function processAdSignals(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === createCircularNode) {\n      createCircularNode = debugFlags;\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    if (getTopMostAccessibleWindow() !== getTopFrame()) {\n      logErrorEvent(16, \"\");\n    } else if (!(isSignalProviderArray(generatorWrapper, \"encryptedSignalProviders\", CustomMap, iterateEntries) && isSignalProviderArray(generatorWrapper, \"secureSignalProviders\", CustomMap, iterateEntries))) {\n      logErrorEvent(38, \"\");\n      initializeSignalProviders(generatorWrapper, \"encryptedSignalProviders\", value, createCircularNode, CustomMap, findEntry, iterateEntries);\n      initializeSignalProviders(generatorWrapper, \"secureSignalProviders\", value, createCircularNode, CustomMap, function () {}, iterateEntries);\n    }\n  }\n  function isSignalProviderArray(generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === generatorWrapper[value] || generatorWrapper[value] instanceof Array) {\n      return false;\n    }\n    generatorWrapper = generatorWrapper[value];\n    if (findEntry) {\n      generatorWrapper.addOnSignalResolveCallback(findEntry);\n    }\n    generatorWrapper.addErrorHandler(CustomMap);\n    return true;\n  }\n  function initializeSignalProviders(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    var key,\n      value = new AdSignalManager((key = generatorWrapper[value]) != null ? key : [], CustomMap, value === \"secureSignalProviders\", createCircularNode, findEntry);\n    generatorWrapper[value] = new AdSignalManagerProxy(value);\n    if (entryIdCounter) {\n      value.addOnSignalResolveCallback(entryIdCounter);\n    }\n    value.addErrorHandler(iterateEntries);\n  }\n  function collectAdData(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = undefined === createCircularNode ? debugFlags : createCircularNode;\n    var entryIdCounter = new Result();\n    notifyListeners(entryIdCounter, value);\n    processAdSignals(generatorWrapper, entryIdCounter, CustomMap, findEntry, iterateEntries, createCircularNode);\n  }\n  function collectAdDataAsync(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = emptyFunction;\n    var createCircularNode = new Map();\n    value = value.map(function (entryIdCounter) {\n      var key = entryIdCounter.currentDocument;\n      return new Promise(function (value) {\n        createCircularNode.set(key, value);\n      });\n    });\n    collectAdData(generatorWrapper, CustomMap, findEntry, iterateEntries, function (entryIdCounter) {\n      var key = entryIdCounter.collectorGeneratedData;\n      entryIdCounter = entryIdCounter.writeBytes;\n      var value;\n      if ((value = createCircularNode.get(entryIdCounter)) == null) {\n        undefined;\n      } else {\n        value({\n          collectorGeneratedData: key,\n          writeBytes: entryIdCounter\n        });\n      }\n      return;\n    });\n    return value;\n  }\n  function getGoogleTag() {\n    var generatorWrapper;\n    if ((generatorWrapper = globalScope.googletag) != null) {\n      return generatorWrapper;\n    } else {\n      return globalScope.googletag = {\n        cmd: []\n      };\n    }\n  }\n  function getLocalStorageSafe(generatorWrapper) {\n    if (!generatorWrapper || isLimitedAdsMode(generatorWrapper)) {\n      return null;\n    }\n    try {\n      return window.localStorage;\n    } catch (value) {\n      return null;\n    }\n  }\n  function collectLocalStorageAdData(generatorWrapper, value) {\n    if (generatorWrapper = getLocalStorageSafe(generatorWrapper)) {\n      collectAdData(getGoogleTag(), generatorWrapper, function () {}, emptyFunction, value);\n    }\n  }\n  function collectAdDataFromProviders(generatorWrapper, value) {\n    if ((value = getLocalStorageSafe(value)) && generatorWrapper.length !== 0) {\n      return collectAdDataAsync(getGoogleTag(), generatorWrapper, value, function () {});\n    } else {\n      return null;\n    }\n  }\n  function emptyFunction() {}\n  function resolveSignalForWindow(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = new Deferred();\n    var createCircularNode = \"\";\n    var entryIdCounter = function (value) {\n      try {\n        var entry = typeof value.data === \"object\" ? value.data : JSON.parse(value.data);\n        if (createCircularNode === entry.paw_id) {\n          removeEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n          if (entry.hasError) {\n            iterateEntries.reject(Error(entry.hasError));\n          } else {\n            iterateEntries.resolve(findEntry(entry));\n          }\n        }\n      } catch (currentEntry) {}\n    };\n    var key = getGmaSdk(generatorWrapper);\n    if (key) {\n      addEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n      createCircularNode = CustomMap(key);\n      return iterateEntries.promise;\n    } else {\n      if (CustomMap = getGmaMessageHandlers(generatorWrapper)) {\n        createCircularNode = String(Math.floorRectangle(2147483647 * secureRandom()));\n        addEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n        value(CustomMap, createCircularNode);\n        return iterateEntries.promise;\n      } else {\n        return null;\n      }\n    }\n  }\n  function resolveGmaQuerySignal(generatorWrapper) {\n    return resolveSignalForWindow(generatorWrapper, function (value, CustomMap) {\n      var findEntry, iterateEntries;\n      if ((findEntry = (iterateEntries = value.getGmaQueryInfo) != null ? iterateEntries : value.getGmaSig) == null) {\n        undefined;\n      } else {\n        findEntry.sendPostMessage(CustomMap);\n      }\n      return;\n    }, function (value) {\n      return value.getQueryInfo();\n    }, function (value) {\n      return value.signal;\n    });\n  }\n  function isGmaAvailable() {\n    var generatorWrapper = window;\n    return !!getGmaSdk(generatorWrapper) || !!getGmaMessageHandlers(generatorWrapper);\n  }\n  function getGmaSdk(generatorWrapper) {\n    var value;\n    if (typeof ((value = generatorWrapper.gmaSdk) == null ? undefined : value.getQueryInfo) === \"function\") {\n      return generatorWrapper.gmaSdk;\n    }\n  }\n  function getGmaMessageHandlers(generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter;\n    if (typeof ((value = generatorWrapper.webkit) == null ? undefined : (CustomMap = value.messageHandlers) == null ? undefined : (findEntry = CustomMap.getGmaQueryInfo) == null ? undefined : findEntry.sendPostMessage) === \"function\" || typeof ((iterateEntries = generatorWrapper.webkit) == null ? undefined : (createCircularNode = iterateEntries.messageHandlers) == null ? undefined : (entryIdCounter = createCircularNode.getGmaSig) == null ? undefined : entryIdCounter.sendPostMessage) === \"function\") {\n      return generatorWrapper.webkit.messa",
  "udes(CustomMap)) {\n        CustomMap = {};\n        logErrorEvent(48, \"\", null, (CustomMap.url = value, CustomMap));\n      } else {\n        var findEntry = new TaskGroup();\n        CustomMap = new NotificationTask(this.entryIdCounter, function (iterateEntries, createCircularNode) {\n          invokeErrorHandlers(generatorWrapper, iterateEntries, createCircularNode);\n          return;\n        });\n        addTaskToGroup(findEntry, CustomMap);\n        startTaskGroup(findEntry);\n        this.tasks = 1;\n        setTimeout(function () {\n          generatorWrapper.tasks = 0;\n        }, 1000 * getDefaultConfiguration());\n        findEntry = {};\n        logErrorEvent(43, \"\", null, (findEntry.url = value, findEntry));\n        return CustomMap.setTimeoutWrapper.promise;\n      }\n    }\n  };\n  var invokeErrorHandlers = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = getIterator(generatorWrapper.handleAsync);\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      findEntry = findEntry.value;\n      findEntry(value, CustomMap);\n    }\n  };\n  var AdSignalManagerProxy = function (generatorWrapper) {\n    this.push = function (value) {\n      generatorWrapper.push(value);\n    };\n    this.addOnSignalResolveCallback = function (value) {\n      generatorWrapper.addOnSignalResolveCallback(value);\n    };\n    this.addErrorHandler = function (value) {\n      generatorWrapper.addErrorHandler(value);\n    };\n    this.clearAllCache = function () {\n      generatorWrapper.clearAllCache();\n    };\n  };\n  function processAdSignals(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    if (undefined === createCircularNode) {\n      createCircularNode = debugFlags;\n    } else {\n      createCircularNode = createCircularNode;\n    }\n    if (getTopMostAccessibleWindow() !== getTopFrame()) {\n      logErrorEvent(16, \"\");\n    } else if (!(isSignalProviderArray(generatorWrapper, \"encryptedSignalProviders\", CustomMap, iterateEntries) && isSignalProviderArray(generatorWrapper, \"secureSignalProviders\", CustomMap, iterateEntries))) {\n      logErrorEvent(38, \"\");\n      initializeSignalProviders(generatorWrapper, \"encryptedSignalProviders\", value, createCircularNode, CustomMap, findEntry, iterateEntries);\n      initializeSignalProviders(generatorWrapper, \"secureSignalProviders\", value, createCircularNode, CustomMap, function () {}, iterateEntries);\n    }\n  }\n  function isSignalProviderArray(generatorWrapper, value, CustomMap, findEntry) {\n    if (undefined === generatorWrapper[value] || generatorWrapper[value] instanceof Array) {\n      return false;\n    }\n    generatorWrapper = generatorWrapper[value];\n    if (findEntry) {\n      generatorWrapper.addOnSignalResolveCallback(findEntry);\n    }\n    generatorWrapper.addErrorHandler(CustomMap);\n    return true;\n  }\n  function initializeSignalProviders(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    var key,\n      value = new AdSignalManager((key = generatorWrapper[value]) != null ? key : [], CustomMap, value === \"secureSignalProviders\", createCircularNode, findEntry);\n    generatorWrapper[value] = new AdSignalManagerProxy(value);\n    if (entryIdCounter) {\n      value.addOnSignalResolveCallback(entryIdCounter);\n    }\n    value.addErrorHandler(iterateEntries);\n  }\n  function collectAdData(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = undefined === createCircularNode ? debugFlags : createCircularNode;\n    var entryIdCounter = new Result();\n    notifyListeners(entryIdCounter, value);\n    processAdSignals(generatorWrapper, entryIdCounter, CustomMap, findEntry, iterateEntries, createCircularNode);\n  }\n  function collectAdDataAsync(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = emptyFunction;\n    var createCircularNode = new Map();\n    value = value.map(function (entryIdCounter) {\n      var key = entryIdCounter.currentDocument;\n      return new Promise(function (value) {\n        createCircularNode.set(key, value);\n      });\n    });\n    collectAdData(generatorWrapper, CustomMap, findEntry, iterateEntries, function (entryIdCounter) {\n      var key = entryIdCounter.collectorGeneratedData;\n      entryIdCounter = entryIdCounter.writeBytes;\n      var value;\n      if ((value = createCircularNode.get(entryIdCounter)) == null) {\n        undefined;\n      } else {\n        value({\n          collectorGeneratedData: key,\n          writeBytes: entryIdCounter\n        });\n      }\n      return;\n    });\n    return value;\n  }\n  function getGoogleTag() {\n    var generatorWrapper;\n    if ((generatorWrapper = globalScope.googletag) != null) {\n      return generatorWrapper;\n    } else {\n      return globalScope.googletag = {\n        cmd: []\n      };\n    }\n  }\n  function getLocalStorageSafe(generatorWrapper) {\n    if (!generatorWrapper || isLimitedAdsMode(generatorWrapper)) {\n      return null;\n    }\n    try {\n      return window.localStorage;\n    } catch (value) {\n      return null;\n    }\n  }\n  function collectLocalStorageAdData(generatorWrapper, value) {\n    if (generatorWrapper = getLocalStorageSafe(generatorWrapper)) {\n      collectAdData(getGoogleTag(), generatorWrapper, function () {}, emptyFunction, value);\n    }\n  }\n  function collectAdDataFromProviders(generatorWrapper, value) {\n    if ((value = getLocalStorageSafe(value)) && generatorWrapper.length !== 0) {\n      return collectAdDataAsync(getGoogleTag(), generatorWrapper, value, function () {});\n    } else {\n      return null;\n    }\n  }\n  function emptyFunction() {}\n  function resolveSignalForWindow(generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = new Deferred();\n    var createCircularNode = \"\";\n    var entryIdCounter = function (value) {\n      try {\n        var entry = typeof value.data === \"object\" ? value.data : JSON.parse(value.data);\n        if (createCircularNode === entry.paw_id) {\n          removeEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n          if (entry.hasError) {\n            iterateEntries.reject(Error(entry.hasError));\n          } else {\n            iterateEntries.resolve(findEntry(entry));\n          }\n        }\n      } catch (currentEntry) {}\n    };\n    var key = getGmaSdk(generatorWrapper);\n    if (key) {\n      addEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n      createCircularNode = CustomMap(key);\n      return iterateEntries.promise;\n    } else {\n      if (CustomMap = getGmaMessageHandlers(generatorWrapper)) {\n        createCircularNode = String(Math.floorRectangle(2147483647 * secureRandom()));\n        addEventListenerWithNormalization(generatorWrapper, \"message\", entryIdCounter);\n        value(CustomMap, createCircularNode);\n        return iterateEntries.promise;\n      } else {\n        return null;\n      }\n    }\n  }\n  function resolveGmaQuerySignal(generatorWrapper) {\n    return resolveSignalForWindow(generatorWrapper, function (value, CustomMap) {\n      var findEntry, iterateEntries;\n      if ((findEntry = (iterateEntries = value.getGmaQueryInfo) != null ? iterateEntries : value.getGmaSig) == null) {\n        undefined;\n      } else {\n        findEntry.sendPostMessage(CustomMap);\n      }\n      return;\n    }, function (value) {\n      return value.getQueryInfo();\n    }, function (value) {\n      return value.signal;\n    });\n  }\n  function isGmaAvailable() {\n    var generatorWrapper = window;\n    return !!getGmaSdk(generatorWrapper) || !!getGmaMessageHandlers(generatorWrapper);\n  }\n  function getGmaSdk(generatorWrapper) {\n    var value;\n    if (typeof ((value = generatorWrapper.gmaSdk) == null ? undefined : value.getQueryInfo) === \"function\") {\n      return generatorWrapper.gmaSdk;\n    }\n  }\n  function getGmaMessageHandlers(generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter;\n    if (typeof ((value = generatorWrapper.webkit) == null ? undefined : (CustomMap = value.messageHandlers) == null ? undefined : (findEntry = CustomMap.getGmaQueryInfo) == null ? undefined : findEntry.sendPostMessage) === \"function\" || typeof ((iterateEntries = generatorWrapper.webkit) == null ? undefined : (createCircularNode = iterateEntries.messageHandlers) == null ? undefined : (entryIdCounter = createCircularNode.getGmaSig) == null ? undefined : entryIdCounter.sendPostMessage) === \"function\") {\n      return generatorWrapper.webkit.messageHandlers;\n    }\n  }\n  var SignalResolver = function () {\n    this.timeoutMs = 500;\n    this.tasks = resolveGmaQuerySignal;\n    this.signal = null;\n    this.entryIdCounter = 0;\n  };\n  var resolveSignal = function (generatorWrapper) {\n    if (handleThenable(zm) || !isGmaAvailable()) {\n      return Promise.resolve(null);\n    }\n    var value;\n    return ((value = generatorWrapper.tasks(window)) != null ? value : Promise.resolve(null)).catch(function () {\n      return \"0\";\n    });\n  };\n  var resolveOrRefreshSignal = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      if (CustomMap.entryIdCounter == 1) {\n        value = Date.now() - generatorWrapper.entryIdCounter;\n        if (!generatorWrapper.signal || value > 300000) {\n          CustomMap = generatorYield(CustomMap, attemptSignalResolution(generatorWrapper), 3);\n        } else {\n          CustomMap.entryIdCounter = 2;\n          CustomMap = undefined;\n        }\n        return CustomMap;\n      }\n      if (CustomMap.entryIdCounter != 2) {\n        generatorWrapper.signal = CustomMap.tasks;\n        generatorWrapper.entryIdCounter = Date.now();\n      }\n      return CustomMap.return(generatorWrapper.signal);\n    });\n  };\n  var attemptSignalResolution = function (generatorWrapper) {\n    return Promise.race([resolveSignal(generatorWrapper).then(function (value) {\n      if (value == null) {\n        return null;\n      }\n      if (value.length > 10000) {\n        generatorWrapper.signal = \"0\";\n      } else {\n        generatorWrapper.signal = value;\n      }\n      generatorWrapper.entryIdCounter = Date.now();\n      return generatorWrapper.signal;\n    }), createTimerPromise(generatorWrapper.timeoutMs, \"0\")]);\n  };\n  function Ik(generatorWrapper, value) {\n    if (value instanceof RegExp) {\n      return \"__REGEXP\" + value.toString();\n    } else {\n      return value;\n    }\n  }\n  function decodeRegexpFromJSON(generatorWrapper, value) {\n    if (value && value.toString().indexOf(\"__REGEXP\") === 0) {\n      generatorWrapper = value.split(\"__REGEXP\")[1].match(/\\/(.*)\\/(.*)?/);\n      return new RegExp(generatorWrapper[1], generatorWrapper[2] || \"\");\n    } else {\n      return value;\n    }\n  }\n  var MessageHandler = function (generatorWrapper, value) {\n    MessageQueue.call(this, value);\n    this.isDone = generatorWrapper;\n    this.entryIdCounter = null;\n    this.onFulfilled = new EventDispatcher(this);\n    this.onFulfilled.window(getWindowForDocument(), \"message\", this.dispatchUnhandledRejection);\n  };\n  inheritPrototype(MessageHandler, MessageQueue);\n  var parseImaMessage = function (generatorWrapper) {\n    if (generatorWrapper == null || typeof generatorWrapper !== \"string\" || !generatorWrapper.startsWith(\"ima://\")) {\n      return null;\n    }\n    generatorWrapper = generatorWrapper.substr(6);\n    try {\n      return JSON.parse(generatorWrapper, decodeRegexpFromJSON);\n    } catch (value) {\n      return null;\n    }\n  };\n  MessageHandler.prototype.sendMessage = function (generatorWrapper) {\n    if (this.entryIdCounter != null && this.entryIdCounter.sendPostMessage != null) {\n      var value = this.entryIdCounter;\n      var CustomMap = value.sendPostMessage;\n      var findEntry = {};\n      findEntry.name = generatorWrapper.name;\n      findEntry.type = generatorWrapper.type;\n      if (generatorWrapper.data != null) {\n        findEntry.data = generatorWrapper.data;\n      }\n      if (generatorWrapper.writeBytes) {\n        findEntry.writeBytes = generatorWrapper.writeBytes;\n      }\n      if (generatorWrapper.entryIdCounter) {\n        findEntry.replyToMessageId = generatorWrapper.entryIdCounter;\n      }\n      findEntry.sid = this.setTimeoutWrapper;\n      findEntry.channel = this.isDone;\n      generatorWrapper = [];\n      serializeToJsonString(new JsonStringifySafe(), findEntry, generatorWrapper);\n      CustomMap.call(value, \"ima://\" + generatorWrapper.join(\"\"), \"*\");\n    }\n    if (this.entryIdCounter != null && this.entryIdCounter.sendPostMessage == null) {\n      markAsCompleted.getAdInstance().report(11);\n    }\n  };\n  MessageHandler.prototype.getAdEnvironment = function () {\n    markAsCompletedWrapper(this.onFulfilled);\n    this.entryIdCounter = null;\n    MessageQueue.prototype.getAdEnvironment.call(this);\n  };\n  MessageHandler.prototype.dispatchUnhandledRejection = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    var value = parseImaMessage(generatorWrapper.data);\n    if (isValidImaMessage(this, value)) {\n      if (this.entryIdCounter === null) {\n        this.entryIdCounter = generatorWrapper.source;\n        if (!this.tasks) {\n          this.connect();\n        }\n      } else if (this.entryIdCounter !== generatorWrapper.source) {\n        return;\n      }\n      if (isValidImaMessage(this, value)) {\n        this.dispatchEvent(new CustomEvent(value.name, value.type, value.data || {}, value.sid, generatorWrapper.origin, value.writeBytes, value.replyToMessageId));\n      }\n    }\n  };\n  var isValidImaMessage = function (generatorWrapper, value) {\n    if (value == null) {\n      return false;\n    }\n    var CustomMap = value.channel;\n    if (CustomMap == null || CustomMap !== generatorWrapper.isDone) {\n      return false;\n    }\n    value = value.sid;\n    if (value == null || generatorWrapper.setTimeoutWrapper !== \"*\" && value !== generatorWrapper.setTimeoutWrapper) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var EventController = function () {\n    AdEnvironmentConfig.call(this);\n    this.handleThenable = false;\n    this.entryIdCounter = null;\n    this.isDone = this.dispatchUnhandledRejection = this.handleThenable = false;\n    this.tasks = 0;\n    this.handleAsync = [];\n    this.onFulfilled = false;\n    this.updateMaxSize = this.tryCall = Infinity;\n    this.setTimeoutWrapper = 0;\n    this.resolvePromise = {};\n    this.logError = new EventDispatcher(this);\n    registerDisposable(this, this.logError);\n  };\n  inheritPrototype(EventController, AdEnvironmentConfig);\n  var initializeEventController = function (generatorWrapper, value) {\n    if (!(value == null || generatorWrapper.handleThenable)) {\n      generatorWrapper.entryIdCounter = value;\n      setupEventListeners(generatorWrapper);\n      generatorWrapper.handleThenable = true;\n    }\n  };\n  var resetEventController = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter != null && generatorWrapper.handleThenable) {\n      cleanupEventListeners(generatorWrapper);\n      generatorWrapper.handleThenable = false;\n      generatorWrapper.dispatchUnhandledRejection = false;\n      generatorWrapper.isDone = false;\n      generatorWrapper.tasks = 0;\n      generatorWrapper.handleAsync = [];\n      generatorWrapper.onFulfilled = false;\n    }\n  };\n  var setupEventListeners = function (generatorWrapper) {\n    cleanupEventListeners(generatorWrapper);\n    if (!(generatorWrapper.entryIdCounter instanceof AdEnvironmentConfig) && \"ontouchstart\" in document.documentElement && isIphoneIpadIpod) {\n      generatorWrapper.resolvePromise = {\n        touchstart(value) {\n          generatorWrapper.dispatchUnhandledRejection = true;\n          generatorWrapper.tasks = value.touches.length;\n          if (generatorWrapper.setTimeoutWrapper) {\n            window.clearTimeout(generatorWrapper.setTimeoutWrapper);\n            generatorWrapper.setTimeoutWrapper = 0;\n            generatorWrapper.handleThenable = true;\n          }\n          generatorWrapper.onFulfilled = isTouchIdentifierPresent(generatorWrapper, value.touches) || value.touches.length !== 1;\n          if (generatorWrapper.onFulfilled) {\n            generatorWrapper.tryCall = Infinity;\n            generatorWrapper.updateMaxSize = Infinity;\n          } else {\n            generatorWrapper.tryCall = value.touches[0].clientX;\n            generatorWrapper.updateMaxSize = value.touches[0].clientY;\n          }\n          value = value.touches;\n          generatorWrapper.handleAsync = [];\n          for (var CustomMap = 0; CustomMap < value.length; CustomMap++) {\n            generatorWrapper.handleAsync.push(value[CustomMap].identifier);\n          }\n        },\n        touchmove(value) {\n          generatorWrapper.tasks = value.touches.length;\n          if (!isIOSVersionAtLeast(8) || Math.pow(value.changedTouches[0].clientX - generatorWrapper.tryCall, 2) + Math.pow(value.changedTouches[0].clientY - generatorWrapper.updateMaxSize, 2) > Math.pow(5, 2)) {\n            generatorWrapper.isDone = true;\n          }\n        },\n        touchend(value) {\n          handleTouchEnd(generatorWrapper, value);\n          return;\n        }\n      };\n      forEachInObject(generatorWrapper.resolvePromise, function (value, CustomMap) {\n        generatorWrapper.entryIdCounter.addEventListener(CustomMap, value, false);\n      });\n    } else {\n      generatorWrapper.logError.window(generatorWrapper.entryIdCounter, \"click\", generatorWrapper.totalAdBufferingTime);\n    }\n  };\n  var cleanupEventListeners = function (generatorWrapper) {\n    generatorWrapper.logError.compareValues(generatorWrapper.entryIdCounter, \"click\", generatorWrapper.totalAdBufferingTime);\n    forEachInObject(generatorWrapper.resolvePromise, function (value, CustomMap) {\n      this.entryIdCounter.removeEventListener(CustomMap, value, false);\n    }, generatorWrapper);\n    generatorWrapper.resolvePromise = {};\n  };\n  var handleTouchEnd = function (generatorWrapper, value) {\n    if (!(!generatorWrapper.dispatchUnhandledRejection || generatorWrapper.tasks !== 1 || generatorWrapper.isDone || generatorWrapper.handleThenable || generatorWrapper.onFulfilled || !isTouchIdentifierPresent(generatorWrapper, value.changedTouches))) {\n      generatorWrapper.setTimeoutWrapper = window.setTimeout(function () {\n        triggerClickEvent(generatorWrapper);\n        return;\n      }, 300);\n    }\n    generatorWrapper.tasks = value.touches.length;\n    if (generatorWrapper.tasks === 0) {\n      generatorWrapper.dispatchUnhandledRejection = false;\n      generatorWrapper.isDone = false;\n      generatorWrapper.handleAsync = [];\n    }\n    generatorWrapper.handleThenable = false;\n  };\n  EventController.prototype.totalAdBufferingTime = function () {\n    triggerClickEvent(this);\n  };\n  var isTouchIdentifierPresent = function (generatorWrapper, value) {\n    for (var CustomMap = 0; CustomMap < value.length; CustomMap++) {\n      if (generatorWrapper.handleAsync.includes(value[CustomMap].identifier)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var triggerClickEvent = function (generatorWrapper) {\n    generatorWrapper.setTimeoutWrapper = 0;\n    generatorWrapper.dispatchEvent(new AdEvent(\"click\"));\n  };\n  EventController.prototype.getAdEnvironment = function () {\n    resetEventController(this);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var ConfigLoader = function () {\n    this.createDeferred = function () {\n      return new XMLHttpRequest();\n    };\n    this.entryIdCounter = new Deferred();\n    this.setTimeoutWrapper = this.tasks = this.config = null;\n  };\n  ConfigLoader.prototype.getConfig = function () {\n    var generatorWrapper = this;\n    return wrapGeneratorToPromise(function (value) {\n      if (value.entryIdCounter == 1) {\n        return generatorYield(value, generatorWrapper.entryIdCounter.promise, 2);\n      } else {\n        return value.return(generatorWrapper.config);\n      }\n    });\n  };\n  var loadConfig = function () {\n    var generatorWrapper = configLoaderInstance;\n    var value = configLoaderUrl;\n    var CustomMap = Date.now();\n    var findEntry = generatorWrapper.createDeferred();\n    findEntry.timeout = 60000;\n    findEntry.open(\"GET\", value, true);\n    findEntry.onload = function () {\n      generatorWrapper.setTimeoutWrapper = Date.now() - CustomMap;\n      if (findEntry.status < 200 || findEntry.status >= 300) {\n        handleConfigLoadError(generatorWrapper, Error(\"status: \" + findEntry.status));\n      } else {\n        var iterateEntries = findEntry.responseText;\n        var createCircularNode = null;\n        try {\n          createCircularNode = getAdSpot(iterateEntries);\n        } catch (entryIdCounter) {\n          handleConfigLoadError(generatorWrapper, Error(\"per-pub config could not be deserialized\"));\n          return;\n        }\n        generatorWrapper.entryIdCounter.resolve();\n        generatorWrapper.config = createCircularNode;\n      }\n    };\n    findEntry.onerror = function () {\n      handleConfigLoadError(generatorWrapper, Error(\"status: \" + findEntry.status));\n    };\n    findEntry.send();\n  };\n  var handleConfigLoadError = function (generatorWrapper, value) {\n    generatorWrapper.tasks = value;\n    generatorWrapper.entryIdCounter.resolve();\n  };\n  var configLoaderSingleton = new ConfigLoader();\n  function constructConfigUrl() {\n    var generatorWrapper = configUrlParams;\n    var value = generatorWrapper.appName;\n    var CustomMap = generatorWrapper.integerTransformation;\n    generatorWrapper = generatorWrapper.pageUrl;\n    var findEntry = new URL(\"https://securepubads.g.doubleclick.net/pagead/ima_ppub_config\");\n    if (value && CustomMap) {\n      if (CustomMap === \"android\") {\n        findEntry.searchParams.set(\"msid\", value);\n      } else if (CustomMap === \"ios\") {\n        findEntry.searchParams.set(\"an\", value);\n      }\n      return findEntry.toString();\n    } else {\n      if (generatorWrapper) {\n        findEntry.searchParams.set(\"ippd\", generatorWrapper);\n        return findEntry.toString();\n      } else {\n        return null;\n      }\n    }\n  }\n  function reportAdInteraction(generatorWrapper, value, CustomMap) {\n    var findEntry, iterateEntries, createCircularNode;\n    if ((createCircularNode = (findEntry = fetchData(generatorWrapper, AdBreakTemplate, 2)) == null ? undefined : (iterateEntries = parseData(findEntry, AdRuleParameters, 1)) == null ? undefined : iterateEntries.map(function (key) {\n      return dispatchUnhandledRejection(key, 1);\n    })) != null) {\n      generatorWrapper = createCircularNode;\n    } else {\n      generatorWrapper = [];\n    }\n    var entryIdCounter = extractPublisherId(value);\n    findEntry = generatorWrapper.some(function (key) {\n      return key === entryIdCounter;\n    });\n    value = identifyAdServer(value);\n    markAsCompleted.getAdInstance().report(190, {\n      fm: findEntry,\n      addMraidEventListener: value,\n      verifyCondition: CustomMap\n    });\n  }\n  var AdEventObserver = function (generatorWrapper, value) {\n    tryCall.call(this);\n    var CustomMap = this;\n    this.entryIdCounter = generatorWrapper;\n    this.tasks = new Map();\n    this.setTimeoutWrapper = function (findEntry) {\n      var iterateEntries = CustomMap.tasks.get(findEntry.messageType);\n      if (iterateEntries) {\n        var createCircularNode = \"goog_\" + randomInt++;\n        var entryIdCounter = findEntry.getAdId();\n        iterateEntries(findEntry.setPrototypeOfPolyfill).then(function (key) {\n          enqueueMessage(CustomMap.entryIdCounter, findEntry.type, findEntry.messageType, key, createCircularNode, entryIdCounter);\n        });\n      }\n    };\n    this.entryIdCounter.window(value, this.setTimeoutWrapper);\n    executeOrDelayUntilDisposed(this, function () {\n      CustomMap.tasks.clearAll();\n      CustomMap.entryIdCounter.compareValues(value, CustomMap.setTimeoutWrapper);\n    });\n  };\n  inheritPrototype(AdEventObserver, tryCall);\n  var mediaEventTypes = \"abort canplay canplaythrough durationchange emptied loadstart loadeddata loadedmetadata progress ratechange seeked seeking stalled suspend waiting\".split(\" \");\n  var AdSignalListener = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.entryIdCounter = generatorWrapper;\n    this.timeoutMs = value;\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(AdSignalListener, tryCall);\n  var fetchAdSignalData = function (generatorWrapper) {\n    if (!getEffectiveMessageTarget(generatorWrapper.entryIdCounter.caller)) {\n      return Promise.resolve(null);\n    }\n    var value = new Deferred();\n    var CustomMap = null;\n    generatorWrapper.entryIdCounter.addEventListener(function (iterateEntries) {\n      if (iterateEntries.pingData.internalErrorState === 1) {\n        value.resolve(null);\n      } else if (iterateEntries.eventName === \"listenerRegistered\") {\n        CustomMap = iterateEntries.listenerId;\n        if (iterateEntries.pingData.applicableSections.length === 1 && -1 === iterateEntries.pingData.applicableSections[0]) {\n          value.resolve(new AdSignalData(\"\", \"-1\"));\n        }\n      } else if (iterateEntries.eventName === \"signalStatus\" && iterateEntries.data === \"ready\") {\n        iterateEntries = iterateEntries.pingData;\n        var createCircularNode,\n          entryIdCounter = ((createCircularNode = iterateEntries.applicableSections) != null ? createCircularNode : []).join(\"_\");\n        value.resolve(new AdSignalData(iterateEntries.gppString, entryIdCounter));\n      }\n    });\n    var findEntry = new Promise(function (iterateEntries) {\n      setTimeout(function () {\n        iterateEntries(null);\n      }, generatorWrapper.timeoutMs);\n    });\n    findEntry = Promise.race([value.promise, findEntry]);\n    findEntry.then(function () {\n      if (CustomMap !== null) {\n        generatorWrapper.entryIdCounter.removeEventListener(CustomMap);\n      }\n    });\n    return findEntry;\n  };\n  var AdSignalData = function (generatorWrapper, value) {\n    this.gppString = generatorWrapper;\n    this.sid = value;\n  };\n  var liveOmsdkUrl = identityFunction([\"https://pagead2.googlesyndication.com/omsdk/releases/live/omweb-v1.js\"]);\n  var controlOmsdkUrl = identityFunction([\"https://pagead2.googlesyndication.com/omsdk/releases/control/omweb-v1.js\"]);\n  var canaryOmsdkUrl = identityFunction([\"https://pagead2.googlesyndication.com/omsdk/releases/canary/omweb-v1.js\"]);\n  var experimentalOmsdkUrl = identityFunction([\"https://pagead2.googlesyndication.com/omsdk/releases/experimental/omweb-v1.js\"]);\n  var liveOmsdkScriptUrl = createSafeHtmlFromTemplate(liveOmsdkUrl);\n  var controlOmsdkScriptUrl = createSafeHtmlFromTemplate(controlOmsdkUrl);\n  var canaryOmsdkScriptUrl = createSafeHtmlFromTemplate(canaryOmsdkUrl);\n  var experimentalOmsdkScriptUrl = createSafeHtmlFromTemplate(experimentalOmsdkUrl);\n  function getOmidSessionInterface(generatorWrapper) {\n    if ((generatorWrapper = getContentWindow(generatorWrapper)) && generatorWrapper.omidSessionInterface) {\n      return generatorWrapper.omidSessionInterface;\n    } else {\n      return null;\n    }\n  }\n  function loadOmsdkScript(generatorWrapper) {\n    var value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter;\n    return wrapGeneratorToPromise(function (key) {\n      if (key.entryIdCounter == 1) {\n        value = createElementWithOptionalClassesAndAttributes(\"IFRAME\", {\n          style: \"display: none\",\n          title: \"Advertisement\"\n        });\n        CustomMap = new Promise(function (value) {\n          value.addEventListener(\"load\", function () {\n            value();\n          });\n        });\n        generatorWrapper.appendChild(value);\n        return generatorYield(key, CustomMap, 2);\n      }\n      findEntry = createElementWithOptionalClassesAndAttributes(\"SCRIPT\");\n      iterateEntries = liveOmsdkScriptUrl;\n      if (handleThenable(qm)) {\n        iterateEntries = controlOmsdkScriptUrl;\n      } else if (handleThenable(rm)) {\n        iterateEntries = canaryOmsdkScriptUrl;\n      } else if (handleThenable(sm)) {\n        iterateEntries = experimentalOmsdkScriptUrl;\n      }\n      setElementSrcFromTrustedUrl(findEntry, iterateEntries);\n      createCircularNode = new Promise(function (value, entry) {\n        findEntry.addEventListener(\"load\", function () {\n          if (getOmidSessionInterface(value)) {\n            value(value);\n          } else {\n            entry();\n          }\n        });\n      });\n      entryIdCounter = value.contentDocument || value.contentWindow.document;\n      entryIdCounter.head.appendChild(findEntry);\n      return key.return(createCircularNode);\n    });\n  }\n  var OmsdkSessionHandler = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = value;\n    this.entryIdCounter = getOmidSessionInterface(generatorWrapper);\n  };\n  inheritPrototype(OmsdkSessionHandler, AdEnvironmentConfig);\n  var registerSessionObservers = function (generatorWrapper) {\n    try {\n      if (generatorWrapper.entryIdCounter) {\n        generatorWrapper.entryIdCounter.registerSessionObserver(function (value) {\n          if (value.type === \"sessionStart\") {\n            registerVideoElement(generatorWrapper, generatorWrapper.tasks);\n          } else if (value.type === \"sessionFinish\") {\n            registerSessionObservers(generatorWrapper);\n          }\n        });\n      }\n    } catch (value) {\n      generatorWrapper.dispatchEvent(new Event(\"error\"));\n    }\n  };\n  var registerVideoElement = function (generatorWrapper, value) {\n    if (value instanceof CustomVideoElement) {\n      value = value.table;\n    }\n    var CustomMap;\n    if (((CustomMap = value.tagName) == null ? undefined : CustomMap.toUpperCase()) !== \"AUDIO\") {\n      try {\n        if (generatorWrapper.entryIdCounter) {\n          generatorWrapper.entryIdCounter.setVideoElement(value);\n        }\n      } catch (findEntry) {\n        generatorWrapper.dispatchEvent(new Event(\"error\"));\n      }\n    }\n  };\n  var setSessionClient = function (generatorWrapper, value) {\n    try {\n      if (generatorWrapper.entryIdCounter) {\n        generatorWrapper.entryIdCounter.setSessionClientWindow(value);\n      }\n    } catch (CustomMap) {\n      generatorWrapper.dispatchEvent(new Event(\"error\"));\n    }\n  };\n  var AdPodInfo = function (generatorWrapper) {\n    this.data = generatorWrapper;\n  };\n  setTimeoutWrapper = AdPodInfo.prototype;\n  setTimeoutWrapper.getTotalAds = function () {\n    return this.data.totalAds;\n  };\n  setTimeoutWrapper.getMaxDuration = function () {\n    return this.data.maxDuration;\n  };\n  setTimeoutWrapper.getAdPosition = function () {\n    return this.data.adPosition;\n  };\n  setTimeoutWrapper.getPodIndex = function () {\n    return this.data.podIndex;\n  };\n  setTimeoutWrapper.getTimeOffset = function () {\n    return this.data.timeOffset;\n  };\n  setTimeoutWrapper.getIsBumper = function () {\n    return this.data.isBumper;\n  };\n  AdPodInfo.prototype.getIsBumper = AdPodInfo.prototype.getIsBumper;\n  AdPodInfo.prototype.getTimeOffset = AdPodInfo.prototype.getTimeOffset;\n  AdPodInfo.prototype.getPodIndex = AdPodInfo.prototype.getPodIndex;\n  AdPodInfo.prototype.getAdPosition = AdPodInfo.prototype.getAdPosition;\n  AdPodInfo.prototype.getMaxDuration = AdPodInfo.prototype.getMaxDuration;\n  AdPodInfo.prototype.getTotalAds = AdPodInfo.prototype.getTotalAds;\n  var CompanionAd = function (generatorWrapper) {\n    this.data = generatorWrapper;\n  };\n  setTimeoutWrapper = CompanionAd.prototype;\n  setTimeoutWrapper.getContent = function () {\n    return this.data.content;\n  };\n  setTimeoutWrapper.getContentType = function () {\n    return this.data.contentType;\n  };\n  setTimeoutWrapper.getRectangleWidth = function () {\n    return this.getRectangleSize().width;\n  };\n  setTimeoutWrapper.getRectangleHeight = function () {\n    return this.getRectangleSize().height;\n  };\n  setTimeoutWrapper.getAdSlotId = function () {\n    return this.data.adSlotId;\n  };\n  setTimeoutWrapper.getRectangleSize = function () {\n    return this.data.size;\n  };\n  setTimeoutWrapper.PolyfilledMap = function () {\n    return this.data.resourceType;\n  };\n  var getBackupCompanions = function (generatorWrapper) {\n    if (generatorWrapper = generatorWrapper.data.backupCompanions) {\n      return generatorWrapper.map(function (value) {\n        return new CompanionAd(value);\n      });\n    } else {\n      return [];\n    }\n  };\n  CompanionAd.prototype.getAdSlotId = CompanionAd.prototype.getAdSlotId;\n  CompanionAd.prototype.getRectangleHeight = CompanionAd.prototype.getRectangleHeight;\n  CompanionAd.prototype.getRectangleWidth = CompanionAd.prototype.getRectangleWidth;\n  CompanionAd.prototype.getContentType = CompanionAd.prototype.getContentType;\n  CompanionAd.prototype.getContent = CompanionAd.prototype.getContent;\n  var UniversalAdId = function (generatorWrapper, value) {\n    this.tasks = generatorWrapper;\n    this.entryIdCounter = value;\n  };\n  UniversalAdId.prototype.getAdIdValue = function () {\n    return this.tasks;\n  };\n  UniversalAdId.prototype.getAdIdRegistry = function () {\n    return this.entryIdCounter;\n  };\n  UniversalAdId.prototype.getAdIdRegistry = UniversalAdId.prototype.getAdIdRegistry;\n  UniversalAdId.prototype.getAdIdValue = UniversalAdId.prototype.getAdIdValue;\n  var year = function (generatorWrapper) {\n    this.data = generatorWrapper;\n  };\n  year.prototype.getAdId = function () {\n    return this.data.adId;\n  };\n  year.prototype.getCreativeAdId = function () {\n    return this.data.creativeAdId;\n  };\n  year.prototype.getCreativeId = function () {\n    return this.data.creativeId;\n  };\n  var getAdQueryId = function (generatorWrapper) {\n    return generatorWrapper.data.adQueryId;\n  };\n  setTimeoutWrapper = year.prototype;\n  setTimeoutWrapper.getAdSystem = function () {\n    return this.data.adSystem;\n  };\n  setTimeoutWrapper.getAdvertiserName = function () {\n    return this.data.advertiserName;\n  };\n  setTimeoutWrapper.getApiFramework = function () {\n    return this.data.apiFramework;\n  };\n  setTimeoutWrapper.getWrapperAdIds = function () {\n    return this.data.adWrapperIds;\n  };\n  setTimeoutWrapper.getWrapperCreativeIds = function () {\n    return this.data.adWrapperCreativeIds;\n  };\n  setTimeoutWrapper.getWrapperAdSystems = function () {\n    return this.data.adWrapperSystems;\n  };\n  setTimeoutWrapper.isLinear = function () {\n    return this.data.linear;\n  };\n  setTimeoutWrapper.isSkippable = function () {\n    return this.data.skippable;\n  };\n  setTimeoutWrapper.getContentType = function () {\n    return this.data.contentType;\n  };\n  setTimeoutWrapper.getDescription = function () {\n    return this.data.description;\n  };\n  setTimeoutWrapper.getTitle = function () {\n    return this.data.title;\n  };\n  setTimeoutWrapper.getDuration = function () {\n    return this.data.duration;\n  };\n  setTimeoutWrapper.getVastMediaWidth = function () {\n    return this.data.vastMediaWidth;\n  };\n  setTimeoutWrapper.getVastMediaHeight = function () {\n    return this.data.vastMediaHeight;\n  };\n  setTimeoutWrapper.getRectangleWidth = function () {\n    return this.data.width;\n  };\n  setTimeoutWrapper.getRectangleHeight = function () {\n    return this.data.height;\n  };\n  setTimeoutWrapper.getUiElements = function () {\n    return this.data.customUiElements;\n  };\n  setTimeoutWrapper.getMinSuggestedDuration = function () {\n    return this.data.minSuggestedDuration;\n  };\n  setTimeoutWrapper.getAdPodInfo = function () {\n    return new AdPodInfo(this.data.adPodInfo);\n  };\n  setTimeoutWrapper.getCompanionAds = function (generatorWrapper, value, CustomMap) {\n    if (!this.data.companions) {\n      return [];\n    }\n    var findEntry = this.data.companions.map(function (iterateEntries) {\n      return new CompanionAd(iterateEntries);\n    });\n    return filterCompanionAds(new CompanionAdSelector({\n      size: new Size(generatorWrapper, value),\n      requiresPolyfill: CustomMap ? CustomMap.sizeCriteria === \"SelectFluid\" : false\n    }, CustomMap), findEntry);\n  };\n  setTimeoutWrapper.getTraffickingParameters = function () {\n    return parseQueryString(stringifyNullable(this.data.traffickingParameters));\n  };\n  setTimeoutWrapper.getTraffickingParametersString = function () {\n    return this.data.traffickingParameters;\n  };\n  setTimeoutWrapper.getVastMediaBitrate = function () {\n    return this.data.vastMediaBitrate;\n  };\n  setTimeoutWrapper.getMediaUrl = function () {\n    return this.data.mediaUrl;\n  };\n  setTimeoutWrapper.getSurveyUrl = function () {\n    return this.data.surveyUrl;\n  };\n  setTimeoutWrapper.getDealId = function () {\n    return this.data.dealId;\n  };\n  setTimeoutWrapper.getUniversalAdIds = function () {\n    return (this.data.universalAdIds || []).map(function (generatorWrapper) {\n      return new UniversalAdId(generatorWrapper.adIdValue, generatorWrapper.adIdRegistry);\n    });\n  };\n  setTimeoutWrapper.getUniversalAdIdValue = function () {\n    return this.data.universalAdIdValue;\n  };\n  setTimeoutWrapper.getUniversalAdIdRegistry = function () {\n    return this.data.universalAdIdRegistry;\n  };\n  setTimeoutWrapper.getSkipTimeOffset = function () {\n    return this.data.skipTimeOffset;\n  };\n  setTimeoutWrapper.IdentityTransform = function () {\n    return this.data.disableUi;\n  };\n  year.prototype.isUiDisabled = year.prototype.IdentityTransform;\n  year.prototype.getSkipTimeOffset = year.prototype.getSkipTimeOffset;\n  year.prototype.getUniversalAdIdRegistry = year.prototype.getUniversalAdIdRegistry;\n  year.prototype.getUniversalAdIdValue = year.prototype.getUniversalAdIdValue;\n  year.prototype.getUniversalAdIds = year.prototype.getUniversalAdIds;\n  year.prototype.getDealId = year.prototype.getDealId;\n  year.prototype.getSurveyUrl = year.prototype.getSurveyUrl;\n  year.prototype.getMediaUrl = year.prototype.getMediaUrl;\n  year.prototype.getVastMediaBitrate = year.prototype.getVastMediaBitrate;\n  year.prototype.getTraffickingParametersString = year.prototype.getTraffickingParametersString;\n  year.prototype.getTraffickingParameters = year.prototype.getTraffickingParameters;\n  year.prototype.getCompanionAds = year.prototype.getCompanionAds;\n  year.prototype.getAdPodInfo = year.prototype.getAdPodInfo;\n  year.prototype.getMinSuggestedDuration = year.prototype.getMinSuggestedDuration;\n  year.prototype.getUiElements = year.prototype.getUiElements;\n  year.prototype.getRectangleHeight = year.prototype.getRectangleHeight;\n  year.prototype.getRectangleWidth = year.prototype.getRectangleWidth;\n  year.prototype.getVastMediaHeight = year.prototype.getVastMediaHeight;\n  year.prototype.getVastMediaWidth = year.prototype.getVastMediaWidth;\n  year.prototype.getDuration = year.prototype.getDuration;\n  year.prototype.getTitle = year.prototype.getTitle;\n  year.prototype.getDescription = year.prototype.getDescription;\n  year.prototype.getContentType = year.prototype.getContentType;\n  year.prototype.isSkippable = year.prototype.isSkippable;\n  year.prototype.isLinear = year.prototype.isLinear;\n  year.prototype.getWrapperAdSystems = year.prototype.getWrapperAdSystems;\n  year.prototype.getWrapperCreativeIds = year.prototype.getWrapperCreativeIds;\n  year.prototype.getWrapperAdIds = year.prototype.getWrapperAdIds;\n  year.prototype.getApiFramework = year.prototype.getApiFramework;\n  year.prototype.getAdvertiserName = year.prototype.getAdvertiserName;\n  year.prototype.getAdSystem = year.prototype.getAdSystem;\n  year.prototype.getCreativeId = year.prototype.getCreativeId;\n  year.prototype.getCreativeAdId = year.prototype.getCreativeAdId;\n  year.prototype.getAdId = year.prototype.getAdId;\n  var CuePoints = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  CuePoints.prototype.getCuePoints = function () {\n    return this.entryIdCounter;\n  };\n  CuePoints.prototype.getCuePoints = CuePoints.prototype.getCuePoints;\n  var AdDisplayOptions = function () {\n    this.shouldUseLearnMoreButton = this.disableUi = this.disableClickThrough = false;\n    this.shouldAutoAlign = this.shouldUseDefaultVideoAdUi = true;\n    this.preferredBitrate = -1;\n    this.shouldEnablePreloading = false;\n    this.videoLoadTimeout = 8000;\n    this.supportedMimeTypes = null;\n    this.startAdsAfterTime = -1;\n    this.shouldRestorePlaybackStateAfterAdBreak = false;\n    this.customUiElements = null;\n    this.shouldStyleNonLinearAds = this.shouldStyleLinearAds = false;\n  };\n  var createAdDisplayOptionsWithClickThroughDisabled = function (generatorWrapper, value) {\n    var CustomMap = {};\n    Object.assign(CustomMap, generatorWrapper);\n    if (value) {\n      CustomMap.disableClickThrough = true;\n    }\n    return CustomMap;\n  };\n  AdDisplayOptions.prototype.append = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = generatorWrapper.shouldAutoAlign;\n      if (value != null) {\n        this.shouldAutoAlign = value;\n      }\n      value = parseInteger(generatorWrapper.preferredBitrate);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.preferredBitrate = value;\n      }\n      this.disableClickThrough = generatorWrapper.disableClickThrough || this.disableClickThrough;\n      this.disableUi = generatorWrapper.disableUi || this.disableUi;\n      this.shouldEnablePreloading = generatorWrapper.shouldEnablePreloading || this.shouldEnablePreloading;\n      if ((value = generatorWrapper.supportedMimeTypes) && value.length !== 0) {\n        this.supportedMimeTypes = value;\n      }\n      value = parseInteger(generatorWrapper.startAdsAfterTime);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.startAdsAfterTime = value;\n      }\n      this.shouldRestorePlaybackStateAfterAdBreak = generatorWrapper.shouldRestorePlaybackStateAfterAdBreak || this.shouldRestorePlaybackStateAfterAdBreak;\n      value = parseInteger(generatorWrapper.videoLoadTimeout);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.videoLoadTimeout = value;\n      }\n      this.customUiElements = generatorWrapper.customUiElements || this.customUiElements;\n      this.shouldUseLearnMoreButton = generatorWrapper.shouldUseLearnMoreButton || this.shouldUseLearnMoreButton;\n      this.shouldStyleLinearAds = generatorWrapper.shouldStyleLinearAds || this.shouldStyleLinearAds;\n      this.shouldStyleNonLinearAds = generatorWrapper.shouldStyleNonLinearAds || this.shouldStyleNonLinearAds;\n      if (generatorWrapper.shouldUseDefaultVideoAdUi === false) {\n        this.shouldUseDefaultVideoAdUi = false;\n      } else {\n        this.shouldUseDefaultVideoAdUi = this.shouldUseDefaultVideoAdUi;\n      }\n    }\n  };\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_rendering_settings.AdsRenderingSettings.AUTO_SCALE\", -1);\n  var AdRequest = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequest, AdElement);\n  var AdResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var AdSlot = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSlot, AdElement);\n  var AdSignal = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSignal, AdElement);\n  var AdDimensions = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdDimensions, AdElement);\n  var getAdDimensions = function (generatorWrapper) {\n    return vf(generatorWrapper, QueryWrapper, 5);\n  };\n  AdDimensions.prototype.getRectangleWidth = function () {\n    return getNumericAdProperty(this, 9);\n  };\n  AdDimensions.prototype.getRectangleHeight = function () {\n    return getNumericAdProperty(this, 10);\n  };\n  var AdDimensionsRegistry = parseAndValidateArray(AdDimensions);\n  AdDimensions.findGlobalObject = [3, 7, 27, 11, 32];\n  function processAdResponse(generatorWrapper) {\n    var value = generatorWrapper.isEmptyObject;\n    var CustomMap = generatorWrapper.performanceApi;\n    var findEntry = generatorWrapper.bj;\n    var iterateEntries = generatorWrapper.auctionNonce;\n    var createCircularNode = undefined === generatorWrapper.getAdPropertyNumeric ? 0 : generatorWrapper.getAdPropertyNumeric;\n    var entryIdCounter = generatorWrapper.cj;\n    var key = generatorWrapper.getDeobfuscationId;\n    generatorWrapper = !getBooleanAdProperty(value, 14);\n    for (var value = {}, entry = getIterator(parseData(value, AdResponse, 7)), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n      currentEntry = currentEntry.value;\n      var foundEntry = {};\n      var resolveFunction = undefined;\n      var rejectFunction = (resolveFunction = findEntry) == null ? undefined : resolveFunction.arrayTransformationInstance.keysOfObject.findKeyInObject.updateAdProperty;\n      resolveFunction = dispatchUnhandledRejection(currentEntry, 1);\n      if (dispatchUnhandledRejection(currentEntry, 2).length) {\n        try {\n          foundEntry = JSON.parse(dispatchUnhandledRejection(currentEntry, 2));\n          if (100 * secureRandom() < 1) {\n            var user = undefined;\n            if (!((user = rejectFunction) == null)) {\n              user.setFlag34({\n                updateLengthPrefix: resolveFunction,\n                status: \"SUCCESS\",\n                parseNullableIntEnum: 100\n              });\n            }\n          }\n        } catch (entryNode) {\n          user = undefined;\n          if (!((user = rejectFunction) == null)) {\n            user.setFlag34({\n              updateLengthPrefix: resolveFunction,\n              status: \"ERROR\",\n              parseNullableIntEnum: 1\n            });\n          }\n        }\n      } else {\n        user = undefined;\n        if (!((user = rejectFunction) == null)) {\n          user.setFlag34({\n            updateLengthPrefix: resolveFunction,\n            status: \"EMPTY\",\n            parseNullableIntEnum: 1\n          });\n        }\n      }\n      value[dispatchUnhandledRejection(currentEntry, 1)] = foundEntry;\n    }\n    if (findEntry = fetchData(value, QueryPayload, 6)) {\n      value[\"https://googleads.g.doubleclick.net\"] = findEntry.toJSON();\n      value[\"https://td.doubleclick.net\"] = findEntry.toJSON();\n    }\n    entry = {};\n    findEntry = parseData(value, AdSignal, 11);\n    findEntry = getIterator(findEntry);\n    for (currentEntry = findEntry.next(); !currentEntry.done; currentEntry = findEntry.next()) {\n      currentEntry = currentEntry.value;\n      entry[dispatchUnhandledRejection(currentEntry, 1)] = getNumericAdProperty(currentEntry, 2);\n    }\n    currentEntry = {};\n    if (getNumericAdProperty(value, 21) !== 0) {\n      currentEntry[\"*\"] = getNumericAdProperty(value, 21);\n    }\n    if (parseData(value, AdSlot, 32).length > 0) {\n      var profileData = {};\n      findEntry = getIterator(parseData(value, AdSlot, 32));\n      for (foundEntry = findEntry.next(); !foundEntry.done; foundEntry = findEntry.next()) {\n        foundEntry = foundEntry.value;\n        profileData[dispatchUnhandledRejection(foundEntry, 1)] = getNumericAdProperty(foundEntry, 2);\n      }\n    }\n    foundEntry = {};\n    if (parseNullableUInt32(getTransformedElement(value, 18)) != null) {\n      foundEntry[\"https://googleads.g.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n      foundEntry[\"https://td.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n    }\n    findEntry = value.getSingletonInstance;\n    rejectFunction = getRawBitFlags(findEntry);\n    findEntry = transformAndAddElement(findEntry, rejectFunction, getElementAtIndex(findEntry, rejectFunction, 24), 24, AdRequest);\n    findEntry = getIterator(findEntry);\n    for (rejectFunction = findEntry.next(); !rejectFunction.done; rejectFunction = findEntry.next()) {\n      resolveFunction = rejectFunction.value;\n      if (getAdPropertyNumericValue(resolveFunction[1], 4)) {\n        rejectFunction = resolveFunction[0];\n        resolveFunction = getAdPropertyNumericValue(resolveFunction[1], 4);\n        foundEntry[rejectFunction] = resolveFunction;\n      }\n    }\n    findEntry = dispatchUnhandledRejection(value, 1).split(\"/td/\")[0];\n    if ((rejectFunction = fetchData(value, QueryWrapper, 5)) == null) {\n      rejectFunction = undefined;\n    } else {\n      resolveFunction = rejectFunction.getSingletonInstance;\n      rejectFunction = createInstanceWithTemporaryData(rejectFunction.constructor, transformWithFlags(resolveFunction, getRawBitFlags(resolveFunction), false));\n    }\n    var isDone;\n    if (rejectFunction != null && (isDone = fetchData(rejectFunction, QueryHeader, 5)) != null) {\n      updateElement(isDone, 2);\n    }\n    isDone = Object;\n    resolveFunction = isDone.assign;\n    user = dispatchUnhandledRejection(value, 1);\n    var stream = dispatchUnhandledRejection(value, 2);\n    var keyArray = transformArrayElements(value, 3, stringOrNull);\n    profileData = resolveFunction.call(isDone, {}, {\n      seller: findEntry,\n      decisionLogicUrl: user,\n      trustedScoringSignalsUrl: stream,\n      interestGroupBuyers: keyArray,\n      sellerExperimentGroupId: getAdPropertyNumericValue(value, 17),\n      auctionSignals: JSON.parse(dispatchUnhandledRejection(value, 4) || \"{}\"),\n      sellerSignals: (rejectFunction == null ? undefined : rejectFunction.toJSON()) || [],\n      sellerTimeout: getNumericAdProperty(value, 15) || 50,\n      perBuyerExperimentGroupIds: foundEntry,\n      perBuyerSignals: value,\n      perBuyerTimeouts: entry,\n      perBuyerCumulativeTimeouts: currentEntry\n    }, profileData ? {\n      perBuyerGroupLimits: profileData\n    } : {}, generatorWrapper ? {\n      resolveToConfig: generatorWrapper\n    } : {});\n    if (value == null ? 0 : getBooleanAdProperty(getAdDimensions(value), 25)) {\n      profileData.sellerCurrency = \"USD\";\n      value = Object;\n      isDone = value.fromEntries;\n      entry = transformElementAtIndex(value, 22, getStringOrEmpty);\n      profileData.perBuyerCurrencies = isDone.call(value, entry);\n    }\n    if (dispatchUnhandledRejection(value, 28)) {\n      profileData.directFromSellerSignalsHeaderAdSlot = dispatchUnhandledRejection(value, 28);\n    }\n    if (isInterestGroupBuyerValid(profileData.interestGroupBuyers, key)) {\n      profileData.auctionReportBuyerKeys = profileData.interestGroupBuyers.map(mapBuyerToBigInt);\n      profileData.auctionReportBuyers = {\n        interestGroupCount: {\n          buc",
  "ed = function (generatorWrapper, value) {\n    var CustomMap = {};\n    Object.assign(CustomMap, generatorWrapper);\n    if (value) {\n      CustomMap.disableClickThrough = true;\n    }\n    return CustomMap;\n  };\n  AdDisplayOptions.prototype.append = function (generatorWrapper) {\n    if (generatorWrapper) {\n      var value = generatorWrapper.shouldAutoAlign;\n      if (value != null) {\n        this.shouldAutoAlign = value;\n      }\n      value = parseInteger(generatorWrapper.preferredBitrate);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.preferredBitrate = value;\n      }\n      this.disableClickThrough = generatorWrapper.disableClickThrough || this.disableClickThrough;\n      this.disableUi = generatorWrapper.disableUi || this.disableUi;\n      this.shouldEnablePreloading = generatorWrapper.shouldEnablePreloading || this.shouldEnablePreloading;\n      if ((value = generatorWrapper.supportedMimeTypes) && value.length !== 0) {\n        this.supportedMimeTypes = value;\n      }\n      value = parseInteger(generatorWrapper.startAdsAfterTime);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.startAdsAfterTime = value;\n      }\n      this.shouldRestorePlaybackStateAfterAdBreak = generatorWrapper.shouldRestorePlaybackStateAfterAdBreak || this.shouldRestorePlaybackStateAfterAdBreak;\n      value = parseInteger(generatorWrapper.videoLoadTimeout);\n      if (typeof value === \"number\" && !isNaN(value) && value > 0) {\n        this.videoLoadTimeout = value;\n      }\n      this.customUiElements = generatorWrapper.customUiElements || this.customUiElements;\n      this.shouldUseLearnMoreButton = generatorWrapper.shouldUseLearnMoreButton || this.shouldUseLearnMoreButton;\n      this.shouldStyleLinearAds = generatorWrapper.shouldStyleLinearAds || this.shouldStyleLinearAds;\n      this.shouldStyleNonLinearAds = generatorWrapper.shouldStyleNonLinearAds || this.shouldStyleNonLinearAds;\n      if (generatorWrapper.shouldUseDefaultVideoAdUi === false) {\n        this.shouldUseDefaultVideoAdUi = false;\n      } else {\n        this.shouldUseDefaultVideoAdUi = this.shouldUseDefaultVideoAdUi;\n      }\n    }\n  };\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_rendering_settings.AdsRenderingSettings.AUTO_SCALE\", -1);\n  var AdRequest = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdRequest, AdElement);\n  var AdResponse = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdResponse, AdElement);\n  var AdSlot = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSlot, AdElement);\n  var AdSignal = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdSignal, AdElement);\n  var AdDimensions = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdDimensions, AdElement);\n  var getAdDimensions = function (generatorWrapper) {\n    return vf(generatorWrapper, QueryWrapper, 5);\n  };\n  AdDimensions.prototype.getRectangleWidth = function () {\n    return getNumericAdProperty(this, 9);\n  };\n  AdDimensions.prototype.getRectangleHeight = function () {\n    return getNumericAdProperty(this, 10);\n  };\n  var AdDimensionsRegistry = parseAndValidateArray(AdDimensions);\n  AdDimensions.findGlobalObject = [3, 7, 27, 11, 32];\n  function processAdResponse(generatorWrapper) {\n    var value = generatorWrapper.isEmptyObject;\n    var CustomMap = generatorWrapper.performanceApi;\n    var findEntry = generatorWrapper.bj;\n    var iterateEntries = generatorWrapper.auctionNonce;\n    var createCircularNode = undefined === generatorWrapper.getAdPropertyNumeric ? 0 : generatorWrapper.getAdPropertyNumeric;\n    var entryIdCounter = generatorWrapper.cj;\n    var key = generatorWrapper.getDeobfuscationId;\n    generatorWrapper = !getBooleanAdProperty(value, 14);\n    for (var value = {}, entry = getIterator(parseData(value, AdResponse, 7)), currentEntry = entry.next(); !currentEntry.done; currentEntry = entry.next()) {\n      currentEntry = currentEntry.value;\n      var foundEntry = {};\n      var resolveFunction = undefined;\n      var rejectFunction = (resolveFunction = findEntry) == null ? undefined : resolveFunction.arrayTransformationInstance.keysOfObject.findKeyInObject.updateAdProperty;\n      resolveFunction = dispatchUnhandledRejection(currentEntry, 1);\n      if (dispatchUnhandledRejection(currentEntry, 2).length) {\n        try {\n          foundEntry = JSON.parse(dispatchUnhandledRejection(currentEntry, 2));\n          if (100 * secureRandom() < 1) {\n            var user = undefined;\n            if (!((user = rejectFunction) == null)) {\n              user.setFlag34({\n                updateLengthPrefix: resolveFunction,\n                status: \"SUCCESS\",\n                parseNullableIntEnum: 100\n              });\n            }\n          }\n        } catch (entryNode) {\n          user = undefined;\n          if (!((user = rejectFunction) == null)) {\n            user.setFlag34({\n              updateLengthPrefix: resolveFunction,\n              status: \"ERROR\",\n              parseNullableIntEnum: 1\n            });\n          }\n        }\n      } else {\n        user = undefined;\n        if (!((user = rejectFunction) == null)) {\n          user.setFlag34({\n            updateLengthPrefix: resolveFunction,\n            status: \"EMPTY\",\n            parseNullableIntEnum: 1\n          });\n        }\n      }\n      value[dispatchUnhandledRejection(currentEntry, 1)] = foundEntry;\n    }\n    if (findEntry = fetchData(value, QueryPayload, 6)) {\n      value[\"https://googleads.g.doubleclick.net\"] = findEntry.toJSON();\n      value[\"https://td.doubleclick.net\"] = findEntry.toJSON();\n    }\n    entry = {};\n    findEntry = parseData(value, AdSignal, 11);\n    findEntry = getIterator(findEntry);\n    for (currentEntry = findEntry.next(); !currentEntry.done; currentEntry = findEntry.next()) {\n      currentEntry = currentEntry.value;\n      entry[dispatchUnhandledRejection(currentEntry, 1)] = getNumericAdProperty(currentEntry, 2);\n    }\n    currentEntry = {};\n    if (getNumericAdProperty(value, 21) !== 0) {\n      currentEntry[\"*\"] = getNumericAdProperty(value, 21);\n    }\n    if (parseData(value, AdSlot, 32).length > 0) {\n      var profileData = {};\n      findEntry = getIterator(parseData(value, AdSlot, 32));\n      for (foundEntry = findEntry.next(); !foundEntry.done; foundEntry = findEntry.next()) {\n        foundEntry = foundEntry.value;\n        profileData[dispatchUnhandledRejection(foundEntry, 1)] = getNumericAdProperty(foundEntry, 2);\n      }\n    }\n    foundEntry = {};\n    if (parseNullableUInt32(getTransformedElement(value, 18)) != null) {\n      foundEntry[\"https://googleads.g.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n      foundEntry[\"https://td.doubleclick.net\"] = getAdPropertyNumericValue(value, 18);\n    }\n    findEntry = value.getSingletonInstance;\n    rejectFunction = getRawBitFlags(findEntry);\n    findEntry = transformAndAddElement(findEntry, rejectFunction, getElementAtIndex(findEntry, rejectFunction, 24), 24, AdRequest);\n    findEntry = getIterator(findEntry);\n    for (rejectFunction = findEntry.next(); !rejectFunction.done; rejectFunction = findEntry.next()) {\n      resolveFunction = rejectFunction.value;\n      if (getAdPropertyNumericValue(resolveFunction[1], 4)) {\n        rejectFunction = resolveFunction[0];\n        resolveFunction = getAdPropertyNumericValue(resolveFunction[1], 4);\n        foundEntry[rejectFunction] = resolveFunction;\n      }\n    }\n    findEntry = dispatchUnhandledRejection(value, 1).split(\"/td/\")[0];\n    if ((rejectFunction = fetchData(value, QueryWrapper, 5)) == null) {\n      rejectFunction = undefined;\n    } else {\n      resolveFunction = rejectFunction.getSingletonInstance;\n      rejectFunction = createInstanceWithTemporaryData(rejectFunction.constructor, transformWithFlags(resolveFunction, getRawBitFlags(resolveFunction), false));\n    }\n    var isDone;\n    if (rejectFunction != null && (isDone = fetchData(rejectFunction, QueryHeader, 5)) != null) {\n      updateElement(isDone, 2);\n    }\n    isDone = Object;\n    resolveFunction = isDone.assign;\n    user = dispatchUnhandledRejection(value, 1);\n    var stream = dispatchUnhandledRejection(value, 2);\n    var keyArray = transformArrayElements(value, 3, stringOrNull);\n    profileData = resolveFunction.call(isDone, {}, {\n      seller: findEntry,\n      decisionLogicUrl: user,\n      trustedScoringSignalsUrl: stream,\n      interestGroupBuyers: keyArray,\n      sellerExperimentGroupId: getAdPropertyNumericValue(value, 17),\n      auctionSignals: JSON.parse(dispatchUnhandledRejection(value, 4) || \"{}\"),\n      sellerSignals: (rejectFunction == null ? undefined : rejectFunction.toJSON()) || [],\n      sellerTimeout: getNumericAdProperty(value, 15) || 50,\n      perBuyerExperimentGroupIds: foundEntry,\n      perBuyerSignals: value,\n      perBuyerTimeouts: entry,\n      perBuyerCumulativeTimeouts: currentEntry\n    }, profileData ? {\n      perBuyerGroupLimits: profileData\n    } : {}, generatorWrapper ? {\n      resolveToConfig: generatorWrapper\n    } : {});\n    if (value == null ? 0 : getBooleanAdProperty(getAdDimensions(value), 25)) {\n      profileData.sellerCurrency = \"USD\";\n      value = Object;\n      isDone = value.fromEntries;\n      entry = transformElementAtIndex(value, 22, getStringOrEmpty);\n      profileData.perBuyerCurrencies = isDone.call(value, entry);\n    }\n    if (dispatchUnhandledRejection(value, 28)) {\n      profileData.directFromSellerSignalsHeaderAdSlot = dispatchUnhandledRejection(value, 28);\n    }\n    if (isInterestGroupBuyerValid(profileData.interestGroupBuyers, key)) {\n      profileData.auctionReportBuyerKeys = profileData.interestGroupBuyers.map(mapBuyerToBigInt);\n      profileData.auctionReportBuyers = {\n        interestGroupCount: {\n          bucket: BigInt(0),\n          scaleRectangle: 1\n        },\n        bidCount: {\n          bucket: BigInt(1),\n          scaleRectangle: 1\n        },\n        totalGenerateBidLatency: {\n          bucket: BigInt(2),\n          scaleRectangle: 1\n        },\n        totalSignalsFetchLatency: {\n          bucket: BigInt(3),\n          scaleRectangle: 1\n        }\n      };\n      var getAdManager = undefined === getAdManager ? BigInt(0) : getAdManager;\n      profileData.auctionReportBuyerDebugModeConfig = {\n        enabled: true,\n        debugKey: getAdManager\n      };\n    }\n    if (iterateEntries) {\n      profileData.auctionNonce = iterateEntries;\n      profileData.additionalBids = Promise.resolve();\n    }\n    if (transformElementAtIndex(value, 33, getStringOrEmpty).size) {\n      profileData.deprecatedRenderURLReplacements = Object.fromEntries(transformElementAtIndex(value, 33, getStringOrEmpty).entries());\n      if (iterateEntries = profileData.deprecatedRenderURLReplacements[\"${RENDER_DATA_td.doubleclick.net_GDA}\"]) {\n        profileData.deprecatedRenderURLReplacements[\"${RENDER_DATA}\"] = iterateEntries;\n      }\n    }\n    switch (createCircularNode) {\n      case 1:\n        profileData.allSlotsRequestedSizes = [{\n          width: value.getRectangleWidth(),\n          height: value.getRectangleHeight()\n        }];\n    }\n    if (entryIdCounter) {\n      profileData.reportingTimeout = entryIdCounter;\n    }\n    createCircularNode = Object;\n    entryIdCounter = createCircularNode.assign;\n    iterateEntries = dispatchUnhandledRejection(value, 1);\n    getAdManager = getAdPropertyNumericValue(value, 17);\n    key = new QueryWrapper();\n    value = getAdDimensions(value);\n    if (undefined !== uf(value, QueryHeader, 5, false)) {\n      value = new QueryHeader();\n      isDone = getAdPropertyStringFallback(vf(getAdDimensions(value), QueryHeader, 5), 2);\n      value = updateOrRemoveElement(value, 2, convertToInt64(isDone), \"0\");\n      isDone = getAdPropertyStringFallback(vf(getAdDimensions(value), QueryHeader, 5), 4);\n      value = updateOrRemoveElement(value, 4, convertToInt64(isDone), \"0\");\n      finalizeAdAttributes(key, 5, value);\n    }\n    if (getAdDimensions(value).getEscapedQueryIdVariantC()) {\n      value = getAdDimensions(value).getEscapedQueryIdVariantC();\n      updateOrRemoveElement(key, 2, optionalString(value), \"\");\n    }\n    if (dispatchUnhandledRejection(getAdDimensions(value), 6)) {\n      value = dispatchUnhandledRejection(getAdDimensions(value), 6);\n      updateOrRemoveElement(key, 6, optionalString(value), \"\");\n    }\n    if (getBooleanAdProperty(getAdDimensions(value), 21)) {\n      updateOrRemoveElement(key, 21, parseNullableBoolean(true), false);\n    }\n    if (getBooleanAdProperty(getAdDimensions(value), 4)) {\n      updateOrRemoveElement(key, 4, parseNullableBoolean(true), false);\n    }\n    if (dispatchUnhandledRejection(getAdDimensions(value), 11)) {\n      value = dispatchUnhandledRejection(getAdDimensions(value), 11);\n      updateOrRemoveElement(key, 11, optionalString(value), \"\");\n    }\n    key = key.toJSON();\n    value = getNumericAdProperty(value, 15) || 50;\n    if (getBooleanAdProperty(value, 30)) {\n      if (CustomMap == null || !CustomMap.length) {\n        throw Error(\"top_td_without_component_auction\");\n      }\n    } else {\n      CustomMap = [profileData].concat(toArray(CustomMap != null ? CustomMap : []));\n    }\n    CustomMap = entryIdCounter.call(createCircularNode, {}, {\n      seller: findEntry,\n      decisionLogicUrl: iterateEntries,\n      sellerExperimentGroupId: getAdManager,\n      sellerSignals: key,\n      sellerTimeout: value,\n      interestGroupBuyers: [],\n      auctionSignals: {},\n      perBuyerExperimentGroupIds: {},\n      perBuyerSignals: {},\n      perBuyerTimeouts: {},\n      perBuyerCumulativeTimeouts: {},\n      componentAuctions: CustomMap\n    }, generatorWrapper ? {\n      resolveToConfig: generatorWrapper\n    } : {});\n    if (dispatchUnhandledRejection(value, 28)) {\n      CustomMap.directFromSellerSignalsHeaderAdSlot = dispatchUnhandledRejection(value, 28);\n    }\n    return CustomMap;\n  }\n  function isInterestGroupBuyerValid(generatorWrapper, value) {\n    return generatorWrapper.some(function (CustomMap) {\n      return mapBuyerToBigInt(CustomMap) !== BigInt(100);\n    }) && (value != null ? value : false);\n  }\n  function mapBuyerToBigInt(generatorWrapper) {\n    var value;\n    if ((value = new Map([[\"https://googleads.g.doubleclick.net\", BigInt(200)], [\"https://td.doubleclick.net\", BigInt(300)], [\"https://f.creativecdn.com\", BigInt(400)], [\"https://fledge.us.criteo.com\", BigInt(500)], [\"https://fledge.eu.criteo.com\", BigInt(600)], [\"https://fledge.as.criteo.com\", BigInt(700)]]).get(generatorWrapper)) != null) {\n      return value;\n    } else {\n      return BigInt(100);\n    }\n  }\n  var AdAuctionManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    var CustomMap = this;\n    this.tasks = value;\n    this.setTimeoutWrapper = function (findEntry) {\n      var iterateEntries = Date.now();\n      try {\n        var createCircularNode = runAdAuctionWithTimeout(CustomMap, findEntry.tdconfig);\n      } catch (entryIdCounter) {\n        createCircularNode = Promise.resolve({\n          isMacOS: false,\n          result: null\n        });\n      }\n      return createCircularNode.then(function (entryIdCounter) {\n        var key = new QueryMetadata();\n        key = setAdPropertyFromString(key, 1, iterateEntries);\n        key = setAdPropertyFromString(key, 2, Date.now());\n        var value = entryIdCounter.result;\n        entryIdCounter = entryIdCounter.isMacOS;\n        var entry;\n        if (typeof value === \"string\") {\n          value = value;\n        } else if ((entry = value == null ? undefined : value.url) != null) {\n          value = entry;\n        } else {\n          value = \"\";\n        }\n        entry = {};\n        entry.ffconfig = value;\n        entry.timeout = 500;\n        entry.auctioninterval = serializeData(key);\n        entry.isauctiontimeout = entryIdCounter;\n        return entry;\n      });\n    };\n    this.entryIdCounter = new AdEventObserver(generatorWrapper, \"fledge\");\n    registerDisposable(this, this.entryIdCounter);\n  };\n  inheritPrototype(AdAuctionManager, tryCall);\n  var runAdAuctionWithTimeout = function (generatorWrapper, value) {\n    value = AdDimensionsRegistry(value);\n    var CustomMap = processAdResponse({\n      isEmptyObject: value\n    });\n    value = createTimerPromise(500, null).then(function () {\n      return {\n        isMacOS: true,\n        result: null\n      };\n    });\n    generatorWrapper = generatorWrapper.tasks.runAdAuction(CustomMap).then(function (findEntry) {\n      return {\n        isMacOS: false,\n        result: findEntry\n      };\n    });\n    return Promise.race([value, generatorWrapper]);\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap) {\n    tryCall.call(this);\n    this.onFulfilled = generatorWrapper;\n    this.handleAsync = value;\n    this.isDone = CustomMap;\n    this.entryIdCounter = this.tasks = this.setTimeoutWrapper = null;\n    this.createDeferred = 0;\n    generatorWrapper = new EventDispatcher(this);\n    registerDisposable(this, generatorWrapper);\n    initializeAdManager(this);\n    generatorWrapper.window(this.handleAsync, \"adsManager\", this.dispatchUnhandledRejection);\n  };\n  inheritPrototype(AdManager, tryCall);\n  var setAdManagerListener = function (generatorWrapper, value) {\n    generatorWrapper.setTimeoutWrapper = value;\n    if (generatorWrapper.entryIdCounter && generatorWrapper.setTimeoutWrapper) {\n      setSessionClient(generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var initializeAdManager = function (generatorWrapper) {\n    loadOmsdkScript(generatorWrapper.onFulfilled).then(function (value) {\n      setupAdManagerWithConfig(generatorWrapper, value);\n      return;\n    }).catch(function () {\n      handleAdManagerError(generatorWrapper);\n      return;\n    });\n  };\n  AdManager.prototype.dispatchUnhandledRejection = function (generatorWrapper) {\n    if ([\"complete\", \"skip\", \"error\"].includes(generatorWrapper.messageType)) {\n      this.createDeferred++;\n      if (this.createDeferred === 10) {\n        this.createDeferred = 0;\n        var value;\n        if (!((value = this.entryIdCounter) == null)) {\n          value.markAsCompleted();\n        }\n        initializeAdManager(this);\n      }\n      generatorWrapper = getContentWindow(this.tasks);\n      var CustomMap;\n      if (!(generatorWrapper && ((CustomMap = generatorWrapper.frames) == null ? 0 : CustomMap.omid_v1_present))) {\n        markAsCompleted.getAdInstance().report(188, {});\n      }\n    }\n  };\n  var setupAdManagerWithConfig = function (generatorWrapper, value) {\n    generatorWrapper.tasks = value;\n    generatorWrapper.entryIdCounter = new OmsdkSessionHandler(value, generatorWrapper.isDone);\n    generatorWrapper.entryIdCounter.window(\"error\", function () {\n      handleAdManagerError(generatorWrapper);\n      return;\n    });\n    registerSessionObservers(generatorWrapper.entryIdCounter);\n    if (generatorWrapper.entryIdCounter && generatorWrapper.setTimeoutWrapper) {\n      setSessionClient(generatorWrapper.entryIdCounter, generatorWrapper.setTimeoutWrapper);\n    }\n  };\n  var handleAdManagerError = function (generatorWrapper) {\n    enqueueMessage(generatorWrapper.handleAsync, \"omid\", \"iframeFailed\");\n    generatorWrapper.markAsCompleted();\n  };\n  AdManager.prototype.getAdEnvironment = function () {\n    if (this.tasks) {\n      removeElement(this.tasks);\n      this.tasks = null;\n    }\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap, findEntry) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = CustomMap;\n    this.onFulfilled = findEntry;\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.tasks.window(this.createDeferred, findEntry, this.isDone);\n  };\n  inheritPrototype(AdManager, tryCall);\n  var handleAdManagerEvents = function (generatorWrapper, value) {\n    var CustomMap = value.setPrototypeOfPolyfill;\n    switch (value.messageType) {\n      case \"showVideo\":\n        generatorWrapper.setTimeoutWrapper.writeVarint();\n        break;\n      case \"hide\":\n        generatorWrapper.setTimeoutWrapper.endsWith();\n        break;\n      case \"resizeAndPositionVideo\":\n        value = CustomMap.resizeAndPositionVideo;\n        generatorWrapper.setTimeoutWrapper.throwIncidentError(new RectangleDimensions(value.inheritPrototype, value.globalScope, value.width, value.height));\n        break;\n      case \"restoreSizeAndPositionVideo\":\n        generatorWrapper.setTimeoutWrapper.createWarningError();\n    }\n  };\n  AdManager.prototype.isDone = function (generatorWrapper) {\n    var value = generatorWrapper.setPrototypeOfPolyfill;\n    switch (generatorWrapper.messageType) {\n      case \"activate\":\n        this.setTimeoutWrapper.isIpad(this.entryIdCounter);\n        break;\n      case \"startTracking\":\n        generatorWrapper = this.entryIdCounter;\n        var CustomMap = this.handleAsync;\n        this.tasks.window(generatorWrapper, valuesOfObject(EventTypes), CustomMap);\n        this.tasks.window(generatorWrapper, mediaEventTypes, CustomMap);\n        generatorWrapper = this.entryIdCounter;\n        resetVideoTracking(generatorWrapper);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, mediaEventTypes, generatorWrapper.isArrayLike);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"ended\", generatorWrapper.arrayOfIntegersTransformationInstance);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"webkitbeginfullscreen\", generatorWrapper.isObjectOrFunction);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"webkitendfullscreen\", generatorWrapper.toArray);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"loadedmetadata\", generatorWrapper.parseAndValidateArray);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"pause\", generatorWrapper.ErrorDetails);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"playing\", generatorWrapper.cloneIfNotFrozen);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"timeupdate\", generatorWrapper.isValidError);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"volumechange\", generatorWrapper.once);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, \"error\", generatorWrapper.year);\n        generatorWrapper.tasks.window(generatorWrapper.entryIdCounter, isAndroidNonChrome || isIphoneIpadIpod && !isIOSVersionAtLeast(8) ? \"loadeddata\" : \"canplay\", generatorWrapper.serializeTransformations);\n        generatorWrapper.handleAsync = new EventController();\n        generatorWrapper.tasks.window(generatorWrapper.handleAsync, \"click\", generatorWrapper.assignPolyfill);\n        initializeEventController(generatorWrapper.handleAsync, generatorWrapper.entryIdCounter);\n        generatorWrapper.handleThenable = new Timer(1000);\n        generatorWrapper.tasks.window(generatorWrapper.handleThenable, \"tick\", generatorWrapper.sliceArguments);\n        generatorWrapper.handleThenable.startTimer();\n        break;\n      case \"stopTracking\":\n        generatorWrapper = this.entryIdCounter;\n        CustomMap = this.handleAsync;\n        this.tasks.compareValues(generatorWrapper, valuesOfObject(EventTypes), CustomMap);\n        this.tasks.compareValues(generatorWrapper, mediaEventTypes, CustomMap);\n        resetVideoTracking(this.entryIdCounter);\n        break;\n      case \"exitFullscreen\":\n        generatorWrapper = this.entryIdCounter;\n        if ((isIphone || isIpod) && generatorWrapper.entryIdCounter.webkitDisplayingFullscreen) {\n          generatorWrapper.entryIdCounter.webkitExitFullscreen();\n        }\n        break;\n      case \"play\":\n        handleAutoPlay(this.entryIdCounter);\n        break;\n      case \"pause\":\n        this.entryIdCounter.pause();\n        break;\n      case \"load\":\n        generatorWrapper = this.entryIdCounter;\n        CustomMap = value.videoUrl;\n        var findEntry = value.muxedMediaUrl;\n        var iterateEntries = value.muxedMimeType;\n        var createCircularNode = value.muxedAudioCodec;\n        var entryIdCounter = value.muxedVideoCodec;\n        var key = value.demuxedAudioUrl;\n        var value = value.demuxedVideoUrl;\n        var entry = value.demuxedAudioMimeType;\n        var currentEntry = value.demuxedVideoMimeType;\n        var foundEntry = value.demuxedAudioCodec;\n        var resolveFunction = value.demuxedVideoCodec;\n        value = value.mseCompatible;\n        var rejectFunction = null;\n        if (value && key && value && currentEntry && entry && resolveFunction && foundEntry) {\n          rejectFunction = new ExtendedAdDimensions({\n            trustedURLMarker: value,\n            setAdProperty: key,\n            sendImageRequest: null,\n            getPerformanceNow: null,\n            TrustedURL: currentEntry,\n            getNestedAdPropertyNumeric: entry,\n            compareVersions: resolveFunction,\n            identityFunction: foundEntry,\n            height: null,\n            width: null,\n            generatorReturn: value,\n            sendAdEvent: null,\n            getCurrentTimeWithPerformanceTiming: null\n          });\n        }\n        key = null;\n        if (findEntry && iterateEntries && entryIdCounter && createCircularNode) {\n          key = new MediaAdDimensions({\n            enumTransformation: findEntry,\n            includesBrand: null,\n            mimeType: iterateEntries,\n            compareVersions: entryIdCounter,\n            identityFunction: createCircularNode,\n            height: null,\n            width: null,\n            generatorReturn: value,\n            isDebugMode: null\n          });\n        }\n        if (rejectFunction) {\n          generatorWrapper.load(CustomMap, rejectFunction);\n        } else if (key) {\n          generatorWrapper.load(CustomMap, key);\n        } else {\n          generatorWrapper.load(CustomMap, null);\n        }\n        break;\n      case \"unload\":\n        generatorWrapper = this.entryIdCounter;\n        resetPlaybackState(generatorWrapper);\n        generatorWrapper.updateMaxSize = false;\n        if (\"removeAttribute\" in generatorWrapper.entryIdCounter) {\n          generatorWrapper.entryIdCounter.removeAttribute(\"src\");\n        } else {\n          generatorWrapper.entryIdCounter.src = \"\";\n        }\n        generatorWrapper.entryIdCounter.load();\n        break;\n      case \"setCurrentTime\":\n        this.entryIdCounter.entryIdCounter.currentTime = value.currentTime;\n        break;\n      case \"setVolume\":\n        this.entryIdCounter.setVolume(value.volume);\n    }\n  };\n  AdManager.prototype.handleAsync = function (generatorWrapper) {\n    var value = {};\n    switch (generatorWrapper.type) {\n      case \"autoplayDisallowed\":\n        generatorWrapper = \"autoplayDisallowed\";\n        break;\n      case \"beginFullscreen\":\n        generatorWrapper = \"fullscreen\";\n        break;\n      case \"endFullscreen\":\n        generatorWrapper = \"exitFullscreen\";\n        break;\n      case \"click\":\n        generatorWrapper = \"click\";\n        break;\n      case \"end\":\n        generatorWrapper = \"end\";\n        break;\n      case \"error\":\n        generatorWrapper = \"error\";\n        break;\n      case \"loaded\":\n        generatorWrapper = \"loaded\";\n        break;\n      case \"mediaLoadTimeout\":\n        generatorWrapper = \"mediaLoadTimeout\";\n        break;\n      case \"pause\":\n        generatorWrapper = \"pause\";\n        value.ended = this.entryIdCounter.entryIdCounter.ended;\n        break;\n      case \"play\":\n        generatorWrapper = \"play\";\n        break;\n      case \"skip\":\n        generatorWrapper = \"skip\";\n        break;\n      case \"start\":\n        generatorWrapper = \"start\";\n        value.volume = this.entryIdCounter.getVolume();\n        break;\n      case \"timeUpdate\":\n        generatorWrapper = \"timeupdate\";\n        value.currentTime = this.entryIdCounter.getCurrentTime();\n        value.duration = this.entryIdCounter.getDuration();\n        break;\n      case \"volumeChange\":\n        generatorWrapper = \"volumeChange\";\n        value.volume = this.entryIdCounter.getVolume();\n        break;\n      case \"loadedmetadata\":\n        generatorWrapper = generatorWrapper.type;\n        value.duration = this.entryIdCounter.getDuration();\n        break;\n      case \"abort\":\n      case \"canplay\":\n      case \"canplaythrough\":\n      case \"durationchange\":\n      case \"emptied\":\n      case \"loadstart\":\n      case \"loadeddata\":\n      case \"progress\":\n      case \"ratechange\":\n      case \"seeked\":\n      case \"seeking\":\n      case \"stalled\":\n      case \"suspend\":\n      case \"waiting\":\n        generatorWrapper = generatorWrapper.type;\n        break;\n      default:\n        return;\n    }\n    enqueueMessage(this.createDeferred, this.onFulfilled, generatorWrapper, value);\n  };\n  var AdManagerInitializer = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.tasks = value;\n    this.entryIdCounter = null;\n    this.setTimeoutWrapper = new AdManager(generatorWrapper, value, this.tasks.identityFunction, \"videoDisplay1\");\n    registerDisposable(this, this.setTimeoutWrapper);\n    var CustomMap = this.tasks.getGeneratorException;\n    if (CustomMap != null) {\n      this.entryIdCounter = new AdManager(generatorWrapper, value, CustomMap, \"videoDisplay2\");\n      registerDisposable(this, this.entryIdCounter);\n    }\n  };\n  inheritPrototype(AdManagerInitializer, tryCall);\n  var createIframeElement = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = createHtmlElement(\"IFRAME\");\n    iterateEntries.writeBytes = value;\n    iterateEntries.name = value;\n    iterateEntries.width = String(CustomMap);\n    iterateEntries.height = String(findEntry);\n    iterateEntries.allowTransparency = \"true\";\n    iterateEntries.scrolling = \"no\";\n    iterateEntries.marginWidth = \"0\";\n    iterateEntries.marginHeight = \"0\";\n    iterateEntries.frameBorder = \"0\";\n    iterateEntries.style.border = \"0\";\n    iterateEntries.style.verticalAlign = \"bottom\";\n    iterateEntries.src = \"about:blank\";\n    iterateEntries.setAttribute(\"aria-label\", \"Advertisement\");\n    iterateEntries.title = \"3rd party ad content\";\n    iterateEntries.tabIndex = 0;\n    generatorWrapper.appendChild(iterateEntries);\n    return iterateEntries;\n  };\n  function getCompanionAdsService() {\n    var generatorWrapper,\n      value,\n      CustomMap,\n      findEntry = getWindowForDocument();\n    if (undefined === findEntry) {\n      findEntry = window;\n    } else {\n      findEntry = findEntry;\n    }\n    findEntry = ((CustomMap = undefined === findEntry ? null : findEntry) != null ? CustomMap : window).googletag;\n    if (findEntry == null ? 0 : findEntry.apiReady) {\n      CustomMap = findEntry;\n    } else {\n      CustomMap = undefined;\n    }\n    if ((value = CustomMap == null ? undefined : (generatorWrapper = CustomMap.companionAds) == null ? undefined : generatorWrapper.call(CustomMap)) != null) {\n      return value;\n    } else {\n      return null;\n    }\n  }\n  function extractSlotInfo(generatorWrapper) {\n    var value = {};\n    value.slotId = generatorWrapper.getSlotId().getAdId();\n    var CustomMap = [];\n    generatorWrapper = getIterator(generatorWrapper.getSizes() || []);\n    for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n      findEntry = findEntry.value;\n      if (typeof findEntry !== \"string\") {\n        var iterateEntries = {};\n        CustomMap.push((iterateEntries.adWidth = findEntry.getRectangleWidth(), iterateEntries.adHeight = findEntry.getRectangleHeight(), iterateEntries));\n      } else if (findEntry === \"fluid\") {\n        findEntry = {};\n        CustomMap.push((findEntry.fluidSize = true, findEntry));\n      }\n    }\n    value.adSizes = CustomMap;\n    return value;\n  }\n  function renderCompanionAds(generatorWrapper) {\n    var value = getCompanionAdsService();\n    if (value && generatorWrapper && Array.isArray(generatorWrapper)) {\n      var CustomMap = new Map(value.getSlots().map(function (resolveFunction) {\n        return [resolveFunction.getSlotId().getAdId(), resolveFunction];\n      }));\n      generatorWrapper = getIterator(generatorWrapper);\n      for (var findEntry = generatorWrapper.next(); !findEntry.done; findEntry = generatorWrapper.next()) {\n        var iterateEntries = findEntry.value;\n        var createCircularNode = CustomMap.get(iterateEntries.slotId);\n        if (createCircularNode && !value.isSlotAPersistentRoadblock(createCircularNode)) {\n          var entryIdCounter = iterateEntries.adContent;\n          if (entryIdCounter && (findEntry = getElementByIdOrDirect(createCircularNode.getSlotId().getDomId()))) {\n            findEntry.style.display = \"\";\n            var key = iterateEntries.adWidth;\n            var value = iterateEntries.adHeight;\n            if (iterateEntries.fluidSize) {\n              value = calculateInnerSize(findEntry);\n              key = value.width;\n              value = value.height;\n            }\n            findEntry.textContent = \"\";\n            if (iterateEntries.friendlyIframeRendering) {\n              try {\n                var entry = \"google_companion_\" + createCircularNode.getSlotId().getAdId();\n                var currentEntry = createIframeElement(findEntry, entry, key, value);\n                var foundEntry = currentEntry.contentWindow ? currentEntry.contentWindow.document : currentEntry.contentDocument;\n                if (isGecko) {\n                  foundEntry.open(\"text/html\", \"replace\");\n                }\n                writeSafeHtmlToDocument(foundEntry, sanitizeInput(entryIdCounter));\n                foundEntry.closeCache();\n              } catch (resolveFunction) {}\n            } else {\n              setElementSafeHtml(findEntry, sanitizeInput(entryIdCounter));\n              findEntry.style.width = key + \"px\";\n              findEntry.style.height = value + \"px\";\n            }\n            value.slotRenderEnded(createCircularNode, key, value);\n            if (iterateEntries = iterateEntries.onAdContentSet) {\n              iterateEntries(findEntry);\n            }\n          }\n        }\n      }\n    }\n  }\n  var CustomEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    CustomEvent.call(this, generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    this.entryIdCounter = createCircularNode;\n  };\n  inheritPrototype(CustomEvent, CustomEvent);\n  var MessagingHandler = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.isDone = generatorWrapper;\n    this.handleAsync = value;\n    this.entryIdCounter = {};\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.tasks.window(getWindowForDocument(), \"message\", this.setTimeoutWrapper);\n  };\n  inheritPrototype(MessagingHandler, AdEnvironmentConfig);\n  var dispatchCustomEvent = function (generatorWrapper, value) {\n    var CustomMap = value.entryIdCounter;\n    if (generatorWrapper.entryIdCounter.hasOwnProperty(CustomMap)) {\n      enqueueMessage(generatorWrapper.entryIdCounter[CustomMap], value.type, value.messageType, value.setPrototypeOfPolyfill);\n    }\n  };\n  var setupMessagingChannel = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper.entryIdCounter.hasOwnProperty(value)) {\n      CustomMap = new MessageHandler(value, CustomMap);\n      generatorWrapper.tasks.window(CustomMap, generatorWrapper.isDone, function (iterateEntries) {\n        this.dispatchEvent(new CustomEvent(iterateEntries.type, iterateEntries.messageType, iterateEntries.setPrototypeOfPolyfill, iterateEntries.isAndroid, iterateEntries.origin, value));\n      });\n      CustomMap.entryIdCounter = findEntry;\n      CustomMap.connect();\n      generatorWrapper.entryIdCounter[value] = CustomMap;\n    }\n  };\n  MessagingHandler.prototype.getAdEnvironment = function () {\n    for (var generatorWrapper = getIterator(Object.values(this.entryIdCounter)), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      markAsCompletedWrapper(value.value);\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  MessagingHandler.prototype.setTimeoutWrapper = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    var value = parseImaMessage(generatorWrapper.data);\n    if (value != null) {\n      var CustomMap = value.channel;\n      if (this.handleAsync && !this.entryIdCounter.hasOwnProperty(CustomMap)) {\n        var findEntry = value.sid;\n        setupMessagingChannel(this, CustomMap, findEntry, generatorWrapper.source);\n        this.dispatchEvent(new CustomEvent(value.name, value.type, value.data || {}, findEntry, generatorWrapper.origin, CustomMap));\n      }\n    }\n  };\n  function isGptPresent() {\n    return !!getFromGlobalScope(\"googletag.cmd\", getWindowForDocument());\n  }\n  function getGoogleTagConsole() {\n    var generatorWrapper = getFromGlobalScope(\"googletag.console\", getWindowForDocument());\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var CrossDomainMessagingManager = function () {\n    EventDispatcher.call(this);\n    this.entryIdCounter = null;\n    this.setTimeoutWrapper = new MessagingHandler(\"gpt\", true);\n    registerDisposable(this, this.setTimeoutWrapper);\n    this.window(this.setTimeoutWrapper, \"gpt\", this.isDone);\n    if (!(isGptPresent() || getWindowForDocument().top === getWindowForDocument())) {\n      this.entryIdCounter = new MessagingHandler(\"gpt\", false);\n      registerDisposable(this, this.entryIdCounter);\n      this.window(this.entryIdCounter, \"gpt\", this.handleAsync);\n    }\n  };\n  inheritPrototype(CrossDomainMessagingManager, EventDispatcher);\n  CrossDomainMessagingManager.prototype.isDone = function (generatorWrapper) {\n    var value = generatorWrapper.origin;\n    var CustomMap = \"//imasdk.googleapis.com\".match(urlRegex);\n    value = value.match(urlRegex);\n    if (CustomMap[3] == value[3] && CustomMap[4] == value[4]) {\n      if (this.entryIdCounter != null) {\n        setupMessagingChannel(this.entryIdCounter, generatorWrapper.entryIdCounter, generatorWrapper.isAndroid, getWindowForDocument().parent);\n        if (this.entryIdCounter != null) {\n          dispatchCustomEvent(this.entryIdCounter, generatorWrapper);\n        }\n      } else {\n        CustomMap = generatorWrapper.setPrototypeOfPolyfill;\n        if (CustomMap != null && undefined !== CustomMap.scope) {\n          value = CustomMap.scope;\n          CustomMap = CustomMap.args;\n          var findEntry;\n          if (value === \"proxy\") {\n            var iterateEntries = generatorWrapper.messageType;\n            if (iterateEntries === \"isGptPresent\") {\n              findEntry = isGptPresent();\n            } else if (iterateEntries === \"isConsolePresent\") {\n              findEntry = getGoogleTagConsole() != null;\n            }\n          } else if (isGptPresent()) {\n            if (value === \"pubads\" || value === \"companionAds\") {\n              findEntry = generatorWrapper.messageType;\n              var createCircularNode = getWindowForDocument().googletag;\n              if (createCircularNode != null && createCircularNode[value] != null && (value = createCircularNode[value](), value != null && (findEntry = value[findEntry], findEntry != null))) {\n                try {\n                  iterateEntries = findEntry.apply(value, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n              findEntry = iterateEntries;\n            } else if (value === \"console\") {\n              iterateEntries = getGoogleTagConsole();\n              if (iterateEntries != null && (value = iterateEntries[generatorWrapper.messageType], value != null)) {\n                try {\n                  value.apply(iterateEntries, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n            } else if (value === null) {\n              iterateEntries = generatorWrapper.messageType;\n              if (iterateEntries === \"googleGetCompanionAdSlots\") {\n                if (iterateEntries = getCompanionAdsService()) {\n                  iterateEntries = iterateEntries.getSlots().map(extractSlotInfo);\n                  if (iterateEntries.length) {\n                    findEntry = iterateEntries;\n                  } else {\n                    findEntry = null;\n                  }\n                } else {\n                  findEntry = null;\n                }\n              } else {\n                if (iterateEntries === \"googleSetCompanionAdContents\") {\n                  renderCompanionAds(CustomMap == null ? undefined : CustomMap[0]);\n                }\n                findEntry = null;\n              }\n            }\n          }\n          if (undefined !== findEntry) {\n            generatorWrapper.setPrototypeOfPolyfill.returnValue = findEntry;\n            dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n          }\n        }\n      }\n    }\n  };\n  CrossDomainMessagingManager.prototype.handleAsync = function (generatorWrapper) {\n    dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n  };\n  var removeMessagingChannel = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter) {\n      var CustomMap = generatorWrapper.entryIdCounter;\n      markAsCompletedWrapper(CustomMap.entryIdCounter[value]);\n      delete CustomMap.entryIdCounter[value];\n    }\n    if (generatorWrapper.setTimeoutWrapper) {\n      generatorWrapper = generatorWrapper.setTimeoutWrapper;\n      markAsCompletedWrapper(generatorWrapper.entryIdCounter[value]);\n      delete generatorWrapper.entryIdCounter[value];\n    }\n  };\n  var formatString = function (generatorWrapper, value) {\n    var CustomMap = Array.prototype.slice.call(arguments);\n    var findEntry = CustomMap.shift();\n    if (typeof findEntry == \"undefined\") {\n      throw Error(\"[goog.string.format] Template required\");\n    }\n    return findEntry.replace(/%([0\\- \\+]*)(\\d+)?(\\.(\\d+))?([%sfdiu])/g, function (iterateEntries, createCircularNode, entryIdCounter, key, value, entry, currentEntry, foundEntry) {\n      if (entry == \"%\") {\n        return \"%\";\n      }\n      var resolveFunction = CustomMap.shift();\n      if (typeof resolveFunction == \"undefined\") {\n        throw Error(\"[goog.string.format] Not enough arguments\");\n      }\n      arguments[0] = resolveFunction;\n      return formatFunctions[entry].apply(null, arguments);\n    });\n  };\n  var formatFunctions = {\n    string(generatorWrapper, value, Custom",
  ", value);\n            if (iterateEntries = iterateEntries.onAdContentSet) {\n              iterateEntries(findEntry);\n            }\n          }\n        }\n      }\n    }\n  }\n  var CustomEvent = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode) {\n    CustomEvent.call(this, generatorWrapper, value, CustomMap, findEntry, iterateEntries);\n    this.entryIdCounter = createCircularNode;\n  };\n  inheritPrototype(CustomEvent, CustomEvent);\n  var MessagingHandler = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.isDone = generatorWrapper;\n    this.handleAsync = value;\n    this.entryIdCounter = {};\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.tasks.window(getWindowForDocument(), \"message\", this.setTimeoutWrapper);\n  };\n  inheritPrototype(MessagingHandler, AdEnvironmentConfig);\n  var dispatchCustomEvent = function (generatorWrapper, value) {\n    var CustomMap = value.entryIdCounter;\n    if (generatorWrapper.entryIdCounter.hasOwnProperty(CustomMap)) {\n      enqueueMessage(generatorWrapper.entryIdCounter[CustomMap], value.type, value.messageType, value.setPrototypeOfPolyfill);\n    }\n  };\n  var setupMessagingChannel = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (!generatorWrapper.entryIdCounter.hasOwnProperty(value)) {\n      CustomMap = new MessageHandler(value, CustomMap);\n      generatorWrapper.tasks.window(CustomMap, generatorWrapper.isDone, function (iterateEntries) {\n        this.dispatchEvent(new CustomEvent(iterateEntries.type, iterateEntries.messageType, iterateEntries.setPrototypeOfPolyfill, iterateEntries.isAndroid, iterateEntries.origin, value));\n      });\n      CustomMap.entryIdCounter = findEntry;\n      CustomMap.connect();\n      generatorWrapper.entryIdCounter[value] = CustomMap;\n    }\n  };\n  MessagingHandler.prototype.getAdEnvironment = function () {\n    for (var generatorWrapper = getIterator(Object.values(this.entryIdCounter)), value = generatorWrapper.next(); !value.done; value = generatorWrapper.next()) {\n      markAsCompletedWrapper(value.value);\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  MessagingHandler.prototype.setTimeoutWrapper = function (generatorWrapper) {\n    generatorWrapper = generatorWrapper.entryIdCounter;\n    var value = parseImaMessage(generatorWrapper.data);\n    if (value != null) {\n      var CustomMap = value.channel;\n      if (this.handleAsync && !this.entryIdCounter.hasOwnProperty(CustomMap)) {\n        var findEntry = value.sid;\n        setupMessagingChannel(this, CustomMap, findEntry, generatorWrapper.source);\n        this.dispatchEvent(new CustomEvent(value.name, value.type, value.data || {}, findEntry, generatorWrapper.origin, CustomMap));\n      }\n    }\n  };\n  function isGptPresent() {\n    return !!getFromGlobalScope(\"googletag.cmd\", getWindowForDocument());\n  }\n  function getGoogleTagConsole() {\n    var generatorWrapper = getFromGlobalScope(\"googletag.console\", getWindowForDocument());\n    if (generatorWrapper != null) {\n      return generatorWrapper;\n    } else {\n      return null;\n    }\n  }\n  var CrossDomainMessagingManager = function () {\n    EventDispatcher.call(this);\n    this.entryIdCounter = null;\n    this.setTimeoutWrapper = new MessagingHandler(\"gpt\", true);\n    registerDisposable(this, this.setTimeoutWrapper);\n    this.window(this.setTimeoutWrapper, \"gpt\", this.isDone);\n    if (!(isGptPresent() || getWindowForDocument().top === getWindowForDocument())) {\n      this.entryIdCounter = new MessagingHandler(\"gpt\", false);\n      registerDisposable(this, this.entryIdCounter);\n      this.window(this.entryIdCounter, \"gpt\", this.handleAsync);\n    }\n  };\n  inheritPrototype(CrossDomainMessagingManager, EventDispatcher);\n  CrossDomainMessagingManager.prototype.isDone = function (generatorWrapper) {\n    var value = generatorWrapper.origin;\n    var CustomMap = \"//imasdk.googleapis.com\".match(urlRegex);\n    value = value.match(urlRegex);\n    if (CustomMap[3] == value[3] && CustomMap[4] == value[4]) {\n      if (this.entryIdCounter != null) {\n        setupMessagingChannel(this.entryIdCounter, generatorWrapper.entryIdCounter, generatorWrapper.isAndroid, getWindowForDocument().parent);\n        if (this.entryIdCounter != null) {\n          dispatchCustomEvent(this.entryIdCounter, generatorWrapper);\n        }\n      } else {\n        CustomMap = generatorWrapper.setPrototypeOfPolyfill;\n        if (CustomMap != null && undefined !== CustomMap.scope) {\n          value = CustomMap.scope;\n          CustomMap = CustomMap.args;\n          var findEntry;\n          if (value === \"proxy\") {\n            var iterateEntries = generatorWrapper.messageType;\n            if (iterateEntries === \"isGptPresent\") {\n              findEntry = isGptPresent();\n            } else if (iterateEntries === \"isConsolePresent\") {\n              findEntry = getGoogleTagConsole() != null;\n            }\n          } else if (isGptPresent()) {\n            if (value === \"pubads\" || value === \"companionAds\") {\n              findEntry = generatorWrapper.messageType;\n              var createCircularNode = getWindowForDocument().googletag;\n              if (createCircularNode != null && createCircularNode[value] != null && (value = createCircularNode[value](), value != null && (findEntry = value[findEntry], findEntry != null))) {\n                try {\n                  iterateEntries = findEntry.apply(value, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n              findEntry = iterateEntries;\n            } else if (value === \"console\") {\n              iterateEntries = getGoogleTagConsole();\n              if (iterateEntries != null && (value = iterateEntries[generatorWrapper.messageType], value != null)) {\n                try {\n                  value.apply(iterateEntries, CustomMap);\n                } catch (entryIdCounter) {}\n              }\n            } else if (value === null) {\n              iterateEntries = generatorWrapper.messageType;\n              if (iterateEntries === \"googleGetCompanionAdSlots\") {\n                if (iterateEntries = getCompanionAdsService()) {\n                  iterateEntries = iterateEntries.getSlots().map(extractSlotInfo);\n                  if (iterateEntries.length) {\n                    findEntry = iterateEntries;\n                  } else {\n                    findEntry = null;\n                  }\n                } else {\n                  findEntry = null;\n                }\n              } else {\n                if (iterateEntries === \"googleSetCompanionAdContents\") {\n                  renderCompanionAds(CustomMap == null ? undefined : CustomMap[0]);\n                }\n                findEntry = null;\n              }\n            }\n          }\n          if (undefined !== findEntry) {\n            generatorWrapper.setPrototypeOfPolyfill.returnValue = findEntry;\n            dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n          }\n        }\n      }\n    }\n  };\n  CrossDomainMessagingManager.prototype.handleAsync = function (generatorWrapper) {\n    dispatchCustomEvent(this.setTimeoutWrapper, generatorWrapper);\n  };\n  var removeMessagingChannel = function (generatorWrapper, value) {\n    if (generatorWrapper.entryIdCounter) {\n      var CustomMap = generatorWrapper.entryIdCounter;\n      markAsCompletedWrapper(CustomMap.entryIdCounter[value]);\n      delete CustomMap.entryIdCounter[value];\n    }\n    if (generatorWrapper.setTimeoutWrapper) {\n      generatorWrapper = generatorWrapper.setTimeoutWrapper;\n      markAsCompletedWrapper(generatorWrapper.entryIdCounter[value]);\n      delete generatorWrapper.entryIdCounter[value];\n    }\n  };\n  var formatString = function (generatorWrapper, value) {\n    var CustomMap = Array.prototype.slice.call(arguments);\n    var findEntry = CustomMap.shift();\n    if (typeof findEntry == \"undefined\") {\n      throw Error(\"[goog.string.format] Template required\");\n    }\n    return findEntry.replace(/%([0\\- \\+]*)(\\d+)?(\\.(\\d+))?([%sfdiu])/g, function (iterateEntries, createCircularNode, entryIdCounter, key, value, entry, currentEntry, foundEntry) {\n      if (entry == \"%\") {\n        return \"%\";\n      }\n      var resolveFunction = CustomMap.shift();\n      if (typeof resolveFunction == \"undefined\") {\n        throw Error(\"[goog.string.format] Not enough arguments\");\n      }\n      arguments[0] = resolveFunction;\n      return formatFunctions[entry].apply(null, arguments);\n    });\n  };\n  var formatFunctions = {\n    string(generatorWrapper, value, CustomMap) {\n      if (isNaN(CustomMap) || CustomMap == \"\" || generatorWrapper.length >= Number(CustomMap)) {\n        return generatorWrapper;\n      } else {\n        return generatorWrapper = -1 < value.indexOf(\"-\", 0) ? generatorWrapper + repeatString(\" \", Number(CustomMap) - generatorWrapper.length) : repeatString(\" \", Number(CustomMap) - generatorWrapper.length) + generatorWrapper;\n      }\n    },\n    createCircularNode(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n      findEntry = generatorWrapper.toString();\n      if (!(isNaN(iterateEntries) || iterateEntries == \"\")) {\n        findEntry = parseFloat(generatorWrapper).toFixed(iterateEntries);\n      }\n      var createCircularNode = Number(generatorWrapper) < 0 ? \"-\" : value.indexOf(\"+\") >= 0 ? \"+\" : value.indexOf(\" \") >= 0 ? \" \" : \"\";\n      if (Number(generatorWrapper) >= 0) {\n        findEntry = createCircularNode + findEntry;\n      }\n      if (isNaN(CustomMap) || findEntry.length >= Number(CustomMap)) {\n        return findEntry;\n      }\n      if (isNaN(iterateEntries)) {\n        findEntry = Math.abs(Number(generatorWrapper)).toString();\n      } else {\n        findEntry = Math.abs(Number(generatorWrapper)).toFixed(iterateEntries);\n      }\n      generatorWrapper = Number(CustomMap) - findEntry.length - createCircularNode.length;\n      return findEntry = value.indexOf(\"-\", 0) >= 0 ? createCircularNode + findEntry + repeatString(\" \", generatorWrapper) : createCircularNode + repeatString(value.indexOf(\"0\", 0) >= 0 ? \"0\" : \" \", generatorWrapper) + findEntry;\n    },\n    findEntry(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key) {\n      return formatFunctions.createCircularNode(parseInt(generatorWrapper, 10), value, CustomMap, findEntry, 0, createCircularNode, entryIdCounter, key);\n    }\n  };\n  formatFunctions.i = formatFunctions.findEntry;\n  formatFunctions.user = formatFunctions.findEntry;\n  function getAllowedFeatures() {\n    return [\"autoplay\", \"attribution-reporting\"].filter(function (generatorWrapper) {\n      var value = document.featurePolicy;\n      return undefined !== value && typeof value.allowedFeatures == \"function\" && typeof value.allowedFeatures() == \"object\" && value.allowedFeatures().includes(generatorWrapper);\n    }).join(\";\");\n  }\n  var AdLoader = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.dispatchUnhandledRejection = value;\n    this.handleThenable = this.logError = null;\n    this.resolvePromise = false;\n    this.handleThenable = \"goog_\" + randomInt++;\n    this.isDone = new Map();\n    this.tasks = null;\n    var CustomMap = getWindowForDocument();\n    var findEntry = getFromGlobalScope(\"google.ima.gptProxyInstance\", CustomMap);\n    if (findEntry != null) {\n      CustomMap = findEntry;\n    } else {\n      findEntry = new CrossDomainMessagingManager();\n      defineNamespace(\"google.ima.gptProxyInstance\", findEntry, CustomMap);\n      CustomMap = findEntry;\n    }\n    this.year = CustomMap;\n    this.onFulfilled = null;\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    CustomMap = this.handleThenable;\n    findEntry = (isSecureContext() ? \"https:\" : \"http:\") + formatString(\"//imasdk.googleapis.com/js/core/bridge3.641.0_%s.html\", imaSdkInstanceSingleton.getLocale());\n    generatorWrapper: {\n      var iterateEntries = window;\n      try {\n        do {\n          try {\n            if (iterateEntries.location.href.indexOf(findEntry) === 0 || iterateEntries.document.referrer.indexOf(findEntry) === 0) {\n              var createCircularNode = true;\n              break generatorWrapper;\n            }\n          } catch (value) {}\n          iterateEntries = iterateEntries.parent;\n        } while (iterateEntries !== iterateEntries.top);\n      } catch (value) {}\n      createCircularNode = false;\n    }\n    if (createCircularNode) {\n      findEntry += \"?f=\" + CustomMap;\n    }\n    createCircularNode = window.document;\n    if (adFeaturePolicies.length && createCircularNode.head) {\n      iterateEntries = getIterator(adFeaturePolicies);\n      for (var entryIdCounter = iterateEntries.next(); !entryIdCounter.done; entryIdCounter = iterateEntries.next()) {\n        if ((entryIdCounter = entryIdCounter.value) && createCircularNode.head) {\n          var key = createHtmlElement(\"META\");\n          createCircularNode.head.appendChild(key);\n          key.httpEquiv = \"origin-trial\";\n          key.content = entryIdCounter;\n        }\n      }\n    }\n    createCircularNode = getAllowedFeatures();\n    CustomMap = createElementWithOptionalClassesAndAttributes(\"IFRAME\", {\n      src: findEntry + \"#\" + CustomMap,\n      allowFullscreen: true,\n      allow: createCircularNode,\n      writeBytes: CustomMap,\n      style: \"border:0; opacity:0; margin:0; padding:0; position:relative; color-scheme: light;\",\n      title: \"Advertisement\"\n    });\n    this.handleAsync.sortArray(CustomMap, \"load\", this.toArray);\n    generatorWrapper.appendChild(CustomMap);\n    this.entryIdCounter = CustomMap;\n    this.setTimeoutWrapper = getConnectionInstance(this);\n    this.tryCall = new AdAuctionManager(this.setTimeoutWrapper, navigator);\n    registerDisposable(this, this.tryCall);\n    CustomMap = this.tryCall;\n    CustomMap.entryIdCounter.tasks.set(\"auction\", CustomMap.setTimeoutWrapper);\n    this.updateMaxSize = new AdManagerInitializer(this.setTimeoutWrapper, this.dispatchUnhandledRejection);\n    registerDisposable(this, this.updateMaxSize);\n    if (this.dispatchUnhandledRejection.identityFunction) {\n      this.handleAsync.window(this.setTimeoutWrapper, \"displayContainer\", this.totalAdBufferingTime);\n    }\n    this.handleAsync.window(this.setTimeoutWrapper, \"mouse\", this.createIterator);\n    this.handleAsync.window(this.setTimeoutWrapper, \"touch\", this.definePropertyPolyfill);\n    if (!isTVOSOrAndroidTV()) {\n      this.onFulfilled = new AdManager(generatorWrapper, this.setTimeoutWrapper, value.identityFunction.tryCall.entryIdCounter);\n      registerDisposable(this, this.onFulfilled);\n    }\n  };\n  inheritPrototype(AdLoader, AdEnvironmentConfig);\n  var getConnectionInstance = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = \"*\";\n    } else {\n      value = value;\n    }\n    var CustomMap = generatorWrapper.isDone.get(value);\n    if (CustomMap == null) {\n      CustomMap = new MessageHandler(generatorWrapper.handleThenable, value);\n      if (generatorWrapper.resolvePromise) {\n        CustomMap.entryIdCounter = getContentWindow(generatorWrapper.entryIdCounter);\n        CustomMap.connect();\n      }\n      generatorWrapper.isDone.set(value, CustomMap);\n    }\n    return CustomMap;\n  };\n  AdLoader.prototype.isIpad = function (generatorWrapper) {\n    var value;\n    if ((value = this.onFulfilled) != null) {\n      generatorWrapper = generatorWrapper.tryCall.entryIdCounter;\n      value.isDone = generatorWrapper;\n      if (value.entryIdCounter) {\n        value = value.entryIdCounter;\n        value.tasks = generatorWrapper;\n        registerVideoElement(value, generatorWrapper);\n      }\n    }\n  };\n  AdLoader.prototype.getAdEnvironment = function () {\n    if (this.tasks !== null) {\n      this.tasks.markAsCompleted();\n      this.tasks = null;\n    }\n    this.isDone.forEach(function (generatorWrapper) {\n      markAsCompletedWrapper(generatorWrapper);\n    });\n    this.isDone.clearAll();\n    removeMessagingChannel(this.year, this.handleThenable);\n    removeElement(this.entryIdCounter);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  AdLoader.prototype.createIterator = function (generatorWrapper) {\n    var value = generatorWrapper.setPrototypeOfPolyfill;\n    var CustomMap = getAbsolutePosition(this.entryIdCounter);\n    var findEntry = document.createEvent(\"MouseEvent\");\n    findEntry.initMouseEvent(generatorWrapper.messageType, true, true, window, value.detail, value.screenX, value.screenY, value.clientX + CustomMap.inheritPrototype, value.clientY + CustomMap.globalScope, value.ctrlKey, value.altKey, value.shiftKey, value.metaKey, value.button, null);\n    this.entryIdCounter.dispatchEvent(findEntry);\n  };\n  var createTouchList = function (generatorWrapper, value) {\n    var CustomMap = getAbsolutePosition(generatorWrapper.entryIdCounter);\n    var findEntry = !!(\"TouchEvent\" in window && TouchEvent.length > 0);\n    value = value.map(function (createCircularNode) {\n      if (findEntry) {\n        return new Touch({\n          identifier: createCircularNode.identifier,\n          target: generatorWrapper.entryIdCounter,\n          clientX: createCircularNode.clientX,\n          clientY: createCircularNode.clientY,\n          screenX: createCircularNode.screenX,\n          screenY: createCircularNode.screenY,\n          pageX: createCircularNode.pageX + CustomMap.inheritPrototype,\n          pageY: createCircularNode.pageY + CustomMap.globalScope\n        });\n      } else {\n        return document.createTouch(window, generatorWrapper.entryIdCounter, createCircularNode.identifier, createCircularNode.pageX + CustomMap.inheritPrototype, createCircularNode.pageY + CustomMap.globalScope, createCircularNode.screenX, createCircularNode.screenY);\n      }\n    });\n    if (findEntry) {\n      return value;\n    }\n    var iterateEntries;\n    if ((iterateEntries = document.createTouchList) == null) {\n      return undefined;\n    } else {\n      return iterateEntries.apply(document, value);\n    }\n  };\n  AdLoader.prototype.definePropertyPolyfill = function (generatorWrapper) {\n    var value = generatorWrapper.setPrototypeOfPolyfill;\n    var CustomMap = getAbsolutePosition(this.entryIdCounter);\n    if (\"TouchEvent\" in window && TouchEvent.length > 0) {\n      value = {\n        bubbles: true,\n        cancelable: true,\n        view: window,\n        detail: value.detail,\n        ctrlKey: value.ctrlKey,\n        altKey: value.altKey,\n        shiftKey: value.shiftKey,\n        metaKey: value.metaKey,\n        touches: createTouchList(this, value.touches),\n        targetTouches: createTouchList(this, value.targetTouches),\n        changedTouches: createTouchList(this, value.changedTouches)\n      };\n      generatorWrapper = new TouchEvent(generatorWrapper.messageType, value);\n      this.entryIdCounter.dispatchEvent(generatorWrapper);\n    } else {\n      var findEntry = document.createEvent(\"TouchEvent\");\n      findEntry.initTouchEvent(generatorWrapper.messageType, true, true, window, value.detail, value.screenX, value.screenY, value.clientX + CustomMap.inheritPrototype, value.clientY + CustomMap.globalScope, value.ctrlKey, value.altKey, value.shiftKey, value.metaKey, createTouchList(this, value.touches), createTouchList(this, value.targetTouches), createTouchList(this, value.changedTouches), value.scaleRectangle, value.rotation);\n      this.entryIdCounter.dispatchEvent(findEntry);\n    }\n  };\n  AdLoader.prototype.totalAdBufferingTime = function (generatorWrapper) {\n    switch (generatorWrapper.messageType) {\n      case \"showVideo\":\n        if (this.tasks == null) {\n          this.tasks = new EventController();\n          this.handleAsync.window(this.tasks, \"click\", this.assignPolyfill);\n        } else {\n          resetEventController(this.tasks);\n        }\n        initializeEventController(this.tasks, this.dispatchUnhandledRejection.findLastElement());\n        break;\n      case \"hide\":\n        if (this.tasks !== null) {\n          this.tasks.markAsCompleted();\n          this.tasks = null;\n        }\n    }\n    var value = this.updateMaxSize;\n    handleAdManagerEvents(value.setTimeoutWrapper, generatorWrapper);\n    if (value.entryIdCounter) {\n      handleAdManagerEvents(value.entryIdCounter, generatorWrapper);\n    }\n  };\n  AdLoader.prototype.assignPolyfill = function () {\n    enqueueMessage(this.setTimeoutWrapper, \"displayContainer\", \"videoClick\");\n  };\n  AdLoader.prototype.toArray = function () {\n    this.logError = getEarliestDomLoadingOrInteractiveTime();\n    this.handleThenable = getCurrentTimeWithPerformanceTiming();\n    var generatorWrapper = getContentWindow(this.entryIdCounter);\n    this.isDone.forEach(function (CustomMap) {\n      CustomMap.entryIdCounter = generatorWrapper;\n      CustomMap.connect();\n    });\n    var value;\n    if (!((value = this.onFulfilled) == null)) {\n      setAdManagerListener(value, generatorWrapper);\n    }\n    this.resolvePromise = true;\n  };\n  var clientJsUrl = identityFunction([\"https://s0.2mdn.net/instream/video/client.js\"]);\n  var instance = null;\n  var AdManager = function () {\n    AdEnvironmentConfig.call(this);\n    this.entryIdCounter = null;\n    this.tasks = new Map();\n    this.setTimeoutWrapper = new Map();\n    this.Generator = this.onFulfilled = false;\n    this.handleAsync = null;\n    this.isDone = new EventDispatcher(this);\n    registerDisposable(this, this.isDone);\n  };\n  inheritPrototype(AdManager, AdEnvironmentConfig);\n  var getInstance = function () {\n    if (instance == null) {\n      instance = new AdManager();\n    }\n    return instance;\n  };\n  var sendViewabilityMeasurement = function (generatorWrapper, value, CustomMap) {\n    var findEntry = {};\n    findEntry.queryId = value;\n    findEntry.viewabilityData = CustomMap;\n    if (generatorWrapper.entryIdCounter) {\n      enqueueMessage(generatorWrapper.entryIdCounter, \"activityMonitor\", \"viewabilityMeasurement\", findEntry);\n    }\n  };\n  AdManager.prototype.destroy = function () {\n    this.isDone.compareValues(this.entryIdCounter, \"activityMonitor\", this.dispatchUnhandledRejection);\n    this.Generator = false;\n    this.tasks.clearAll();\n  };\n  AdManager.prototype.getAdEnvironment = function () {\n    this.destroy();\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  AdManager.prototype.initialize = function (generatorWrapper) {\n    if (!this.Generator) {\n      if (this.entryIdCounter = generatorWrapper || null) {\n        this.isDone.window(this.entryIdCounter, \"activityMonitor\", this.dispatchUnhandledRejection);\n        sendPageSignals(this);\n      }\n      if (!(globalScope.ima && globalScope.ima.video && globalScope.ima.video.client && globalScope.ima.video.client.tagged)) {\n        defineNamespace(\"ima.video.client.sdkTag\", true);\n        var value = globalScope.document;\n        generatorWrapper = createElement(document, \"SCRIPT\");\n        var CustomMap = createSafeHtmlFromTemplate(clientJsUrl);\n        setElementSrcFromTrustedUrl(generatorWrapper, CustomMap);\n        generatorWrapper.async = true;\n        generatorWrapper.type = \"text/javascript\";\n        value = value.getElementsByTagName(\"script\")[0];\n        value.parentNode.insertBefore(generatorWrapper, value);\n      }\n      applyAdEnvironmentConfig();\n      getSingletonInstance(AdManager).resolvePromise = imaSdkInstanceSingleton.entryIdCounter;\n      this.onFulfilled = true;\n      getSingletonInstance(AdManager).setTimeoutWrapper = true;\n      this.handleAsync = null;\n      generatorWrapper = getSingletonInstance(AdManager);\n      value = getAdReportingMode(generatorWrapper) == \"h\" || getAdReportingMode(generatorWrapper) == \"b\";\n      CustomMap = !(getAdEnvironment(), false);\n      if (value && CustomMap) {\n        generatorWrapper.executeCallbacks = true;\n        generatorWrapper.handleThenable = new checksum();\n      }\n      this.Generator = true;\n    }\n  };\n  var isFullscreen = function (generatorWrapper) {\n    if (generatorWrapper == null) {\n      return false;\n    }\n    if ((isIphone || isIpod) && generatorWrapper.webkitDisplayingFullscreen !== null) {\n      return generatorWrapper.webkitDisplayingFullscreen;\n    }\n    generatorWrapper = getElementPosition(generatorWrapper);\n    var value = window.screen.availHeight || window.screen.height;\n    return (window.screen.availWidth || window.screen.width) - generatorWrapper.width <= 0 && value - generatorWrapper.height <= 42;\n  };\n  var getElementPosition = function (generatorWrapper) {\n    var value = {\n      left: generatorWrapper.offsetLeft,\n      top: generatorWrapper.offsetTop,\n      width: generatorWrapper.offsetWidth,\n      height: generatorWrapper.offsetHeight\n    };\n    try {\n      if (typeof generatorWrapper.getBoundingClientRect === \"function\" && containsElement(getDocument(generatorWrapper), generatorWrapper)) {\n        value = generatorWrapper.getBoundingClientRect();\n      }\n    } catch (CustomMap) {}\n    return value;\n  };\n  var calculateViewabilityData = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    if (undefined === iterateEntries) {\n      iterateEntries = {};\n    } else {\n      iterateEntries = iterateEntries;\n    }\n    if (generatorWrapper.Generator) {\n      if (findEntry && iterateEntries.opt_osdId == null) {\n        iterateEntries.opt_osdId = findEntry;\n      }\n      if (generatorWrapper.handleAsync) {\n        return generatorWrapper.handleAsync(value, CustomMap, iterateEntries);\n      }\n      if (generatorWrapper = findEntry ? generatorWrapper.setTimeoutWrapper.get(findEntry) : imaSdkInstanceSingleton.setTimeoutWrapper) {\n        if (iterateEntries.opt_fullscreen == null) {\n          iterateEntries.opt_fullscreen = isFullscreen(generatorWrapper);\n        }\n        if (iterateEntries.opt_adElement == null) {\n          iterateEntries.opt_adElement = generatorWrapper;\n        }\n      }\n      return Hw.hasBrands(469, createFunctionWithArguments(sendVastAdEvent, value, CustomMap, iterateEntries)) || {};\n    }\n    return {};\n  };\n  var isInitialized = function (generatorWrapper) {\n    var value;\n    if (imaSdkInstanceSingleton.entryIdCounter !== 0) {\n      value = getSingletonInstance(AdManager).setTimeoutWrapper;\n    } else {\n      value = generatorWrapper.onFulfilled;\n    }\n    return value;\n  };\n  var registerElement = function (generatorWrapper, value) {\n    var CustomMap = String(Math.floorRectangle(1000000000 * Math.random()));\n    generatorWrapper.setTimeoutWrapper.set(CustomMap, value);\n    if (imaSdkInstanceSingleton.entryIdCounter !== 0) {\n      getSingletonInstance(AdManager).createDeferred[CustomMap] = generatorWrapper;\n    }\n    return CustomMap;\n  };\n  var unregisterElement = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap) {\n      if (generatorWrapper.tasks.get(CustomMap) === value) {\n        generatorWrapper.tasks.delete(CustomMap);\n      }\n    } else {\n      var findEntry = [];\n      generatorWrapper.tasks.forEach(function (iterateEntries, createCircularNode) {\n        if (iterateEntries === value) {\n          findEntry.push(createCircularNode);\n        }\n      });\n      findEntry.forEach(generatorWrapper.tasks.delete, generatorWrapper.tasks);\n    }\n  };\n  var getOverlayAdMetadata = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper.tasks.get(value);\n    if (typeof generatorWrapper === \"function\") {\n      return generatorWrapper();\n    } else {\n      return {};\n    }\n  };\n  var sendPageSignals = function (generatorWrapper) {\n    if (typeof window.Goog_AdSense_Lidar_getUrlSignalsArray === \"function\") {\n      var value = {};\n      value.pageSignals = window.Goog_AdSense_Lidar_getUrlSignalsArray();\n      var CustomMap;\n      if (!((CustomMap = generatorWrapper.entryIdCounter) == null)) {\n        enqueueMessage(CustomMap, \"activityMonitor\", \"pageSignals\", value);\n      }\n    }\n  };\n  AdManager.prototype.dispatchUnhandledRejection = function (generatorWrapper) {\n    var value = generatorWrapper.setPrototypeOfPolyfill;\n    var CustomMap = value.queryId;\n    var findEntry = {};\n    var iterateEntries = null;\n    findEntry.eventId = value.eventId;\n    switch (generatorWrapper.messageType) {\n      case \"getPageSignals\":\n        sendPageSignals(this);\n        break;\n      case \"reportVastEvent\":\n        iterateEntries = value.vastEvent;\n        generatorWrapper = value.osdId;\n        var createCircularNode = {};\n        createCircularNode.opt_fullscreen = value.isFullscreen;\n        if (value.isOverlay) {\n          createCircularNode.opt_bounds = value.overlayBounds;\n        }\n        findEntry.viewabilityData = calculateViewabilityData(this, iterateEntries, CustomMap, generatorWrapper, createCircularNode);\n        var entryIdCounter;\n        if (!((entryIdCounter = this.entryIdCounter) == null)) {\n          enqueueMessage(entryIdCounter, \"activityMonitor\", \"viewability\", findEntry);\n        }\n        break;\n      case \"fetchAdTagUrl\":\n        CustomMap = {};\n        CustomMap.eventId = value.eventId;\n        generatorWrapper = value.osdId;\n        if (hasOwnPropertySafe(value, \"isFullscreen\")) {\n          iterateEntries = value.isFullscreen;\n        }\n        if (hasOwnPropertySafe(value, \"loggingId\")) {\n          value = value.loggingId;\n          CustomMap.loggingId = value;\n          markAsCompleted.getAdInstance().report(43, {\n            step: \"beforeLookup\",\n            logid: value,\n            time: Date.now()\n          });\n        }\n        CustomMap.engagementString = generateEngagementString(this, generatorWrapper, iterateEntries);\n        if (this.entryIdCounter) {\n          enqueueMessage(this.entryIdCounter, \"activityMonitor\", \"engagement\", CustomMap);\n        }\n    }\n  };\n  var generateEngagementString = function (generatorWrapper, value, CustomMap) {\n    var findEntry,\n      iterateEntries = value ? (findEntry = generatorWrapper.setTimeoutWrapper.get(value)) != null ? findEntry : null : imaSdkInstanceSingleton.setTimeoutWrapper;\n    generatorWrapper = {};\n    if (CustomMap != null) {\n      generatorWrapper.fullscreen = CustomMap;\n    }\n    CustomMap = \"\";\n    try {\n      CustomMap = collectAndSerializeVisibilityMetrics(function () {\n        return iterateEntries;\n      }, generatorWrapper);\n    } catch (createCircularNode) {\n      CustomMap = createCircularNode;\n      CustomMap = \"sdktle;\" + truncateString(CustomMap.name, 12) + \";\" + truncateString(CustomMap.message, 40);\n    }\n    return CustomMap;\n  };\n  defineNamespace(\"ima.common.getVideoMetadata\", function (generatorWrapper) {\n    return getOverlayAdMetadata(getInstance(), generatorWrapper);\n  });\n  defineNamespace(\"ima.common.triggerViewabilityMeasurementUpdate\", function (generatorWrapper, value) {\n    sendViewabilityMeasurement(getInstance(), generatorWrapper, value);\n  });\n  var MediaStateManager = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n    this.setTimeoutWrapper = \"\";\n    this.tasks = -1;\n    this.createDeferred = false;\n  };\n  var setupMediaState = function (generatorWrapper, value) {\n    if (generatorWrapper.tasks >= 0) {\n      var CustomMap = value == null ? function () {} : value;\n      var findEntry = function () {\n        attemptMediaPlayback(generatorWrapper, CustomMap);\n        generatorWrapper.entryIdCounter.removeEventListener(\"loadedmetadata\", findEntry, false);\n      };\n      generatorWrapper.entryIdCounter.addEventListener(\"loadedmetadata\", findEntry, false);\n      generatorWrapper.entryIdCounter.src = generatorWrapper.setTimeoutWrapper;\n      generatorWrapper.entryIdCounter.load();\n    } else if (value != null) {\n      value();\n    }\n  };\n  var attemptMediaPlayback = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter.seekable.length > 0;\n    if (generatorWrapper.createDeferred) {\n      if (CustomMap) {\n        generatorWrapper.entryIdCounter.currentTime = generatorWrapper.tasks;\n        resetMediaState(generatorWrapper);\n        value();\n      } else {\n        setTimeout(function () {\n          attemptMediaPlayback(generatorWrapper, value);\n          return;\n        }, 100);\n      }\n    } else {\n      resetMediaState(generatorWrapper);\n      value();\n    }\n  };\n  var resetMediaState = function (generatorWrapper) {\n    generatorWrapper.tasks = -1;\n    generatorWrapper.setTimeoutWrapper = \"\";\n    generatorWrapper.createDeferred = false;\n  };\n  var defaultSize = new Size(5, 5);\n  var VideoPlayer = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    this.entryIdCounter = generatorWrapper;\n    this.handleAsync = this.definePropertyPolyfill = null;\n    this.onFulfilled = 0;\n    this.logError = this.dispatchUnhandledRejection = this.updateMaxSize = this.loaded = this.resolvePromise = false;\n    this.totalAdBufferingTime = this.handleThenable = this.handleThenable = this.setTimeoutWrapper = null;\n    this.createIterator = false;\n    this.isDone = null;\n    this.tryCall = new MediaStateManager(generatorWrapper);\n    this.tasks = new EventDispatcher(this);\n    registerDisposable(this, this.tasks);\n    this.size = this.getRectangleSize();\n    this.fullscreen = isFullscreen(this.entryIdCounter);\n  };\n  inheritPrototype(VideoPlayer, AdEnvironmentConfig);\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.ensureString = function () {\n    var generatorWrapper = this.tryCall;\n    generatorWrapper.setTimeoutWrapper = generatorWrapper.entryIdCounter.currentSrc;\n    generatorWrapper.createDeferred = generatorWrapper.entryIdCounter.seekable.length > 0;\n    if (generatorWrapper.entryIdCounter.ended) {\n      generatorWrapper.tasks = -1;\n    } else {\n      generatorWrapper.tasks = generatorWrapper.entryIdCounter.currentTime;\n    }\n  };\n  setTimeoutWrapper.isIphone = function (generatorWrapper) {\n    setupMediaState(this.tryCall, generatorWrapper);\n  };\n  setTimeoutWrapper.load = function (generatorWrapper, value) {\n    var CustomMap = resolvePromise.getAdInstance().entryIdCounter;\n    CustomMap.tryCall = true;\n    flushData(CustomMap);\n    logError(\"hvd_lc\");\n    resetPlaybackState(this);\n    this.updateMaxSize = false;\n    if (value) {\n      logError(\"hvd_ad\");\n      if (value instanceof MediaAdDimensions) {\n        logError(\"hvd_mad\");\n        if (CustomMap = value.getMediaUrl()) {\n          logError(\"hvd_admu\");\n          logError(\"hvd_src\");\n          this.entryIdCounter.src = CustomMap;\n          this.entryIdCounter.load();\n          return;\n        }\n      } else if (value instanceof ExtendedAdDimensions) {\n        logError(\"hvd_dad\");\n        CustomMap = value.createDeferred;\n        var findEntry = value.tasks;\n        var iterateEntries = value.setTimeoutWrapper;\n        var createCircularNode = value.entryIdCounter;\n        var entryIdCounter = value.compareVersions;\n        var key = value.identityFunction;\n        if (CustomMap && findEntry && iterateEntries && createCircularNode && entryIdCounter && key && (logError(\"hvd_addu\"), value.generatorReturn)) {\n          logError(\"hvd_admse\");\n          value = iterateEntries + '; codecs=\"' + entryIdCounter + '\"';\n          createCircularNode = createCircularNode + '; codecs=\"' + key + '\"';\n          if (isMediaSourceSupported() && isMediaSourceSupported() && MediaSource.isTypeSupported(value) && isMediaSourceSupported() && MediaSource.isTypeSupported(createCircularNode)) {\n            logError(\"hvd_ymse\");\n            logError(\"hvd_mse\");\n            generatorWrapper = false;\n            try {\n              if (-1 !== window.location.search.indexOf(\"goog_limavideo=true\")) {\n                generatorWrapper = true;\n              }\n            } catch (value) {}\n            if (globalScope.customElements) {\n              if (generatorWrapper) {\n                generatorWrapper = true;\n              } else {\n                if (handleThenable(limaFeatureFlag)) {\n                  markAsCompleted.getAdInstance().report(153, {\n                    limvid: \"vd\"\n                  });\n                }\n                if (handleThenable(limaFeatureFlag) || handleThenable(vm) || handleThenable(tm) || handleThenable(um)) {\n                  generatorWrapper = true;\n                } else {\n                  generatorWrapper = false;\n                }\n              }\n            } else {\n              generatorWrapper = false;\n            }\n            if (generatorWrapper && this.entryIdCounter instanceof CustomVideoElement) {\n              this.entryIdCounter.bidRequest = CustomMap;\n              this.entryIdCounter.unknownVariable = findEntry;\n            } else {\n              this.definePropertyPolyfill = new MediaSourceManager(this.entryIdCounter, [new MediaSourceConfig(CustomMap, value, 350000, new EmptyFunction()), new MediaSourceConfig(findEntry, createCircularNode, 82000, new EmptyFunction())]);\n              registerDisposable(this, this.definePropertyPolyfill);\n              generatorWrapper = this.entryIdCounter;\n              CustomMap = this.definePropertyPolyfill;\n              if (!CustomMap.tasks) {\n                CustomMap.tasks = createObjectURLWithValidation(CustomMap.entryIdCounter).toString();\n              }\n              CustomMap = CustomMap.tasks;\n              generatorWrapper.src = CustomMap;\n            }\n            this.entryIdCounter.load();\n            return;\n          }\n          logError(\"hvd_nmse\");\n        }\n      } else {\n        logError(\"hvd_uad\");\n      }\n    }\n    if (generatorWrapper) {\n      logError(\"hvd_src\");\n      this.entryIdCounter.src = generatorWrapper;\n    } else {\n      logError(\"hvd_vn\");\n    }\n    this.entryIdCounter.load();\n  };\n  setTimeoutWrapper.setVolume = function (generatorWrapper) {\n    this.entryIdCounter.volume = Math.max(generatorWrapper, 0);\n    if (generatorWrapper === 0) {\n      this.entryIdCounter.muted = true;\n    } else {\n      this.entryIdCounter.muted = false;\n    }\n  };\n  setTimeoutWrapper.throwIncidentError = function (generatorWrapper) {\n    this.entryIdCounter.style.left = String(generatorWrapper.left) + \"px\";\n    this.entryIdCounter.style.top = String(generatorWrapper.top) + \"px\";\n    this.entryIdCounter.style.width = String(generatorWrapper.width) + \"px\";\n    this.entryIdCounter.style.height = String(generatorWrapper.height) + \"px\";\n  };\n  setTimeoutWrapper.createWarningError = function () {\n    this.entryIdCounter.style.width = \"100%\";\n    this.entryIdCounter.style.height = \"100%\";\n    this.entryIdCounter.style.left = \"0\";\n    this.entryIdCounter.style.right = \"0\";\n  };\n  setTimeoutWrapper.getVolume = function () {\n    if (this.entryIdCounter.muted) {\n      return 0;\n    } else {\n      return this.entryIdCounter.volume;\n    }\n  };\n  var handleAutoPlay = function (generatorWrapper) {\n    generatorWrapper.createIterator = false;\n    if (generatorWrapper.updateMaxSize || isInternetExplorer()) {\n      generatorWrapper.logError = false;\n      generatorWrapper.setTimeoutWrapper = generatorWrapper.entryIdCounter.play();\n      if (generatorWrapper.setTimeoutWrapper != null) {\n        generatorWrapper.handleThenable = null;\n        generatorWrapper.setTimeoutWrapper.then(function () {\n          generatorWrapper.setTimeoutWrapper = null;\n          generatorWrapper.cloneIfNotFrozen(generatorWrapper.handleThenable);\n          generatorWrapper.handleThenable = null;\n        }).catch(function (value) {\n          generatorWrapper.setTimeoutWrapper = null;\n          var CustomMap = \"\";\n          if (value != null && value.name != null) {\n            CustomMap = value.name;\n          }\n          if (CustomMap === \"AbortError\" || CustomMap === \"NotAllowedError\") {\n            generatorWrapper.dispatchEvent(\"autoplayDisallowed\");\n          } else {\n            generatorWrapper.year();\n          }\n        });\n      }\n    } else {\n      generatorWrapper.logError = true;\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.pause = function () {\n    if (this.setTimeoutWrapper == null) {\n      this.createIterator = true;\n      this.entryIdCounter.pause();\n    }\n  };\n  setTimeoutWrapper.getCurrentTime = function () {\n    return this.entryIdCounter.currentTime;\n  };\n  setTimeoutWrapper.getDuration = function () {\n    if (isNaN(this.entryIdCounter.duration)) {\n      return -1;\n    } else {\n      return this.entryIdCounter.duration;\n    }\n  };\n  setTimeoutWrapper.getRectangleSize = function () {\n    return new Size(this.entryIdCounter.offsetWidth, this.entryIdCounter.offsetHeight);\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    if (this.totalAdBufferingTime) {\n      disconnectResizeObservers(this.totalAdBufferingTime);\n    }\n    resetVideoTracking(this);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var resetVideoTracking = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync != null) {\n      resetEventController(generatorWrapper.handleAsync);\n      generatorWrapper.handleAsync = null;\n    }\n    if (generatorWrapper.handleThenable != null) {\n      generatorWrapper.handleThenable.markAsCompleted();\n    }\n    removeAllListeners(generatorWrapper.tasks);\n    resetPlaybackState(generatorWrapper);\n  };\n  var resetPlaybackState = function (generatorWrapper) {\n    generatorWrapper.loaded = false;\n    generatorWrapper.dispatchUnhandledRejection = false;\n    generatorWrapper.resolvePromise = false;\n    generatorWrapper.logError = false;\n    generatorWrapper.onFulfilled = 0;\n    generatorWrapper.setTimeoutWrapper = null;\n    generatorWrapper.handleThenable = null;\n    markAsCompletedWrapper(generatorWrapper.isDone);\n  };\n  VideoPlayer.prototype.isArrayLike = function (generatorWrapper) {\n    this.dispatchEvent(generatorWrapper.type);\n  };\n  var handleFullscreenStart = function (generatorWrapper) {\n    if (!generatorWrapper.dispatchUnhandledRejection) {\n      generatorWrapper.dispatchUnhandledRejection = true;\n      generatorWrapper.dispatchEvent(\"start\");\n      try {\n        if (handleThenable(limaFeatureFlag) && globalScope.customElements) {\n          var value = globalScope.customElements.get(\"lima-video\");\n          if (generatorWrapper.entryIdCounter instanceof value) {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"limastart\"\n            });\n          } else {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"videostart\"\n            });\n          }\n        }\n      } catch (CustomMap) {\n        markAsCompleted.getAdInstance().report(153, {\n          limvid: \"startfail\"\n        });\n      }\n      value = typeof generatorWrapper.entryIdCounter.getAttribute === \"function\" && generatorWrapper.entryIdCounter.getAttribute(\"playsinline\") != null;\n      if (undefined === value) {\n        value = false;\n      } else {\n        value = value;\n      }\n      if (!((!isTouchEnabledDevice() && !isIOSVersionAtLeast(10) || !value && (AppSignals.getAdInstance(), false) ? (AppSignals.getAdInstance(), includesIgnoreCase(getUserAgent(), \"Xbox\")) || (isIphone || isIpod ? 0 : (!isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 4)) && (isAppleTV() ? (AppSignals.getAdInstance(), false) : !isTVOSOrAndroidTV())) : 1) || !isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 3) || (isIphone || isIpod) && !isIOSVersionAtLeast(4))) {\n        AdErrorEvent(generatorWrapper);\n      }\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.parseAndValidateArray = function () {\n    this.updateMaxSize = true;\n    if (this.logError) {\n      handleAutoPlay(this);\n    }\n    this.logError = false;\n    reportVideoSize(this);\n  };\n  setTimeoutWrapper.serializeTransformations = function () {\n    if (!this.loaded) {\n      this.loaded = true;\n      this.dispatchEvent(\"loaded\");\n    }\n  };\n  setTimeoutWrapper.cloneIfNotFrozen = function (generatorWrapper) {\n    if (this.setTimeoutWrapper != null) {\n      this.handleThenable = generatorWrapper;\n    } else {\n      this.dispatchEvent(\"play\");\n      if (!(isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n        handleFullscreenStart(this);\n      }\n    }\n  };\n  setTimeoutWrapper.isValidError = function (generatorWrapper) {\n    if (!this.dispatchUnhandledRejection && (isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n      if (this.getCurrentTime() <= 0) {\n        return;\n      }\n      if (isAndroidNonChrome && this.entryIdCounter.ended && this.getDuration() === 1) {\n        this.year(generatorWrapper);\n        return;\n      }\n      handleFullscreenStart(this);\n    }\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      if (this.getCurrentTime() - this.onFulfilled > 1.5) {\n        this.resolvePromise = true;\n        this.entryIdCounter.currentTime = this.onFulfilled;\n        return;\n      }\n      this.resolvePromise = false;\n      if (this.getCurrentTime() > this.onFulfilled) {\n        this.onFulfilled = this.getCurrentTime();\n      }\n    }\n    this.dispatchEvent(\"timeUpdate\");\n  };\n  setTimeoutWrapper.once = function () {\n    this.dispatchEvent(\"volumeChange\");\n  };\n  setTimeoutWrapper.ErrorDetails = function () {\n    if (this.dispatchUnhandledRejection && isIphoneIpadIpod && !this.createIterator && (calculateBufferedAheadTime(this) < 2 || this.resolvePromise)) {\n      this.isDone = new Timer(250);\n      this.tasks.window(this.isDone, \"tick\", this.wrapGeneratorToPromise);\n      this.isDone.startTimer();\n      var generatorWrapper = true;\n    } else {\n      generatorWrapper = false;\n    }\n    if (!(generatorWrapper || this.setTimeoutWrapper)) {\n      this.dispatchEvent(\"pause\");\n    }\n  };\n  setTimeoutWrapper.arrayOfIntegersTransformationInstance = function () {\n    var generatorWrapper = true;\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      generatorWrapper = this.onFulfilled >= this.entryIdCounter.duration - 1.5;\n    }\n    if (!this.resolvePromise && generatorWrapper) {\n      this.dispatchEvent(\"end\");\n    }\n  };\n  var AdErrorEvent = function (generatorWrapper) {\n    generatorWrapper.dispatchEvent(\"beginFullscreen\");\n  };\n  VideoPlayer.prototype.toArray = function () {\n    this.dispatchEvent(\"endFullscreen\");\n  };\n  VideoPlayer.prototype.year = function () {\n    this.dispatchEvent(\"error\");\n  };\n  VideoPlayer.prototype.assignPolyfill = function () {\n    this.dispatchEvent(\"click\");\n  };\n  var reportVideoSize = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter instanceof HTMLElement) {\n      generatorWrapper.totalAdBufferingTime = waitForElementResize(generatorWrapper.entryIdCounter, defaultSize);\n      generatorWrapper.totalAdBufferingTime.then(function (value) {\n        if (!generatorWrapper.handleIteratorResult()) {\n          settlePromise(resolvePromise.getAdInstance(), \"ps\", value.width + \"x\" + value.height);\n        }\n      });\n    }\n  };\n  VideoPlayer.prototype.sliceArguments = function () {\n    var generatorWrapper = this.getRectangleSize();\n    var value = isFullscreen(this.entryIdCounter);\n    if (generatorWrapper.width !== this.size.width || generatorWrapper.height !== this.size.height) {\n      if (!this.fullscreen && value) {\n        AdErrorEvent(this);\n      } else if (this.fullscreen && !value) {\n        this.toArray();\n      }\n      this.size = generatorWrapper;\n      this.fullscreen = value;\n    }\n  };\n  VideoPlayer.prototype.wrapGeneratorToPromise = function () {\n    if (!this.entryIdCounter.ended && this.entryIdCounter.paused && (isIphoneIpadIpod || isIos ? this.entryIdCounter.currentTime < this.entryIdCounter.duration : 1)) {\n      var generatorWrapper = this.entryIdCounter.duration - this.entryIdCounter.currentTime;\n      var value = calculateBufferedAheadTime(this);\n      if (value > 0 && (value >= 2 || generatorWrapper < 2)) {\n        markAsCompletedWrapper(this.isDone);\n        handleAutoPlay(this);\n      }\n    } else {\n      markAsCompletedWrapper(this.isDone);\n    }\n  };\n  var calculateBufferedAheadTime = function (generatorWrapper) {\n    var value;\n    generatorWrapper: {\n      for (value = generatorWrapper.entryIdCounter.buffered.length - 1; value >= 0;) {\n        if (generatorWrapper.entryIdCounter.buffered.startTimer(value) <= generatorWrapper.entryIdCounter.currentTime) {\n          value = generatorWrapper.entryIdCounter.buffered.end(value);\n          break generatorWrapper;\n        }\n        value--;\n      }\n      value = 0;\n    }\n    return value - generatorWrapper.entryIdCounter.currentTime;\n  };\n  VideoPlayer.prototype.isObjectOrFunction = function () {\n    markAsCompleted.getAdInstance().report(139);\n    AdErrorEvent(t",
  ".setTimeoutWrapper = generatorWrapper.entryIdCounter.play();\n      if (generatorWrapper.setTimeoutWrapper != null) {\n        generatorWrapper.handleThenable = null;\n        generatorWrapper.setTimeoutWrapper.then(function () {\n          generatorWrapper.setTimeoutWrapper = null;\n          generatorWrapper.cloneIfNotFrozen(generatorWrapper.handleThenable);\n          generatorWrapper.handleThenable = null;\n        }).catch(function (value) {\n          generatorWrapper.setTimeoutWrapper = null;\n          var CustomMap = \"\";\n          if (value != null && value.name != null) {\n            CustomMap = value.name;\n          }\n          if (CustomMap === \"AbortError\" || CustomMap === \"NotAllowedError\") {\n            generatorWrapper.dispatchEvent(\"autoplayDisallowed\");\n          } else {\n            generatorWrapper.year();\n          }\n        });\n      }\n    } else {\n      generatorWrapper.logError = true;\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.pause = function () {\n    if (this.setTimeoutWrapper == null) {\n      this.createIterator = true;\n      this.entryIdCounter.pause();\n    }\n  };\n  setTimeoutWrapper.getCurrentTime = function () {\n    return this.entryIdCounter.currentTime;\n  };\n  setTimeoutWrapper.getDuration = function () {\n    if (isNaN(this.entryIdCounter.duration)) {\n      return -1;\n    } else {\n      return this.entryIdCounter.duration;\n    }\n  };\n  setTimeoutWrapper.getRectangleSize = function () {\n    return new Size(this.entryIdCounter.offsetWidth, this.entryIdCounter.offsetHeight);\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    if (this.totalAdBufferingTime) {\n      disconnectResizeObservers(this.totalAdBufferingTime);\n    }\n    resetVideoTracking(this);\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var resetVideoTracking = function (generatorWrapper) {\n    if (generatorWrapper.handleAsync != null) {\n      resetEventController(generatorWrapper.handleAsync);\n      generatorWrapper.handleAsync = null;\n    }\n    if (generatorWrapper.handleThenable != null) {\n      generatorWrapper.handleThenable.markAsCompleted();\n    }\n    removeAllListeners(generatorWrapper.tasks);\n    resetPlaybackState(generatorWrapper);\n  };\n  var resetPlaybackState = function (generatorWrapper) {\n    generatorWrapper.loaded = false;\n    generatorWrapper.dispatchUnhandledRejection = false;\n    generatorWrapper.resolvePromise = false;\n    generatorWrapper.logError = false;\n    generatorWrapper.onFulfilled = 0;\n    generatorWrapper.setTimeoutWrapper = null;\n    generatorWrapper.handleThenable = null;\n    markAsCompletedWrapper(generatorWrapper.isDone);\n  };\n  VideoPlayer.prototype.isArrayLike = function (generatorWrapper) {\n    this.dispatchEvent(generatorWrapper.type);\n  };\n  var handleFullscreenStart = function (generatorWrapper) {\n    if (!generatorWrapper.dispatchUnhandledRejection) {\n      generatorWrapper.dispatchUnhandledRejection = true;\n      generatorWrapper.dispatchEvent(\"start\");\n      try {\n        if (handleThenable(limaFeatureFlag) && globalScope.customElements) {\n          var value = globalScope.customElements.get(\"lima-video\");\n          if (generatorWrapper.entryIdCounter instanceof value) {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"limastart\"\n            });\n          } else {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"videostart\"\n            });\n          }\n        }\n      } catch (CustomMap) {\n        markAsCompleted.getAdInstance().report(153, {\n          limvid: \"startfail\"\n        });\n      }\n      value = typeof generatorWrapper.entryIdCounter.getAttribute === \"function\" && generatorWrapper.entryIdCounter.getAttribute(\"playsinline\") != null;\n      if (undefined === value) {\n        value = false;\n      } else {\n        value = value;\n      }\n      if (!((!isTouchEnabledDevice() && !isIOSVersionAtLeast(10) || !value && (AppSignals.getAdInstance(), false) ? (AppSignals.getAdInstance(), includesIgnoreCase(getUserAgent(), \"Xbox\")) || (isIphone || isIpod ? 0 : (!isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 4)) && (isAppleTV() ? (AppSignals.getAdInstance(), false) : !isTVOSOrAndroidTV())) : 1) || !isAndroid || isAndroid && matchesUserAgentVersion(androidVersionRegex, 3) || (isIphone || isIpod) && !isIOSVersionAtLeast(4))) {\n        AdErrorEvent(generatorWrapper);\n      }\n    }\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.parseAndValidateArray = function () {\n    this.updateMaxSize = true;\n    if (this.logError) {\n      handleAutoPlay(this);\n    }\n    this.logError = false;\n    reportVideoSize(this);\n  };\n  setTimeoutWrapper.serializeTransformations = function () {\n    if (!this.loaded) {\n      this.loaded = true;\n      this.dispatchEvent(\"loaded\");\n    }\n  };\n  setTimeoutWrapper.cloneIfNotFrozen = function (generatorWrapper) {\n    if (this.setTimeoutWrapper != null) {\n      this.handleThenable = generatorWrapper;\n    } else {\n      this.dispatchEvent(\"play\");\n      if (!(isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n        handleFullscreenStart(this);\n      }\n    }\n  };\n  setTimeoutWrapper.isValidError = function (generatorWrapper) {\n    if (!this.dispatchUnhandledRejection && (isIphoneIpadIpod || isTouchEnabledDevice() || isAndroidNonChrome)) {\n      if (this.getCurrentTime() <= 0) {\n        return;\n      }\n      if (isAndroidNonChrome && this.entryIdCounter.ended && this.getDuration() === 1) {\n        this.year(generatorWrapper);\n        return;\n      }\n      handleFullscreenStart(this);\n    }\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      if (this.getCurrentTime() - this.onFulfilled > 1.5) {\n        this.resolvePromise = true;\n        this.entryIdCounter.currentTime = this.onFulfilled;\n        return;\n      }\n      this.resolvePromise = false;\n      if (this.getCurrentTime() > this.onFulfilled) {\n        this.onFulfilled = this.getCurrentTime();\n      }\n    }\n    this.dispatchEvent(\"timeUpdate\");\n  };\n  setTimeoutWrapper.once = function () {\n    this.dispatchEvent(\"volumeChange\");\n  };\n  setTimeoutWrapper.ErrorDetails = function () {\n    if (this.dispatchUnhandledRejection && isIphoneIpadIpod && !this.createIterator && (calculateBufferedAheadTime(this) < 2 || this.resolvePromise)) {\n      this.isDone = new Timer(250);\n      this.tasks.window(this.isDone, \"tick\", this.wrapGeneratorToPromise);\n      this.isDone.startTimer();\n      var generatorWrapper = true;\n    } else {\n      generatorWrapper = false;\n    }\n    if (!(generatorWrapper || this.setTimeoutWrapper)) {\n      this.dispatchEvent(\"pause\");\n    }\n  };\n  setTimeoutWrapper.arrayOfIntegersTransformationInstance = function () {\n    var generatorWrapper = true;\n    if (isIphoneIpadIpod || includesIgnoreCase(getUserAgent(), \"Nintendo WiiU\")) {\n      generatorWrapper = this.onFulfilled >= this.entryIdCounter.duration - 1.5;\n    }\n    if (!this.resolvePromise && generatorWrapper) {\n      this.dispatchEvent(\"end\");\n    }\n  };\n  var AdErrorEvent = function (generatorWrapper) {\n    generatorWrapper.dispatchEvent(\"beginFullscreen\");\n  };\n  VideoPlayer.prototype.toArray = function () {\n    this.dispatchEvent(\"endFullscreen\");\n  };\n  VideoPlayer.prototype.year = function () {\n    this.dispatchEvent(\"error\");\n  };\n  VideoPlayer.prototype.assignPolyfill = function () {\n    this.dispatchEvent(\"click\");\n  };\n  var reportVideoSize = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter instanceof HTMLElement) {\n      generatorWrapper.totalAdBufferingTime = waitForElementResize(generatorWrapper.entryIdCounter, defaultSize);\n      generatorWrapper.totalAdBufferingTime.then(function (value) {\n        if (!generatorWrapper.handleIteratorResult()) {\n          settlePromise(resolvePromise.getAdInstance(), \"ps\", value.width + \"x\" + value.height);\n        }\n      });\n    }\n  };\n  VideoPlayer.prototype.sliceArguments = function () {\n    var generatorWrapper = this.getRectangleSize();\n    var value = isFullscreen(this.entryIdCounter);\n    if (generatorWrapper.width !== this.size.width || generatorWrapper.height !== this.size.height) {\n      if (!this.fullscreen && value) {\n        AdErrorEvent(this);\n      } else if (this.fullscreen && !value) {\n        this.toArray();\n      }\n      this.size = generatorWrapper;\n      this.fullscreen = value;\n    }\n  };\n  VideoPlayer.prototype.wrapGeneratorToPromise = function () {\n    if (!this.entryIdCounter.ended && this.entryIdCounter.paused && (isIphoneIpadIpod || isIos ? this.entryIdCounter.currentTime < this.entryIdCounter.duration : 1)) {\n      var generatorWrapper = this.entryIdCounter.duration - this.entryIdCounter.currentTime;\n      var value = calculateBufferedAheadTime(this);\n      if (value > 0 && (value >= 2 || generatorWrapper < 2)) {\n        markAsCompletedWrapper(this.isDone);\n        handleAutoPlay(this);\n      }\n    } else {\n      markAsCompletedWrapper(this.isDone);\n    }\n  };\n  var calculateBufferedAheadTime = function (generatorWrapper) {\n    var value;\n    generatorWrapper: {\n      for (value = generatorWrapper.entryIdCounter.buffered.length - 1; value >= 0;) {\n        if (generatorWrapper.entryIdCounter.buffered.startTimer(value) <= generatorWrapper.entryIdCounter.currentTime) {\n          value = generatorWrapper.entryIdCounter.buffered.end(value);\n          break generatorWrapper;\n        }\n        value--;\n      }\n      value = 0;\n    }\n    return value - generatorWrapper.entryIdCounter.currentTime;\n  };\n  VideoPlayer.prototype.isObjectOrFunction = function () {\n    markAsCompleted.getAdInstance().report(139);\n    AdErrorEvent(this);\n  };\n  var convertToIterator = function (generatorWrapper) {\n    if (generatorWrapper instanceof IteratorWrapper || generatorWrapper instanceof IteratorResultWrapper || generatorWrapper instanceof IteratorResult) {\n      return generatorWrapper;\n    }\n    if (typeof generatorWrapper.next == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper;\n      });\n    }\n    if (typeof generatorWrapper[Symbol.iterator] == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper[Symbol.iterator]();\n      });\n    }\n    if (typeof generatorWrapper.getIterator == \"function\") {\n      return new IteratorWrapper(function () {\n        return generatorWrapper.getIterator();\n      });\n    }\n    throw Error(\"Not an iterator or iterable.\");\n  };\n  var IteratorWrapper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  IteratorWrapper.prototype.getIterator = function () {\n    return new IteratorResultWrapper(this.entryIdCounter());\n  };\n  IteratorWrapper.prototype[Symbol.iterator] = function () {\n    return new IteratorResult(this.entryIdCounter());\n  };\n  IteratorWrapper.prototype.tasks = function () {\n    return new IteratorResult(this.entryIdCounter());\n  };\n  var IteratorResultWrapper = function (generatorWrapper) {\n    this.entryIdCounter = generatorWrapper;\n  };\n  inheritPrototype(IteratorResultWrapper, IteratorPrototype);\n  IteratorResultWrapper.prototype.next = function () {\n    return this.entryIdCounter.next();\n  };\n  IteratorResultWrapper.prototype[Symbol.iterator] = function () {\n    return new IteratorResult(this.entryIdCounter);\n  };\n  IteratorResultWrapper.prototype.tasks = function () {\n    return new IteratorResult(this.entryIdCounter);\n  };\n  var IteratorResult = function (generatorWrapper) {\n    IteratorWrapper.call(this, function () {\n      return generatorWrapper;\n    });\n    this.setTimeoutWrapper = generatorWrapper;\n  };\n  inheritPrototype(IteratorResult, IteratorWrapper);\n  IteratorResult.prototype.next = function () {\n    return this.setTimeoutWrapper.next();\n  };\n  var CustomMap = function (generatorWrapper, value) {\n    this.tasks = {};\n    this.entryIdCounter = [];\n    this.setTimeoutWrapper = this.size = 0;\n    var CustomMap = arguments.length;\n    if (CustomMap > 1) {\n      if (CustomMap % 2) {\n        throw Error(\"Uneven number of arguments\");\n      }\n      for (var findEntry = 0; findEntry < CustomMap; findEntry += 2) {\n        this.set(arguments[findEntry], arguments[findEntry + 1]);\n      }\n    } else if (generatorWrapper) {\n      if (generatorWrapper instanceof CustomMap) {\n        CustomMap = generatorWrapper.base64AlphabetVariants();\n        for (findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n          this.set(CustomMap[findEntry], generatorWrapper.get(CustomMap[findEntry]));\n        }\n      } else {\n        for (findEntry in generatorWrapper) this.set(findEntry, generatorWrapper[findEntry]);\n      }\n    }\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.hasPlatform = function () {\n    syncInternalStateWithArray(this);\n    for (var generatorWrapper = [], value = 0; value < this.entryIdCounter.length; value++) {\n      generatorWrapper.push(this.tasks[this.entryIdCounter[value]]);\n    }\n    return generatorWrapper;\n  };\n  setTimeoutWrapper.base64AlphabetVariants = function () {\n    syncInternalStateWithArray(this);\n    return this.entryIdCounter.concat();\n  };\n  setTimeoutWrapper.has = function (generatorWrapper) {\n    return hasProperty(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.isEmpty = function () {\n    return this.size == 0;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.tasks = {};\n    this.setTimeoutWrapper = this.size = this.entryIdCounter.length = 0;\n  };\n  setTimeoutWrapper.removeElement = function (generatorWrapper) {\n    return this.delete(generatorWrapper);\n  };\n  setTimeoutWrapper.delete = function (generatorWrapper) {\n    if (hasProperty(this.tasks, generatorWrapper)) {\n      delete this.tasks[generatorWrapper];\n      --this.size;\n      this.setTimeoutWrapper++;\n      if (this.entryIdCounter.length > 2 * this.size) {\n        syncInternalStateWithArray(this);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n  var syncInternalStateWithArray = function (generatorWrapper) {\n    if (generatorWrapper.size != generatorWrapper.entryIdCounter.length) {\n      for (var value = 0, CustomMap = 0; value < generatorWrapper.entryIdCounter.length;) {\n        var findEntry = generatorWrapper.entryIdCounter[value];\n        if (hasProperty(generatorWrapper.tasks, findEntry)) {\n          generatorWrapper.entryIdCounter[CustomMap++] = findEntry;\n        }\n        value++;\n      }\n      generatorWrapper.entryIdCounter.length = CustomMap;\n    }\n    if (generatorWrapper.size != generatorWrapper.entryIdCounter.length) {\n      var iterateEntries = {};\n      for (CustomMap = value = 0; value < generatorWrapper.entryIdCounter.length;) {\n        findEntry = generatorWrapper.entryIdCounter[value];\n        if (!hasProperty(iterateEntries, findEntry)) {\n          generatorWrapper.entryIdCounter[CustomMap++] = findEntry;\n          iterateEntries[findEntry] = 1;\n        }\n        value++;\n      }\n      generatorWrapper.entryIdCounter.length = CustomMap;\n    }\n  };\n  setTimeoutWrapper = CustomMap.prototype;\n  setTimeoutWrapper.get = function (generatorWrapper, value) {\n    if (hasProperty(this.tasks, generatorWrapper)) {\n      return this.tasks[generatorWrapper];\n    } else {\n      return value;\n    }\n  };\n  setTimeoutWrapper.set = function (generatorWrapper, value) {\n    if (!hasProperty(this.tasks, generatorWrapper)) {\n      this.size += 1;\n      this.entryIdCounter.push(generatorWrapper);\n      this.setTimeoutWrapper++;\n    }\n    this.tasks[generatorWrapper] = value;\n  };\n  setTimeoutWrapper.forEach = function (generatorWrapper, value) {\n    for (var CustomMap = this.base64AlphabetVariants(), findEntry = 0; findEntry < CustomMap.length; findEntry++) {\n      var iterateEntries = CustomMap[findEntry];\n      var createCircularNode = this.get(iterateEntries);\n      generatorWrapper.call(value, createCircularNode, iterateEntries, this);\n    }\n  };\n  setTimeoutWrapper.keys = function () {\n    return convertToIterator(this.getIterator(true)).tasks();\n  };\n  setTimeoutWrapper.values = function () {\n    return convertToIterator(this.getIterator(false)).tasks();\n  };\n  setTimeoutWrapper.entries = function () {\n    var generatorWrapper = this;\n    return createTransformIterator(this.keys(), function (value) {\n      return [value, generatorWrapper.get(value)];\n    });\n  };\n  setTimeoutWrapper.getIterator = function (generatorWrapper) {\n    syncInternalStateWithArray(this);\n    var value = 0;\n    var CustomMap = this.setTimeoutWrapper;\n    var findEntry = this;\n    var iterateEntries = new IteratorPrototype();\n    iterateEntries.next = function () {\n      if (CustomMap != findEntry.setTimeoutWrapper) {\n        throw Error(\"The map has changed since the iterator was created\");\n      }\n      if (value >= findEntry.entryIdCounter.length) {\n        return iteratorDoneValue;\n      }\n      var createCircularNode = findEntry.entryIdCounter[value++];\n      return {\n        value: generatorWrapper ? createCircularNode : findEntry.tasks[createCircularNode],\n        done: false\n      };\n    };\n    return iterateEntries;\n  };\n  var hasProperty = function (generatorWrapper, value) {\n    return Object.prototype.hasOwnProperty.call(generatorWrapper, value);\n  };\n  var VideoPlayer = function () {\n    AdEnvironmentConfig.call(this);\n    this.currentTime = 0;\n    this.duration = NaN;\n    this.setTimeoutWrapper = true;\n    this.volume = 1;\n    this.muted = false;\n    this.onFulfilled = 1;\n    this.playbackRate = 0;\n    this.tasks = this.entryIdCounter = this.handleThenable = null;\n    this.buffered = new TimeRanges();\n    this.dispatchUnhandledRejection = new TimeRanges();\n    this.isDone = \"\";\n    this.tagName = \"VIDEO\";\n    this.height = this.width = 0;\n    this.canPlayType = function () {\n      return \"\";\n    };\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    var generatorWrapper = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (generatorWrapper) {\n      this.duration = getVideoElementFakeDuration(generatorWrapper);\n    }\n  };\n  inheritPrototype(VideoPlayer, AdEnvironmentConfig);\n  var createFakeVideoElement = function () {\n    var generatorWrapper = [\"video/mp4\"];\n    var value = [\"video/ogg\"];\n    var CustomMap = new VideoPlayer();\n    CustomMap.canPlayType = function (findEntry) {\n      if (generatorWrapper.includes(findEntry)) {\n        return \"probably\";\n      } else {\n        if (value.includes(findEntry)) {\n          return \"maybe\";\n        } else {\n          return \"\";\n        }\n      }\n    };\n    return CustomMap;\n  };\n  setTimeoutWrapper = VideoPlayer.prototype;\n  setTimeoutWrapper.pause = function () {\n    if (!this.setTimeoutWrapper) {\n      var generatorWrapper;\n      if (!((generatorWrapper = this.handleThenable) == null)) {\n        generatorWrapper.stopTimer();\n      }\n      this.setTimeoutWrapper = true;\n      this.dispatchEvent(\"timeupdate\");\n      this.dispatchEvent(\"pause\");\n    }\n  };\n  setTimeoutWrapper.load = function () {\n    this.setTimeoutWrapper = true;\n    this.dispatchEvent(\"loadstart\");\n    var generatorWrapper;\n    if (isNaN(this.duration)) {\n      generatorWrapper = 10 + 20 * Math.random();\n    } else {\n      generatorWrapper = this.duration;\n    }\n    this.duration = Number(generatorWrapper);\n    this.dispatchEvent(\"durationchange\");\n    generatorWrapper = this.dispatchUnhandledRejection;\n    generatorWrapper.entryIdCounter.push(new TimeRange(this.duration));\n    generatorWrapper.length = generatorWrapper.entryIdCounter.length;\n    generatorWrapper = this.buffered;\n    generatorWrapper.entryIdCounter.push(new TimeRange(this.duration));\n    generatorWrapper.length = generatorWrapper.entryIdCounter.length;\n    this.dispatchEvent(\"loadedmetadata\");\n    if (this.currentTime > 0) {\n      this.dispatchEvent(\"timeupdate\");\n    }\n    this.dispatchEvent(\"loadeddata\");\n    this.dispatchEvent(\"canplay\");\n    this.dispatchEvent(\"canplaythrough\");\n    this.dispatchEvent(\"progress\");\n    this.playbackRate = this.onFulfilled;\n  };\n  setTimeoutWrapper.setVolume = function (generatorWrapper) {\n    this.volume = generatorWrapper;\n    this.dispatchEvent(\"volumechange\");\n  };\n  setTimeoutWrapper.setAttribute = function (generatorWrapper, value) {\n    if (generatorWrapper != null) {\n      globalAttributesMap.set(generatorWrapper, value);\n    }\n  };\n  setTimeoutWrapper.getAttribute = function (generatorWrapper) {\n    return globalAttributesMap.get(generatorWrapper);\n  };\n  setTimeoutWrapper.noopFunction = function (generatorWrapper) {\n    var value = null;\n    var CustomMap = null;\n    switch (generatorWrapper.type) {\n      case \"loadeddata\":\n        value = \"Loaded\";\n        break;\n      case \"playing\":\n        value = \"Playing\";\n        CustomMap = \"#00f\";\n        break;\n      case \"pause\":\n        value = \"Paused\";\n        break;\n      case \"ended\":\n        value = \"Ended\";\n        CustomMap = \"#000\";\n    }\n    if (value && this.tasks) {\n      this.tasks.innerText = value;\n    }\n    if (CustomMap && this.entryIdCounter) {\n      this.entryIdCounter.style.backgroundColor = CustomMap;\n    }\n  };\n  globalObject.Object.defineProperties(VideoPlayer.prototype, {\n    src: {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return this.isDone;\n      },\n      set(generatorWrapper) {\n        this.isDone = generatorWrapper;\n      }\n    }\n  });\n  var globalAttributesMap = new CustomMap();\n  var TimeRange = function (generatorWrapper) {\n    this.startTime = 0;\n    this.endTime = generatorWrapper;\n  };\n  var TimeRanges = function () {\n    this.length = 0;\n    this.entryIdCounter = [];\n  };\n  TimeRanges.prototype.startTimer = function (generatorWrapper) {\n    return this.entryIdCounter[generatorWrapper].startTime;\n  };\n  TimeRanges.prototype.end = function (generatorWrapper) {\n    return this.entryIdCounter[generatorWrapper].endTime;\n  };\n  var VideoElementManager = function (generatorWrapper) {\n    tryCall.call(this);\n    this.createDeferred = generatorWrapper;\n    this.setTimeoutWrapper = this.entryIdCounter = null;\n    this.tasks = createVideoElementOrFake(this);\n    this.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"display:none;\"\n    });\n    this.createDeferred.appendChild(this.entryIdCounter);\n    this.entryIdCounter.appendChild(this.tasks);\n    this.setTimeoutWrapper = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"position:absolute;width:100%;height:100%;left:0px;top:0px\"\n    });\n    this.entryIdCounter.appendChild(this.setTimeoutWrapper);\n    handleHeavyAdIntervention(function () {\n      settlePromise(resolvePromise.getAdInstance(), \"haob\", \"1\");\n    });\n  };\n  inheritPrototype(VideoElementManager, tryCall);\n  VideoElementManager.prototype.initializeMraid = function () {\n    if (this.tasks) {\n      this.tasks.load();\n    }\n  };\n  VideoElementManager.prototype.getAdEnvironment = function () {\n    removeElement(this.entryIdCounter);\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var createVideoElementOrFake = function (generatorWrapper) {\n    var value = getConfigSettingsInstance(imaSdkInstanceSingleton);\n    if (isBooleanConfigEnabled(value, \"useVideoElementFake\")) {\n      generatorWrapper = createFakeVideoElement();\n      value = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n        style: \"position:absolute;width:100%;height:100%;top:0px;left:0px;\"\n      });\n      Object.assign(value, generatorWrapper);\n      generatorWrapper.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n        style: \"position:absolute;width:100%;height:100%;top:0px;left:0px;background-color:#000\"\n      });\n      generatorWrapper.tasks = createElementWithOptionalClassesAndAttributes(\"P\", {\n        style: \"position:absolute;top:25%;margin-left:10px;font-size:24px;color:#fff;\"\n      });\n      generatorWrapper.entryIdCounter.appendChild(generatorWrapper.tasks);\n      value.appendChild(generatorWrapper.entryIdCounter);\n      generatorWrapper.handleAsync.window(generatorWrapper, [\"loadeddata\", \"playing\", \"pause\", \"ended\"], generatorWrapper.noopFunction);\n      generatorWrapper = value;\n    } else {\n      value = false;\n      try {\n        if (-1 !== window.location.search.indexOf(\"goog_limavideo=true\")) {\n          value = true;\n        }\n      } catch (CustomMap) {}\n      if (shouldUseLimaVideo(generatorWrapper, value)) {\n        if (value) {\n          console.log(\"force lima video in wrapper\");\n        }\n        generatorWrapper = null;\n        try {\n          generatorWrapper = new CustomVideoElement();\n        } catch (CustomMap) {\n          generatorWrapper = createElementWithOptionalClassesAndAttributes(\"lima-video\");\n          if (handleThenable(limaFeatureFlag)) {\n            markAsCompleted.getAdInstance().report(153, {\n              limvid: \"firefail\"\n            });\n          }\n        }\n        generatorWrapper.style.backgroundColor = \"#000\";\n        generatorWrapper.style.height = \"100%\";\n        generatorWrapper.style.width = \"100%\";\n        generatorWrapper.style.position = \"absolute\";\n        generatorWrapper.style.left = \"0\";\n        generatorWrapper.style.top = \"0\";\n      } else {\n        generatorWrapper = createElementWithOptionalClassesAndAttributes(\"VIDEO\", {\n          style: \"background-color:#000;position:absolute;width:100%;height:100%;left:0;top:0;\",\n          title: \"Advertisement\".toString()\n        });\n      }\n    }\n    generatorWrapper.setAttribute(\"webkit-playsinline\", \"true\");\n    generatorWrapper.setAttribute(\"playsinline\", \"true\");\n    return generatorWrapper;\n  };\n  var shouldUseLimaVideo = function (generatorWrapper, value) {\n    if (!globalScope.customElements) {\n      return false;\n    }\n    if (value) {\n      return true;\n    }\n    if (isFirefox() && getDocument(generatorWrapper.createDeferred) !== document) {\n      return false;\n    }\n    if (handleThenable(limaFeatureFlag)) {\n      markAsCompleted.getAdInstance().report(153, {\n        limvid: \"vw\"\n      });\n    }\n    if (handleThenable(vm) || handleThenable(limaFeatureFlag) || handleThenable(tm) || handleThenable(um)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  VideoElementManager.prototype.findLastElement = function () {\n    return this.setTimeoutWrapper;\n  };\n  VideoElementManager.prototype.endsWith = function () {\n    var generatorWrapper = this.entryIdCounter;\n    if (generatorWrapper != null) {\n      generatorWrapper.style.display = \"none\";\n    }\n  };\n  var AdManager = function (generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper && generatorWrapper.getRootNode ? generatorWrapper.getRootNode({\n      composed: true\n    }) : generatorWrapper;\n    if (generatorWrapper == null || !containsElement(getDocument(findEntry), findEntry)) {\n      throw createAdPlayError(aF, null, \"containerElement\", \"element\");\n    }\n    this.tasks = value;\n    this.tryCall = isCustomPlaybackAllowed(this.tasks || null);\n    this.handleThenable = hasPlaysInlineAttribute(this.tasks || null);\n    this.logError = String(Math.floorRectangle(1000000000 * Math.random()));\n    this.dispatchUnhandledRejection = false;\n    this.Signed64 = generatorWrapper;\n    this.resolvePromise = value != null;\n    imaSdkInstanceSingleton.entryIdCounter = 2;\n    this.settlePromise = hasPlaysInlineAttribute(value ? value : null);\n    findEntry = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n      style: \"position:absolute\"\n    });\n    generatorWrapper.insertBefore(findEntry, generatorWrapper.firstChild);\n    this.createDeferred = findEntry;\n    this.entryIdCounter = null;\n    if (isCustomElementSupported(this) && value) {\n      generatorWrapper = new VideoPlayer(value);\n    } else {\n      this.entryIdCounter = new VideoElementManager(this.createDeferred);\n      generatorWrapper = new VideoPlayer(this.entryIdCounter.tasks);\n    }\n    this.identityFunction = generatorWrapper;\n    this.getGeneratorException = this.setTimeoutWrapper = null;\n    if (generatorWrapper = this.entryIdCounter && imaSdkInstanceSingleton.createDeferred) {\n      generatorWrapper = !(isCustomElementSupported(this) || isIphone || isIpod || isTVDevice() || isAndroid && (!isAndroid || !matchesUserAgentVersion(androidVersionRegex, 4)));\n    }\n    if (generatorWrapper) {\n      this.setTimeoutWrapper = new VideoElementManager(this.createDeferred);\n      this.getGeneratorException = new VideoPlayer(this.setTimeoutWrapper.tasks);\n    }\n    this.handleAsync = CustomMap || null;\n    this.handleThenable = this.handleAsync != null;\n    if (isCustomElementSupported(this) && value) {\n      if (typeof value.getBoundingClientRect !== \"function\") {\n        CustomMap = this.createDeferred;\n        imaSdkInstanceSingleton.setTimeoutWrapper = CustomMap;\n      } else {\n        CustomMap = value;\n      }\n    } else {\n      CustomMap = this.createDeferred;\n    }\n    this.onFulfilled = CustomMap;\n    this.isDone = new AdLoader(this.createDeferred, this);\n    this.size = new Size(0, 0);\n    this.executeCallbacks = \"\";\n    if (value) {\n      value = createOrProcessURL(value.src || value.currentSrc);\n      if (value.toString().length < 200) {\n        this.executeCallbacks = value.toString();\n      } else if (value.tasks.length < 200) {\n        this.executeCallbacks = value.tasks;\n      }\n    }\n    this.convertStringToInt64 = new Map();\n    this.convertStringToInt64.set(\"videoDisplay1\", this.identityFunction);\n    if (this.getGeneratorException) {\n      this.convertStringToInt64.set(\"videoDisplay2\", this.getGeneratorException);\n    }\n    if (isMediaElementInvalid(this) && !imaSdkInstanceSingleton.tasks) {\n      console.warn(\"Custom media element must be a <video> or <audio> element. Viewability/audibility measurement will fail.\");\n    }\n  };\n  setTimeoutWrapper = AdManager.prototype;\n  setTimeoutWrapper.initializeMraid = function () {\n    this.dispatchUnhandledRejection = true;\n    if (this.entryIdCounter != null) {\n      this.entryIdCounter.initializeMraid();\n    }\n    if (this.setTimeoutWrapper != null) {\n      this.setTimeoutWrapper.initializeMraid();\n    }\n  };\n  setTimeoutWrapper.Generator = function () {\n    return this.dispatchUnhandledRejection;\n  };\n  setTimeoutWrapper.destroy = function () {\n    var generatorWrapper = this;\n    this.tasks = null;\n    markAsCompletedWrapper(this.entryIdCounter);\n    markAsCompletedWrapper(this.setTimeoutWrapper);\n    markAsCompletedWrapper(this.isDone);\n    this.identityFunction.isIphone(function () {\n      return markAsCompletedWrapper(generatorWrapper.identityFunction);\n    });\n    if (this.getGeneratorException != null) {\n      this.getGeneratorException.isIphone(function () {\n        return markAsCompletedWrapper(generatorWrapper.getGeneratorException);\n      });\n    }\n    removeElement(this.createDeferred);\n  };\n  setTimeoutWrapper.writeVarint = function () {\n    if (this.entryIdCounter != null) {\n      var generatorWrapper = this.entryIdCounter.entryIdCounter;\n      if (generatorWrapper != null) {\n        generatorWrapper.style.display = \"block\";\n      }\n    }\n  };\n  setTimeoutWrapper.isIpad = function (generatorWrapper) {\n    if (this.identityFunction !== generatorWrapper && this.entryIdCounter && this.setTimeoutWrapper && this.getGeneratorException) {\n      generatorWrapper.setVolume(this.identityFunction.getVolume());\n      generatorWrapper = this.identityFunction;\n      this.identityFunction = this.getGeneratorException;\n      this.getGeneratorException = generatorWrapper;\n      generatorWrapper = this.entryIdCounter;\n      this.entryIdCounter = this.setTimeoutWrapper;\n      this.setTimeoutWrapper = generatorWrapper;\n      this.setTimeoutWrapper.endsWith();\n      this.isDone.isIpad(this.identityFunction);\n    }\n  };\n  setTimeoutWrapper.endsWith = function () {\n    if (this.entryIdCounter != null) {\n      this.entryIdCounter.endsWith();\n    }\n  };\n  setTimeoutWrapper.findLastElement = function () {\n    if (this.handleThenable && this.handleAsync) {\n      return this.handleAsync;\n    } else {\n      if (this.entryIdCounter != null) {\n        return this.entryIdCounter.findLastElement();\n      } else {\n        return null;\n      }\n    }\n  };\n  var isCustomElementSupported = function (generatorWrapper) {\n    return shouldUseCustomPlayback(generatorWrapper.settlePromise) && generatorWrapper.resolvePromise;\n  };\n  var isMediaElementInvalid = function (generatorWrapper) {\n    var value = [\"VIDEO\", \"AUDIO\"],\n      CustomMap;\n    return isCustomElementSupported(generatorWrapper) && !!generatorWrapper.tasks && !value.includes((CustomMap = generatorWrapper.tasks.tagName) == null ? undefined : CustomMap.toUpperCase());\n  };\n  AdManager.prototype.getRectangleSize = function () {\n    return this.size;\n  };\n  var hasPlaysInlineAttribute = function (generatorWrapper) {\n    if (generatorWrapper != null && typeof generatorWrapper.getAttribute === \"function\" && generatorWrapper.getAttribute(\"playsinline\") != null) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  AdManager.prototype.throwIncidentError = function (generatorWrapper) {\n    this.identityFunction.throwIncidentError(generatorWrapper);\n  };\n  AdManager.prototype.createWarningError = function () {\n    this.identityFunction.createWarningError();\n  };\n  AdManager.prototype.destroy = AdManager.prototype.destroy;\n  AdManager.prototype.initializeMraid = AdManager.prototype.initializeMraid;\n  var AdErrorType = {\n    AD_LOAD: \"adLoadError\",\n    AD_PLAY: \"adPlayError\"\n  };\n  var AdError = function (generatorWrapper) {\n    var value = Error.call(this);\n    this.message = value.message;\n    if (\"stack\" in value) {\n      this.stack = value.stack;\n    }\n    this.data = generatorWrapper;\n  };\n  inheritPrototype(AdError, Error);\n  setTimeoutWrapper = AdError.prototype;\n  setTimeoutWrapper.getInnerError = function () {\n    var generatorWrapper = this.data.innerError;\n    if (generatorWrapper instanceof Object) {\n      return new AdError(generatorWrapper);\n    } else {\n      if (generatorWrapper != null) {\n        return Error(generatorWrapper);\n      } else {\n        return null;\n      }\n    }\n  };\n  setTimeoutWrapper.getMessage = function () {\n    return this.data.errorMessage;\n  };\n  setTimeoutWrapper.getErrorCode = function () {\n    return this.data.errorCode;\n  };\n  setTimeoutWrapper.getVastErrorCode = function () {\n    var generatorWrapper = this.getErrorCode();\n    if (generatorWrapper < 1000) {\n      return generatorWrapper;\n    } else {\n      return 900;\n    }\n  };\n  setTimeoutWrapper.getType = function () {\n    return this.data.type;\n  };\n  setTimeoutWrapper.toString = function () {\n    return \"AdError \" + this.getErrorCode() + \": \" + this.getMessage() + (this.getInnerError() != null ? \" Caused by: \" + this.getInnerError() : \"\");\n  };\n  AdError.prototype.getType = AdError.prototype.getType;\n  AdError.prototype.getVastErrorCode = AdError.prototype.getVastErrorCode;\n  AdError.prototype.getErrorCode = AdError.prototype.getErrorCode;\n  AdError.prototype.getMessage = AdError.prototype.getMessage;\n  AdError.prototype.getInnerError = AdError.prototype.getInnerError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error.AdError.Type\", AdErrorType);\n  var AdErrorEventType = {\n    AD_ERROR: \"adError\"\n  };\n  var AdErrorEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adError\");\n    this.hasError = generatorWrapper;\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdErrorEvent, AdEvent);\n  AdErrorEvent.prototype.getAdErrorResponseError = function () {\n    return this.hasError;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = function () {\n    return this.entryIdCounter;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = AdErrorEvent.prototype.getUserRequestContext;\n  AdErrorEvent.prototype.getAdErrorResponseError = AdErrorEvent.prototype.getAdErrorResponseError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error_event.AdErrorEvent.Type\", AdErrorEventType);\n  var AdEventTypes = {\n    AD_CAN_PLAY: \"adCanPlay\",\n    URLSchemeValidator: \"adStarted\",\n    CONTENT_PAUSE_REQUESTED: \"contentPauseRequested\",\n    CONTENT_RESUME_REQUESTED: \"contentResumeRequested\",\n    CLICK: \"click\",\n    VIDEO_CLICKED: \"videoClicked\",\n    VIDEO_ICON_CLICKED: \"videoIconClicked\",\n    convertNumberToString: \"engagedView\",\n    EXPANDED_CHANGED: \"expandedChanged\",\n    STARTED: \"start\",\n    AD_PROGRESS: \"adProgress\",\n    AD_BUFFERING: \"adBuffering\",\n    IMPRESSION: \"impression\",\n    optionalString: \"measurable_impression\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    setElementSrcFromTrustedUrl: \"externalActivityEvent\",\n    PAUSED: \"pause\",\n    RESUMED: \"resume\",\n    FIRST_QUARTILE: \"firstQuartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdQuartile\",\n    COMPLETE: \"complete\",\n    DURATION_CHANGE: \"durationChange\",\n    USER_CLOSE: \"userClose\",\n    getTopAccessibleContext: \"userRecall\",\n    searchDelimiterRegex: \"prefetched\",\n    LOADED: \"loaded\",\n    ALL_ADS_COMPLETED: \"allAdsCompleted\",\n    SKIPPED: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    LINEAR_CHANGED: \"linearChanged\",\n    SKIPPABLE_STATE_CHANGED: \"skippableStateChanged\",\n    AD_METADATA: \"adMetadata\",\n    AD_BREAK_FETCH_ERROR: \"adBreakFetchError\",\n    AD_BREAK_READY: \"adBreakReady\",\n    LOG: \"log\",\n    VOLUME_CHANGED: \"volumeChange\",\n    VOLUME_MUTED: \"mute\",\n    INTERACTION: \"interaction\",\n    safeHTMLMarker: \"companionBackfill\",\n    generatePageViewId: \"trackingUrlPinged\",\n    ampProjectUrlRegex: \"video_card_endcap_collapse\",\n    collectAncestorOrigins: \"video_card_endcap_dismiss\",\n    UrlDepthInfo: \"video_card_endcap_impression\",\n    safeStyleMarker: \"companionInitialized\",\n    emptySafeHTML: \"companionImpression\",\n    SafeHTML: \"companionClick\",\n    getContentWindow: \"mediaUrlPinged\",\n    LOAD_START: \"loadStart\",\n    isTablet: \"navigationRequested\"\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (undefined === CustomMap) {\n      CustomMap = null;\n    } else {\n      CustomMap = CustomMap;\n    }\n    AdEvent.call(this, generatorWrapper);\n    this.createUnsigned64 = value;\n    this.setTimeoutWrapper = CustomMap;\n  };\n  inheritPrototype(AdEvent, AdEvent);\n  AdEvent.prototype.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  AdEvent.prototype.getAdData = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdEvent.prototype.getAdData = AdEvent.prototype.getAdData;\n  AdEvent.prototype.getAdInstance = AdEvent.prototype.getAdInstance;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_event.AdEvent.Type\", AdEventTypes);\n  var AdMetadataEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adMetadata\", generatorWrapper);\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdMetadataEvent, AdEvent);\n  AdMetadataEvent.prototype.getAdPropertyHandler = function () {\n    return this.entryIdCounter;\n  };\n  AdMetadataEvent.prototype.getAdCuePoints = AdMetadataEvent.prototype.getAdPropertyHandler;\n  var AdBreakData = function (generatorWrapper) {\n    this.adBreakDuration = generatorWrapper.adBreakDuration;\n    this.adPosition = generatorWrapper.adPosition;\n    this.currentTime = generatorWrapper.currentTime;\n    this.duration = generatorWrapper.duration;\n    this.totalAds = generatorWrapper.totalAds;\n  };\n  var ContentTimeUpdateTimer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = generatorWrapper;\n    this.isDone = value;\n    this.tasks = this.setTimeoutWrapper.currentTime;\n    this.entryIdCounter = new Timer(250);\n    registerDisposable(this, this.entryIdCounter);\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    addListener(this.handleAsync, this.entryIdCounter, \"tick\", this.onFulfilled, false, this);\n  };\n  inheritPrototype(ContentTimeUpdateTimer, AdEnvironmentConfig);\n  ContentTimeUpdateTimer.prototype.getUserAgent = function () {\n    return this.tasks;\n  };\n  ContentTimeUpdateTimer.prototype.startTimer = function () {\n    notifyContentTimeUpdate(this);\n    this.entryIdCounter.startTimer();\n  };\n  ContentTimeUpdateTimer.prototype.stopTimer = function () {\n    this.entryIdCounter.stopTimer();\n  };\n  ContentTimeUpdateTimer.prototype.onFulfilled = function () {\n    var generatorWrapper = this.setTimeoutWrapper.currentTime;\n    if (generatorWrapper !== this.getUserAgent()) {\n      this.tasks = generatorWrapper;\n      notifyContentTimeUpdate(this);\n    }\n  };\n  var notifyContentTimeUpdate = function (generatorWrapper) {\n    var value = {};\n    value.currentTime = generatorWrapper.getUserAgent();\n    enqueueMessage(generatorWrapper.isDone, \"contentTimeUpdate\", \"contentTimeUpdate\", value);\n  };\n  var supportsSrcdoc = isWebKit && \"srcdoc\" in createElement(document, \"IFRAME\");\n  var writeDocument = function (generatorWrapper, value) {\n    generatorWrapper.open(\"text/html\", \"replace\");\n    writeSafeHtmlToDocument(generatorWrapper, sanitizeInput(String(value)));\n    generatorWrapper.closeCache();\n  };\n  var allowedCssFunctions = {\n    rgb: true,\n    rgba: true,\n    alpha: true,\n    rect: true,\n    image: true,\n    \"linear-gradient\": true,\n    \"radial-gradient\": true,\n    \"repeating-linear-gradient\": true,\n    \"repeating-radial-gradient\": true,\n    \"cubic-bezier\": true,\n    matrix: true,\n    perspective: true,\n    rotate: true,\n    rotate3d: true,\n    rotatex: true,\n    rotatey: true,\n    steps: true,\n    rotatez: true,\n    scaleRectangle: true,\n    scale3d: true,\n    scalex: true,\n    scaley: true,\n    scalez: true,\n    skew: true,\n    skewx: true,\n    skewy: true,\n    translate: true,\n    translate3d: true,\n    translatex: true,\n    translatey: true,\n    translatez: true\n  };\n  var sanitizeCssValue = function (generatorWrapper) {\n    generatorWrapper = trimString(generatorWrapper);\n    if (generatorWrapper == \"\") {\n      return null;\n    }\n    var value = String(generatorWrapper.slice(0, 4)).toLowerCase();\n    if ((value > \"url(\" ? -1 : value == \"url(\" ? 0 : 1) == 0) {\n      return null;\n    }\n    if (generatorWrapper.indexOf(\"(\") > 0) {\n      if (/\"|'/.test(generatorWrapper)) {\n        return null;\n      }\n      value = /([\\-\\w]+)\\(/g;\n      for (var CustomMap; CustomMap = value.exec(generatorWrapper);) {\n        if (!(CustomMap[1].toLowerCase() in allowedCssFunctions)) {\n          return null;\n        }\n      }\n    }\n    return generatorWrapper;\n  };\n  function getPrototypeDescriptor(generatorWrapper, value) {\n    generatorWrapper = globalScope[generatorWrapper];\n    if (generatorWrapper && generatorWrapper.prototype) {\n      return (value = Object.getOwnPropertyDescriptor(generatorWrapper.prototype, value)) && value.get || null;\n    } else {\n      return null;\n    }\n  }\n  function getStyleDescriptor(generatorWrapper) {\n    var value = globalScope.CSSStyleDeclaration;\n    return value && value.prototype &&",
  "de = AdError.prototype.getVastErrorCode;\n  AdError.prototype.getErrorCode = AdError.prototype.getErrorCode;\n  AdError.prototype.getMessage = AdError.prototype.getMessage;\n  AdError.prototype.getInnerError = AdError.prototype.getInnerError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error.AdError.Type\", AdErrorType);\n  var AdErrorEventType = {\n    AD_ERROR: \"adError\"\n  };\n  var AdErrorEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adError\");\n    this.hasError = generatorWrapper;\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdErrorEvent, AdEvent);\n  AdErrorEvent.prototype.getAdErrorResponseError = function () {\n    return this.hasError;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = function () {\n    return this.entryIdCounter;\n  };\n  AdErrorEvent.prototype.getUserRequestContext = AdErrorEvent.prototype.getUserRequestContext;\n  AdErrorEvent.prototype.getAdErrorResponseError = AdErrorEvent.prototype.getAdErrorResponseError;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_error_event.AdErrorEvent.Type\", AdErrorEventType);\n  var AdEventTypes = {\n    AD_CAN_PLAY: \"adCanPlay\",\n    URLSchemeValidator: \"adStarted\",\n    CONTENT_PAUSE_REQUESTED: \"contentPauseRequested\",\n    CONTENT_RESUME_REQUESTED: \"contentResumeRequested\",\n    CLICK: \"click\",\n    VIDEO_CLICKED: \"videoClicked\",\n    VIDEO_ICON_CLICKED: \"videoIconClicked\",\n    convertNumberToString: \"engagedView\",\n    EXPANDED_CHANGED: \"expandedChanged\",\n    STARTED: \"start\",\n    AD_PROGRESS: \"adProgress\",\n    AD_BUFFERING: \"adBuffering\",\n    IMPRESSION: \"impression\",\n    optionalString: \"measurable_impression\",\n    VIEWABLE_IMPRESSION: \"viewable_impression\",\n    convertSafeInteger: \"fully_viewable_audible_half_duration_impression\",\n    TagSessionFields: \"overlay_resize\",\n    Bf: \"overlay_unmeasurable_impression\",\n    Cf: \"overlay_unviewable_impression\",\n    addElementToAd: \"overlay_viewable_immediate_impression\",\n    createAdElement: \"overlay_viewable_end_of_session_impression\",\n    setElementSrcFromTrustedUrl: \"externalActivityEvent\",\n    PAUSED: \"pause\",\n    RESUMED: \"resume\",\n    FIRST_QUARTILE: \"firstQuartile\",\n    MIDPOINT: \"midpoint\",\n    THIRD_QUARTILE: \"thirdQuartile\",\n    COMPLETE: \"complete\",\n    DURATION_CHANGE: \"durationChange\",\n    USER_CLOSE: \"userClose\",\n    getTopAccessibleContext: \"userRecall\",\n    searchDelimiterRegex: \"prefetched\",\n    LOADED: \"loaded\",\n    ALL_ADS_COMPLETED: \"allAdsCompleted\",\n    SKIPPED: \"skip\",\n    getBooleanAdProperty: \"skipShown\",\n    LINEAR_CHANGED: \"linearChanged\",\n    SKIPPABLE_STATE_CHANGED: \"skippableStateChanged\",\n    AD_METADATA: \"adMetadata\",\n    AD_BREAK_FETCH_ERROR: \"adBreakFetchError\",\n    AD_BREAK_READY: \"adBreakReady\",\n    LOG: \"log\",\n    VOLUME_CHANGED: \"volumeChange\",\n    VOLUME_MUTED: \"mute\",\n    INTERACTION: \"interaction\",\n    safeHTMLMarker: \"companionBackfill\",\n    generatePageViewId: \"trackingUrlPinged\",\n    ampProjectUrlRegex: \"video_card_endcap_collapse\",\n    collectAncestorOrigins: \"video_card_endcap_dismiss\",\n    UrlDepthInfo: \"video_card_endcap_impression\",\n    safeStyleMarker: \"companionInitialized\",\n    emptySafeHTML: \"companionImpression\",\n    SafeHTML: \"companionClick\",\n    getContentWindow: \"mediaUrlPinged\",\n    LOAD_START: \"loadStart\",\n    isTablet: \"navigationRequested\"\n  };\n  var AdEvent = function (generatorWrapper, value, CustomMap) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    if (undefined === CustomMap) {\n      CustomMap = null;\n    } else {\n      CustomMap = CustomMap;\n    }\n    AdEvent.call(this, generatorWrapper);\n    this.createUnsigned64 = value;\n    this.setTimeoutWrapper = CustomMap;\n  };\n  inheritPrototype(AdEvent, AdEvent);\n  AdEvent.prototype.getAdInstance = function () {\n    return this.createUnsigned64;\n  };\n  AdEvent.prototype.getAdData = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdEvent.prototype.getAdData = AdEvent.prototype.getAdData;\n  AdEvent.prototype.getAdInstance = AdEvent.prototype.getAdInstance;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ad_event.AdEvent.Type\", AdEventTypes);\n  var AdMetadataEvent = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = null;\n    } else {\n      value = value;\n    }\n    AdEvent.call(this, \"adMetadata\", generatorWrapper);\n    this.entryIdCounter = value;\n  };\n  inheritPrototype(AdMetadataEvent, AdEvent);\n  AdMetadataEvent.prototype.getAdPropertyHandler = function () {\n    return this.entryIdCounter;\n  };\n  AdMetadataEvent.prototype.getAdCuePoints = AdMetadataEvent.prototype.getAdPropertyHandler;\n  var AdBreakData = function (generatorWrapper) {\n    this.adBreakDuration = generatorWrapper.adBreakDuration;\n    this.adPosition = generatorWrapper.adPosition;\n    this.currentTime = generatorWrapper.currentTime;\n    this.duration = generatorWrapper.duration;\n    this.totalAds = generatorWrapper.totalAds;\n  };\n  var ContentTimeUpdateTimer = function (generatorWrapper, value) {\n    AdEnvironmentConfig.call(this);\n    this.setTimeoutWrapper = generatorWrapper;\n    this.isDone = value;\n    this.tasks = this.setTimeoutWrapper.currentTime;\n    this.entryIdCounter = new Timer(250);\n    registerDisposable(this, this.entryIdCounter);\n    this.handleAsync = new EventDispatcher(this);\n    registerDisposable(this, this.handleAsync);\n    addListener(this.handleAsync, this.entryIdCounter, \"tick\", this.onFulfilled, false, this);\n  };\n  inheritPrototype(ContentTimeUpdateTimer, AdEnvironmentConfig);\n  ContentTimeUpdateTimer.prototype.getUserAgent = function () {\n    return this.tasks;\n  };\n  ContentTimeUpdateTimer.prototype.startTimer = function () {\n    notifyContentTimeUpdate(this);\n    this.entryIdCounter.startTimer();\n  };\n  ContentTimeUpdateTimer.prototype.stopTimer = function () {\n    this.entryIdCounter.stopTimer();\n  };\n  ContentTimeUpdateTimer.prototype.onFulfilled = function () {\n    var generatorWrapper = this.setTimeoutWrapper.currentTime;\n    if (generatorWrapper !== this.getUserAgent()) {\n      this.tasks = generatorWrapper;\n      notifyContentTimeUpdate(this);\n    }\n  };\n  var notifyContentTimeUpdate = function (generatorWrapper) {\n    var value = {};\n    value.currentTime = generatorWrapper.getUserAgent();\n    enqueueMessage(generatorWrapper.isDone, \"contentTimeUpdate\", \"contentTimeUpdate\", value);\n  };\n  var supportsSrcdoc = isWebKit && \"srcdoc\" in createElement(document, \"IFRAME\");\n  var writeDocument = function (generatorWrapper, value) {\n    generatorWrapper.open(\"text/html\", \"replace\");\n    writeSafeHtmlToDocument(generatorWrapper, sanitizeInput(String(value)));\n    generatorWrapper.closeCache();\n  };\n  var allowedCssFunctions = {\n    rgb: true,\n    rgba: true,\n    alpha: true,\n    rect: true,\n    image: true,\n    \"linear-gradient\": true,\n    \"radial-gradient\": true,\n    \"repeating-linear-gradient\": true,\n    \"repeating-radial-gradient\": true,\n    \"cubic-bezier\": true,\n    matrix: true,\n    perspective: true,\n    rotate: true,\n    rotate3d: true,\n    rotatex: true,\n    rotatey: true,\n    steps: true,\n    rotatez: true,\n    scaleRectangle: true,\n    scale3d: true,\n    scalex: true,\n    scaley: true,\n    scalez: true,\n    skew: true,\n    skewx: true,\n    skewy: true,\n    translate: true,\n    translate3d: true,\n    translatex: true,\n    translatey: true,\n    translatez: true\n  };\n  var sanitizeCssValue = function (generatorWrapper) {\n    generatorWrapper = trimString(generatorWrapper);\n    if (generatorWrapper == \"\") {\n      return null;\n    }\n    var value = String(generatorWrapper.slice(0, 4)).toLowerCase();\n    if ((value > \"url(\" ? -1 : value == \"url(\" ? 0 : 1) == 0) {\n      return null;\n    }\n    if (generatorWrapper.indexOf(\"(\") > 0) {\n      if (/\"|'/.test(generatorWrapper)) {\n        return null;\n      }\n      value = /([\\-\\w]+)\\(/g;\n      for (var CustomMap; CustomMap = value.exec(generatorWrapper);) {\n        if (!(CustomMap[1].toLowerCase() in allowedCssFunctions)) {\n          return null;\n        }\n      }\n    }\n    return generatorWrapper;\n  };\n  function getPrototypeDescriptor(generatorWrapper, value) {\n    generatorWrapper = globalScope[generatorWrapper];\n    if (generatorWrapper && generatorWrapper.prototype) {\n      return (value = Object.getOwnPropertyDescriptor(generatorWrapper.prototype, value)) && value.get || null;\n    } else {\n      return null;\n    }\n  }\n  function getStyleDescriptor(generatorWrapper) {\n    var value = globalScope.CSSStyleDeclaration;\n    return value && value.prototype && value.prototype[generatorWrapper] || null;\n  }\n  if (!getPrototypeDescriptor(\"Element\", \"attributes\")) {\n    getPrototypeDescriptor(\"Node\", \"attributes\");\n  }\n  if (!getPrototypeDescriptor(\"Element\", \"innerHTML\")) {\n    getPrototypeDescriptor(\"HTMLElement\", \"innerHTML\");\n  }\n  getPrototypeDescriptor(\"Node\", \"nodeName\");\n  getPrototypeDescriptor(\"Node\", \"nodeType\");\n  getPrototypeDescriptor(\"Node\", \"parentNode\");\n  getPrototypeDescriptor(\"Node\", \"childNodes\");\n  if (!getPrototypeDescriptor(\"HTMLElement\", \"style\")) {\n    getPrototypeDescriptor(\"Element\", \"style\");\n  }\n  getPrototypeDescriptor(\"HTMLStyleElement\", \"sheet\");\n  var AdsManagerLoaderInteractionEvent = getStyleDescriptor(\"getPropertyValue\");\n  var AdsManagerLoaderProgressEvent = getStyleDescriptor(\"setProperty\");\n  if (!getPrototypeDescriptor(\"Element\", \"namespaceURI\")) {\n    getPrototypeDescriptor(\"Node\", \"namespaceURI\");\n  }\n  function invokeDescriptorMethod(generatorWrapper, value, CustomMap, findEntry) {\n    if (generatorWrapper) {\n      return generatorWrapper.apply(value, findEntry);\n    }\n    if (isIE && document.documentMode < 10) {\n      if (!value[CustomMap].call) {\n        throw Error(\"IE Clobbering detected\");\n      }\n    } else if (typeof value[CustomMap] != \"function\") {\n      throw Error(\"Clobbering detected\");\n    }\n    return value[CustomMap].apply(value, findEntry);\n  }\n  var webkitSpecificStyles = {\n    \"-webkit-border-horizontal-spacing\": true,\n    \"-webkit-border-vertical-spacing\": true\n  };\n  var sanitizeStyle = function (generatorWrapper) {\n    if (!generatorWrapper) {\n      return emptySafeHTML;\n    }\n    var value = document.createElement(\"div\").style;\n    sanitizeCssText(generatorWrapper).forEach(function (CustomMap) {\n      var findEntry = isWebKit && CustomMap in webkitSpecificStyles ? CustomMap : CustomMap.replace(/^-(?:apple|css|epub|khtml|moz|mso?|o|rim|wap|webkit|xv)-(?=[a-z])/i, \"\");\n      if (findEntry.lastIndexOf(\"--\", 0) != 0 && findEntry.lastIndexOf(\"var\", 0) != 0) {\n        CustomMap = invokeDescriptorMethod(AdsManagerLoaderInteractionEvent, generatorWrapper, generatorWrapper.getPropertyValue ? \"getPropertyValue\" : \"getAttribute\", [CustomMap]) || \"\";\n        CustomMap = sanitizeCssValue(CustomMap);\n        if (CustomMap != null) {\n          invokeDescriptorMethod(AdsManagerLoaderProgressEvent, value, value.setProperty ? \"setProperty\" : \"setAttribute\", [findEntry, CustomMap]);\n        }\n      }\n    });\n    return new SafeHTML(value.cssText || \"\", safeHTMLMarker);\n  };\n  var sanitizeCssText = function (generatorWrapper) {\n    if (isArrayLike(generatorWrapper)) {\n      generatorWrapper = copyArray(generatorWrapper);\n    } else {\n      generatorWrapper = keysOfObject(generatorWrapper);\n      removeElement(generatorWrapper, \"cssText\");\n    }\n    return generatorWrapper;\n  };\n  var emptyStringArray = identityFunction([\"\"]);\n  var AdLoader = function (generatorWrapper, value, CustomMap) {\n    AdEnvironmentConfig.call(this);\n    this.tasks = generatorWrapper;\n    this.handleAsync = value;\n    this.dispatchUnhandledRejection = CustomMap;\n    this.entryIdCounter = null;\n    this.handleThenable = \"\";\n    this.resolvePromise = createSafeStyleFromTemplate(emptyStringArray);\n    this.logError = 0;\n    this.isDone = this.slot = this.setTimeoutWrapper = null;\n    this.onFulfilled = \"\";\n  };\n  inheritPrototype(AdLoader, AdEnvironmentConfig);\n  AdLoader.prototype.initialize = function (generatorWrapper) {\n    this.onFulfilled = generatorWrapper;\n    generatorWrapper = \"about:blank\";\n    if (isIE) {\n      generatorWrapper = \"\";\n    }\n    this.setTimeoutWrapper = createElementWithOptionalClassesAndAttributes(\"IFRAME\", {\n      src: generatorWrapper,\n      allowtransparency: true,\n      background: \"transparent\",\n      title: \"Advertisement\"\n    });\n    applyStyleOrRemove(this.setTimeoutWrapper, {\n      display: \"none\",\n      width: \"0\",\n      height: \"0\"\n    });\n    generatorWrapper = this.tasks.Signed64;\n    generatorWrapper.appendChild(this.setTimeoutWrapper);\n    generatorWrapper = generatorWrapper.ownerDocument;\n    generatorWrapper = generatorWrapper.defaultView || generatorWrapper.parentWindow;\n    if (this.isDone == null) {\n      this.isDone = new EventDispatcher(this);\n    }\n    this.isDone.window(generatorWrapper, \"message\", this.handleThenable);\n    generatorWrapper = '<body><script src=\"//imasdk.googleapis.com/js/sdkloader/loader.js\">\\x3c/script><script>loader = new VPAIDLoader(false, \"' + (this.onFulfilled + '\");\\x3c/script></body>');\n    if (isIos || isAndroidBrowser || isEdge) {\n      var value = this.setTimeoutWrapper.contentWindow;\n      if (value) {\n        writeDocument(value.document, generatorWrapper);\n      }\n    } else {\n      value = this.setTimeoutWrapper;\n      if (supportsSrcdoc) {\n        generatorWrapper = sanitizeInput(generatorWrapper);\n        value.srcdoc = unwrapSafeHtml(generatorWrapper);\n      } else if (value = value.contentWindow) {\n        writeDocument(value.document, generatorWrapper);\n      }\n    }\n  };\n  AdLoader.prototype.handleThenable = function (generatorWrapper) {\n    try {\n      var value = generatorWrapper.entryIdCounter.data;\n      try {\n        var CustomMap = JSON.parse(value);\n      } catch (rejectFunction) {\n        return;\n      }\n      var findEntry = CustomMap.session;\n      if (findEntry != null && this.onFulfilled === findEntry) {\n        switch (CustomMap.type) {\n          case \"friendlyReady\":\n            var iterateEntries = getVideoElement(this);\n            if (iterateEntries != null) {\n              this.entryIdCounter = iterateEntries;\n              this.handleThenable = iterateEntries.currentSrc;\n              var createCircularNode = iterateEntries.style.cssText;\n              var entryIdCounter = document.implementation.createHTMLDocument(\"\").createElement(\"DIV\");\n              entryIdCounter.style.cssText = createCircularNode;\n              this.resolvePromise = sanitizeStyle(entryIdCounter.style);\n              this.logError = iterateEntries.currentTime;\n            } else {\n              var key = this.tasks.Signed64;\n              var value = \"border: 0; margin: 0; padding: 0; position: absolute; \";\n              var entry = this.tasks.getRectangleSize();\n              value += \"width:\" + entry.width + \"px;\";\n              value += \"height:\" + entry.height + \"px;\";\n              this.entryIdCounter = createElementWithOptionalClassesAndAttributes(\"VIDEO\", {\n                style: value,\n                autoplay: true\n              });\n              key.appendChild(this.entryIdCounter);\n            }\n            var currentEntry = this.tasks.Signed64;\n            key = \"border: 0; margin: 0; padding: 0;position: absolute; \";\n            var foundEntry = getElementSizeIfVisible(this.entryIdCounter);\n            key += \"width:\" + foundEntry.width + \"px;\";\n            key += \"height:\" + foundEntry.height + \"px;\";\n            this.slot = createElementWithOptionalClassesAndAttributes(\"DIV\", {\n              style: key\n            });\n            currentEntry.appendChild(this.slot);\n            try {\n              this.setTimeoutWrapper.contentWindow.loader.initFriendly(this.entryIdCounter, this.slot);\n            } catch (rejectFunction) {\n              sendAdLoaderError(this);\n            }\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"becameLinear\":\n            if (this.entryIdCounter && !isMobile() && !isTablet()) {\n              applyStyleOrRemove(this.entryIdCounter, {\n                visibility: \"visible\"\n              });\n            }\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"becameNonlinear\":\n            hideVideoElement(this);\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            break;\n          case \"startAd\":\n            currentEntry = {};\n            if (this.entryIdCounter) {\n              value = this.entryIdCounter.paused;\n              var resolveFunction = this.entryIdCounter.currentTime > 0;\n              if (resolveFunction && !value) {\n                currentEntry.apl = \"1\";\n              } else {\n                currentEntry.apl = \"0\";\n              }\n              if (value) {\n                currentEntry.ip = \"1\";\n              } else {\n                currentEntry.ip = \"0\";\n              }\n              if (resolveFunction) {\n                currentEntry.iavp = \"1\";\n              } else {\n                currentEntry.iavp = \"0\";\n              }\n            } else {\n              currentEntry.apl = \"n\";\n            }\n            markAsCompleted.getAdInstance().report(99, currentEntry);\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n            this.writeVarint();\n            break;\n          default:\n            enqueueMessage(this.handleAsync, \"vpaid\", \"\", value);\n        }\n      }\n    } catch (rejectFunction) {\n      sendAdLoaderError(this);\n    }\n  };\n  var sendAdLoaderError = function (generatorWrapper) {\n    var value = {\n      type: \"error\"\n    };\n    value.session = generatorWrapper.onFulfilled;\n    value = JSON.stringify(value);\n    generatorWrapper.sendPostMessage(value);\n  };\n  AdLoader.prototype.sendPostMessage = function (generatorWrapper) {\n    window.sendPostMessage(generatorWrapper, \"*\");\n  };\n  var getVideoElement = function (generatorWrapper) {\n    return (generatorWrapper.dispatchUnhandledRejection === \"videoDisplayUnknown\" ? generatorWrapper.tasks.identityFunction : generatorWrapper.tasks.convertStringToInt64.get(generatorWrapper.dispatchUnhandledRejection)).tryCall.entryIdCounter;\n  };\n  AdLoader.prototype.writeVarint = function () {\n    if (getVideoElement(this) != null) {\n      this.tasks.writeVarint();\n    }\n  };\n  var hideVideoElement = function (generatorWrapper) {\n    if (generatorWrapper.entryIdCounter && !isMobile() && !isTablet()) {\n      applyStyleOrRemove(generatorWrapper.entryIdCounter, {\n        visibility: \"hidden\"\n      });\n    }\n  };\n  AdLoader.prototype.getAdEnvironment = function () {\n    markAsCompletedWrapper(this.isDone);\n    this.isDone = null;\n    removeElement(this.slot);\n    this.slot = null;\n    removeElement(this.setTimeoutWrapper);\n    this.setTimeoutWrapper = null;\n    var generatorWrapper = getVideoElement(this);\n    if (generatorWrapper != null) {\n      var value = this.resolvePromise;\n      if (value instanceof SafeHTML && value.constructor === SafeHTML) {\n        generatorWrapper.style.cssText = value.entryIdCounter;\n      } else {\n        generatorWrapper.style.cssText = \"type_error:SafeStyle\";\n      }\n      if (isMobile() || isTablet()) {\n        generatorWrapper.src = this.handleThenable;\n        generatorWrapper.currentTime = this.logError;\n      } else {\n        generatorWrapper.removeAttribute(\"src\");\n        this.tasks.endsWith();\n      }\n    } else {\n      removeElement(this.entryIdCounter);\n      this.entryIdCounter = null;\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  var VpaidEventManager = function (generatorWrapper, value) {\n    tryCall.call(this);\n    this.tasks = generatorWrapper;\n    this.setTimeoutWrapper = value;\n    this.entryIdCounter = new Map();\n  };\n  inheritPrototype(VpaidEventManager, tryCall);\n  var handleVpaidEvent = function (generatorWrapper, value) {\n    try {\n      var CustomMap = value.setPrototypeOfPolyfill;\n      var findEntry = CustomMap.session;\n      switch (CustomMap.vpaidEventType) {\n        case \"createFriendlyIframe\":\n          value = \"videoDisplayUnknown\";\n          if (CustomMap.videoDisplayName) {\n            value = CustomMap.videoDisplayName;\n          }\n          var iterateEntries = CustomMap.session;\n          var createCircularNode = new AdLoader(generatorWrapper.tasks, generatorWrapper.setTimeoutWrapper, value);\n          generatorWrapper.entryIdCounter.set(iterateEntries, createCircularNode);\n          createCircularNode.initialize(iterateEntries);\n          break;\n        case \"vpaidNonLinear\":\n          var entryIdCounter = generatorWrapper.entryIdCounter.get(findEntry);\n          if (entryIdCounter) {\n            hideVideoElement(entryIdCounter);\n          }\n          break;\n        case \"destroyFriendlyIframe\":\n          var key = generatorWrapper.entryIdCounter.get(findEntry);\n          if (key) {\n            key.markAsCompleted();\n            generatorWrapper.entryIdCounter.delete(findEntry);\n          }\n      }\n    } catch (value) {\n      markAsCompleted.getAdInstance().report(125, {\n        msg: value.message\n      });\n    }\n  };\n  VpaidEventManager.prototype.getAdEnvironment = function () {\n    this.entryIdCounter.forEach(function (generatorWrapper) {\n      generatorWrapper.markAsCompleted();\n    });\n  };\n  var AdConfiguration = function (generatorWrapper) {\n    this.getSingletonInstance = onFulfilled(generatorWrapper);\n  };\n  inheritPrototype(AdConfiguration, AdElement);\n  AdConfiguration.prototype.getAdStateValue = function () {\n    return dispatchUnhandledRejection(this, 1);\n  };\n  AdConfiguration.prototype.getAdManifestVersion = function () {\n    return getAdPropertyNumeric(this, 5);\n  };\n  var AdsManagerLoaderViewModeChangedEvent = parseAndValidateArray(AdConfiguration);\n  var AdCookieManager = function () {\n    this.entryIdCounter = window;\n    this.tasks = 0;\n  };\n  var checkAdCookie = function (generatorWrapper, value) {\n    if (generatorWrapper.tasks === 0) {\n      if (value && evaluateCondition(\"__gads\", value, generatorWrapper.entryIdCounter)) {\n        value = true;\n      } else {\n        var CustomMap = generatorWrapper.entryIdCounter;\n        if (getBooleanAdProperty(value, 5)) {\n          setCookieValue(\"GoogleAdServingTest\", \"Good\", undefined, CustomMap);\n        }\n        if (CustomMap = evaluateCondition(\"GoogleAdServingTest\", value, generatorWrapper.entryIdCounter) === \"Good\") {\n          var findEntry = generatorWrapper.entryIdCounter;\n          if (getBooleanAdProperty(value, 5) && findEntry.origin !== \"null\") {\n            new CookieManager(findEntry.document).removeElement(\"GoogleAdServingTest\", undefined, undefined);\n          }\n        }\n        value = CustomMap;\n      }\n      if (value) {\n        generatorWrapper.tasks = 2;\n      } else {\n        generatorWrapper.tasks = 1;\n      }\n    }\n    return generatorWrapper.tasks === 2;\n  };\n  var setAdCookie = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (findEntry) {\n      var iterateEntries = getAdPropertyFallbackNumeric(CustomMap, 2) - Date.now() / 1000;\n      iterateEntries = {\n        lowOrderInteger: Math.max(iterateEntries, 0),\n        path: dispatchUnhandledRejection(CustomMap, 3),\n        domain: dispatchUnhandledRejection(CustomMap, 4),\n        transformElementContent: false\n      };\n      CustomMap = CustomMap.getAdStateValue();\n      generatorWrapper = generatorWrapper.entryIdCounter;\n      if (getBooleanAdProperty(findEntry, 5)) {\n        setCookieValue(value, CustomMap, iterateEntries, generatorWrapper);\n      }\n    }\n  };\n  var processAdCookie = function (generatorWrapper, value, CustomMap) {\n    if (CustomMap && evaluateCondition(value, CustomMap, generatorWrapper.entryIdCounter)) {\n      var findEntry = generatorWrapper.entryIdCounter.location.hostname;\n      if (findEntry === \"localhost\") {\n        findEntry = [\"localhost\"];\n      } else {\n        findEntry = findEntry.split(\".\");\n        if (findEntry.length < 2) {\n          findEntry = [];\n        } else {\n          for (var iterateEntries = [], createCircularNode = 0; createCircularNode < findEntry.length - 1; ++createCircularNode) {\n            iterateEntries.push(findEntry.slice(createCircularNode).join(\".\"));\n          }\n          findEntry = iterateEntries;\n        }\n      }\n      findEntry = getIterator(findEntry);\n      for (var entryIdCounter = findEntry.next(); !entryIdCounter.done; entryIdCounter = findEntry.next()) {\n        iterateEntries = value;\n        createCircularNode = generatorWrapper.entryIdCounter;\n        entryIdCounter = entryIdCounter.value;\n        if (getBooleanAdProperty(CustomMap, 5) && createCircularNode.origin !== \"null\") {\n          new CookieManager(createCircularNode.document).removeElement(iterateEntries, \"/\", entryIdCounter);\n        }\n      }\n    }\n  };\n  var SimpleSet = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  setTimeoutWrapper = SimpleSet.prototype;\n  setTimeoutWrapper.isEmpty = function () {\n    return this.entryIdCounter.length === 0 && this.tasks.length === 0;\n  };\n  setTimeoutWrapper.clearAll = function () {\n    this.entryIdCounter = [];\n    this.tasks = [];\n  };\n  setTimeoutWrapper.rectangleContains = function (generatorWrapper) {\n    return containsElement(this.entryIdCounter, generatorWrapper) || containsElement(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.removeElement = function (generatorWrapper) {\n    var value = this.entryIdCounter;\n    value: {\n      var CustomMap = value.length - 1;\n      if (CustomMap < 0) {\n        CustomMap = Math.max(0, value.length + CustomMap);\n      }\n      if (typeof value === \"string\") {\n        if (typeof generatorWrapper !== \"string\" || generatorWrapper.length != 1) {\n          CustomMap = -1;\n        } else {\n          CustomMap = value.lastIndexOf(generatorWrapper, CustomMap);\n        }\n      } else {\n        for (; CustomMap >= 0; CustomMap--) {\n          if (CustomMap in value && value[CustomMap] === generatorWrapper) {\n            break value;\n          }\n        }\n        CustomMap = -1;\n      }\n    }\n    if (CustomMap >= 0) {\n      removeElementAtIndex(value, CustomMap);\n      value = true;\n    } else {\n      value = false;\n    }\n    return value || removeElement(this.tasks, generatorWrapper);\n  };\n  setTimeoutWrapper.hasPlatform = function () {\n    for (var generatorWrapper = [], value = this.entryIdCounter.length - 1; value >= 0; --value) {\n      generatorWrapper.push(this.entryIdCounter[value]);\n    }\n    var CustomMap = this.tasks.length;\n    for (value = 0; value < CustomMap; ++value) {\n      generatorWrapper.push(this.tasks[value]);\n    }\n    return generatorWrapper;\n  };\n  var zone = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter, key) {\n    AdEnvironmentConfig.call(this);\n    var value = this;\n    this.resolvePromise = generatorWrapper;\n    this.entryIdCounter = value;\n    this.adTagUrl = CustomMap;\n    this.toArray = findEntry;\n    this.isObjectOrFunction = iterateEntries;\n    this.dispatchUnhandledRejection = entryIdCounter;\n    this.isArrayLike = key;\n    this.handleAsync = new AdDisplayOptions();\n    this.handleThenable = false;\n    this.volume = 1;\n    this.toArray = findEntry;\n    this.definePropertyPolyfill = -1;\n    this.onFulfilled = this.setTimeoutWrapper = this.tasks = null;\n    this.isDone = new ContentTimeUpdateTimer({\n      currentTime: 0\n    }, this.dispatchUnhandledRejection);\n    this.handleThenable = new SimpleSet();\n    this.assignPolyfill = this.totalAdBufferingTime = false;\n    this.year = new Map();\n    this.createIterator = this.wrapGeneratorToPromise = false;\n    this.sliceArguments = new VpaidEventManager(value, entryIdCounter);\n    registerDisposable(this, this.sliceArguments);\n    this.logError = createCircularNode && this.entryIdCounter.handleAsync != null;\n    this.tryCall = function () {\n      var entry = value.entryIdCounter.identityFunction;\n      var currentEntry = entry.getCurrentTime();\n      entry = entry.getDuration();\n      return {\n        currentTime: currentEntry,\n        duration: entry,\n        isPlaying: true,\n        volume: value.volume\n      };\n    };\n    this.updateMaxSize = new EventDispatcher(this);\n    this.updateMaxSize.window(this.dispatchUnhandledRejection, \"adsManager\", this.isSafari);\n  };\n  inheritPrototype(zone, AdEnvironmentConfig);\n  zone.prototype.isSafari = function (generatorWrapper) {\n    var value = this;\n    var CustomMap = generatorWrapper.messageType;\n    var findEntry = generatorWrapper.setPrototypeOfPolyfill;\n    var iterateEntries = {};\n    switch (CustomMap) {\n      case \"error\":\n        CJ(this);\n        DJ(this, findEntry);\n        break;\n      case \"contentPauseRequested\":\n        markAsCompleted.getAdInstance().report(130);\n        EJ(this);\n        this.isDone.stopTimer();\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"contentResumeRequested\":\n        GJ(this, function () {\n          dispatchAdEvent(value, CustomMap, findEntry);\n        });\n        break;\n      case \"remainingTime\":\n        this.definePropertyPolyfill = findEntry.remainingTime;\n        break;\n      case \"skip\":\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"log\":\n        dispatchAdEvent(this, CustomMap, findEntry, findEntry.logData);\n        break;\n      case \"companionBackfill\":\n        generatorWrapper = getFromGlobalScope(\"window.google_show_companion_ad\");\n        if (generatorWrapper != null) {\n          generatorWrapper();\n        }\n        break;\n      case \"skipShown\":\n        this.handleThenable = true;\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"interaction\":\n        dispatchAdEvent(this, CustomMap, findEntry, findEntry.interactionData);\n        break;\n      case \"vpaidEvent\":\n        handleVpaidEvent(this.sliceArguments, generatorWrapper);\n        break;\n      case \"skippableStateChanged\":\n        iterateEntries = findEntry.adData;\n        if (iterateEntries.skippable != null) {\n          this.handleThenable = iterateEntries.skippable;\n        }\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"volumeChange\":\n        iterateEntries = findEntry.adData;\n        if (iterateEntries != null && typeof iterateEntries.volume === \"number\") {\n          this.volume = iterateEntries.volume;\n        }\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"firstQuartile\":\n        dispatchAdEvent(this, defineAdEventTypes.firstQuartile, findEntry);\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"thirdQuartile\":\n        dispatchAdEvent(this, defineAdEventTypes.thirdQuartile, findEntry);\n        dispatchAdEvent(this, CustomMap, findEntry);\n        break;\n      case \"updateGfpCookie\":\n        HJ(this, findEntry);\n        break;\n      default:\n        dispatchAdEvent(this, CustomMap, findEntry);\n    }\n  };\n  var dispatchAdEvent = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (CustomMap.companions == null) {\n      var iterateEntries = generatorWrapper.year.get(CustomMap.adId);\n      if (iterateEntries != null) {\n        CustomMap.companions = iterateEntries;\n      } else {\n        CustomMap.companions = [];\n      }\n    }\n    var createCircularNode = CustomMap.adData;\n    if (iterateEntries = createCircularNode == null ? null : new year(createCircularNode)) {\n      generatorWrapper.tasks = iterateEntries;\n    }\n    switch (value) {\n      case \"adBreakReady\":\n      case \"mediaUrlPinged\":\n        value = new AdEvent(value, null, CustomMap);\n        break;\n      case \"adMetadata\":\n        value = null;\n        if (CustomMap.adCuePoints != null) {\n          value = new CuePoints(CustomMap.adCuePoints);\n        }\n        value = new AdMetadataEvent(iterateEntries, value);\n        break;\n      case \"allAdsCompleted\":\n        generatorWrapper.tasks = null;\n        generatorWrapper.wrapGeneratorToPromise = true;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"contentPauseRequested\":\n        generatorWrapper.createIterator = false;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"contentResumeRequested\":\n        generatorWrapper.tasks = null;\n        generatorWrapper.createIterator = true;\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"loaded\":\n        generatorWrapper.definePropertyPolyfill = iterateEntries.getDuration();\n        generatorWrapper.handleThenable = false;\n        if (isOnScreenDetectionEnabled()) {\n          findEntry = generatorWrapper.resolvePromise;\n          CustomMap = generatorWrapper.isObjectOrFunction;\n          findEntry.tasks.set(getAdQueryId(iterateEntries), generatorWrapper.tryCall);\n          if (isInitialized(findEntry)) {\n            calculateViewabilityData(findEntry, \"loaded\", getAdQueryId(iterateEntries), CustomMap);\n          }\n        }\n        value = new AdEvent(value, iterateEntries, createCircularNode);\n        break;\n      case \"start\":\n        generatorWrapper.year.set(CustomMap.adId, CustomMap.companions);\n        if (generatorWrapper.entryIdCounter.findLastElement() != null) {\n          if (generatorWrapper.setTimeoutWrapper == null) {\n            generatorWrapper.setTimeoutWrapper = new EventController();\n            generatorWrapper.updateMaxSize.window(generatorWrapper.setTimeoutWrapper, \"click\", generatorWrapper.ErrorLogger);\n          } else {\n            resetEventController(generatorWrapper.setTimeoutWrapper);\n          }\n          initializeEventController(generatorWrapper.setTimeoutWrapper, generatorWrapper.entryIdCounter.findLastElement());\n        }\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"complete\":\n        if (generatorWrapper.setTimeoutWrapper != null) {\n          resetEventController(generatorWrapper.setTimeoutWrapper);\n        }\n        if (isOnScreenDetectionEnabled()) {\n          unregisterElement(generatorWrapper.resolvePromise, generatorWrapper.tryCall, getAdQueryId(iterateEntries));\n        }\n        generatorWrapper.tasks = null;\n        generatorWrapper.year.delete(CustomMap.adId);\n        value = new AdEvent(value, iterateEntries);\n        break;\n      case \"log\":\n        CustomMap = null;\n        if (findEntry != null && findEntry.type != null) {\n          createCircularNode = findEntry.type;\n          createCircularNode = createCircularNode === \"adLoadError\" || createCircularNode === \"adPlayError\";\n        } else {\n          createCircularNode = false;\n        }\n        if (createCircularNode) {\n          CustomMap = {\n            adError: new AdError(findEntry)\n          };\n        }\n        value = new AdEvent(value, iterateEntries, CustomMap);\n        break;\n      case \"interaction\":\n        value = new AdEvent(value, iterateEntries, findEntry);\n        break;\n      case \"adProgress\":\n        value = new AdEvent(value, iterateEntries, new AdBreakData(CustomMap));\n        break;\n      default:\n        value = new AdEvent(value, iterateEntries);\n    }\n    generatorWrapper.dispatchEvent(value);\n    if (generatorWrapper.wrapGeneratorToPromise && generatorWrapper.createIterator) {\n      generatorWrapper.destroy();\n    }\n  };\n  var DJ = function (generatorWrapper, value) {\n    var CustomMap = new AdErrorEvent(new AdError(value));\n    if (generatorWrapper.totalAdBufferingTime) {\n      generatorWrapper.dispatchEvent(CustomMap);\n      if (isOnScreenDetectionEnabled() && generatorWrapper.tasks) {\n        unregisterElement(generatorWrapper.resolvePromise, generatorWrapper.tryCall, getAdQueryId(generatorWrapper.tasks));\n      }\n      generatorWrapper.tasks = null;\n    } else {\n      generatorWrapper.handleThenable.tasks.push(CustomMap);\n    }\n    generatorWrapper = {\n      hasError: value.errorCode,\n      vis: getVisibilityStateCode(document)\n    };\n    markAsCompleted.getAdInstance().report(7, generatorWrapper);\n  };\n  var triggerEvent = function (generatorWrapper, value, CustomMap) {\n    enqueueMessage(generatorWrapper.dispatchUnhandledRejection, \"adsManager\", value, CustomMap);\n  };\n  var GJ = function (generatorWrapper, value) {\n    markAsCompleted.getAdInstance().report(131);\n    CJ(generatorWrapper, value);\n    if (!generatorWrapper.handleIteratorResult()) {\n      generatorWrapper.isDone.startTimer();\n    }\n  };\n  var EJ = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && value.ensureString != null) {\n      value.ensureString();\n    }\n  };\n  var CJ = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && CustomMap.isIphone != null) {\n      CustomMap.isIphone(value);\n    } else if (value) {\n      value();\n    }\n  };\n  setTimeoutWrapper = zone.prototype;\n  setTimeoutWrapper.configureAdsManager = function (generatorWrapper, value) {\n    this.onFulfilled = generatorWrapper;\n    if (generatorWrapper.currentTime != null) {\n      this.isDone = new ContentTimeUpdateTimer(generatorWrapper, this.dispatchUnhandledRejection);\n      this.isDone.startTimer();\n    }\n    if (value != null) {\n      this.handleAsync = JJ(value);\n    }\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (this.handleThenable.isEmpty()) {\n      var iterateEntries = this.entryIdCounter;\n      var createCircularNode = null;\n      if (iterateEntries.tasks && findEntry == null) {\n        createCircularNode = {\n          customProperty3: \"setnull\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks === findEntry) {\n        createCircularNode = {\n          customProperty3: \"match\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks !== findEntry) {\n        createCircularNode = isCustomPlaybackAllowed(findEntry || null);\n        var entryIdCounter = hasPlaysInlineAttribute(findEntry || null);\n        createCircularNode = {\n          customProperty3: \"diff\",\n          isWebKit: iterateEntries.tryCall,\n          isGecko: createCircularNode,\n          getParentFrame: iterateEntries.handleThenable,\n          isAccessibleFrame: entryIdCounter\n        };\n      }\n      if (!iterateEntries.tasks && findEntry) {\n        createCircularNode = {\n          customProperty3: \"new\"\n        };\n      }\n      if (createCircularNode) {\n        createCircularNode.custVid = iterateEntries.logError;\n        markAsCompleted.getAdInstance().report(93, createCircularNode);\n      }\n      if (findEntry != null) {\n        iterateEntries.settlePromise = hasPlaysInlineAttribute(findEntry);\n        if (shouldUseCustomPlayback(iterateEntries.settlePromise)) {\n          iterateEntries.resolvePromise = true;\n          markAsCompletedWrapper(iterateEntries.entryIdCounter);\n          markAsCompletedWrapper(iterateEntries.setTimeoutWrapper);\n          markAsCompletedWrapper(iterateEntries.getGeneratorException);\n          iterateEntries.entryIdCounter = null;\n          iterateEntries.setTimeoutWrapper = null;\n          iterateEntries.getGeneratorException = null;\n          markAsCompletedWrapper(iterateEntries.identityFunction);\n          iterateEntries.identityFunction = new VideoPlayer(findEntry);\n          if (typeof findEntry.getBoundingClientRect !== \"function\") {\n            iterateEntries.onFulfilled = iterateEntries.createDeferred;\n            imaSdkInstanceSingleton.setTimeoutWrapper = iterateEntries.onFulfilled;\n          } else {\n            iterateEntries.onFulfilled = findEntry;\n          }\n          iterateEntries.isDone.isIpad(iterateEntries.identityFunction);\n        }\n      }\n      this.totalAdBufferingTime = true;\n      this.resize(generatorWrapper, value, CustomMap);\n      findEntry = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      iterateEntries = {};\n      generatorWrapper = (iterateEntries.adsRenderingSettings = findEntry, iterateEntries.width = generatorWrapper, iterateEntries.height = value, iterateEntries.viewMode = CustomMap, iterateEntries);\n      triggerEvent(this, \"init\", generatorWrapper);\n    } else {\n      for (; !this.handleThenable.isEmpty();) {\n        value = generatorWrapper = this.handleThenable;\n        if (value.entryIdCounter.length === 0) {\n          value.entryIdCounter = value.tasks;\n          value.entryIdCounter.reverse();\n          value.tasks = [];\n        }\n        generatorWrapper = generatorWrapper.entryIdCounter.pop();\n        this.dispatchEvent(generatorWrapper);\n      }\n      this.markAsCompleted();\n    }\n  };\n  setTimeoutWrapper.isCustomPlaybackUsed = function () {\n    return isCustomElementSupported(this.entryIdCounter);\n  };\n  setTimeoutWrapper.isCustomClickTrackingUsed = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.getRemainingTime = function () {\n    return this.definePropertyPolyfill;\n  };\n  setTimeoutWrapper.getAdSkippableState = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.discardAdBreak = function () {\n    triggerEvent(this, \"discardAdBreak\");\n  };\n  setTimeoutWrapper.updateAdsRenderingSettings = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      generatorWrapper = JJ(generatorWrapper);\n      var value = this.handleAsync.preferredBitrate;\n      var CustomMap = generatorWrapper.preferredBitrate;\n      markAsCompleted.getAdInstance().report(96, {\n        initialize: this.totalAdBufferingTime ? \"1\" : \"0\",\n        startTimer: this.assignPolyfill ? \"1\" : \"0\",\n        old: value,\n        new: CustomMap,\n        changed: value !== CustomMap ? \"1\" : \"0\"\n      });\n      this.handleAsync = generatorWrapper;\n      generatorWrapper = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      value = {};\n      generatorWrapper = (value.adsRenderingSettings = generatorWrapper, value);\n      triggerEvent(this, \"updateAdsRenderingSettings\", generatorWrapper);\n    }\n  };\n  setTimeoutWrapper.skip = function () {\n    triggerEvent(this, \"skip\");\n  };\n  setTimeoutWrapper.startTimer = function () {\n    if (this.adTagUrl) {\n      if (isIphone || isIpod) {\n        markAsCompleted.getAdInstance().report(50, {\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (!this.entryIdCounter.Generator()) {\n        markAsCompleted.getAdInstance().report(26, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (isElementNotDisplayedOrHidden(this.entryIdCounter.createDeferred)) {\n        markAsCompleted.getAdInstance().report(30, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      var CustomMap;\n      var generatorWrapper = this.entryIdCounter.handleAsync;\n      var value = this.entryIdCounter.createDeferred;\n      if (CustomMap = generatorWrapper && value && !isElementNotDisplayedOrHidden(generatorWrapper)) {\n        generatorWrapper = getElementPosition(generatorWrapper);\n        value = getElementPosition(value);\n        CustomMap = generatorWrapper.width > 0 && generatorWrapper.height > 0 && value.width > 0 && value.height > 0 && generatorWrapper.left <= value.left + value.width && value.left <= generatorWrapper.left + generatorWrapper.width && generatorWrapper.top <= value.top + value.height && value.top <= generatorWrapper.top + generatorWrapper.height;\n      }\n      value = CustomMap;\n      markAsCompleted.getAdInstance().report(31, {\n        adtagurl: this.adTagUrl,\n        customPlayback: isCustomElementSupported(this.entryIdCounter),\n        covers: value\n      });\n    }\n    if (!this.entryIdCounter.Generator() && !isCustomElementSupported(this.entryIdCounter)) {\n      throw createAdPlayError(errorType);\n    }\n    value = this.entryIdCounter;\n    value.handleThenable = this.logError && value.handleAsync != null;\n    this.entryIdCounter.isDone.entryIdCounter.style.opacity = \"1\";\n    if (this.onFulfilled != null && this.getVolume() === 1) {\n      var findEntry, iterateEntries;\n      if (typeof ((findEntry = this.onFulfilled) == null ? undefined : findEntry.muted) === \"boolean\" && ((iterateEntries = this.onFulfilled) == null ? 0 : iterateEntries.muted)) {\n        this.setVolume(0);\n      } else {\n        var createCircularNode;\n        if (typeof ((createCircularNode = this.onFulfilled) == null ? undefined : createCircularNode.volume) === \"number\") {\n          var entryIdCounter;\n          if ((entryIdCounter = this.onFulfilled) == null) {\n            findEntry = undefined;\n          } else {\n         ",
  "t)\n    };\n    markAsCompleted.getAdInstance().report(7, generatorWrapper);\n  };\n  var triggerEvent = function (generatorWrapper, value, CustomMap) {\n    enqueueMessage(generatorWrapper.dispatchUnhandledRejection, \"adsManager\", value, CustomMap);\n  };\n  var GJ = function (generatorWrapper, value) {\n    markAsCompleted.getAdInstance().report(131);\n    CJ(generatorWrapper, value);\n    if (!generatorWrapper.handleIteratorResult()) {\n      generatorWrapper.isDone.startTimer();\n    }\n  };\n  var EJ = function (generatorWrapper) {\n    var value = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && value.ensureString != null) {\n      value.ensureString();\n    }\n  };\n  var CJ = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.entryIdCounter.identityFunction;\n    if (isCustomElementSupported(generatorWrapper.entryIdCounter) && generatorWrapper.handleAsync.shouldRestorePlaybackStateAfterAdBreak && CustomMap.isIphone != null) {\n      CustomMap.isIphone(value);\n    } else if (value) {\n      value();\n    }\n  };\n  setTimeoutWrapper = zone.prototype;\n  setTimeoutWrapper.configureAdsManager = function (generatorWrapper, value) {\n    this.onFulfilled = generatorWrapper;\n    if (generatorWrapper.currentTime != null) {\n      this.isDone = new ContentTimeUpdateTimer(generatorWrapper, this.dispatchUnhandledRejection);\n      this.isDone.startTimer();\n    }\n    if (value != null) {\n      this.handleAsync = JJ(value);\n    }\n  };\n  setTimeoutWrapper.initialize = function (generatorWrapper, value, CustomMap, findEntry) {\n    if (this.handleThenable.isEmpty()) {\n      var iterateEntries = this.entryIdCounter;\n      var createCircularNode = null;\n      if (iterateEntries.tasks && findEntry == null) {\n        createCircularNode = {\n          customProperty3: \"setnull\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks === findEntry) {\n        createCircularNode = {\n          customProperty3: \"match\"\n        };\n      }\n      if (iterateEntries.tasks && iterateEntries.tasks !== findEntry) {\n        createCircularNode = isCustomPlaybackAllowed(findEntry || null);\n        var entryIdCounter = hasPlaysInlineAttribute(findEntry || null);\n        createCircularNode = {\n          customProperty3: \"diff\",\n          isWebKit: iterateEntries.tryCall,\n          isGecko: createCircularNode,\n          getParentFrame: iterateEntries.handleThenable,\n          isAccessibleFrame: entryIdCounter\n        };\n      }\n      if (!iterateEntries.tasks && findEntry) {\n        createCircularNode = {\n          customProperty3: \"new\"\n        };\n      }\n      if (createCircularNode) {\n        createCircularNode.custVid = iterateEntries.logError;\n        markAsCompleted.getAdInstance().report(93, createCircularNode);\n      }\n      if (findEntry != null) {\n        iterateEntries.settlePromise = hasPlaysInlineAttribute(findEntry);\n        if (shouldUseCustomPlayback(iterateEntries.settlePromise)) {\n          iterateEntries.resolvePromise = true;\n          markAsCompletedWrapper(iterateEntries.entryIdCounter);\n          markAsCompletedWrapper(iterateEntries.setTimeoutWrapper);\n          markAsCompletedWrapper(iterateEntries.getGeneratorException);\n          iterateEntries.entryIdCounter = null;\n          iterateEntries.setTimeoutWrapper = null;\n          iterateEntries.getGeneratorException = null;\n          markAsCompletedWrapper(iterateEntries.identityFunction);\n          iterateEntries.identityFunction = new VideoPlayer(findEntry);\n          if (typeof findEntry.getBoundingClientRect !== \"function\") {\n            iterateEntries.onFulfilled = iterateEntries.createDeferred;\n            imaSdkInstanceSingleton.setTimeoutWrapper = iterateEntries.onFulfilled;\n          } else {\n            iterateEntries.onFulfilled = findEntry;\n          }\n          iterateEntries.isDone.isIpad(iterateEntries.identityFunction);\n        }\n      }\n      this.totalAdBufferingTime = true;\n      this.resize(generatorWrapper, value, CustomMap);\n      findEntry = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      iterateEntries = {};\n      generatorWrapper = (iterateEntries.adsRenderingSettings = findEntry, iterateEntries.width = generatorWrapper, iterateEntries.height = value, iterateEntries.viewMode = CustomMap, iterateEntries);\n      triggerEvent(this, \"init\", generatorWrapper);\n    } else {\n      for (; !this.handleThenable.isEmpty();) {\n        value = generatorWrapper = this.handleThenable;\n        if (value.entryIdCounter.length === 0) {\n          value.entryIdCounter = value.tasks;\n          value.entryIdCounter.reverse();\n          value.tasks = [];\n        }\n        generatorWrapper = generatorWrapper.entryIdCounter.pop();\n        this.dispatchEvent(generatorWrapper);\n      }\n      this.markAsCompleted();\n    }\n  };\n  setTimeoutWrapper.isCustomPlaybackUsed = function () {\n    return isCustomElementSupported(this.entryIdCounter);\n  };\n  setTimeoutWrapper.isCustomClickTrackingUsed = function () {\n    return this.logError;\n  };\n  setTimeoutWrapper.getRemainingTime = function () {\n    return this.definePropertyPolyfill;\n  };\n  setTimeoutWrapper.getAdSkippableState = function () {\n    return this.handleThenable;\n  };\n  setTimeoutWrapper.discardAdBreak = function () {\n    triggerEvent(this, \"discardAdBreak\");\n  };\n  setTimeoutWrapper.updateAdsRenderingSettings = function (generatorWrapper) {\n    if (generatorWrapper != null) {\n      generatorWrapper = JJ(generatorWrapper);\n      var value = this.handleAsync.preferredBitrate;\n      var CustomMap = generatorWrapper.preferredBitrate;\n      markAsCompleted.getAdInstance().report(96, {\n        initialize: this.totalAdBufferingTime ? \"1\" : \"0\",\n        startTimer: this.assignPolyfill ? \"1\" : \"0\",\n        old: value,\n        new: CustomMap,\n        changed: value !== CustomMap ? \"1\" : \"0\"\n      });\n      this.handleAsync = generatorWrapper;\n      generatorWrapper = createAdDisplayOptionsWithClickThroughDisabled(this.handleAsync, this.logError);\n      value = {};\n      generatorWrapper = (value.adsRenderingSettings = generatorWrapper, value);\n      triggerEvent(this, \"updateAdsRenderingSettings\", generatorWrapper);\n    }\n  };\n  setTimeoutWrapper.skip = function () {\n    triggerEvent(this, \"skip\");\n  };\n  setTimeoutWrapper.startTimer = function () {\n    if (this.adTagUrl) {\n      if (isIphone || isIpod) {\n        markAsCompleted.getAdInstance().report(50, {\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (!this.entryIdCounter.Generator()) {\n        markAsCompleted.getAdInstance().report(26, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      if (isElementNotDisplayedOrHidden(this.entryIdCounter.createDeferred)) {\n        markAsCompleted.getAdInstance().report(30, {\n          adtagurl: this.adTagUrl,\n          customPlayback: isCustomElementSupported(this.entryIdCounter)\n        });\n      }\n      var CustomMap;\n      var generatorWrapper = this.entryIdCounter.handleAsync;\n      var value = this.entryIdCounter.createDeferred;\n      if (CustomMap = generatorWrapper && value && !isElementNotDisplayedOrHidden(generatorWrapper)) {\n        generatorWrapper = getElementPosition(generatorWrapper);\n        value = getElementPosition(value);\n        CustomMap = generatorWrapper.width > 0 && generatorWrapper.height > 0 && value.width > 0 && value.height > 0 && generatorWrapper.left <= value.left + value.width && value.left <= generatorWrapper.left + generatorWrapper.width && generatorWrapper.top <= value.top + value.height && value.top <= generatorWrapper.top + generatorWrapper.height;\n      }\n      value = CustomMap;\n      markAsCompleted.getAdInstance().report(31, {\n        adtagurl: this.adTagUrl,\n        customPlayback: isCustomElementSupported(this.entryIdCounter),\n        covers: value\n      });\n    }\n    if (!this.entryIdCounter.Generator() && !isCustomElementSupported(this.entryIdCounter)) {\n      throw createAdPlayError(errorType);\n    }\n    value = this.entryIdCounter;\n    value.handleThenable = this.logError && value.handleAsync != null;\n    this.entryIdCounter.isDone.entryIdCounter.style.opacity = \"1\";\n    if (this.onFulfilled != null && this.getVolume() === 1) {\n      var findEntry, iterateEntries;\n      if (typeof ((findEntry = this.onFulfilled) == null ? undefined : findEntry.muted) === \"boolean\" && ((iterateEntries = this.onFulfilled) == null ? 0 : iterateEntries.muted)) {\n        this.setVolume(0);\n      } else {\n        var createCircularNode;\n        if (typeof ((createCircularNode = this.onFulfilled) == null ? undefined : createCircularNode.volume) === \"number\") {\n          var entryIdCounter;\n          if ((entryIdCounter = this.onFulfilled) == null) {\n            findEntry = undefined;\n          } else {\n            findEntry = entryIdCounter.volume;\n          }\n          if (findEntry >= 0 && findEntry <= 1) {\n            var key;\n            this.setVolume((key = this.onFulfilled) == null ? undefined : key.volume);\n          }\n        }\n      }\n    }\n    this.assignPolyfill = true;\n    triggerEvent(this, \"start\");\n  };\n  setTimeoutWrapper.ErrorLogger = function () {\n    if (!this.handleAsync.disableClickThrough && this.tasks != null) {\n      var generatorWrapper = this.tasks.data.clickThroughUrl;\n      if (generatorWrapper != null) {\n        openURLInNewWindow(generatorWrapper, this.tasks.data.attributionParams);\n      }\n    }\n  };\n  setTimeoutWrapper.resize = function (generatorWrapper, value, CustomMap) {\n    var findEntry = this.entryIdCounter;\n    var iterateEntries = findEntry.createDeferred;\n    if (iterateEntries != null) {\n      if (-1 === generatorWrapper) {\n        iterateEntries.style.right = \"0\";\n        iterateEntries.style.left = \"0\";\n      } else {\n        iterateEntries.style.width = generatorWrapper + \"px\";\n      }\n      if (-1 === value) {\n        iterateEntries.style.bottom = \"0\";\n        iterateEntries.style.top = \"0\";\n      } else {\n        iterateEntries.style.height = value + \"px\";\n      }\n    }\n    iterateEntries = findEntry.isDone;\n    if (-1 === generatorWrapper) {\n      iterateEntries.entryIdCounter.width = \"100%\";\n    } else {\n      iterateEntries.entryIdCounter.width = String(generatorWrapper);\n    }\n    if (-1 === value) {\n      iterateEntries.entryIdCounter.height = \"100%\";\n    } else {\n      iterateEntries.entryIdCounter.height = String(value);\n    }\n    try {\n      iterateEntries.entryIdCounter.offsetTop = iterateEntries.entryIdCounter.offsetTop;\n    } catch (createCircularNode) {}\n    findEntry.size = new Size(generatorWrapper, value);\n    findEntry = {};\n    generatorWrapper = (findEntry.width = generatorWrapper, findEntry.height = value, findEntry.viewMode = CustomMap, findEntry);\n    triggerEvent(this, \"resize\", generatorWrapper);\n  };\n  setTimeoutWrapper.stopTimer = function () {\n    triggerEvent(this, \"stop\");\n  };\n  setTimeoutWrapper.expandRectangle = function () {\n    triggerEvent(this, \"expand\");\n  };\n  setTimeoutWrapper.collapse = function () {\n    triggerEvent(this, \"collapse\");\n  };\n  setTimeoutWrapper.getVolume = function () {\n    return this.volume;\n  };\n  setTimeoutWrapper.setVolume = function (generatorWrapper) {\n    this.volume = generatorWrapper;\n    this.entryIdCounter.identityFunction.setVolume(generatorWrapper);\n    var value = {};\n    generatorWrapper = (value.volume = generatorWrapper, value);\n    triggerEvent(this, \"volume\", generatorWrapper);\n  };\n  setTimeoutWrapper.pause = function () {\n    triggerEvent(this, \"pause\");\n  };\n  setTimeoutWrapper.resume = function () {\n    triggerEvent(this, \"resume\");\n  };\n  setTimeoutWrapper.destroy = function () {\n    this.markAsCompleted();\n  };\n  setTimeoutWrapper.getCuePoints = function () {\n    return this.toArray;\n  };\n  setTimeoutWrapper.initializeTransformations = function () {\n    return this.tasks;\n  };\n  setTimeoutWrapper.getAdEnvironment = function () {\n    triggerEvent(this, \"destroy\");\n    if (this.setTimeoutWrapper != null) {\n      this.setTimeoutWrapper.markAsCompleted();\n    }\n    this.updateMaxSize.markAsCompleted();\n    this.handleThenable.clearAll();\n    if (this.isDone) {\n      this.isDone.stopTimer();\n      this.isDone.markAsCompleted();\n    }\n    if (isOnScreenDetectionEnabled()) {\n      unregisterElement(this.resolvePromise, this.tryCall);\n    }\n    AdEnvironmentConfig.prototype.getAdEnvironment.call(this);\n  };\n  setTimeoutWrapper.setAdPropertyFromString = function () {\n    markAsCompleted.getAdInstance().report(124, {\n      api: \"clicked\"\n    });\n    var generatorWrapper = this.tasks && this.tasks.data.clickThroughUrl,\n      value;\n    if (generatorWrapper && ((value = this.tasks) == null ? 0 : value.IdentityTransform())) {\n      var CustomMap;\n      openURLInNewWindow(generatorWrapper, (CustomMap = this.tasks) == null ? undefined : CustomMap.data.attributionParams);\n    }\n    triggerEvent(this, \"click\");\n  };\n  setTimeoutWrapper.focus = function () {\n    enqueueMessage(this.dispatchUnhandledRejection, \"userInteraction\", \"focusUiElement\");\n  };\n  var HJ = function (generatorWrapper, value) {\n    var CustomMap = value.gfpCookieUserEnabled;\n    value = value.gfpCookieClearData;\n    var findEntry = new AdConfiguration();\n    findEntry = setAdPropertyFromObject(findEntry, 1, CustomMap ? \"0\" : \"1\");\n    findEntry = updateElement(findEntry, 2, convertToInt64(2147483647));\n    findEntry = setAdPropertyFromObject(findEntry, 3, \"/\");\n    findEntry = setAdPropertyFromObject(findEntry, 4, window.location.hostname);\n    var iterateEntries = new AdCookieManager(),\n      createCircularNode,\n      entryIdCounter;\n    if ((entryIdCounter = (createCircularNode = generatorWrapper.isArrayLike) == null ? undefined : buildAdRequest(createCircularNode)) != null) {\n      generatorWrapper = entryIdCounter;\n    } else {\n      generatorWrapper = null;\n    }\n    setAdCookie(iterateEntries, \"__gpi_opt_out\", findEntry, generatorWrapper);\n    if (!CustomMap || value) {\n      processAdCookie(iterateEntries, \"__gads\", generatorWrapper);\n      processAdCookie(iterateEntries, \"__gpi\", generatorWrapper);\n    }\n  };\n  zone.prototype.clicked = zone.prototype.setAdPropertyFromString;\n  zone.prototype.getCurrentAd = zone.prototype.initializeTransformations;\n  zone.prototype.getCuePoints = zone.prototype.getCuePoints;\n  zone.prototype.destroy = zone.prototype.destroy;\n  zone.prototype.resume = zone.prototype.resume;\n  zone.prototype.pause = zone.prototype.pause;\n  zone.prototype.setVolume = zone.prototype.setVolume;\n  zone.prototype.getVolume = zone.prototype.getVolume;\n  zone.prototype.collapse = zone.prototype.collapse;\n  zone.prototype.expandRectangle = zone.prototype.expandRectangle;\n  zone.prototype.stopTimer = zone.prototype.stopTimer;\n  zone.prototype.resize = zone.prototype.resize;\n  zone.prototype.startTimer = zone.prototype.startTimer;\n  zone.prototype.skip = zone.prototype.skip;\n  zone.prototype.updateAdsRenderingSettings = zone.prototype.updateAdsRenderingSettings;\n  zone.prototype.discardAdBreak = zone.prototype.discardAdBreak;\n  zone.prototype.getAdSkippableState = zone.prototype.getAdSkippableState;\n  zone.prototype.getRemainingTime = zone.prototype.getRemainingTime;\n  zone.prototype.isCustomClickTrackingUsed = zone.prototype.isCustomClickTrackingUsed;\n  zone.prototype.isCustomPlaybackUsed = zone.prototype.isCustomPlaybackUsed;\n  zone.prototype.initialize = zone.prototype.initialize;\n  function JJ(generatorWrapper) {\n    if (generatorWrapper instanceof AdDisplayOptions) {\n      markAsCompleted.getAdInstance().report(174, {\n        valid: true\n      });\n      return generatorWrapper;\n    }\n    markAsCompleted.getAdInstance().report(174, {\n      valid: false\n    });\n    var value = new AdDisplayOptions();\n    value.append(generatorWrapper);\n    return value;\n  }\n  var AdsManagerLoadedEventType = {\n    ADS_MANAGER_LOADED: \"adsManagerLoaded\"\n  };\n  var AdsManagerLoadedEvent = function (generatorWrapper, value) {\n    AdEvent.call(this, \"adsManagerLoaded\");\n    this.entryIdCounter = generatorWrapper;\n    this.setTimeoutWrapper = value;\n  };\n  inheritPrototype(AdsManagerLoadedEvent, AdEvent);\n  AdsManagerLoadedEvent.prototype.getAdsManager = function (generatorWrapper, value) {\n    generatorWrapper = generatorWrapper || {\n      currentTime: null\n    };\n    this.entryIdCounter.configureAdsManager(generatorWrapper, value);\n    return this.entryIdCounter;\n  };\n  AdsManagerLoadedEvent.prototype.getUserRequestContext = function () {\n    return this.setTimeoutWrapper;\n  };\n  AdsManagerLoadedEvent.prototype.getUserRequestContext = AdsManagerLoadedEvent.prototype.getUserRequestContext;\n  AdsManagerLoadedEvent.prototype.getAdsManager = AdsManagerLoadedEvent.prototype.getAdsManager;\n  defineNamespace(\"module$exports$google3$javascript$ads$interactivemedia$sdk$clientside$api$ads_manager_loaded_event.AdsManagerLoadedEvent.Type\", AdsManagerLoadedEventType);\n  var getUSPData = function (generatorWrapper, value) {\n    (0, generatorWrapper.__uspapi)(\"getUSPData\", 1, function (CustomMap, findEntry) {\n      value.resetGeneratorState({\n        supportsHtml5: CustomMap != null ? CustomMap : undefined,\n        isAndroidNonChrome: findEntry ? undefined : 2\n      });\n    });\n  };\n  var USPDataHandler = {\n    supportsBigInt(generatorWrapper) {\n      return generatorWrapper.resetGeneratorState;\n    },\n    defaultSort(generatorWrapper, value) {\n      generatorWrapper = {};\n      generatorWrapper.__uspapiCall = {\n        callId: value,\n        command: \"getUSPData\",\n        version: 1\n      };\n      return generatorWrapper;\n    },\n    forEachElement(generatorWrapper, value) {\n      value = value.__uspapiReturn;\n      var CustomMap;\n      generatorWrapper({\n        supportsHtml5: (CustomMap = value.returnValue) != null ? CustomMap : undefined,\n        isAndroidNonChrome: value.success ? undefined : 2\n      });\n    }\n  };\n  function parseMessageData(generatorWrapper) {\n    var value = {};\n    if (typeof generatorWrapper.data === \"string\") {\n      value = JSON.parse(generatorWrapper.data);\n    } else {\n      value = generatorWrapper.data;\n    }\n    return {\n      payload: value,\n      singletonInstance: value.__uspapiReturn.callId\n    };\n  }\n  var initializeUSPApiCaller = function (generatorWrapper, value) {\n    if (undefined === value) {\n      value = {};\n    } else {\n      value = value;\n    }\n    tryCall.call(this);\n    var CustomMap;\n    if ((CustomMap = value.timeoutMs) != null) {\n      this.timeoutMs = CustomMap;\n    } else {\n      this.timeoutMs = 500;\n    }\n    this.caller = new MessageHandler(generatorWrapper, \"__uspapiLocator\", function (findEntry) {\n      return typeof findEntry.__uspapi === \"function\";\n    }, parseMessageData);\n    this.caller.handleAsync.set(\"getDataWithCallback\", getUSPData);\n    this.caller.createDeferred.set(\"getDataWithCallback\", USPDataHandler);\n  };\n  inheritPrototype(initializeUSPApiCaller, tryCall);\n  initializeUSPApiCaller.prototype.getAdEnvironment = function () {\n    this.caller.markAsCompleted();\n    tryCall.prototype.getAdEnvironment.call(this);\n  };\n  var fetchUSPData = function (generatorWrapper, value) {\n    var CustomMap = {};\n    if (getEffectiveMessageTarget(generatorWrapper.caller)) {\n      var findEntry = clearFunction(function () {\n        value(CustomMap);\n      });\n      invokeCallerMethod(generatorWrapper.caller, \"getDataWithCallback\", {\n        resetGeneratorState(iterateEntries) {\n          if (!iterateEntries.isAndroidNonChrome) {\n            CustomMap = iterateEntries.supportsHtml5;\n          }\n          findEntry();\n        }\n      });\n      setTimeout(findEntry, generatorWrapper.timeoutMs);\n    } else {\n      value(CustomMap);\n    }\n  };\n  var WindowWrapper = function () {\n    this.entryIdCounter = window;\n  };\n  function findPrebidJs() {\n    var generatorWrapper = window,\n      value,\n      CustomMap;\n    if ((CustomMap = [\"pbjs\"].concat((value = generatorWrapper._pbjsGlobals) != null ? value : []).map(function (findEntry) {\n      return generatorWrapper[findEntry];\n    }).find(function (findEntry) {\n      return Array.isArray(findEntry == null ? undefined : findEntry.que);\n    })) != null) {\n      return CustomMap;\n    } else {\n      return null;\n    }\n  }\n  function getAdDataOrZero(generatorWrapper, value) {\n    var CustomMap, findEntry, iterateEntries;\n    if (value == null) {\n      iterateEntries = undefined;\n    } else {\n      iterateEntries = value.get.call(value, generatorWrapper);\n    }\n    if ((findEntry = (CustomMap = iterateEntries) != null ? CustomMap : value == null ? undefined : value.get(hashString(generatorWrapper))) != null) {\n      return findEntry;\n    } else {\n      return 0;\n    }\n  }\n  var versionRegex = /^v?\\d{1,3}(\\.\\d{1,3}){0,2}(-pre)?$/;\n  var globalMap = new Map();\n  function processBidResponses(generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = iterateEntries.getBidResponsesForAdUnitCode;\n    if (createCircularNode) {\n      var entryIdCounter,\n        key,\n        value,\n        entry,\n        currentEntry,\n        foundEntry = (currentEntry = (entryIdCounter = createCircularNode((value = value.findElement) != null ? value : \"\")) == null ? undefined : entryIdCounter.bids) != null ? currentEntry : (key = createCircularNode((entry = value.adUnitCode) != null ? entry : \"\")) == null ? undefined : key.bids;\n      if (foundEntry != null && foundEntry.length && (entryIdCounter = foundEntry.filter(function (user) {\n        var profileData = user.adId;\n        return user.auctionId !== CustomMap && Object.values(findEntry).some(function (isDone) {\n          return isDone.includes(profileData);\n        });\n      }), entryIdCounter.length)) {\n        var resolveFunction, rejectFunction;\n        if ((resolveFunction = iterateEntries.adUnits) == null) {\n          createCircularNode = undefined;\n        } else if ((rejectFunction = resolveFunction.find(function (user) {\n          user = user.code;\n          return user === value.findElement || user === value.adUnitCode;\n        })) == null) {\n          createCircularNode = undefined;\n        } else {\n          createCircularNode = rejectFunction.mediaTypes;\n        }\n        resolveFunction = getIterator(entryIdCounter);\n        for (rejectFunction = resolveFunction.next(); !rejectFunction.done; rejectFunction = resolveFunction.next()) {\n          rejectFunction = rejectFunction.value;\n          entryIdCounter = createBidResponseObject(rejectFunction, findEntry, createCircularNode);\n          entryIdCounter = addAdRequestToAdBreak(generatorWrapper, addAdToAdRequest(setAdProperty(setAdRequestAdUnitPath(setAdRequestType(new AdRequest(), rejectFunction.bidder), 1), 6, true), entryIdCounter));\n          updateAliasRegistry(rejectFunction.bidder, iterateEntries, entryIdCounter);\n          if (typeof rejectFunction.timeToRespond === \"number\") {\n            updateElement(entryIdCounter, 2, convertToInt64(Math.roundRectangle(rejectFunction.timeToRespond)));\n          }\n        }\n      }\n    }\n  }\n  function updateAliasRegistry(generatorWrapper, value, CustomMap) {\n    for (var findEntry = []; generatorWrapper && !findEntry.includes(generatorWrapper);) {\n      findEntry.unshift(generatorWrapper);\n      var iterateEntries = undefined;\n      var createCircularNode = undefined;\n      if ((iterateEntries = value) == null) {\n        generatorWrapper = undefined;\n      } else if ((createCircularNode = iterateEntries.aliasRegistry) == null) {\n        generatorWrapper = undefined;\n      } else {\n        generatorWrapper = createCircularNode[generatorWrapper];\n      }\n    }\n    transformAndReplaceArray(CustomMap, 10, findEntry, ensureString);\n  }\n  function updateAdUnitCode(generatorWrapper, value, CustomMap) {\n    if (!(parseNullableInt(getTransformedElement(generatorWrapper, 3)) != null)) {\n      if (CustomMap === value.adUnitCode) {\n        clearAdProperty(generatorWrapper, 3, 1);\n      } else if (CustomMap === value.findElement) {\n        clearAdProperty(generatorWrapper, 3, 2);\n      }\n    }\n  }\n  function updateBidRequest(generatorWrapper, value, CustomMap, findEntry, iterateEntries, createCircularNode, entryIdCounter) {\n    createCircularNode = createCircularNode.get(entryIdCounter != null ? entryIdCounter : function () {\n      return null;\n    });\n    if ((createCircularNode == null ? undefined : getAdPropertyNumeric(createCircularNode, 1)) !== 1) {\n      finalizeAdAttributes(value, 5, createCircularNode);\n    }\n    if (!(undefined !== uf(generatorWrapper, AdEvent, 5, false))) {\n      if (createCircularNode) {\n        if (getAdPropertyNumeric(createCircularNode, 1) === 1) {\n          setAdBreakFillType(generatorWrapper, createCircularNode);\n        } else {\n          setAdBreakFillType(generatorWrapper, setAdEventAdData(setAdEventType(setAdEventTimeStamp(new AdEvent(), iterateEntries), 1), getAdDataOrZero(CustomMap, findEntry)));\n        }\n      } else {\n        setAdBreakFillType(generatorWrapper, setAdEventType(setAdEventTimeStamp(new AdEvent(), iterateEntries), getAdDataOrZero(CustomMap, findEntry) ? 2 : 3));\n      }\n    }\n  }\n  function createBidResponseObject(generatorWrapper, value, CustomMap) {\n    var findEntry = generatorWrapper.cpm;\n    var iterateEntries = generatorWrapper.originalCpm;\n    var createCircularNode = generatorWrapper.currency;\n    var entryIdCounter = generatorWrapper.originalCurrency;\n    var key = generatorWrapper.dealId;\n    var value = generatorWrapper.adserverTargeting;\n    var entry = generatorWrapper.bidder;\n    var currentEntry = generatorWrapper.adId;\n    var foundEntry = generatorWrapper.mediaType;\n    var resolveFunction = generatorWrapper.height;\n    var rejectFunction = generatorWrapper.width;\n    var user = new Ad();\n    if (typeof findEntry === \"number\") {\n      updateElement(user, 2, convertToInt64(Math.roundRectangle(1000000 * findEntry)));\n      if (!(entryIdCounter && entryIdCounter !== createCircularNode)) {\n        findEntry = Math.roundRectangle(1000000 * Number(iterateEntries));\n        if (!(isNaN(findEntry) || findEntry === getAdPropertyFallbackNumeric(user, 2))) {\n          updateElement(user, 8, convertToInt64(findEntry));\n        }\n      }\n    }\n    if (typeof createCircularNode === \"string\") {\n      setAdPropertyFromObject(user, 3, createCircularNode);\n    }\n    if ([\"string\", \"number\"].includes(typeof key)) {\n      createCircularNode = new AdSlot();\n      key = setAdPropertyFromObject(createCircularNode, 1, String(key));\n      finalizeAdAttributes(user, 6, key);\n    }\n    if (typeof value === \"object\") {\n      key = getIterator([\"\", \"_\" + entry]);\n      for (createCircularNode = key.next(); !createCircularNode.done; createCircularNode = key.next()) {\n        findEntry = createCircularNode.value;\n        createCircularNode = [];\n        iterateEntries = getIterator(Object.entries(value));\n        for (entryIdCounter = iterateEntries.next(); !entryIdCounter.done; entryIdCounter = iterateEntries.next()) {\n          entryIdCounter = getIterator(entryIdCounter.value);\n          var profileData = entryIdCounter.next().value;\n          entryIdCounter = entryIdCounter.next().value;\n          profileData = (\"\" + profileData + findEntry).slice(0, 20);\n          var isDone = undefined;\n          if ((isDone = value[profileData]) != null && isDone.length) {\n            if (value[profileData][0] === String(entryIdCounter)) {\n              createCircularNode.push(profileData);\n            } else {\n              createCircularNode = [];\n              break;\n            }\n          }\n        }\n        findEntry = transformArrayElements(user, 4, stringOrNull);\n        transformAndReplaceArray(user, 4, findEntry.concat(createCircularNode), ensureString);\n      }\n    }\n    switch (foundEntry || \"banner\") {\n      case \"banner\":\n        clearAdProperty(user, 5, 1);\n        break;\n      case \"native\":\n        clearAdProperty(user, 5, 2);\n        break;\n      case \"video\":\n        clearAdProperty(user, 5, 3);\n        value = new AdParameters();\n        var stream;\n        if ((CustomMap == null ? undefined : (stream = CustomMap.video) == null ? undefined : stream.context) === \"adpod\") {\n          var keyArray,\n            getAdManager = CustomMap == null ? undefined : (keyArray = CustomMap.video) == null ? undefined : keyArray.adPodDurationSec;\n          updateElement(value, 1, convertToInt64(getAdManager));\n        } else {\n          if (CustomMap == null) {\n            keyArray = undefined;\n          } else if ((getAdManager = CustomMap.video) == null) {\n            keyArray = undefined;\n          } else {\n            keyArray = getAdManager.maxduration;\n          }\n          updateElement(value, 1, convertToInt64(keyArray));\n        }\n        var entryNode;\n        if (typeof (CustomMap == null ? undefined : (entryNode = CustomMap.video) == null ? undefined : entryNode.skip) === \"number\") {\n          var lastNode;\n          CustomMap = !!(CustomMap == null ? 0 : (lastNode = CustomMap.video) == null ? 0 : lastNode.skip);\n          setAdProperty(value, 2, CustomMap);\n        }\n        var adServerCatIdWrapper;\n        if ((adServerCatIdWrapper = generatorWrapper.meta) == null) {\n          generatorWrapper = undefined;\n        } else {\n          generatorWrapper = adServerCatIdWrapper.adServerCatId;\n        }\n        adServerCatIdWrapper = setAdPropertyFromObject(value, 3, generatorWrapper);\n        if (typeof value !== \"object\") {\n          value = null;\n        } else {\n          var getIterator, Nb;\n          generatorWrapper = String((Nb = (getIterator = value[\"hb_pb_cat_dur_\" + entry]) != null ? getIterator : value.hb_pb_cat_dur) != null ? Nb : \"\");\n          var keyTransformFunction, errorHandler, Uh, Vh;\n          getIterator = String((Vh = (Uh = (errorHandler = (keyTransformFunction = value[\"hb_cache_id_\" + entry]) != null ? keyTransformFunction : value[\"hb_uuid_\" + entry]) != null ? errorHandler : value.hb_cache_id) != null ? Uh : value.hb_uuid) != null ? Vh : \"\");\n          if (generatorWrapper && getIterator) {\n            value = generatorWrapper + \"_\" + getIterator;\n          } else if (getIterator) {\n            value = getIterator;\n          } else {\n            value = null;\n          }\n        }\n        setAdPropertyFromObject(adServerCatIdWrapper, 4, value);\n        finalizeAdAttributes(user, 9, value);\n    }\n    if (Number.isFinite(resolveFunction) && Number.isFinite(rejectFunction)) {\n      value = new AdSize();\n      rejectFunction = updateAdProperty(value, 1, Math.roundRectangle(rejectFunction));\n      resolveFunction = updateAdProperty(rejectFunction, 2, Math.roundRectangle(resolveFunction));\n      finalizeAdAttributes(user, 7, resolveFunction);\n    }\n    if (typeof currentEntry === \"string\") {\n      setAdPropertyFromObject(user, 1, currentEntry);\n    }\n    return user;\n  }\n  function createMapFunction(generatorWrapper, value) {\n    var CustomMap = new Map();\n    var findEntry = function (value) {\n      var entry = CustomMap.get(value);\n      if (!entry) {\n        entry = {};\n        CustomMap.set(value, entry);\n      }\n      return entry;\n    };\n    var iterateEntries = [];\n    generatorWrapper = getIterator(generatorWrapper);\n    for (var createCircularNode = generatorWrapper.next(); !createCircularNode.done; createCircularNode = generatorWrapper.next()) {\n      createCircularNode = createCircularNode.value;\n      var entryIdCounter = createCircularNode.args;\n      var key = createCircularNode.eventType;\n      createCircularNode = createCircularNode.elapsedTime;\n      if (key === \"bidTimeout\") {\n        iterateEntries.push.apply(iterateEntries, toArray(entryIdCounter));\n      }\n      switch (key) {\n        case \"bidRequested\":\n          if (entryIdCounter.auctionId !== value) {\n            continue;\n          }\n          if (!Array.isArray(entryIdCounter.bids)) {\n            continue;\n          }\n          entryIdCounter = getIterator(entryIdCounter.bids);\n          for (key = entryIdCounter.next(); !key.done; key = entryIdCounter.next()) {\n            if (key = key.value.bidId) {\n              findEntry(key).requestTime = createCircularNode;\n            }\n          }\n          break;\n        case \"noBid\":\n          if (entryIdCounter.auctionId === value && entryIdCounter.bidId) {\n            findEntry(entryIdCounter.bidId).supportsPassive = createCircularNode;\n          }\n      }\n    }\n    findEntry = new Map();\n    generatorWrapper = getIterator(CustomMap.entries());\n    for (createCircularNode = generatorWrapper.next(); !createCircularNode.done; createCircularNode = generatorWrapper.next()) {\n      entryIdCounter = getIterator(createCircularNode.value);\n      createCircularNode = entryIdCounter.next().value;\n      key = entryIdCounter.next().value;\n      entryIdCounter = key.requestTime;\n      key = key.supportsPassive;\n      if (entryIdCounter && key) {\n        findEntry.set(createCircularNode, {\n          latency: key - entryIdCounter,\n          isMacOS: false\n        });\n      }\n    }\n    iterateEntries = getIterator(iterateEntries);\n    for (generatorWrapper = iterateEntries.next(); !generatorWrapper.done; generatorWrapper = iterateEntries.next()) {\n      createCircularNode = generatorWrapper.value;\n      generatorWrapper = createCircularNode.bidId;\n      createCircularNode = createCircularNode.auctionId;\n      if (generatorWrapper && createCircularNode === value && (generatorWrapper = findEntry.get(generatorWrapper))) {\n        generatorWrapper.isMacOS = true;\n      }\n    }\n    return findEntry;\n  }\n  function processAuctionEndEvents(generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    var findEntry = undefined === findEntry ? new Map() : findEntry;\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    var createCircularNode = undefined === createCircularNode ? new Map() : createCircularNode;\n    var entryIdCounter = undefined === entryIdCounter ? new AdResponse() : entryIdCounter;\n    var key = undefined === key ? 0 : key;\n    var rejectFunction, user, profileData, stream;\n    var value = new Map();\n    var entry = (0, generatorWrapper.getEvents)();\n    var currentEntry = entry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport = bidRequest.args;\n      return bidRequest.eventType === \"auctionEnd\" && checkIntersectionObserverSupport.auctionId;\n    });\n    var foundEntry = new AdSchedule();\n    var resolveFunction = function (bidRequest) {\n      return bidRequest === value.findElement || bidRequest === value.adUnitCode;\n    };\n    var isDone = (profileData = globalMap.get(((rejectFunction = value.findElement) != null ? rejectFunction : \"\") + ((user = value.adUnitCode) != null ? user : \"\"))) != null ? profileData : 0;\n    if ((stream = currentEntry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport, rz, sz;\n      return Number((checkIntersectionObserverSupport = bidRequest.args) == null ? undefined : checkIntersectionObserverSupport.timestamp) > isDone && ((rz = bidRequest.args) == null ? undefined : (sz = rz.adUnitCodes) == null ? undefined : sz.find(resolveFunction));\n    })) != null) {\n      currentEntry = stream;\n    } else {\n      currentEntry = [];\n    }\n    if (!currentEntry.length) {\n      return null;\n    }\n    var keyArray;\n    if (currentEntry = (keyArray = currentEntry.reduce(function (bidRequest, checkIntersectionObserverSupport) {\n      if (Number(checkIntersectionObserverSupport.args.timestamp) > Number(bidRequest.args.timestamp)) {\n        return checkIntersectionObserverSupport;\n      } else {\n        return bidRequest;\n      }\n    })) == null ? undefined : keyArray.args) {\n      if (undefined === currentEntry.bidderRequests) {\n        stream = [];\n      } else {\n        stream = currentEntry.bidderRequests;\n      }\n      if (undefined === currentEntry.bidsReceived) {\n        keyArray = [];\n      } else {\n        keyArray = currentEntry.bidsReceived;\n      }\n      var getAdManager = currentEntry.auctionId;\n      currentEntry = currentEntry.timestamp;\n      if (getAdManager && currentEntry != null && stream.length) {\n        var entryNode, lastNode;\n        globalMap.set(((entryNode = value.findElement) != null ? entryNode : \"\") + ((lastNode = value.adUnitCode) != null ? lastNode : \"\"), currentEntry);\n        entryNode = addAdBreakToAdSchedule(foundEntry);\n        if (generatorWrapper.version && versionRegex.test(generatorWrapper.version)) {\n          setAdPropertyFromObject(entryNode, 6, generatorWrapper.version);\n        }\n        var adServerCatIdWrapper, getIterator, Nb;\n        if ((adServerCatIdWrapper = generatorWrapper.getConfig) == null ? 0 : (getIterator = adServerCatIdWrapper.call(generatorWrapper).cache) == null ? 0 : (Nb = getIterator.url) == null ? 0 : Nb.length) {\n          var keyTransformFunction, errorHandler;\n          setAdBreakId(entryNode, (keyTransformFunction = generatorWrapper.getConfig) == null ? undefined : (errorHandler = keyTransformFunction.call(generatorWrapper).cache) == null ? undefined : errorHandler.url);\n        }\n        finalizeAdAttributes(entryNode, 9, entryIdCounter);\n        entryIdCounter = once(function () {\n          return createMapFunction(entry, getAdManager);\n        });\n        adServerCatIdWrapper = getIterator(stream);\n        Nb = adServerCatIdWrapper.next();\n        getIterator = {\n          bidderCode: undefined,\n          checkFlags: undefined\n        };\n        for (getIterator = {}; !Nb.done; Nb = adServerCatIdWrapper.next()) {\n          keyTransformFunction = Nb.value;\n          getIterator.bidderCode = keyTransformFunction.bidderCode;\n          errorHandler = keyTransformFunction.bids;\n          Nb = keyTransformFunction.timeout;\n          getIterator.checkFlags = keyTransformFunction.src;\n          keyTransformFunction = keyTransformFunction.auctionStart;\n          errorHandler = getIterator(errorHandler);\n          stream = errorHandler.next();\n          lastNode = {\n            userAgentVersion: undefined\n          };\n          for (lastNode = {}; !stream.done; stream = errorHandler.next()) {\n            profileData = stream.value;\n            lastNode.userAgentVersion = profileData.bidId;\n            user = profileData.transactionId;\n            stream = profileData.adUnitCode;\n            currentEntry = profileData.getFloor;\n            rejectFunction = profileData.mediaTypes;\n            profileData = profileData.ortb2Imp;\n            if (lastNode.userAgentVersion && resolveFunction(stream)) {\n              updateAdUnitCode(entryNode, value, stream);\n              var Uh = undefined;\n              var Vh = undefined;\n              if (key && getAdPropertyValue(entryNode, 11) == null && typeof ((Uh = profileData) == null ? undefined : (Vh = Uh.ext) == null ? undefined : Vh.gpid) === \"string\") {\n                setAdPropertyFromObject(entryNode, 11, profileData.ext.gpid.substring(0, key));\n              }\n              if (user) {\n                if (!(getAdPropertyValue(entryNode, 4) != null)) {\n                  setAdPropertyFromObject(entryNode, 4, user);\n                }\n                if (!value.has(user)) {\n                  value.set(user, keyTransformFunction);\n                }\n              }\n              if (parseNullableInt32(getTransformedElement(entryNode, 8)) == null && Number.isFinite(Nb)) {\n                updateAdProperty(entryNode, 8, Nb);\n              }\n              profileData = keyArray.find(function (bidRequest) {\n                return function (checkIntersectionObserverSupport) {\n                  return checkIntersectionObserverSupport.requestId === bidRequest.userAgentVersion;\n                };\n              }(lastNode));\n              user = addAdRequestToAdBreak(entryNode, function (bidRequest) {\n                return function () {\n                  var checkIntersectionObserverSupport = setAdRequestType(new AdRequest(), bidRequest.bidderCode);\n                  updateAliasRegistry(bidRequest.bidderCode, generatorWrapper, checkIntersectionObserverSupport);\n                  switch (bidRequest.checkFlags) {\n                    case \"client\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 1);\n                      break;\n                    case \"s2s\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 2);\n                  }\n                  return checkIntersectionObserverSupport;\n                };\n              }(getIterator)());\n              updateBidRequest(entryNode, user, stream, findEntry, iterateEntries, createCircularNode, currentEntry);\n              if (profileData) {\n                setAdRequestAdUnitPath(user, 1);\n                if (typeof profileData.timeToRespond === \"number\" && Number.isFinite(profileData.timeToRespond)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(profileData.timeToRespond)));\n                }\n                lastNode = createBidResponseObject(profileData, CustomMap, rejectFunction);\n                addAdToAdRequest(user, lastNode);\n              } else if ((lastNode = entryIdCounter().get(lastNode.userAgentVersion)) && !lastNode.isMacOS) {\n                setAdRequestAdUnitPath(user, 2);\n                if (Number.isFinite(lastNode.latency)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(lastNode.latency)));\n                }\n              } else {\n                lastNode = setAdRequestAdUnitPath(user, 3);\n                if (Number.isFinite(Nb)) {\n                  updateElement(lastNode, 2, convertToInt64(Math.roundRectangle(Nb)));\n                }\n              }\n            }\n          }\n        }\n        var bidCacheConfig;\n        if ((bidCacheConfig = generatorWrapper.getConfig) == null ? 0 : bidCacheConfig.call(generatorWrapper).useBidCache) {\n  ",
  "      }\n    }\n    return findEntry;\n  }\n  function processAuctionEndEvents(generatorWrapper, value) {\n    var CustomMap = {};\n    if (undefined === CustomMap) {\n      CustomMap = {};\n    } else {\n      CustomMap = CustomMap;\n    }\n    var findEntry = undefined === findEntry ? new Map() : findEntry;\n    var iterateEntries = undefined === iterateEntries ? false : iterateEntries;\n    var createCircularNode = undefined === createCircularNode ? new Map() : createCircularNode;\n    var entryIdCounter = undefined === entryIdCounter ? new AdResponse() : entryIdCounter;\n    var key = undefined === key ? 0 : key;\n    var rejectFunction, user, profileData, stream;\n    var value = new Map();\n    var entry = (0, generatorWrapper.getEvents)();\n    var currentEntry = entry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport = bidRequest.args;\n      return bidRequest.eventType === \"auctionEnd\" && checkIntersectionObserverSupport.auctionId;\n    });\n    var foundEntry = new AdSchedule();\n    var resolveFunction = function (bidRequest) {\n      return bidRequest === value.findElement || bidRequest === value.adUnitCode;\n    };\n    var isDone = (profileData = globalMap.get(((rejectFunction = value.findElement) != null ? rejectFunction : \"\") + ((user = value.adUnitCode) != null ? user : \"\"))) != null ? profileData : 0;\n    if ((stream = currentEntry.filter(function (bidRequest) {\n      var checkIntersectionObserverSupport, rz, sz;\n      return Number((checkIntersectionObserverSupport = bidRequest.args) == null ? undefined : checkIntersectionObserverSupport.timestamp) > isDone && ((rz = bidRequest.args) == null ? undefined : (sz = rz.adUnitCodes) == null ? undefined : sz.find(resolveFunction));\n    })) != null) {\n      currentEntry = stream;\n    } else {\n      currentEntry = [];\n    }\n    if (!currentEntry.length) {\n      return null;\n    }\n    var keyArray;\n    if (currentEntry = (keyArray = currentEntry.reduce(function (bidRequest, checkIntersectionObserverSupport) {\n      if (Number(checkIntersectionObserverSupport.args.timestamp) > Number(bidRequest.args.timestamp)) {\n        return checkIntersectionObserverSupport;\n      } else {\n        return bidRequest;\n      }\n    })) == null ? undefined : keyArray.args) {\n      if (undefined === currentEntry.bidderRequests) {\n        stream = [];\n      } else {\n        stream = currentEntry.bidderRequests;\n      }\n      if (undefined === currentEntry.bidsReceived) {\n        keyArray = [];\n      } else {\n        keyArray = currentEntry.bidsReceived;\n      }\n      var getAdManager = currentEntry.auctionId;\n      currentEntry = currentEntry.timestamp;\n      if (getAdManager && currentEntry != null && stream.length) {\n        var entryNode, lastNode;\n        globalMap.set(((entryNode = value.findElement) != null ? entryNode : \"\") + ((lastNode = value.adUnitCode) != null ? lastNode : \"\"), currentEntry);\n        entryNode = addAdBreakToAdSchedule(foundEntry);\n        if (generatorWrapper.version && versionRegex.test(generatorWrapper.version)) {\n          setAdPropertyFromObject(entryNode, 6, generatorWrapper.version);\n        }\n        var adServerCatIdWrapper, getIterator, Nb;\n        if ((adServerCatIdWrapper = generatorWrapper.getConfig) == null ? 0 : (getIterator = adServerCatIdWrapper.call(generatorWrapper).cache) == null ? 0 : (Nb = getIterator.url) == null ? 0 : Nb.length) {\n          var keyTransformFunction, errorHandler;\n          setAdBreakId(entryNode, (keyTransformFunction = generatorWrapper.getConfig) == null ? undefined : (errorHandler = keyTransformFunction.call(generatorWrapper).cache) == null ? undefined : errorHandler.url);\n        }\n        finalizeAdAttributes(entryNode, 9, entryIdCounter);\n        entryIdCounter = once(function () {\n          return createMapFunction(entry, getAdManager);\n        });\n        adServerCatIdWrapper = getIterator(stream);\n        Nb = adServerCatIdWrapper.next();\n        getIterator = {\n          bidderCode: undefined,\n          checkFlags: undefined\n        };\n        for (getIterator = {}; !Nb.done; Nb = adServerCatIdWrapper.next()) {\n          keyTransformFunction = Nb.value;\n          getIterator.bidderCode = keyTransformFunction.bidderCode;\n          errorHandler = keyTransformFunction.bids;\n          Nb = keyTransformFunction.timeout;\n          getIterator.checkFlags = keyTransformFunction.src;\n          keyTransformFunction = keyTransformFunction.auctionStart;\n          errorHandler = getIterator(errorHandler);\n          stream = errorHandler.next();\n          lastNode = {\n            userAgentVersion: undefined\n          };\n          for (lastNode = {}; !stream.done; stream = errorHandler.next()) {\n            profileData = stream.value;\n            lastNode.userAgentVersion = profileData.bidId;\n            user = profileData.transactionId;\n            stream = profileData.adUnitCode;\n            currentEntry = profileData.getFloor;\n            rejectFunction = profileData.mediaTypes;\n            profileData = profileData.ortb2Imp;\n            if (lastNode.userAgentVersion && resolveFunction(stream)) {\n              updateAdUnitCode(entryNode, value, stream);\n              var Uh = undefined;\n              var Vh = undefined;\n              if (key && getAdPropertyValue(entryNode, 11) == null && typeof ((Uh = profileData) == null ? undefined : (Vh = Uh.ext) == null ? undefined : Vh.gpid) === \"string\") {\n                setAdPropertyFromObject(entryNode, 11, profileData.ext.gpid.substring(0, key));\n              }\n              if (user) {\n                if (!(getAdPropertyValue(entryNode, 4) != null)) {\n                  setAdPropertyFromObject(entryNode, 4, user);\n                }\n                if (!value.has(user)) {\n                  value.set(user, keyTransformFunction);\n                }\n              }\n              if (parseNullableInt32(getTransformedElement(entryNode, 8)) == null && Number.isFinite(Nb)) {\n                updateAdProperty(entryNode, 8, Nb);\n              }\n              profileData = keyArray.find(function (bidRequest) {\n                return function (checkIntersectionObserverSupport) {\n                  return checkIntersectionObserverSupport.requestId === bidRequest.userAgentVersion;\n                };\n              }(lastNode));\n              user = addAdRequestToAdBreak(entryNode, function (bidRequest) {\n                return function () {\n                  var checkIntersectionObserverSupport = setAdRequestType(new AdRequest(), bidRequest.bidderCode);\n                  updateAliasRegistry(bidRequest.bidderCode, generatorWrapper, checkIntersectionObserverSupport);\n                  switch (bidRequest.checkFlags) {\n                    case \"client\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 1);\n                      break;\n                    case \"s2s\":\n                      clearAdProperty(checkIntersectionObserverSupport, 7, 2);\n                  }\n                  return checkIntersectionObserverSupport;\n                };\n              }(getIterator)());\n              updateBidRequest(entryNode, user, stream, findEntry, iterateEntries, createCircularNode, currentEntry);\n              if (profileData) {\n                setAdRequestAdUnitPath(user, 1);\n                if (typeof profileData.timeToRespond === \"number\" && Number.isFinite(profileData.timeToRespond)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(profileData.timeToRespond)));\n                }\n                lastNode = createBidResponseObject(profileData, CustomMap, rejectFunction);\n                addAdToAdRequest(user, lastNode);\n              } else if ((lastNode = entryIdCounter().get(lastNode.userAgentVersion)) && !lastNode.isMacOS) {\n                setAdRequestAdUnitPath(user, 2);\n                if (Number.isFinite(lastNode.latency)) {\n                  updateElement(user, 2, convertToInt64(Math.roundRectangle(lastNode.latency)));\n                }\n              } else {\n                lastNode = setAdRequestAdUnitPath(user, 3);\n                if (Number.isFinite(Nb)) {\n                  updateElement(lastNode, 2, convertToInt64(Math.roundRectangle(Nb)));\n                }\n              }\n            }\n          }\n        }\n        var bidCacheConfig;\n        if ((bidCacheConfig = generatorWrapper.getConfig) == null ? 0 : bidCacheConfig.call(generatorWrapper).useBidCache) {\n          processBidResponses(entryNode, value, getAdManager, CustomMap, generatorWrapper);\n        }\n        return foundEntry;\n      }\n    }\n  }\n  var initializeAdLoader = function (generatorWrapper) {\n    AdEnvironmentConfig.call(this);\n    var value = this;\n    var CustomMap = getForcedExperimentIds(getConfigSettingsInstance(this.getSettings()));\n    if (CustomMap && CustomMap.length > 0) {\n      adManagerInstance.resetAdStateController();\n      InitializeAdLogging(new AdManager(CustomMap));\n    }\n    this.onFulfilled = new AdCookieManager();\n    this.isDone = null;\n    this.tasks = generatorWrapper;\n    this.handleThenable = new Map();\n    this.handleAsync = this.tasks.isDone;\n    this.logError = new EventDispatcher(this);\n    registerDisposable(this, this.logError);\n    this.updateMaxSize = new ConsentStatusManager(window, {\n      timeoutMs: 500\n    });\n    this.totalAdBufferingTime = new initializeUSPApiCaller(window, {\n      timeoutMs: 500\n    });\n    this.handleThenable = new SignalResolver();\n    resolveOrRefreshSignal(this.handleThenable);\n    generatorWrapper = new SignalStatusManager(window, {\n      timeoutMs: 500\n    });\n    this.tryCall = new AdSignalListener(generatorWrapper, 500);\n    registerDisposable(this, this.tryCall);\n    this.entryIdCounter = null;\n    this.resolvePromise = {};\n    if (imaSdkInstanceSingleton.entryIdCounter !== 0) {\n      this.setTimeoutWrapper = new AdManager();\n      registerDisposable(this, this.setTimeoutWrapper);\n    } else {\n      this.setTimeoutWrapper = getInstance();\n    }\n    if (isOnScreenDetectionEnabled()) {\n      this.setTimeoutWrapper.initialize(getConnectionInstance(this.handleAsync));\n      this.dispatchUnhandledRejection = registerElement(this.setTimeoutWrapper, this.tasks.onFulfilled);\n      executeOrDelayUntilDisposed(this, function () {\n        var findEntry = value.dispatchUnhandledRejection;\n        value.setTimeoutWrapper.setTimeoutWrapper.delete(findEntry);\n        if (imaSdkInstanceSingleton.entryIdCounter !== 0) {\n          getSingletonInstance(AdManager).createDeferred[findEntry] = null;\n        }\n      });\n    }\n  };\n  inheritPrototype(initializeAdLoader, AdEnvironmentConfig);\n  initializeAdLoader.prototype.destroy = function () {\n    this.markAsCompleted();\n  };\n  initializeAdLoader.prototype.getAdManifestVersion = function () {\n    return \"h.3.641.0\";\n  };\n  initializeAdLoader.prototype.requestAds = function (generatorWrapper, value) {\n    var CustomMap = this;\n    var findEntry = [];\n    var iterateEntries = null;\n    if (isTcfApiFunctionAvailable(this.updateMaxSize)) {\n      findEntry.push(new Promise(function (key) {\n        waitForConsentWithTimeout(CustomMap.updateMaxSize, function (value) {\n          iterateEntries = value;\n          key();\n        });\n      }));\n    }\n    var createCircularNode = null;\n    if (getEffectiveMessageTarget(this.totalAdBufferingTime.caller)) {\n      findEntry.push(new Promise(function (key) {\n        fetchUSPData(CustomMap.totalAdBufferingTime, function (value) {\n          createCircularNode = value;\n          key();\n        });\n      }));\n    }\n    var entryIdCounter = null;\n    findEntry.push(fetchAdSignalData(this.tryCall).then(function (key) {\n      entryIdCounter = key;\n    }));\n    Promise.all(findEntry).then(function () {\n      executeAdRequest(CustomMap, generatorWrapper, value, {\n        parseNullableInt: iterateEntries,\n        parseNullableUInt32: createCircularNode,\n        getBitFlags: entryIdCounter\n      });\n    });\n  };\n  var executeAdRequest = function (generatorWrapper, value, CustomMap, findEntry) {\n    var iterateEntries = value.adTagUrl;\n    var createCircularNode = \"goog_\" + randomInt++;\n    generatorWrapper.handleThenable.set(createCircularNode, CustomMap || null);\n    var entryIdCounter = generatePrivacySettingsObject({\n      adTagUrl: iterateEntries,\n      parseNullableInt: findEntry.parseNullableInt,\n      parseNullableUInt32: findEntry.parseNullableUInt32,\n      getBitFlags: findEntry.getBitFlags\n    });\n    generatorWrapper.entryIdCounter = generateAdRequest(iterateEntries, entryIdCounter || {});\n    collectLocalStorageAdData(generatorWrapper.entryIdCounter, function () {\n      refreshEspSignals(generatorWrapper);\n    });\n    CustomMap = Promise.resolve();\n    if (handleThenable(Dm)) {\n      CustomMap = new Promise(function (resolveFunction) {\n        setTimeout(function () {\n          resolveFunction();\n        }, 50);\n      });\n    }\n    var key;\n    var value = (key = value.adTagUrl) == null ? undefined : key.includes(\"GOOGLE_INSTREAM_VIDEO_NONCE\");\n    var entry = isLimitedAdsMode(generatorWrapper.entryIdCounter);\n    key = initializeAdRequest(generatorWrapper, entry, value);\n    findEntry = resolveOrRefreshSignal(generatorWrapper.handleThenable);\n    var currentEntry = Promise.resolve(null);\n    if (handleThenable(Im) || handleThenable(Jm) || handleThenable(Km) || handleThenable(isEoidCookieEnabled)) {\n      currentEntry = 0;\n      if (handleThenable(Im)) {\n        currentEntry = 50;\n      } else if (handleThenable(Jm) || handleThenable(isEoidCookieEnabled)) {\n        currentEntry = 500;\n      } else if (handleThenable(Km)) {\n        currentEntry = 5000;\n      }\n      var foundEntry = configLoaderSingleton.getConfig().then(function (resolveFunction) {\n        if (resolveFunction) {\n          var rejectFunction = configLoaderSingleton.setTimeoutWrapper;\n          reportAdInteraction(resolveFunction, iterateEntries != null ? iterateEntries : \"\", rejectFunction != null ? rejectFunction : 0);\n        }\n        if (rejectFunction = configLoaderSingleton.tasks) {\n          rejectFunction = rejectFunction.message;\n          markAsCompleted.getAdInstance().report(189, {\n            message: rejectFunction\n          });\n        }\n        return resolveFunction;\n      });\n      currentEntry = Promise.race([foundEntry, createTimerPromise(currentEntry, null)]);\n    }\n    Promise.all([CustomMap, key, findEntry, currentEntry]).then(function (resolveFunction) {\n      var rejectFunction = getIterator(resolveFunction);\n      rejectFunction.next();\n      rejectFunction.next();\n      resolveFunction = rejectFunction.next().value;\n      rejectFunction = rejectFunction.next().value;\n      var user = {};\n      markAsCompleted.getAdInstance().report(182, (user.aid = !!imaSdkInstanceSingleton.isDone, user.aidf = !!generatorWrapper.isDone, user.hsc = !entry && value, user));\n      rejectFunction = finalizeAdRequest(generatorWrapper, value, entryIdCounter, resolveFunction, rejectFunction);\n      user = getConnectionInstance(generatorWrapper.handleAsync, createCircularNode);\n      generatorWrapper.logError.window(user, \"adsLoader\", generatorWrapper.year);\n      enqueueMessage(user, \"adsLoader\", \"requestAds\", rejectFunction);\n      rejectFunction = {};\n      markAsCompleted.getAdInstance().report(155, (rejectFunction.AdLoader = isGmaAvailable(), rejectFunction.blob = resolveFunction != null ? resolveFunction : \"undef\", rejectFunction));\n    });\n  };\n  initializeAdLoader.prototype.getSettings = function () {\n    return imaSdkInstanceSingleton;\n  };\n  initializeAdLoader.prototype.contentComplete = function () {\n    enqueueMessage(getConnectionInstance(this.handleAsync), \"adsLoader\", \"contentComplete\");\n  };\n  initializeAdLoader.prototype.year = function (generatorWrapper) {\n    var value = generatorWrapper.messageType;\n    switch (value) {\n      case \"adsLoaded\":\n        var CustomMap = generatorWrapper.setPrototypeOfPolyfill;\n        var findEntry = generatorWrapper.isAndroid;\n        CustomMap = new zone(this.setTimeoutWrapper, this.tasks, CustomMap.adTagUrl || \"\", CustomMap.adCuePoints, this.dispatchUnhandledRejection, CustomMap.isCustomClickTrackingAllowed, getConnectionInstance(this.handleAsync, findEntry), this.entryIdCounter);\n        this.dispatchEvent(new AdsManagerLoadedEvent(CustomMap, retrieveAndDeleteStoredValue(this, findEntry)));\n        break;\n      case \"error\":\n        CustomMap = generatorWrapper.setPrototypeOfPolyfill;\n        this.dispatchEvent(new AdErrorEvent(new AdError(CustomMap), retrieveAndDeleteStoredValue(this, generatorWrapper.isAndroid)));\n        CustomMap = {\n          hasError: CustomMap.errorCode,\n          vis: getVisibilityStateCode(document)\n        };\n        markAsCompleted.getAdInstance().report(7, CustomMap);\n        break;\n      case \"cookieUpdate\":\n        generatorWrapper = generatorWrapper.setPrototypeOfPolyfill;\n        if (generatorWrapper == null) {\n          break;\n        }\n        if (imaSdkInstanceSingleton.isCookiesEnabled()) {\n          value = new AdRequestBuilder();\n          value = setAdProperty(value, 5, true);\n          var iterateEntries = generatorWrapper.gfpCookie;\n          if (iterateEntries) {\n            setAdCookie(this.onFulfilled, \"__gads\", AdsManagerLoaderViewModeChangedEvent(iterateEntries), value);\n          }\n          if (iterateEntries = generatorWrapper.gfpCookieV2) {\n            setAdCookie(this.onFulfilled, \"__gpi\", AdsManagerLoaderViewModeChangedEvent(iterateEntries), value);\n          }\n        }\n        value = generatorWrapper.eoidCookie;\n        if (handleThenable(isEoidCookieEnabled) && value) {\n          iterateEntries = new WindowWrapper();\n          try {\n            CustomMap = AdsManagerLoaderViewModeChangedEvent(value);\n            findEntry = getAdPropertyFallbackNumeric(CustomMap, 2) - Date.now() / 1000;\n            var createCircularNode = {\n              lowOrderInteger: Math.max(findEntry, 0),\n              path: dispatchUnhandledRejection(CustomMap, 3),\n              domain: dispatchUnhandledRejection(CustomMap, 4),\n              transformElementContent: false\n            };\n            setCookieValue(\"__eoi\", CustomMap.getAdStateValue(), createCircularNode, iterateEntries.entryIdCounter);\n          } catch (key) {\n            var entryIdCounter;\n            markAsCompleted.getAdInstance().report(198, {\n              action: \"write\",\n              message: (entryIdCounter = key) == null ? undefined : entryIdCounter.message\n            }, true);\n          }\n        }\n        processEncryptedSignalBidderIds(this, generatorWrapper.encryptedSignalBidderIds || []);\n        break;\n      case \"trackingUrlPinged\":\n        this.dispatchEvent(new AdEvent(value, null, generatorWrapper.setPrototypeOfPolyfill));\n    }\n  };\n  var processEncryptedSignalBidderIds = function (generatorWrapper, value) {\n    if (value.length !== 0 && (value = collectAdDataFromProviders(value.map(function (CustomMap) {\n      return {\n        currentDocument: CustomMap\n      };\n    }), generatorWrapper.entryIdCounter))) {\n      value.forEach(function (CustomMap) {\n        CustomMap.then(function (findEntry) {\n          if (findEntry) {\n            refreshEspSignals(generatorWrapper);\n          }\n        });\n      });\n    }\n  };\n  var refreshEspSignals = function (generatorWrapper) {\n    var value = loadCacheItems(getLocalStorageSafe(generatorWrapper.entryIdCounter));\n    if (value) {\n      generatorWrapper.resolvePromise.espSignals = value;\n      enqueueMessage(getConnectionInstance(generatorWrapper.handleAsync), \"adsLoader\", \"signalsRefresh\", generatorWrapper.resolvePromise);\n    }\n  };\n  var retrieveAndDeleteStoredValue = function (generatorWrapper, value) {\n    var CustomMap = generatorWrapper.handleThenable.get(value);\n    generatorWrapper.handleThenable.delete(value);\n    if (CustomMap != null) {\n      return CustomMap;\n    } else {\n      return null;\n    }\n  };\n  var generatePrivacySettingsObject = function (generatorWrapper) {\n    var value = generatorWrapper.parseNullableInt;\n    var CustomMap = generatorWrapper.parseNullableUInt32;\n    generatorWrapper = generatorWrapper.getBitFlags;\n    var findEntry,\n      iterateEntries,\n      createCircularNode,\n      entryIdCounter,\n      key,\n      value,\n      entry = {};\n    var currentEntry = undefined === currentEntry ? globalScope : currentEntry;\n    entry.gfcLoaded = hasFrameWithName(currentEntry.top, \"googlefcLoaded\");\n    if ((findEntry = value == null ? undefined : value.addtlConsent) != null) {\n      entry.addtlConsent = findEntry;\n    } else {\n      entry.addtlConsent = null;\n    }\n    if ((iterateEntries = value == null ? undefined : value.gdprApplies) != null) {\n      entry.gdprApplies = iterateEntries;\n    } else {\n      entry.gdprApplies = null;\n    }\n    if ((createCircularNode = value == null ? undefined : value.tcString) != null) {\n      entry.tcString = createCircularNode;\n    } else {\n      entry.tcString = null;\n    }\n    if ((entryIdCounter = CustomMap == null ? undefined : CustomMap.uspString) != null) {\n      entry.uspString = entryIdCounter;\n    } else {\n      entry.uspString = null;\n    }\n    if ((key = generatorWrapper == null ? undefined : generatorWrapper.gppString) != null) {\n      entry.gppString = key;\n    } else {\n      entry.gppString = null;\n    }\n    if ((value = generatorWrapper == null ? undefined : generatorWrapper.sid) != null) {\n      entry.gppSid = value;\n    } else {\n      entry.gppSid = null;\n    }\n    return entry;\n  };\n  var generateVideoAdKeyObject = function (generatorWrapper, value) {\n    var CustomMap = {};\n    CustomMap.contentMediaUrl = generatorWrapper.tasks.executeCallbacks;\n    CustomMap.customClickTrackingProvided = generatorWrapper.tasks.handleAsync != null;\n    CustomMap.isAmp = isAmpPage();\n    generatorWrapper: {\n      try {\n        var findEntry = window.top.location.href;\n      } catch (isDone) {\n        findEntry = 2;\n        break generatorWrapper;\n      }\n      if (findEntry == null) {\n        findEntry = 2;\n      } else if (findEntry == window.document.location.href) {\n        findEntry = 0;\n      } else {\n        findEntry = 1;\n      }\n    }\n    CustomMap.iframeState = findEntry;\n    CustomMap.imaHostingDomain = window.document.domain;\n    CustomMap.imaHostingPageUrl = window.document.URL;\n    CustomMap.topAccessiblePageUrl = getEffectiveUrl();\n    CustomMap.referrer = window.document.referrer;\n    CustomMap.domLoadTime = generatorWrapper.handleAsync.logError;\n    CustomMap.sdkImplLoadTime = generatorWrapper.handleAsync.handleThenable;\n    CustomMap.supportsResizing = !isCustomElementSupported(generatorWrapper.tasks);\n    findEntry = getWindowForDocument().location.ancestorOrigins;\n    if (findEntry) {\n      if (findEntry.length > 0 && findEntry[findEntry.length - 1].length < 200) {\n        CustomMap.topOrigin = findEntry[findEntry.length - 1];\n      } else {\n        CustomMap.topOrigin = \"\";\n      }\n    } else {\n      CustomMap.topOrigin = null;\n    }\n    CustomMap.osdId = generatorWrapper.dispatchUnhandledRejection;\n    CustomMap.usesCustomVideoPlayback = isCustomElementSupported(generatorWrapper.tasks);\n    CustomMap.usesProxyMediaElement = isMediaElementInvalid(generatorWrapper.tasks);\n    CustomMap.usesInlinePlayback = generatorWrapper.tasks.settlePromise;\n    findEntry = generatorWrapper.tasks.Signed64;\n    generatorWrapper = [];\n    var iterateEntries = \"\";\n    var createCircularNode = \"\";\n    if (findEntry != null) {\n      iterateEntries = findEntry;\n      createCircularNode = true;\n      if (undefined === createCircularNode) {\n        createCircularNode = false;\n      } else {\n        createCircularNode = createCircularNode;\n      }\n      for (var entryIdCounter = [], key = 0; iterateEntries && key < 25; ++key) {\n        var value = \"\";\n        if (!(undefined !== createCircularNode && createCircularNode)) {\n          if (value = iterateEntries.nodeType !== 9 && iterateEntries.writeBytes) {\n            value = \"/\" + value;\n          } else {\n            value = \"\";\n          }\n        }\n        generatorWrapper: {\n          if (iterateEntries && iterateEntries.nodeName && iterateEntries.parentElement) {\n            var entry = iterateEntries.nodeName.toString().toLowerCase();\n            for (var currentEntry = iterateEntries.parentElement.childNodes, foundEntry = 0, resolveFunction = 0; resolveFunction < currentEntry.length; ++resolveFunction) {\n              var rejectFunction = currentEntry[resolveFunction];\n              if (rejectFunction.nodeName && rejectFunction.nodeName.toString().toLowerCase() === entry) {\n                if (iterateEntries === rejectFunction) {\n                  entry = \".\" + foundEntry;\n                  break generatorWrapper;\n                }\n                ++foundEntry;\n              }\n            }\n          }\n          entry = \"\";\n        }\n        entryIdCounter.push((iterateEntries.nodeName && iterateEntries.nodeName.toString().toLowerCase()) + value + entry);\n        iterateEntries = iterateEntries.parentElement;\n      }\n      iterateEntries = entryIdCounter.join();\n      if (findEntry) {\n        findEntry = (findEntry = findEntry.ownerDocument) && (findEntry.defaultView || findEntry.parentWindow) || null;\n        createCircularNode = [];\n        if (findEntry) {\n          try {\n            var user = findEntry.parent;\n            for (entryIdCounter = 0; user && user !== findEntry && entryIdCounter < 25; ++entryIdCounter) {\n              var profileData = user.frames;\n              for (key = 0; key < profileData.length; ++key) {\n                if (findEntry === profileData[key]) {\n                  createCircularNode.push(key);\n                  break;\n                }\n              }\n              findEntry = user;\n              user = findEntry.parent;\n            }\n          } catch (isDone) {}\n        }\n        createCircularNode = createCircularNode.join();\n      } else {\n        createCircularNode = \"\";\n      }\n    }\n    generatorWrapper.push(iterateEntries, createCircularNode);\n    if (value != null) {\n      for (user = 0; user < adAttributesList.length - 1; ++user) {\n        generatorWrapper.push(getParameterFromUrl(value, adAttributesList[user]) || \"\");\n      }\n      value = getParameterFromUrl(value, \"videoad_start_delay\");\n      user = \"\";\n      if (value) {\n        value = parseInt(value, 10);\n        if (value < 0) {\n          user = \"postroll\";\n        } else if (value == 0) {\n          user = \"preroll\";\n        } else {\n          user = \"midroll\";\n        }\n      }\n      generatorWrapper.push(user);\n    } else {\n      for (value = 0; value < adAttributesList.length; ++value) {\n        generatorWrapper.push(\"\");\n      }\n    }\n    CustomMap.videoAdKey = hashString(generatorWrapper.join(\":\")).toString();\n    return CustomMap;\n  };\n  var validateAdDisplayConditions = function (generatorWrapper, value, CustomMap) {\n    generatorWrapper = isLimitedAdsModeEnabled(generatorWrapper);\n    if (value.adTagUrl) {\n      value = extractPublisherId(value.adTagUrl);\n    } else {\n      value = null;\n    }\n    var findEntry;\n    if (CustomMap && value) {\n      CustomMap = fetchData(CustomMap, AdRule, 3);\n      CustomMap = !!value && (CustomMap == null ? undefined : (findEntry = transformElementAtIndex(CustomMap, 1, getValidatedDataOrUndefined)) == null ? undefined : findEntry.get(value));\n      markAsCompleted.getAdInstance().report(196, {\n        status: CustomMap,\n        network: value\n      });\n      findEntry = !CustomMap;\n    } else {\n      findEntry = true;\n    }\n    return {\n      transformKeyOrValue: generatorWrapper,\n      SerializeValue: findEntry\n    };\n  };\n  var checkAdDisplayConditions = function (generatorWrapper, value, CustomMap) {\n    var findEntry = buildAdRequest(generatorWrapper);\n    value = validateAdDisplayConditions(generatorWrapper, value, CustomMap);\n    generatorWrapper = value.transformKeyOrValue;\n    value = value.SerializeValue;\n    if (!checkCookiesEnabled() || getBooleanAdProperty(findEntry, 8) || (generatorWrapper || !getBooleanAdProperty(findEntry, 5)) && value) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var getEndOfInsertionCookie = function (generatorWrapper, value, CustomMap) {\n    var findEntry = buildAdRequest(generatorWrapper);\n    generatorWrapper = validateAdDisplayConditions(generatorWrapper, value, CustomMap);\n    value = new WindowWrapper();\n    CustomMap = undefined;\n    try {\n      var iterateEntries = generatorWrapper.transformKeyOrValue;\n      var createCircularNode = generatorWrapper.SerializeValue;\n      if (getBooleanAdProperty(findEntry, 8) || (iterateEntries || !getBooleanAdProperty(findEntry, 5)) && createCircularNode) {\n        CustomMap = undefined;\n      } else {\n        var entryIdCounter;\n        if ((entryIdCounter = getCookieValue(\"__eoi\", value.entryIdCounter)) != null) {\n          CustomMap = entryIdCounter;\n        } else {\n          CustomMap = undefined;\n        }\n      }\n    } catch (value) {\n      var key;\n      markAsCompleted.getAdInstance().report(198, {\n        action: \"read\",\n        message: (key = value) == null ? undefined : key.message\n      }, true);\n    }\n    return CustomMap;\n  };\n  var initializeAdRequest = function (generatorWrapper, value, CustomMap) {\n    if (value) {\n      generatorWrapper.isDone = null;\n      return Promise.resolve([]);\n    }\n    value = [];\n    value.push(delayForCustomParams());\n    if (CustomMap) {\n      value.push(getIdentityId(generatorWrapper));\n    }\n    return Promise.all(value);\n  };\n  var getIdentityId = function (generatorWrapper) {\n    var value;\n    return wrapGeneratorToPromise(function (CustomMap) {\n      if (CustomMap.entryIdCounter == 1) {\n        if (!generatorWrapper.isDone) {\n          generatorWrapper.isDone = new TokenManager();\n          KE(generatorWrapper.isDone);\n        }\n        return generatorYield(CustomMap, generatorWrapper.isDone.getAdId(), 2);\n      }\n      value = CustomMap.tasks;\n      imaSdkInstanceSingleton.isDone = value.writeBytes || \"\";\n      CustomMap.entryIdCounter = 0;\n    });\n  };\n  var delayForCustomParams = function () {\n    if (isChromiumBased() && (handleThenable(hasCookieDeprecationLabel) || handleThenable(isCookieDeprecationForced))) {\n      if (handleThenable(isCookieDeprecationForced)) {\n        return new Promise(function (generatorWrapper) {\n          setTimeout(function () {\n            generatorWrapper();\n          }, 50);\n        });\n      } else {\n        return getCookieDeprecationLabel().then(function (generatorWrapper) {\n          var value,\n            CustomMap = (value = generatorWrapper.label) != null ? value : \"\";\n          imaSdkInstanceSingleton.settlePromise = CustomMap;\n          imaSdkInstanceSingleton.resolvePromise = generatorWrapper.status;\n        });\n      }\n    } else {\n      return Promise.resolve();\n    }\n  };\n  var getCookieDeprecationLabel = function () {\n    if (navigator.cookieDeprecationLabel) {\n      var generatorWrapper = navigator.cookieDeprecationLabel.getAdStateValue().then(function (CustomMap) {\n        return {\n          label: CustomMap,\n          status: 1\n        };\n      }).catch(function () {\n        return {\n          label: \"\",\n          status: 2\n        };\n      });\n      var value = new Promise(function (CustomMap) {\n        setTimeout(function () {\n          CustomMap({\n            label: \"\",\n            status: 5\n          });\n        }, 50);\n      });\n      return Promise.race([value, generatorWrapper]);\n    }\n    return Promise.resolve({\n      label: \"\",\n      status: 3\n    });\n  };\n  var finalizeAdRequest = function (generatorWrapper, value, CustomMap, findEntry, iterateEntries) {\n    var createCircularNode = {};\n    createCircularNode = (createCircularNode.limaExperimentIds = getActiveAdIds().sort().join(\",\"), createCircularNode);\n    var entryIdCounter = generatePageViewId();\n    var key = cloneIfNotFrozen(getAdDataSingleton());\n    var value = {};\n    key = (value.experimentStateProto = serializeData(key), value);\n    value = generateAdDisplayRequestConfig(generatorWrapper.getSettings(), isInitialized(generatorWrapper.setTimeoutWrapper));\n    var entry = generateVideoAdKeyObject(generatorWrapper, value.adTagUrl);\n    var currentEntry = isAdAuctionRunnable();\n    var foundEntry = {};\n    CustomMap = (foundEntry.consentSettings = CustomMap, foundEntry.imalibExperiments = createCircularNode, foundEntry.genotypeExperimentData = key, foundEntry.settings = value, foundEntry.videoEnvironment = entry, foundEntry.isFledgeEligible = currentEntry, foundEntry.pvsid = entryIdCounter, foundEntry);\n    Object.assign(CustomMap, extractAdsRequestSettings(value));\n    if (generatorWrapper.entryIdCounter && imaSdkInstanceSingleton.isCookiesEnabled()) {\n      createCircularNode = buildAdRequest(generatorWrapper.entryIdCounter);\n      CustomMap.isBrowserCookieEnabled = checkAdCookie(generatorWrapper.onFulfilled, createCircularNode);\n      if (createCircularNode) {\n        entryIdCounter = evaluateCondition(\"__gads\", createCircularNode, generatorWrapper.onFulfilled.entryIdCounter);\n      } else {\n        entryIdCounter = null;\n      }\n      if (entryIdCounter !== null) {\n        CustomMap.gfpCookieValue = entryIdCounter;\n      }\n      if (createCircularNode) {\n        entryIdCounter = evaluateCondition(\"__gpi\", createCircularNode, generatorWrapper.onFulfilled.entryIdCounter);\n      } else {\n        entryIdCounter = null;\n      }\n      if (entryIdCounter !== null) {\n        CustomMap.gfpCookieV2Id = entryIdCounter;\n      }\n      if (createCircularNode) {\n        createCircularNode = evaluateCondition(\"__gpi_opt_out\", createCircularNode, generatorWrapper.onFulfilled.entryIdCounter);\n      } else {\n        createCircularNode = null;\n      }\n      if (createCircularNode !== null) {\n        CustomMap.gfpCookieV2OptOut = createCircularNode;\n      }\n    }\n    if (generatorWrapper.entryIdCounter && handleThenable(isEoidCookieEnabled)) {\n      createCircularNode = checkAdDisplayConditions(generatorWrapper.entryIdCounter, value, iterateEntries);\n      CustomMap.eoidCookieEnabled = createCircularNode;\n      if (iterateEntries = getEndOfInsertionCookie(generatorWrapper.entryIdCounter, value, iterateEntries)) {\n        CustomMap.eoidCookieValue = iterateEntries;\n      }\n    }\n    if (iterateEntries = loadCacheItems(getLocalStorageSafe(generatorWrapper.entryIdCounter))) {\n      generatorWrapper.resolvePromise.espSignals = iterateEntries;\n      CustomMap.espSignals = iterateEntries;\n    }\n    if (findEntry) {\n      CustomMap.gmaSignals = findEntry;\n    }\n    CustomMap.isEapLoader = false;\n    if (handleThenable(Om)) {\n      generatorWrapper = function (profileData) {\n        markAsCompleted.getAdInstance().report(195, {\n          message: profileData == null ? undefined : profileData.message\n        });\n      };\n      try {\n        var resolveFunction = findPrebidJs();\n        if (resolveFunction) {\n          var rejectFunction = extractSlotNameOrIdFromUrl(value.adTagUrl, generatorWrapper);\n          if (rejectFunction) {\n            var user = processAuctionEndEvents(resolveFunction, {\n              adUnitCode: rejectFunction\n            });\n            if (user) {\n              CustomMap.clientBidsProto = base64Encode(user.entryIdCounter(), 3);\n            } else {\n              CustomMap.clientBidsProto = undefined;\n            }\n          }\n        }\n      } catch (profileData) {\n        generatorWrapper(profileData);\n      }\n    }\n    return CustomMap;\n  };\n  initializeAdLoader.prototype.contentComplete = initializeAdLoader.prototype.contentComplete;\n  initializeAdLoader.prototype.getSettings = initializeAdLoader.prototype.getSettings;\n  initializeAdLoader.prototype.requestAds = initializeAdLoader.prototype.requestAds;\n  initializeAdLoader.prototype.getAdManifestVersion = initializeAdLoader.prototype.getAdManifestVersion;\n  initializeAdLoader.prototype.destroy = initializeAdLoader.prototype.destroy;\n  var AdsRequestSettings = function () {\n    this.setTimeoutWrapper = this.tasks = \"unknown\";\n    this.entryIdCounter = \"0\";\n    this.adsResponse = null;\n    this.adTagUrl = \"\";\n    this.contentTitle = this.contentKeywords = this.contentDuration = null;\n    this.forceNonLinearFullSlot = false;\n    this.nonLinearAdSlotWidth = this.nonLinearAdSlotHeight = this.liveStreamPrefetchSeconds = this.linearAdSlotWidth = this.linearAdSlotHeight = 0;\n    this.omidAccessModeRules = {};\n    this.pageUrl = null;\n    this.vastLoadTimeout = 5000;\n  };\n  var extractAdsRequestSettings = function (generatorWrapper) {\n    var value = {};\n    value.adsResponse = generatorWrapper.adsResponse;\n    value.videoPlayActivation = generatorWrapper.tasks;\n    value.videoPlayMuted = generatorWrapper.setTimeoutWrapper;\n    value.videoContinuousPlay = generatorWrapper.entryIdCounter;\n    value.adTagUrl = generatorWrapper.adTagUrl;\n    value.contentDuration = generatorWrapper.contentDuration;\n    value.contentKeywords = generatorWrapper.contentKeywords;\n    value.contentTitle = generatorWrapper.contentTitle;\n    value.linearAdSlotWidth = generatorWrapper.linearAdSlotWidth;\n    value.linearAdSlotHeight = generatorWrapper.linearAdSlotHeight;\n    value.nonLinearAdSlotWidth = generatorWrapper.nonLinearAdSlotWidth;\n    value.nonLinearAdSlotHeight = generatorWrapper.nonLinearAdSlotHeight;\n    value.forceNonLinearFullSlot = generatorWrapper.forceNonLinearFullSlot;\n    value.liveStreamPrefetchSeconds = generatorWrapper.liveStreamPrefetchSeconds;\n    value.vastLoadTimeout = generatorWrapper.vastLoadTimeout;\n    value.omidAccessModeRules = generatorWrapper.omidAccessModeRules;\n    value.pageUrl = generatorWrapper.pageUrl;\n    return value;\n  };\n  AdsRequestSettings.prototype.setAdWillAutoPlay = function (generatorWrapper) {\n    if (generatorWrapper) {\n      this.tasks = \"auto\";\n    } else {\n      this.tasks = \"click\";\n    }\n  };\n  AdsRequestSettings.prototype.setAdWillPlayMuted = function (generatorWrapper) {\n    if (generatorWrapper) {\n      this.setTimeoutWrapper = \"muted\";\n    } else {\n      this.setTimeoutWrapper = \"unmuted\";\n    }\n  };\n  AdsRequestSettings.prototype.setContinuousPlayback = function (generatorWrapper) {\n    if (generatorWrapper) {\n      this.entryIdCounter = \"2\";\n    } else {\n      this.entryIdCounter = \"1\";\n    }\n  };\n  AdsRequestSettings.prototype.setContinuousPlayback = AdsRequestSettings.prototype.setContinuousPlayback;\n  AdsRequestSettings.prototype.setAdWillPlayMuted = AdsRequestSettings.prototype.setAdWillPlayMuted;\n  AdsRequestSettings.prototype.setAdWillAutoPlay = AdsRequestSettings.prototype.setAdWillAutoPlay;\n  defineNamespace(\"google.ima.AdCuePoints.POSTROLL\", -1, window);\n  defineNamespace(\"google.ima.AdCuePoints.PREROLL\", 0, window);\n  defineNamespace(\"google.ima.AdDisplayContainer\", AdManager, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode\", updateMaxSize, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.VIDEO_ELEMENT_USED\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.VIDEO_ELEMENT_REQUIRED\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.VAST_MEDIA_ERROR\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.ADSLOT_NOT_VISIBLE\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.OVERLAY_AD_LOADING_FAILED\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.VAST_MALFORMED_RESPONSE\", -1, window);\n  defineNamespace(\"google.ima.AdError.ErrorCode.COMPANION_AD_LOADING_FAILED\", -1, window);\n  defineNamespace(\"google.ima.AdError.Type\", AdErrorType, window);\n  defineNamespace(\"google.ima.AdErrorEvent.Type\", AdErrorEventType, window);\n  defineNamespace(\"google.ima.AdEvent.Type\", AdEventTypes, window);\n  defineNamespace(\"google.ima.AdsLoader\", initializeAdLoader, window);\n  defineNamespace(\"google.ima.AdsManagerLoadedEvent.Type\", AdsManagerLoadedEventType, window);\n  defineNamespace(\"google.ima.CompanionAdSelectionSettings\", CompanionAdSelectionSettings, window);\n  defineNamespace(\"google.ima.CompanionAdSelectionSettings.CreativeType\", CreativeType);\n  defineNamespace(\"google.ima.CompanionAdSelectionSettings.ResourceType\", ResourceType);\n  defineNamespace(\"google.ima.CompanionAdSelectionSettings.SizeCriteria\", SizeCriteria);\n  defineNamespace(\"google.ima.CustomContentLoadedEvent.Type.CUSTOM_CONTENT_LOADED\", \"deprecated-event\", window);\n  defineNamespace(\"ima.ImaSdkSettings\", adType, window);\n  defineNamespace(\"google.ima.settings\", imaSdkInstanceSingleton, window);\n  defineNamespace(\"google.ima.ImaSdkSettings.CompanionBackfillMode\", {\n    ALWAYS: \"always\",\n    ON_MASTER_AD: \"on_master_ad\"\n  });\n  defineNamespace(\"google.ima.ImaSdkSettings.VpaidMode\", {\n    DISABLED: 0,\n    ENABLED: 1,\n    INSECURE: 2,\n    0: \"DISABLED\",\n    1: \"ENABLED\",\n    2: \"INSECURE\"\n  });\n  defineNamespace(\"google.ima.AdsRenderingSettings\", AdDisplayOptions, window);\n  defineNamespace(\"google.ima.AdsRenderingSettings.AUTO_SCALE\", -1, window);\n  defineNamespace(\"google.ima.AdsRequest\", AdsRequestSettings, window);\n  defineNamespace(\"google.ima.VERSION\", \"3.641.0\");\n  defineNamespace(\"google.ima.OmidAccessMode\", {\n    LIMITED: \"limited\",\n    DOMAIN: \"domain\",\n    FULL: \"full\"\n  });\n  defineNamespace(\"google.ima.OmidVerificationVendor\", {\n    COMSCORE: 7,\n    DOUBLEVERIFY: 3,\n    GOOGLE: 9,\n    INTEGRAL_AD_SCIENCE: 4,\n    MEETRICS: 8,\n    MOAT: 2,\n    NIELSEN: 6,\n    PIXELATE: 5,\n    OTHER: 1,\n    7: \"COMSCORE\",\n    3: \"DOUBLEVERIFY\",\n    9: \"GOOGLE\",\n    4: \"INTEGRAL_AD_SCIENCE\",\n    8: \"MEETRICS\",\n    2: \"MOAT\",\n    6: \"NIELSEN\",\n    5: \"PIXELATE\",\n    1: \"OTHER\"\n  });\n  defineNamespace(\"google.ima.UiElements\", {\n    AD_ATTRIBUTION: \"adAttribution\",\n    COUNTDOWN: \"countdown\"\n  });\n  defineNamespace(\"google.ima.ViewMode\", {\n    NORMAL: \"normal\",\n    FULLSCREEN: \"fullscreen\"\n  });\n  defineNamespace(\"google.ima.secureSignals\", {\n    clearAllCache() {\n      clearCacheManager(window.localStorage);\n    }\n  });\n  var RegexPatternBuilder = function (generatorWrapper, value, CustomMap) {\n    this.tasks = CustomMap;\n    if (value.length === 0) {\n      value = [[]];\n    }\n    this.entryIdCounter = value.map(function (findEntry) {\n      findEntry = generatorWrapper.concat(findEntry);\n      for (var iterateEntries = [], createCircularNode = 0, entryIdCounter = 0; createCircularNode < findEntry.length;) {\n        var key = findEntry[createCircularNode++];\n        if (key < 128) {\n          iterateEntries[entryIdCounter++] = String.fromCharCode(key);\n        } else if (key > 191 && key < 224) {\n          var value = findEntry[createCircularNode++];\n          iterateEntries[entryIdCounter++] = String.fromCharCode((key & 31) << 6 | value & 63);\n        } else if (key > 239 && key < 365) {\n          value = findEntry[createCircularNode++];\n          var entry = findEntry[createCircularNode++];\n          var currentEntry = findEntry[createCircularNode++];\n          key = ((key & 7) << 18 | (value & 63) << 12 | (entry & 63) << 6 | currentEntry & 63) - 65536;\n          iterateEntries[entryIdCounter++] = String.fromCharCode(55296 + (key >> 10));\n          iterateEntries[entryIdCounter++] = String.fromCharCode(56320 + (key & 1023));\n        } else {\n          value = findEntry[createCircularNode++];\n          entry = findEntry[createCircularNode++];\n          iterateEntries[entryIdCounter++] = String.fromCharCode((key & 15) << 12 | (value & 63) << 6 | entry & 63);\n        }\n      }\n      return new RegExp(iterateEntries.join(\"\"));\n    });\n  };\n  var checkUrlAgainstPatterns = function (generatorWrapper, value) {\n    if (value) {\n      return generatorWrapper.entryIdCounter.some(function (CustomMap) {\n        CustomMap = value.match(CustomMap);\n        if (CustomMap == null) {\n          return false;\n        } else {\n          if (!generatorWrapper.tasks || CustomMap.length >= 1 && CustomMap[1] === \"3.641.0\" || CustomMap.length >= 2 && CustomMap[2] === \"3.641.0\") {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      });\n    } else {\n      return false;\n    }\n  };\n  var googleApiDomainPattern = [94, 40, 63, 58, 104, 116, 116, 112, 115, 63, 58, 41, 63, 47, 47, 105, 109, 97, 115, 100, 107, 92, 46, 103, 111, 111, 103, 108, 101, 97, 112, 105, 115, 92, 46, 99, 111, 109, 47, 106, 115, 47, 40, 115, 100, 107, 108, 111, 97, 100, 101, 114, 124, 99, 111, 114, 101, 41, 47];\n  var googleSyndicationDomainPattern = [94, 40, 63, 58, 104, 116, 116, 112, 115, 63, 58, 41, 63, 47, 47, 115, 48, 92, 46, 50, 109, 100, 110, 92, 46, 110, 101, 116, 47, 105, 110, 115, 116, 114, 101, 97, 109, 47, 104, 116, 109, 108, 53, 47];\n  var googleApisPrereleaseDomainPattern = [94, 40, 63, 58, 104, 116, 116, 112, 115, 63, 58, 41, 63, 47, 47, 105, 109, 97, 115, 100, 107, 92, 46, 103, 111, 111, 103, 108, 101, 97, 112, 105, 115, 92, 46, 99, 111, 109, 47, 112, 97, 108, 47, 115, 100, 107, 108, 111, 97, 100, 101, 114, 47];\n  var imaJsFilenames = [[105, 109, 97, 51, 92, 46, 106, 115], [105, 109, 97, 51, 95, 100, 101, 98, 117, 103, 92, 46, 106, 115], [105, 109, 97, 51, 95, 101, 97, 112, 46, 106, 115]];\n  var bridgeJsFilenames = [[98, 114, 105, 100, 103, 101, 40, 91, 48, 45, 57, 93, 43, 92, 46, 91, 48, 45, 57, 92, 46, 93, 43, 41, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108], [98, 114, 105, 100, 103, 101, 40, 91, 48, 45, 57, 93, 43, 92, 46, 91, 48, 45, 57, 92, 46, 93, 43, 41, 95, 100, 101, 98, 117, 103, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108], [98, 114, 105, 100, 103, 101, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108]];\n  var outstreamJsFilenames = [[111, 117, 116, 115, 116, 114, 101, 97, 109, 92, 46, 106, 115], [111, 117, 116, 115, 116, 114, 101, 97, 109, 95, 100, 101, 98, 117, 103, 92, 46, 106, 115]];\n  var googleApiDomainRegexBuilder = new RegexPatternBuilder(googleApiDomainPattern, imaJsFilenames, false);\n  new RegexPatternBuilder(googleApiDomainPattern, bridgeJsFilenames, true);\n  var googleSyndicationDomainRegexBuilder = new RegexPatternBuilder(googleSyndicationDomainPattern, imaJsFilenames, false);\n  new RegexPatternBuilder(googleSyndicationDomainPattern, bridgeJsFilenames, true);\n  var googleApisPrereleaseDomainRegexBuilder = new RegexPatternBuilder([94, 40, 63, 58, 104, 116, 116, 112, 115, 63, 58, 41, 63, 47, 47, 105, 109, 97, 115, 100, 107, 92, 46, 103, 111, 111, 103, 108, 101, 97, 112, 105, 115, 92, 46, 99, 111, 109, 47, 112, 114, 101, 114, 101, 108, 101, 97, 115, 101, 47, 106, 115, 47, 91, 48, 45, 57, 93, 43, 46, 91, 48, 45, 57, 46, 93, 43, 47], imaJsFilenames, false);\n  var googleSyndicationAdsDomainRegexBuilder = new RegexPatternBuilder([94, 40, 63, 58, 104, 116, 116, 112, 115, 63, 58, 41, 63, 47, 47, 40, 112, 97, 103, 101, 97, 100, 50, 124, 116, 112, 99, 41, 92, 46, 103, 111, 111, 103, 108, 101, 115, 121, 110, 100, 105, 99, 97, 116, 105, 111, 110, 92, 46, 99, 111, 109, 47, 112, 97, 103, 101, 97, 100, 47, 40, 103, 97, 100, 103, 101, 116, 115, 124, 106, 115, 41, 47], [], false);\n  new RegexPatternBuilder(googleApiDomainPattern, [[100, 97, 105, 95, 105, 102, 114, 97, 109, 101, 40, 91, 48, 45, 57, 93, 43, 92, 46, 91, 48, 45, 57, 92, 46, 93, 43, 41, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108], [100, 97, 105, 95, 105, 102, 114, 97, 109, 101, 40, 91, 48, 45, 57, 93, 43, 92, 46, 91, 48, 45, 57, 92, 46, 93, 43, 41, 95, 100, 101, 98, 117, 103, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108], [100, 97, 105, 95, 105, 102, 114, 97, 109, 101, 40, 95, 40, 91, 97, 45, 122, 48, 45, 57, 93, 41, 123, 50, 44, 51, 125, 41, 123, 48, 44, 50, 125, 92, 46, 104, 116, 109, 108]], true);\n  var googleApiOutstreamRegexBuilder = new RegexPatternBuilder(googleApiDomainPattern, outstreamJsFilenames, false);\n  var googleApiOutstreamDebugRegexBuilder = new RegexPatternBuilder(googleApiDomainPattern, outstreamJsFilenames, false);\n  new RegexPatternBuilder(googleApisPrereleaseDomainPattern, [[112, 97, 108, 46, 106, 115]], false);\n  new RegexPatternBuilder(googleApisPrereleaseDomainPattern, [[99, 97, 115, 116, 95, 112, 97, 108, 46, 106, 115]], false);\n  new RegexPatternBuilder(googleApisPrereleaseDomainPattern, [[99, 116, 118, 95, 112, 97, 108, 46, 106, 115]], false);\n  function findFirstMatchingScript(generatorWrapper, value) {\n    CustomMap = {\n      parseNumericValue: undefined\n    };\n    for (var CustomMap = {}, findEntry = 0; findEntry < value.length; findEntry++) {\n      CustomMap.parseNumericValue = value[findEntry];\n      if (generatorWrapper.some(function (iterateEntries) {\n        return function (createCircularNode) {\n          return checkUrlAgainstPatterns(createCircularNode, iterateEntries.parseNumericValue.src);\n        };\n      }(CustomMap))) {\n        return CustomMap.parseNumericValue;\n      }\n    }\n    return null;\n  }\n  if (!function (generatorWrapper) {\n    if (generatorWrapper.some(function (CustomMap) {\n      return checkUrlAgainstPatterns(CustomMap, getWindowForDocument().location.href);\n    })) {\n      return true;\n    }\n    var value = findFirstMatchingScript(generatorWrapper, document.querySelectorAll && document.querySelector ? document.querySelectorAll(\"SCRIPT\") : document.getElementsByTagName(\"SCRIPT\"));\n    if (value == null && document.querySelectorAll) {\n      value = findFirstMatchingScript(generatorWrapper, document.querySelectorAll(\"script\"));\n    }\n    return value != null;\n  }([googleApiDomainRegexBuilder, googleApisPrereleaseDomainRegexBuilder, googleSyndicationDomainRegexBuilder, googleSyndicationAdsDomainRegexBuilder, googleApiOutstreamRegexBuilder, googleApiOutstreamDebugRegexBuilder])) {\n    throw Error(\"IMA SDK is either not loaded from a google domain or is not a supported version.\");\n  }\n  if (handleThenable(Im) || handleThenable(Jm) || handleThenable(Km) || handleThenable(isEoidCookieEnabled)) {\n    var configLoaderInstance = configLoaderSingleton;\n    var configUrlParams = {\n      pageUrl: getEffectiveUrl()\n    };\n    var configLoaderUrl = constructConfigUrl();\n    if (configLoaderUrl) {\n      try {\n        loadConfig();\n      } catch (generatorWrapper) {\n        handleConfigLoadError(configLoaderInstance, generatorWrapper);\n      }\n    } else {\n      handleConfigLoadError(configLoaderInstance, Error(\"Could not generate config URL\"));\n    }\n  }\n})();"
]